#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2832.3655)), bool(false))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2832.3655)), bool(false))) > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(-332.975, 393.943, -76.21, -570.482, 8863.9052, -1.2, -376.660, -2.9, 294.511, -2.1, -4.6, -4.5)) : mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0)))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(-332.975, 393.943, -76.21, -570.482, 8863.9052, -1.2, -376.660, -2.9, 294.511, -2.1, -4.6, -4.5)) : mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0))))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w = _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (true ? _GLF_IDENTITY((subgroup_size) | (subgroup_size), 0u ^ ((subgroup_size) | (subgroup_size))) : _GLF_FUZZED(subgroup_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, _GLF_IDENTITY(true, (true) || false), false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (true))), false || (true && (_GLF_IDENTITY(true, true && (true)))))) && ((_GLF_DEAD(false)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, true, true)), bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z = subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))), ((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))) : _GLF_FUZZED(uvec3(125399u, 77079u, 30334u)))))).x), 0u + ((gl_NumWorkGroups.x))) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))) || false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.y = _GLF_IDENTITY(num_workgroup, uint(_GLF_IDENTITY(uvec3(num_workgroup, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(_GLF_IDENTITY(11777u, clamp(11777u, _GLF_IDENTITY(11777u, (11777u) | (11777u)), 11777u)), 192034u, 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, 192034u, 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(61723u, 163318u, 107790u)), clamp(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(61723u, 163318u, 107790u)), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(61723u, 163318u, 107790u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(61723u, 163318u, 107790u))) + uvec3(0u, 0u, 0u)), true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (false ? _GLF_FUZZED(num_workgroup) : 192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(61723u, 163318u, 107790u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, 192034u, 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(uvec3(num_workgroup, 0u, 0u), (_GLF_IDENTITY(uvec3(num_workgroup, 0u, 0u), (uvec3(num_workgroup, 0u, 0u)) / uvec3(1u, 1u, 1u))) ^ uvec3(0u, 0u, 0u))), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec3(9330u, 50481u, 107484u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, 192034u, 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), (_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, 192034u, 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u))))) + (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (_GLF_IDENTITY(uvec3(11777u, 192034u, 48327u), uvec3(0u, 0u, 0u) | (uvec3(11777u, 192034u, 48327u))) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), ((uvec3(num_workgroup, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, 1u * (1u)), 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(num_workgroup, 0u, 0u)), (uvec3(11777u, _GLF_IDENTITY(192034u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) + (192034u)), 48327u) & uvec3(0u, 0u, 0u)) + ((uvec3(num_workgroup, 0u, 0u)))), clamp(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(num_workgroup, 1u * (num_workgroup)), 0u, 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(uvec3(num_workgroup, 0u, 0u), max(uvec3(num_workgroup, 0u, 0u), uvec3(num_workgroup, 0u, 0u))))), (_GLF_IDENTITY(((uvec3(num_workgroup, 0u, 0u))), ~ (~ (_GLF_IDENTITY(((uvec3(num_workgroup, 0u, 0u))), uvec3(0u, 0u, 0u) | (((uvec3(num_workgroup, 0u, 0u))))))))) * uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u)), (uvec3(num_workgroup, 0u, 0u)), (uvec3(num_workgroup, 0u, 0u)))) << uvec3(0u, 0u, 0u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-88.48), _GLF_FUZZED(0.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)) && true)))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), ~ (~ (uvec3(gl_WorkGroupID))))) | uvec3(0u, 0u, 0u)))), min(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(825.745)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.3)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(80.06), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.4)), bvec2(true, false)), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2(_GLF_FUZZED(80.06), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.4)), bvec2(true, false)))))) * vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-8582.0178), _GLF_FUZZED(-3659.1013)), vec2(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(80.06), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.4)), bvec2(true, false)), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2(_GLF_FUZZED(80.06), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.4)), bvec2(true, false)))))) * vec2(1.0, 1.0))[0], ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(80.06), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.4)), bvec2(true, false)), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2(_GLF_FUZZED(80.06), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.4)), bvec2(true, false)))))) * vec2(1.0, 1.0))[1]), bvec2(true, true)))).y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), mix(float(_GLF_FUZZED(8.1)), float(injectionSwitch.y), bool(true))))))) && true)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false))) || ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (false || (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec4(999.851, -4.4, 97.22, -4.1))) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))), bool(bool(! (! (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec4(999.851, -4.4, 97.22, -4.1))) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))))), _GLF_IDENTITY(true && (! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false || ((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec4(999.851, -4.4, 97.22, -4.1))) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))), bool(_GLF_IDENTITY(bvec2(true && (! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false || ((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec4(999.851, -4.4, 97.22, -4.1))) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))), true), bvec2(bvec3(bvec2(true && (! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false || ((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec4(999.851, -4.4, 97.22, -4.1))) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))), true), true))))))))) && true)) && true)), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false))) || ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (false || (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec4(999.851, -4.4, 97.22, -4.1))) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))), bool(bool(! (! (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec4(999.851, -4.4, 97.22, -4.1))) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))))), _GLF_IDENTITY(true && (! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false || ((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec4(999.851, -4.4, 97.22, -4.1))) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))), bool(_GLF_IDENTITY(bvec2(true && (! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false || ((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec4(999.851, -4.4, 97.22, -4.1))) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))), true), bvec2(bvec3(bvec2(true && (! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false || ((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec4(999.851, -4.4, 97.22, -4.1))) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))), true), true))))))))) && true)) && true)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), 0u ^ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))))), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))), (((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), ((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))) | ((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))))), (false ? _GLF_FUZZED(workgroup_size) : ((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))))))) | ((workgroup_id)))) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), (true ? (workgroup_id) : _GLF_FUZZED(num_workgroup)))) >> 0u)), 1u * (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) | (workgroup_id)), (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) + 0u)))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, max(5u, 5u))) / 1u), _GLF_IDENTITY((5u), ((_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, (5u) >> 0u), 5u)))) | ((5u))) >> 0u)), uint(5u))), ~ (~ ((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), min(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), (~ (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), min(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), min(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))) << ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(3u), uint(3u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), min(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))) << 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (workgroup_id) | (workgroup_id)), 1u * (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) - 0u)) >> 0u), (workgroup_id) | (workgroup_id))))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) >> 0u, 0u ^ (_GLF_IDENTITY((5u) >> 0u, ((5u) >> 0u) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) >> 0u, 0u | ((5u) >> 0u))), (true ? _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) ^ 0u)) ^ 0u)) >> 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))))) * 1u)), uint(5u)))))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 0)), 0 + (int(ivec3(0, 0, 0)))))], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 0)), 0 + (int(ivec3(0, 0, 0)))))], injectionSwitch[1]))) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))).y), true && (true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 0)), 0 + (int(ivec3(0, 0, _GLF_IDENTITY(0, (0) / 1))))))], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 0)), 0 + (int(ivec3(0, 0, 0)))))], injectionSwitch[1])), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 0)), 0 + (int(ivec3(0, 0, 0))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 0)), 0 + (int(ivec3(0, 0, 0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 0)), 0 + (int(ivec3(0, 0, 0)))))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))))], injectionSwitch[1])) : _GLF_FUZZED(vec2(-3.2, 0.9))))) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6532.6587)), bool(false))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))).y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)))))), true)), true), bvec2(bvec3(bvec2(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, (workgroup_base + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w) | 0u), _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w)), (uint(uint(workgroup_base + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w))) >> _GLF_IDENTITY(0u, 0u | (0u)))) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ (0u & 12690u))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((0u), max((0u), (0u))))))) | 0u) ^ (subgroup_id)) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), uint(uvec3((0u), 0u, 1u))))), max((0u), (0u))))))) | 0u) ^ (subgroup_id)) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, 0u | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((0u), max((0u), (0u))))))) | 0u) ^ (subgroup_id)) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((0u), max((0u), (0u))))))) | 0u) ^ (subgroup_id)) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w)) + ((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, min(0u, 0u))) ^ (subgroup_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u) ^ (subgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u) ^ (subgroup_id)), (false ? _GLF_FUZZED(atomicOr(workgroup_size, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u) ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u) ^ (subgroup_id))) ^ 0u)))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))), (0u) | 0u) ^ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))))) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w) | (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w))) | (0u | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))) + _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1), _GLF_IDENTITY(uint(uvec2((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(uvec2((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))), min(uint(_GLF_IDENTITY(uvec2((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec2((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec2((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << uvec2(0u, 0u))), uint(uvec2((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))))))) >> 0u)) % GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w), (0u & 134809u) ^ ((_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1), uint(uvec2((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))))) % GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w)))) | (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (0u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) ^ 0u)) | 0u), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) ^ 0u)) | 0u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) ^ uvec2(0u, 0u)))) ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, 1u, 1u, 0u))))), subgroup_id)))) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size)).w + _GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w), (false ? _GLF_FUZZED(num_workgroup) : ((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w))), 0u | (((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w)))));
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.x], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0), (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)) ^ 0))))))), 1), clamp(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0), (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)) ^ 0))))))), 1), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0), (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)) ^ 0))))))), 1), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0), (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)) ^ 0))))))), 1))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0), (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)) ^ 0))))))), 1), clamp(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0), (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)) ^ 0))))))), 1), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0), (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)) ^ 0))))))), 1), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0), (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)) ^ 0))))))), 1))))), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0), (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)) ^ 0))))))), 1), clamp(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0), (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)) ^ 0))))))), 1), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0), (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)) ^ 0))))))), 1), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0), (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)) ^ 0))))))), 1)))))) ^ 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(53024u), (_GLF_IDENTITY(_GLF_FUZZED(53024u), 0u + _GLF_IDENTITY((_GLF_FUZZED(53024u)), (_GLF_IDENTITY((_GLF_FUZZED(53024u)), (0u | 0u) ^ ((_GLF_FUZZED(53024u))))) >> 0u))) >> 0u) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0), (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)) | (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)))) >> (1 ^ 1))), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0))))))), 1))), max(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), _GLF_IDENTITY((int(int(1))), ~ (~ ((int(int(1)))))) - 0)), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - _GLF_IDENTITY(0, clamp(0, 0, 0)))), ~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0))))))), 1))), _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), min(int(int(1)), int(int(1)))), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0))))))), 1))))), 0 | (_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), max(~ (_GLF_IDENTITY(int(int(1)), (int(int(1))) - 0)), ~ (_GLF_IDENTITY(int(int(1)), (int(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 0), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 0), (false ? _GLF_FUZZED(ivec2(-32931, 34073)) : ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 0)))))), int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 0), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 1, 0)), (int(ivec3(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 1, 0))) - 0)), 0), (false ? _GLF_FUZZED(ivec2(-32931, 34073)) : ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 0)))))), 0, 0, (1 & 1)), clamp(ivec4(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 0), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 1, 0)), (int(ivec3(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 1, 0))) - 0)), 0), (false ? _GLF_FUZZED(ivec2(-32931, 34073)) : ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 0)))))), 0, 0, (1 & 1)), ivec4(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 0), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 1, 0)), (int(ivec3(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 1, 0))) - 0)), 0), (false ? _GLF_FUZZED(ivec2(-32931, 34073)) : ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 0)))))), 0, 0, (1 & 1)), ivec4(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 0), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 1, 0)), (int(ivec3(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 1, 0))) - 0)), 0), (false ? _GLF_FUZZED(ivec2(-32931, 34073)) : ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-9629))), 0)))))), 0, 0, (1 & 1))))))))) - 0))))))), 1)))))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))], _GLF_IDENTITY(4, (4) | (4)), 64, 0);
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, 0u | (_GLF_IDENTITY(read, (read) | (read)))), 4, 64, _GLF_IDENTITY(4, (0 ^ 0) | _GLF_IDENTITY((4), int(ivec4((4), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0, 1)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
