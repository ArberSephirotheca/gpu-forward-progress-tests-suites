#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(false || (_GLF_IDENTITY(false, ! (! (false)))), false, false, false))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))))) || (false)), ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((+ -2.8))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7069.0015) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch)).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), true)))))), true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) * mat2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-575.618)), vec2(_GLF_FUZZED(42.07), (vec2(0.0, 0.0))[1]), bvec2(false, true)))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), float(mat2(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))), 1.0 * (float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), 1.0)))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0), (mat4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.2)), float(1.0), bool(true))), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(1233.6072)), float(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(true)))))), float(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-78.23, -6.5)) : injectionSwitch)).y, injectionSwitch.y))), min(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-78.23, -6.5)) : injectionSwitch)).y, injectionSwitch.y))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-78.23, -6.5)) : injectionSwitch)).y, injectionSwitch.y)))))), 1.0 * (float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), 1.0, 0.0, 1.0))))), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0), (mat4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.2)), float(1.0), bool(true))), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(1233.6072)), float(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(true)))))), float(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-78.23, -6.5)) : injectionSwitch)).y, injectionSwitch.y))), min(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-78.23, -6.5)) : injectionSwitch)).y, injectionSwitch.y))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-78.23, -6.5)) : injectionSwitch)).y, injectionSwitch.y)))))), 1.0 * (float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), 1.0, 0.0, 1.0))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(fma(vec2(85.71, -9.2), injectionSwitch, vec2(62.16, -5.8))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(21.55, 1.3)))))[1], max(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])))).y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(21.55, 1.3)))))[1], max(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])))).y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(21.55, 1.3)))))[1], max(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])))).y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), true)))), _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), true)))), _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), true)))), _GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), true)))), _GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), true)))), _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), true)))), _GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), true)))), _GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), true))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), true)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-667.856), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)), false, true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), bvec2(false, true))).y)) ? _GLF_FUZZED(547.434) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(exp2(-6674.5999)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, sqrt(1.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, sqrt(1.0), 0.0))), _GLF_IDENTITY(dot(vec4(exp(0.0), 1.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0)), dot(vec4(exp(0.0), 1.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0))), 1.0)), mix(float(_GLF_FUZZED(3448.8238)), float(float(mat2x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, sqrt(1.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, sqrt(1.0), 0.0))), _GLF_IDENTITY(dot(vec4(exp(0.0), 1.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0)), dot(vec4(exp(0.0), 1.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0))), 1.0))), bool(true)))) > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_base))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, min(0u, 0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 1u * (0u)), 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(1u * (0u), (1u * (0u)) | (_GLF_IDENTITY(1u * (0u), min(1u * (0u), 1u * (0u)))))), 0u))), min((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 0u, 0u), (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, 0u, 0u)))) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) * 1u), _GLF_IDENTITY(0u, 1u * (0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), min((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_local_id, 0u, 0u)), (_GLF_IDENTITY((uvec3(subgroup_local_id, 0u, 0u)), ((uvec3(subgroup_local_id, 0u, 0u))) | uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 1u * (_GLF_IDENTITY(0u, (0u) - (0u & 58056u)))), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), ~ (~ ((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)))))))), (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, (0u) | 0u)), max(0u | (0u), _GLF_IDENTITY(0u | (0u), min(0u | (0u), 0u | (0u)))))), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u) * (0u), max(_GLF_IDENTITY(1u, (1u) ^ 0u) * (0u), _GLF_IDENTITY(1u, (1u) ^ 0u) * (0u)))), 0u)))))) + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, min(0u, 0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (false ? _GLF_FUZZED(uvec3(185403u, 51502u, 5390u)) : _GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u))))))))) << uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (false ? _GLF_FUZZED(uvec3(185403u, 51502u, 5390u)) : _GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u))))))))) << uvec3(0u, 0u, 0u)))) + uvec3(0u, 0u, 0u)))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), 0u | (_GLF_IDENTITY(0u, 0u | (0u)))), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, min(0u, 0u))))) | (0u)), 1u * (0u)), 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | _GLF_IDENTITY((uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | _GLF_IDENTITY((0u), ~ (~ ((0u))))) + 0u)), 0u)), clamp((uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | _GLF_IDENTITY((0u), ~ (~ ((0u))))) + 0u)), 0u)), (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | _GLF_IDENTITY((0u), ~ (~ ((0u))))) + 0u)), 0u)), _GLF_IDENTITY((uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | _GLF_IDENTITY((0u), ~ (~ ((0u))))) + 0u)), 0u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) | ((uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | _GLF_IDENTITY((0u), ~ (~ ((0u))))) + 0u)), 0u)))))))) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(1u * (0u), ~ (~ (1u * (0u))))), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (_GLF_IDENTITY(0u, 1u * (0u))) >> 0u), _GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, 1u * (0u)))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))))), min((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, _GLF_IDENTITY(0u, (0u) / 1u))) | (uvec3(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), min((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (_GLF_IDENTITY(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u), uvec3(uvec3(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u))))))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), min(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, 0u | (0u)))), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), ~ (~ ((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)))))))), (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), _GLF_IDENTITY(max(0u | (0u), _GLF_IDENTITY(0u | (0u), min(0u | (0u), 0u | (0u)))), (true ? max(0u | (_GLF_IDENTITY(0u, (0u) | 0u)), _GLF_IDENTITY(0u | (0u), min(0u | (0u), 0u | (0u)))) : _GLF_FUZZED(subgroup_local_id))))), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u) * (0u), max(_GLF_IDENTITY(1u, (1u) ^ 0u) * (0u), _GLF_IDENTITY(1u, (1u) ^ 0u) * _GLF_IDENTITY((0u), 0u ^ ((0u)))))), 0u)))))) + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, min(0u, 0u)), 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), max(_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), (~ (uvec3(subgroup_local_id, 0u, 0u))) << uvec3(0u, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), 1u * ((_GLF_IDENTITY(0u, min(0u, 0u))))) | (0u)), 1u * (0u)), 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ _GLF_IDENTITY((uvec3(subgroup_local_id, 0u, 0u)), ~ (~ ((uvec3(subgroup_local_id, 0u, 0u))))))))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))))))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, 0u | (0u)), 0u)))), _GLF_IDENTITY(1u * (0u), 0u ^ (1u * (0u)))), 0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, _GLF_IDENTITY(0u, 1u * (0u)))), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 1u * (0u)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), uint(uvec2(min(0u, 0u), 0u))))) | (0u)), 1u * (0u)), 0u))), max(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) - 0u))), 0u), uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(0u, _GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), 0u | ((0u)))), 0u))), min((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), min((0u), (0u)))), 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), clamp(uvec3(subgroup_local_id, 0u, 0u), uvec3(subgroup_local_id, 0u, 0u), _GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) / uvec3(1u, 1u, 1u)))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) | (0u)) | _GLF_IDENTITY((0u), min((0u), (0u)))), 0u))))) | ((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), min((0u), (_GLF_IDENTITY(0u, max(0u, 0u)))))), _GLF_IDENTITY(0u, 0u ^ (0u)))))))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))), max(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))), min((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))), (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))))), (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u & 562u)), 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))) | (0u)), 1u * (0u)), 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), ~ (~ (~ (~ (0u)))))))))), clamp(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), ~ (~ (~ (~ (0u)))))))))), (uvec3(subgroup_local_id, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), ~ (~ (~ (~ (0u))))))))))) / uvec3(1u, 1u, 1u)), uvec3(subgroup_local_id, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), ~ (~ (~ (~ (0u)))))))))), uvec3(subgroup_local_id, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), ~ (~ (~ (~ (0u)))))))))))), (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (0u) * 1u), 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), max(uvec3(subgroup_local_id, 0u, 0u), uvec3(subgroup_local_id, 0u, 0u))), (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), max(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))) : _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u)))), 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)) - uvec3(0u, 0u, 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), max(0u | (0u), _GLF_IDENTITY(_GLF_IDENTITY(0u | (0u), ~ (~ (0u | (0u)))), _GLF_IDENTITY(min(0u | (0u), 0u | (0u)), min(min(0u | (0u), 0u | (0u)), min(0u | (0u), 0u | (0u)))))))), 0u))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), max(0u | (0u), _GLF_IDENTITY(_GLF_IDENTITY(0u | (0u), ~ (~ (0u | (0u)))), _GLF_IDENTITY(min(0u | (0u), 0u | (0u)), min(min(0u | (0u), 0u | (0u)), min(0u | (0u), 0u | (0u)))))))), 0u))))))) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u) * (0u), max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u)) ^ 0u) * (0u), _GLF_IDENTITY(1u, (1u) ^ 0u) * (0u)))), 0u)))))) + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(-952.332, -3.1)) : injectionSwitch.x))) / cos(length(vec4(0.0, 0.0, 0.0, 0.0)))))))))) / 1u)) % subgroup_size), 0u ^ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))), 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 1u * (0u)), 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u))), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u))), 1u)))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, 1u * (0u)), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(1u * (0u), (_GLF_IDENTITY(1u * (0u), (1u * (0u)) - 0u)) * 1u)), 0u))), min((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), max(0u | (0u), 0u | (0u)))), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)), clamp(_GLF_IDENTITY((uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)), uvec3(0u, 0u, 0u) ^ ((uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)), _GLF_IDENTITY((uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)), ((uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u))) << uvec3(0u, 0u, 0u)))))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))), ((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), min(uvec3(subgroup_local_id, 0u, 0u), uvec3(subgroup_local_id, 0u, 0u))), _GLF_IDENTITY((uvec3(subgroup_local_id, 0u, 0u)), ((uvec3(subgroup_local_id, 0u, 0u))) | uvec3(0u, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), (true ? _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u))) : _GLF_FUZZED(num_workgroup)))))), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)))))))), (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (_GLF_IDENTITY(uvec3(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u | (0u), max(0u | (0u), _GLF_IDENTITY(0u | (0u), min(0u | (0u), 0u | (0u)))))), 0u), (true ? uvec3(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u | (0u), max(0u | (0u), _GLF_IDENTITY(0u | (0u), min(0u | (0u), 0u | (0u)))))), 0u) : _GLF_FUZZED(uvec3(128882u, 10421u, 197822u))))))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u | 0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u), uint(uvec2((1u), 1u))), 1u, 0u, 0u)), uint(uint(uint(uvec4(_GLF_IDENTITY((1u), uint(uvec2((1u), 1u))), 1u, 0u, 0u)))))) ^ 0u) * _GLF_IDENTITY((0u), uint(uvec3(_GLF_IDENTITY((0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((0u))), (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))), max(_GLF_IDENTITY(1u, (1u) ^ 0u) * (0u), _GLF_IDENTITY(1u, (1u) ^ 0u) * (0u)))), 0u)))))) + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, min(0u, 0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, _GLF_IDENTITY(0u, 1u * (0u)))), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 1u * (0u)), 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u)))) * (0u)), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (_GLF_IDENTITY(0u, 1u * (0u))) | (_GLF_IDENTITY(0u, 1u * (0u)))), _GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (_GLF_IDENTITY(0u, 1u * (0u))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u))), min((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) - 0u)), _GLF_IDENTITY(0u, uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u)))))), 0u), min((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), ((0u)) | ((0u)))), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), ~ (~ ((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(1u * (0u), min(1u * (0u), 1u * (0u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) >> 0u)), uvec3(uvec3(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(1u * (0u), min(1u * (0u), 1u * (0u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) >> 0u)))))))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) | (subgroup_local_id)), 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), max(0u | (0u), _GLF_IDENTITY(0u | (0u), min(0u | (0u), 0u | (0u)))))), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u) * (0u), max(_GLF_IDENTITY(1u, (1u) ^ 0u) * (0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) | 0u) * (0u)))), 0u)))))) + _GLF_IDENTITY(1, (1) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), 1u * (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (0u))) / 1u), 0u)), 0u), (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (0u))) / 1u), 0u)), 0u)) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 1u * (0u)), 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 1u * (0u)), 0u)) >> uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 1u * (0u)), 0u), uvec3(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 1u * (0u)), 0u), 1u))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(subgroup_local_id, 0u, 0u)), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 1u * (0u)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), ~ (~ (uvec3(subgroup_local_id, 0u, 0u))))))), min(~ (uvec3(subgroup_local_id, 0u, 0u)), ~ (uvec3(subgroup_local_id, 0u, 0u)))))), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 1u * (0u)), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) - 0u))), 0u), uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u))), (true ? (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (0u) << 0u))))) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) - 0u))), 0u), uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u))) : _GLF_FUZZED(uvec3(121112u, 64395u, 91392u)))), min((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | 0u)), 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), min((0u), (0u)))), 0u)))), ((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | _GLF_IDENTITY((0u), min((0u), (0u))), clamp(0u | _GLF_IDENTITY((0u), min((0u), (0u))), 0u | _GLF_IDENTITY((0u), min((0u), (0u))), 0u | _GLF_IDENTITY((0u), min((0u), (0u)))))), 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), min((0u), (0u)))), 0u))), (false ? _GLF_FUZZED(uvec3(199245u, 52442u, 132337u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), min((0u), (0u)))), 0u))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))), (_GLF_IDENTITY((0u), min((0u), (0u)))) | (_GLF_IDENTITY((0u), min((0u), (0u)))))), 0u))))))))))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), min((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, 1u * (0u))), _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u & 562u)), 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) / 1u)) | ((0u)))), 0u)))) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))) | (0u)), 1u * (0u)), 0u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), ((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u)))), 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)) - uvec3(0u, 0u, 0u)))), uvec3(1u, 1u, 1u) * (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), ((_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u)))), max(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, min(0u, 0u)))))), 0u)) | (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)) - uvec3(0u, 0u, 0u))))))))))), (_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) | (_GLF_IDENTITY(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), max(0u | (0u), _GLF_IDENTITY(_GLF_IDENTITY(0u | (0u), ~ (~ (0u | (0u)))), _GLF_IDENTITY(min(0u | (0u), 0u | (0u)), min(min(0u | (0u), 0u | (0u)), min(0u | (0u), 0u | (0u)))))))), 0u), max(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), max(0u | (0u), _GLF_IDENTITY(_GLF_IDENTITY(0u | (0u), ~ (~ (0u | (0u)))), _GLF_IDENTITY(min(0u | (0u), 0u | (0u)), min(min(0u | (0u), 0u | (0u)), min(0u | (0u), 0u | (0u)))))))), 0u), _GLF_IDENTITY(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), max(0u | (0u), _GLF_IDENTITY(_GLF_IDENTITY(0u | (0u), ~ (~ (0u | (0u)))), _GLF_IDENTITY(min(0u | (0u), 0u | (0u)), min(min(0u | (0u), 0u | (0u)), min(0u | (0u), 0u | (0u)))))))), 0u), (uvec3(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), max(0u | (0u), _GLF_IDENTITY(_GLF_IDENTITY(0u | (0u), ~ (~ (0u | (0u)))), _GLF_IDENTITY(min(0u | (0u), 0u | (0u)), min(min(0u | (0u), 0u | (0u)), min(0u | (0u), 0u | (0u)))))))), 0u)) >> uvec3(0u, 0u, 0u))))))) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), min(_GLF_IDENTITY(1u, (1u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, (1u) ^ 0u)))))) ^ 0u) * (0u), max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) ^ 0u) * (0u), _GLF_IDENTITY(1u, (1u) ^ 0u) * (0u)))), 0u)))))) + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(-952.332, -3.1)) : injectionSwitch.x))) / cos(length(vec4(0.0, 0.0, 0.0, 0.0))), sin(0.0) + ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(-952.332, -3.1)) : injectionSwitch.x))) / cos(length(vec4(0.0, 0.0, 0.0, 0.0)))))))))))) / 1u)) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))) + ((injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, length(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.3) : 0.0)), 0.0, 0.0, 1.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, 1.0, length(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.3) : 0.0)), 0.0, 0.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(vec2(7133.3201, 6708.0700)) : vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, length(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.3) : 0.0)), 0.0, 0.0, 1.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, 1.0, length(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.3) : 0.0)), 0.0, 0.0, 1.0, 1.0))))))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bool(! (_GLF_IDENTITY(true, false || (true)))))))))))))))
        barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-6950.1586 / 4248.7865))), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-6950.1586 / 4248.7865))), float(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, 1.0)), 1.0))).y), bool(true)))), true)), (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-6950.1586 / 4248.7865))), float(injectionSwitch.y), bool(true))), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-6950.1586 / 4248.7865))), float(injectionSwitch.y), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))) || false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(29971))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.8)), bvec2(true, false))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - abs(0.0)), injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false, (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false) || false)))))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-5536.4668) : injectionSwitch[1])))))).x > injectionSwitch.y)))), true && (bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y))))))) || false, (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(3506.5930)), bvec2(false, false))), abs(0.0), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, tan(0.0))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(3506.5930)), bvec2(false, false))), abs(0.0), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, tan(0.0)))))).y))), bvec3(bvec4(bvec3((false), false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(3506.5930)), bvec2(false, false))), abs(0.0), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, tan(0.0))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(3506.5930)), bvec2(false, false))), abs(0.0), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, tan(0.0)))))).y))), false)))), true && (_GLF_IDENTITY(bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) || false) || false)))))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) && (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec2((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec2((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, (true) && true) && (_GLF_DEAD(false)))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) || false))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true), (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) || false))) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))), bool(bool((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))))))))), _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false) || false))) && true))) && true))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))) || false) && _GLF_IDENTITY(true, true && (true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(sqrt(vec2(0.0, 0.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), false)))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, (64) | 0) : _GLF_FUZZED(35245))), _GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec2(0, 0))) | (4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))))), false, true, true)))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))))), false, true, true)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5620.2486)), bool(false))))))))))), false, true, true))))))) || false), true))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false)))) || false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
