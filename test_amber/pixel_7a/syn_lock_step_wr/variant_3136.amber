#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_1 {
 float _f0;
} ;

struct _GLF_struct_2 {
 int _f0;
 uint workgroup_size;
 _GLF_struct_1 _f1;
 mat4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_0 {
 uint num_workgroup;
 bool _f0;
 ivec3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_sizeworkgroup_id;
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_sizeworkgroup_id.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z = subgroup_local_id;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_NumWorkGroups.x, true, ivec3(1));
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(1, gl_WorkGroupSize.x, _GLF_struct_1(1.0), mat4(1.0), vec2(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_sizeworkgroup_id.z = workgroup_id;
 uint workgroup_base = _GLF_struct_replacement_2.workgroup_size * GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_sizeworkgroup_id.z;
 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.w = workgroup_base;
 uint virtual_gid = GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.w + GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y * GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_sizeworkgroup_id.y + GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z;
 uint next_virtual_gid = GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.w + GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y * GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_sizeworkgroup_id.y + ((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + 1) % GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_sizeworkgroup_id.y);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_sizeworkgroup_id.x = read;
 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.x = GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_sizeworkgroup_id.x;
 atomicStore(checker[virtual_gid], GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.x, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
