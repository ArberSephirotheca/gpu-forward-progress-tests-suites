#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)), bool(bvec3(bool((false)), true, false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-59.71)))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec3(bool((false)), true, false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))).x)) > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec3(bool((false)), true, false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))).x)) > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(_GLF_IDENTITY(bvec3(bool((false)), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY((false), false || ((false)))), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY((false), false || ((false)))), true, false), false)), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bool((false)), true, false), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bool((false)), true, false), false)), false)), false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), bool(bvec3(bool(bvec3(bool((false)), true, false)), false, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), bool(bvec2(bool(bvec2((false), true)), true))))) || false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(bool((false)), bool(bvec3(bool(_GLF_IDENTITY((false), ! (! ((false))))), true, false)))), bool(bvec3((_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true)))), bool(bvec3(bool((false)), true, false)))), _GLF_IDENTITY(true, (true) || false), true))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.6, -2.8)) : injectionSwitch)).y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), bool(_GLF_IDENTITY(bvec3(bool((false)), true, false), bvec3(bvec3(bvec3(bool((false)), true, false)))))), (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bvec3(bool((false)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, false))), true))))), false)), bool(bvec2(bool(bvec3(bool((false)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, false))), true))))), false)), false))))), false))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && (false)))), bool(bvec3(bool((false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), (true) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)) && true))), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), false || (bool(bvec3(bool((false)), true, false))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false)))))) || false), false || (bool(bvec3(bool((false)), true, false))))) && true) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(_GLF_IDENTITY(bool((false)), (bool((false))) && true), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)) && true))), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), false || (bool(bvec3(bool((false)), true, false))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false)))))) || false), false || (bool(bvec3(bool((false)), true, false))))) && true) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(_GLF_IDENTITY(bool((false)), (bool((false))) && true), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)) && true))), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), false || (bool(bvec3(bool((false)), true, false))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false)))))) || false), false || (bool(bvec3(bool((false)), true, false))))) && true) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(_GLF_IDENTITY(bool((false)), (bool((false))) && true), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)) && true))), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), false || (bool(bvec3(bool((false)), true, false))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false)))))) || false), false || (bool(bvec3(bool((false)), true, false))))) && true) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(_GLF_IDENTITY(bool((false)), (bool((false))) && true), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)) && true))), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), false || (bool(bvec3(bool((false)), true, false))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false)))))) || false), false || (bool(bvec3(bool((false)), true, false))))) && true) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(_GLF_IDENTITY(bool((false)), (bool((false))) && true), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))), true && (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)) && true))), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), false || (bool(bvec3(bool((false)), true, false))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false)))))) || false), false || (bool(bvec3(bool((false)), true, false))))) && true) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(_GLF_IDENTITY(bool((false)), (bool((false))) && true), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)) && true))), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), false || (bool(bvec3(bool((false)), true, false))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false)))))) || false), false || (bool(bvec3(bool((false)), true, false))))) && true) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(_GLF_IDENTITY(bool((false)), (bool((false))) && true), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))))), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)) && true))), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), false || (bool(bvec3(bool((false)), true, false))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false)))))) || false), false || (bool(bvec3(bool((false)), true, false))))) && true) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(_GLF_IDENTITY(bool((false)), (bool((false))) && true), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)) && true))), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), false || (bool(bvec3(bool((false)), true, false))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false)))))) || false), false || (bool(bvec3(bool((false)), true, false))))) && true) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(_GLF_IDENTITY(bool((false)), (bool((false))) && true), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))), true && (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)) && true))), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), false || (bool(bvec3(bool((false)), true, false))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false)))))) || false), false || (bool(bvec3(bool((false)), true, false))))) && true) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(_GLF_IDENTITY(bool((false)), (bool((false))) && true), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)) && true))), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), false || (bool(bvec3(bool((false)), true, false))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (false)))))) || false), false || (bool(bvec3(bool((false)), true, false))))) && true) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(_GLF_IDENTITY(bool((false)), (bool((false))) && true), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))))), true, false, false))))))))))))) || false), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec3((false), false, false)))), bool(bvec3(bool((false)), true, false)))), false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y)), false), bvec3(bvec4(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), false)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(bool((false)), true, false))), ! (! (! (bool(bvec3(bool((false)), true, false))))))))), (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (false) || false))), bool(_GLF_IDENTITY(bvec3(bool((false)), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool((false)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool((false)), true, false)), bvec3(bvec4(bvec3(bvec3(bool((false)), true, false)), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec3((_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), true && ((! (false)))))))))), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))) && true)))))) || false), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-62.25)), vec2(_GLF_FUZZED(9.6), (injectionSwitch)[1]), bvec2(false, true))).y)), false), false))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false)))), (true && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(bool((false)), _GLF_IDENTITY(true, (true) && true), false)))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(bool((false)), true, false)))))))), ! (_GLF_IDENTITY(! ((! (bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(bool((false)), true, false))))))))), ! (! (! ((! (bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(bool((false)), true, false))))))))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool(_GLF_IDENTITY((false), false || ((false)))), true, false)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))), bool(bvec2(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))), false || ((! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))), ! (! (! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec3(bool((false)), true, false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), ! (! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), true, false))))))))))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))))))) || false)))), false))))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (true)) && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false || (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false)))), (true && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(bool((false)), true, false)))))), (bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(bool((false)), true, false))))))) || false), ! (! (bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((bool(bvec3(bool((false)), true, false))), bool(bvec4((bool(bvec3(bool((false)), true, false))), false, false, true))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), bool(bvec2(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), true))))))), false || (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), bool(bvec2(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), true))))))))))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))))))) || false, bool(bvec4((! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))))))) || false, true, false, true))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), bool(bvec2(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), true))))))), false || (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), bool(bvec2(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), true))))))))))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))))))) || false, bool(bvec4((! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))))))) || false, true, false, true))))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), bool(bvec2(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), true))))))), false || (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), bool(bvec2(! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), true))))))))))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))))))) || false, bool(bvec4((! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))))))) || false, true, false, true))))), false, true)))))))), _GLF_IDENTITY(false, ! (! (false)))))))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false)))), (true && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), true, true, false)))) || (_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), bool(bool(bool(bvec3(bool((false)), true, false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), bool(bool(bool(bvec3(bool((false)), true, false)))))), (! (_GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), bool(bool(bool(bvec3(bool((false)), true, false))))))) || false))))))))), ! (! (bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(bool((false)), true, false))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec2((false), false)))), bool(bvec3(bool((false)), true, false)))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool(_GLF_IDENTITY((false), ! (! ((false))))), true, false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), ! (! (bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), bool(bvec3(bool((false)), true, false)))))))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))), ((bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))) && true))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))), bool(bvec4(! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))), true, true, false))))))))) || false)))), false))))) && true))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true)), true)))))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), ! (! (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3((false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), false))), ! (! (! (bool(bvec3((false), true, false)))))))))), true, false)))), false)))))), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), true && ((_GLF_IDENTITY(false, (false) && true)))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true))))))))), false, true)))))), (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), ! (! (bool((false))))), bool(bvec3(bool((false)), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false)))), (true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false || (bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))))), false))))) && true))), false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), ! (! (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), ! (! (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false), false), bvec3(bvec4(bvec3(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false), false), true)))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), ! (! (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), ! (! (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), ! (! (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false)))) || _GLF_IDENTITY(false, false || (false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), bool(bvec3(bool((false)), true, false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(_GLF_IDENTITY(bvec3(bool((false)), true, false), bvec3(bvec3(bvec3(bool((false)), true, false))))))), false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), ! (! (_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), ! (! (_GLF_IDENTITY(bool((false)), bool(bvec3(bool(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))))))), true, false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), true && ((false)))), bool(bvec3(bool((false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false)))), false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), (! (_GLF_DEAD(false))) || false)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (false ? _GLF_FUZZED(log2(8.9)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, bool(bool(true))) ? injectionSwitch.y : _GLF_FUZZED(dot(_GLF_IDENTITY(-2.8, (_GLF_IDENTITY(-2.8, mix(float(-2.8), float(_GLF_FUZZED(-2075.8317)), bool(false)))) * 1.0), 155.599))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), min(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))) : _GLF_FUZZED(uvec3(117618u, 179715u, 19990u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), min(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(102897u, 95597u, 34792u)))))), _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))) : _GLF_FUZZED(uvec3(117618u, 179715u, 19990u)))) : _GLF_FUZZED(uvec3(104432u, 48663u, 20050u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))), true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true, false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true, false, true)))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true, false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true, false, true)))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 0u), (true ? _GLF_IDENTITY(uvec3(workgroup_base, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u), _GLF_IDENTITY(uvec3(uvec3(uvec3(workgroup_base, 0u, 0u))), (true ? uvec3(uvec3(uvec3(workgroup_base, 0u, 0u))) : _GLF_FUZZED(uvec3(137720u, 69083u, 167088u))))) : _GLF_FUZZED(uvec3(129239u, 41117u, 23177u)))))), workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false))), false)))), ! (! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), bool(bvec2((! (_GLF_IDENTITY(false, (false) || false))), false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)) && true) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true)) && true), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(false, (false) && true)) && true))), ((! (! ((_GLF_IDENTITY(false, (false) && true)) && true)))) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], uint(1), _GLF_IDENTITY(4, 0 | (4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0))))) > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)) > injectionSwitch.y, false, true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0))))) > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)) > injectionSwitch.y, false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0))))) > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED((513.693 , sinh(2.8))) : injectionSwitch.x)) > injectionSwitch.y, false, true)))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), bool(bool(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), bool(bool(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), bool(bool(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))))), ((_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), bool(bool(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))))) || false))))) && true)))), ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true, true)))))))))) && true)))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) - (0 & 58925)), 64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
