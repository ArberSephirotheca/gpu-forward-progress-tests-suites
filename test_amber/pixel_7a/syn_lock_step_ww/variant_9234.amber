#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 ivec4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
 mat4x2 _f1;
 float _f2;
} ;

struct _GLF_struct_11 {
 bool _f0;
 mat2x4 _f1;
 bvec4 _f2;
 vec2 _f3;
 vec2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_10 {
 ivec3 _f0;
 ivec3 _f1;
 mat3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_14 {
 _GLF_struct_10 _f0;
 ivec3 _f1;
 _GLF_struct_11 _f2;
 mat3x4 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 uvec2 _f1;
 mat2 _f2;
 uvec3 _f3;
 vec2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 uvec2 _f1;
 vec3 _f2;
 int _f3;
} ;

struct _GLF_struct_5 {
 float _f0;
 uint _f1;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 bvec4 _f1;
 bvec3 _f2;
 mat3 _f3;
 mat3 _f4;
 int _f5;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 mat3x2 _f4;
 uvec4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_7 _f0;
 _GLF_struct_9 _f1;
 uint next_virtual_gid;
 vec3 _f2;
 mat2 _f3;
 _GLF_struct_14 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_1 {
 float _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 mat3 _f1;
 uint _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 vec3 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_3 {
 uint subgroup_size;
 vec2 _f0;
 _GLF_struct_2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(false, false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))
    return;
   return;
  }
 uvec3 GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id;
 uvec3 GLF_merged2_0_2_55_2_1_13GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizenum_workgroup;
 uvec2 GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false)))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(-6.1, -874.511, 8440.9663, 7851.8336, -72.38, 5.0, -6.5, -40.22, -6.3)) : _GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3(injectionSwitch.y, 0.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-51.51), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(381.751)), bvec2(true, false))), injectionSwitch, injectionSwitch)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-51.51), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(381.751)), bvec2(true, false))), injectionSwitch, injectionSwitch)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(2.2, -882.419, -4.9, 76.16, -7.4, 52.77, -0.6, 0.0)))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-51.51), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(381.751)), bvec2(true, false))), injectionSwitch, injectionSwitch)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-51.51), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(381.751), min(_GLF_FUZZED(381.751), _GLF_FUZZED(381.751)))), bvec2(true, false))), injectionSwitch, injectionSwitch)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(2.2, -882.419, -4.9, 76.16, -7.4, 52.77, -0.6, 0.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true))))))))))
              break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
          }
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged2_0_2_55_2_1_13GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizenum_workgroup.xy = _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size, (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_size) | uvec2(0u, 0u));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true && ((! (! (_GLF_DEAD(false))))))))))))), true && ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true && ((! (! (_GLF_DEAD(false)))))))))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        break;
       return;
      }
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(gl_SubgroupSize, vec2(1.0), _GLF_struct_2(_GLF_struct_0(uvec3(1u), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(mat3(-502.438, -0.8, 673.238, _GLF_IDENTITY(-64.25, min(-64.25, -64.25)), -207.157, _GLF_IDENTITY(6.4, mix(float(_GLF_FUZZED(4.9)), float(6.4), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -488.537, -0.8, -9.7)) : mat3(1.0)))) + mat3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, exp(0.0), 0.0))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.1)), bool(false))), 0.0, 0.0, 0.0, 0.0)), 1u), vec3(1.0), _GLF_struct_1(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-342.351)), float(1.0), _GLF_IDENTITY(bool(true), _GLF_IDENTITY((bool(true)) || false, _GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(true)) || false, false || ((bool(true)) || _GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((bool(true)) || false, ! (! (_GLF_IDENTITY((bool(true)) || false, bool(bvec3((bool(true)) || false, true, false)))))), false || ((bool(true)) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(true)) || false, ! (! (_GLF_IDENTITY((bool(true)) || false, bool(bvec3((bool(true)) || false, true, false)))))), false || ((bool(true)) || false)))))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(true)) || false, ! (! (_GLF_IDENTITY((bool(true)) || false, bool(bvec3(_GLF_IDENTITY((bool(true)) || false, bool(bvec2((bool(true)) || false, true))), true, false)))))), false || ((bool(_GLF_IDENTITY(true, false || (true)))) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0)), mat2x3(1.0))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x = subgroup_local_id;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) || false, _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) || false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), (bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))) && true)))))), true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
          }
        }
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     else
      {
      }
    }
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (true ? _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(140698u, 149345u, 182335u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))[_GLF_IDENTITY(2, (2) * 1)] : _GLF_FUZZED(_GLF_IDENTITY(15892u, max(15892u, 15892u))))))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch.y), bool(true)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.5)), float(injectionSwitch.y), bool(true))), float(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.5)), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.1), _GLF_FUZZED(907.089)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))) * (gl_NumWorkGroups)))).x, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (true ? _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(140698u, 149345u, 182335u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))[_GLF_IDENTITY(2, (2) * 1)] : _GLF_FUZZED(_GLF_IDENTITY(15892u, max(15892u, 15892u))))))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch.y), bool(true)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.5)), float(injectionSwitch.y), bool(true))), float(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.5)), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.1), _GLF_FUZZED(907.089)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))) * (gl_NumWorkGroups)))).x) | (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (true ? _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(140698u, 149345u, 182335u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))[_GLF_IDENTITY(2, (2) * 1)] : _GLF_FUZZED(_GLF_IDENTITY(15892u, max(15892u, 15892u))))))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch.y), bool(true)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.5)), float(injectionSwitch.y), bool(true))), float(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.5)), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.1), _GLF_FUZZED(907.089)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))) * (gl_NumWorkGroups)))).x));
 GLF_merged2_0_2_55_2_1_13GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizenum_workgroup.z = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) - 0))])), injectionSwitch[1])), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(59.74))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-6.9, 9.9).y) : injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(44.55, (false ? _GLF_FUZZED(-4.2) : 44.55)))), float(1.0), bool(true))), mix(float(_GLF_FUZZED(453.406)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0), transpose(transpose(mat3x2(1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0))))), max(float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0), transpose(transpose(mat3x2(1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0))))), float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0), transpose(transpose(mat3x2(1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0))))))))), bool(true)))), vec4(mat2x3(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-9.5)), bool(false))))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), 0.0, 0.0))))).y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(float(mat4(round(length(normalize(vec2(1.0, 1.0)))), length(vec2(0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0)), clamp(float(mat4(round(length(normalize(vec2(1.0, 1.0)))), length(vec2(0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0)), float(mat4(round(length(normalize(vec2(1.0, 1.0)))), length(vec2(0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0)), float(mat4(round(length(normalize(vec2(1.0, 1.0)))), length(vec2(0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0))))), 1.0, 0.0, 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), clamp(float(mat3x4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0)))) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0)), float(mat2x3(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, sin(0.0) + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) * exp(0.0)))), sin(0.0), 1.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0)))))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), float(mat3x4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0))), 0.0, 1.0, 1.0, 0.0)), float(mat3x4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0)))))) - 0.0), 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-195.118) : 1.0))), vec2(mat4(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-195.118) : 1.0))), 0.0, 0.0, determinant(mat4(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), cos(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(6955.9776, -8.0)) : vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0), mat2x4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8780.8468)), float(1.0), bool(true))), 1.0, 1.0)), 1.0)))), 1.0, 0.0, 1.0)))), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(6955.9776, -8.0)) : vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0), mat2x4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8780.8468)), float(1.0), bool(true))), 1.0, 1.0)), 1.0)))), 1.0, 0.0, 1.0)))), min(false ? _GLF_FUZZED(vec2(6955.9776, -8.0)) : vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0), mat2x4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8780.8468)), float(1.0), bool(true))), 1.0, 1.0)), 1.0)))), 1.0, 0.0, 1.0)))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(6955.9776, -8.0)) : vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0), mat2x4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8780.8468)), float(1.0), bool(true))), 1.0, 1.0)), 1.0)))), 1.0, 0.0, 1.0)))), vec2(vec3(false ? _GLF_FUZZED(vec2(6955.9776, -8.0)) : vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0), mat2x4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8780.8468)), float(1.0), bool(true))), 1.0, 1.0)), 1.0)))), 1.0, 0.0, 1.0)))), 1.0))))), false ? _GLF_FUZZED(vec2(6955.9776, -8.0)) : vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0), mat2x4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8780.8468)), float(1.0), bool(true))), 1.0, 1.0)), 1.0)))), 1.0, 0.0, 1.0)))), false ? _GLF_FUZZED(vec2(6955.9776, -8.0)) : vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0), mat2x4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8780.8468)), float(1.0), bool(true))), 1.0, 1.0)), 1.0)))), 1.0, 0.0, 1.0))))))))).x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           for(int _injected_loop_counter = ((0 | 0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-51.98) : 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(1, ~ (~ (1)))), int(1)), 1)), clamp(int(ivec2(_GLF_IDENTITY(int(1), int(1)), 1)), int(ivec2(_GLF_IDENTITY(int(1), int(1)), 1)), int(ivec2(_GLF_IDENTITY(int(1), int(1)), 1)))))) | 0))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
            {
             _GLF_IDENTITY(GLF_merged2_0_2_55_2_1_13GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizenum_workgroup.xy.y = workgroup_size, (GLF_merged2_0_2_55_2_1_13GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizenum_workgroup.xy.y = workgroup_size) * 1u);
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))))));
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) >> 0))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * _GLF_IDENTITY((_GLF_IDENTITY((0), ((0)) >> 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) + ((_GLF_IDENTITY((0), ((0)) >> 0)))))))))) * 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bvec3(_GLF_IDENTITY(false || (true), ! (! (false || (true)))), false, false))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           else
            {
            }
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              return;
             if(_GLF_DEAD(false))
              continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))));
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true, true), false))))))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                 if(_GLF_DEAD(false))
                  continue;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                continue;
              }
            }
           else
            {
            }
           return;
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))), true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))), true))), true))), true && (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))), true))), true)))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec2(_GLF_WRAPPED_LOOP(false), false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec2(_GLF_WRAPPED_LOOP(false), false))))))));
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, 0)), (_GLF_IDENTITY(int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, 0)), int(ivec2(int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, 0)), 0)))) >> 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) | 1)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y)))) || false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             return;
            }
          }
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      return;
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      continue;
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               return;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(3), int(3))) | (0 >> _GLF_IDENTITY(int(0), int(0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) && true)))
          {
          }
         else
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
            {
             return;
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
              continue;
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))), bool(bvec3(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))), false, true)))))))))))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          break;
        }
       if(_GLF_DEAD(false))
        return;
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 3.1))), float(injectionSwitch.x), bool(true)))) / 1.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), (true ? 1.0 * (injectionSwitch.x) : _GLF_FUZZED(-304.103)))))), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED((injectionSwitch - -5.6)) : vec2(1.0, 1.0))))))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y : _GLF_FUZZED(6456.3595))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, (false ? _GLF_FUZZED(6.8) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)))), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(97.48)), bool(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))), min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))))))) * _GLF_ONE(1.0, injectionSwitch.y)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), (_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), mix(float(_GLF_FUZZED(-453.768)), float(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), max(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), bool(true)))) * 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), mix(float(_GLF_FUZZED(-2.6)), float(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), bool(true))))))))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(2917.5686)), bool(false))), 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)))), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(distance(vec2(-6155.7737, -575.540), injectionSwitch)))), 1.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6723.7095)), vec2(_GLF_FUZZED(68.63), (injectionSwitch)[1]), bvec2(false, true))).y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y)), injectionSwitch.y)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(sqrt(injectionSwitch), (_GLF_IDENTITY(sqrt(injectionSwitch), cos(vec2(0.0, 0.0)) * (sqrt(injectionSwitch)))) + log(vec2(1.0, 1.0)))) : injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).y, mix(float(_GLF_FUZZED(9.1)), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(float(mat4x2(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), (_GLF_IDENTITY(float(mat4x2(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), 1.0 * (float(mat4x2(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) / 1.0)))), float(_GLF_FUZZED(309.992)), bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0))))), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(2917.5686)), bool(false))), 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), sin(0.0), 1.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y)), injectionSwitch.y)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), max(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), float(mat4x2(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), float(_GLF_FUZZED(309.992)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1])), injectionSwitch)).y)), injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))) || false)) || false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))) || false)) || false), true, true)))))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0))))), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(2917.5686)), bool(false))), 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (true ? length(normalize(vec2(1.0, 1.0))) : _GLF_FUZZED(-4.7)))), float(_GLF_FUZZED(734.279)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), sin(0.0), 1.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_FUZZED(-62.83)), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y)), injectionSwitch.y)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), max(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) + length(sin(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), float(mat4x2(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (max(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), float(_GLF_FUZZED(309.992)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])), injectionSwitch)).y)), injectionSwitch.y)))))))))))))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0))))), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(2917.5686)), bool(false))), 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), sin(0.0), 1.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y)), injectionSwitch.y)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), max(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), float(mat4x2(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), float(_GLF_FUZZED(309.992)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1])), injectionSwitch)).y)), injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))) || false)) || false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))) || false)) || false), true, true)))))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0))))), 1.0, abs(1.0), abs(0.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(2917.5686)), bool(false))), 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (true ? length(normalize(vec2(1.0, 1.0))) : _GLF_FUZZED(-4.7)))), float(_GLF_FUZZED(734.279)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), sin(0.0), 1.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_FUZZED(-62.83)), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y)), injectionSwitch.y)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), max(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) + length(sin(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), float(mat4x2(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (max(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), float(_GLF_FUZZED(309.992)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])), injectionSwitch)).y)), injectionSwitch.y)))))))))))))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))))))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true)))))))), (injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.z = _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id));
 uint workgroup_base = GLF_merged2_0_2_55_2_1_13GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizenum_workgroup.xy.y * GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_id)) * _GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_size, (_GLF_struct_replacement_3.subgroup_size) ^ 0u)) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size) | (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size)), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * _GLF_struct_replacement_3.subgroup_size))))), _GLF_IDENTITY(0u | (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_size, uint(uvec4(_GLF_struct_replacement_3.subgroup_size, 1u, 1u, 0u)))), (false ? _GLF_FUZZED(num_workgroup) : 0u | (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size)))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(packUnorm2x16(injectionSwitch)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(packUnorm2x16(injectionSwitch)), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(packUnorm2x16(injectionSwitch)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(packUnorm2x16(injectionSwitch)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(packUnorm2x16(injectionSwitch))))) - 0u), (_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(packUnorm2x16(injectionSwitch)), (_GLF_FUZZED(packUnorm2x16(injectionSwitch))) ^ 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3.subgroup_size, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_struct_replacement_3.subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3.subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * _GLF_struct_replacement_3.subgroup_size)), (~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3.subgroup_size, ~ (~ (subgroup_id * _GLF_struct_replacement_3.subgroup_size)))))) << 0u))) - _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_3.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_3.subgroup_size)) | (~ (subgroup_id * _GLF_struct_replacement_3.subgroup_size)))))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u | (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size) >> 0u), 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * _GLF_struct_replacement_3.subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size, 0u | (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size, 0u | (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size))), 0u + (clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_id * workgroup_id)))) * _GLF_struct_replacement_3.subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size, 0u | (workgroup_base + _GLF_IDENTITY(subgroup_id, (0u | 0u) ^ (subgroup_id)) * _GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_size, min(_GLF_struct_replacement_3.subgroup_size, _GLF_struct_replacement_3.subgroup_size)))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) >> 0u)), 0u + ((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) >> 0u))))) * _GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_size, (_GLF_struct_replacement_3.subgroup_size) * 1u)))), 0u | (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size)))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3.subgroup_size, (subgroup_id * _GLF_struct_replacement_3.subgroup_size) >> 0u), _GLF_IDENTITY(0u | (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size), min(0u | (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size), _GLF_IDENTITY(0u | (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size), min(0u | (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size), _GLF_IDENTITY(0u | (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size), (0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size) - 0u))))) ^ 0u)))))))) + GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size, 0u | (workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size)) + GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  return;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) | 0)) | (_GLF_IDENTITY(5, ~ (~ (5)))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
     GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.y = _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(virtual_gid)), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(virtual_gid), uint(uvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(virtual_gid), 1u))))) ^ 0u));
    }
  }
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_7(_GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0)), transpose(transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? transpose(mat4(1.0)) : _GLF_FUZZED(mat4(51.02, -0.0, 3.8, -8524.5368, -9.1, 174.698, 8.5, 1794.0863, -1985.2616, -0.3, 1.7, -73.01, 4743.5007, -221.878, -3.2, -146.605))))))))), _GLF_struct_4(mat4(1.0), bvec4(true), bvec3(true), mat3(1.0), mat3(1.0), 1), _GLF_struct_5(1.0, 1u), _GLF_struct_6(ivec3(1), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) / 1u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))) : _GLF_FUZZED((uvec2(4602u, 66404u) / uvec2(170955u, 132036u))))), vec3(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.4)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))), 0.0)))), 1), mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -4532.4898))), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(true)))), uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u, max((_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u)))) >> 0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u)), ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) >> 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u)) >> 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u)) >> 0u, ~ (~ ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u)) >> 0u)))))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u)) >> 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) * 1u), (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u)) >> 0u, max((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u)) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u))), (((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u)))) - (0u ^ 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u)) : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_struct_9(vec2(1.0), _GLF_struct_8(mat4(1.0), uvec2(1u), mat2(1.0), uvec3(1u), vec2(1.0), uvec3(1u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u ^ 0u) ^ (subgroup_id), ~ (_GLF_IDENTITY(~ ((0u ^ 0u) ^ (subgroup_id)), 0u + (~ ((0u ^ 0u) ^ (subgroup_id))))))), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))), 0u | (subgroup_id)) * _GLF_struct_replacement_3.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u))) : _GLF_FUZZED(workgroup_id)))) ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))), _GLF_IDENTITY(0u | (subgroup_id), (_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 1u, 1u))), (subgroup_id), (subgroup_id))), max(0u | (subgroup_id), 0u | (subgroup_id)))) >> 0u)) * _GLF_struct_replacement_3.subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED((subgroup_id ^ workgroup_base)) : _GLF_FUZZED(num_workgroup))), max(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) ^ 0u))) : subgroup_id)))), _GLF_IDENTITY(0u | (subgroup_id), max(0u | (subgroup_id), _GLF_IDENTITY(0u | (subgroup_id), max(_GLF_IDENTITY(0u | (subgroup_id), (0u | (subgroup_id)) | 0u), 0u | (subgroup_id)))))) * _GLF_struct_replacement_3.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))), 0u | (subgroup_id)) * _GLF_struct_replacement_3.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)) ^ 0u) ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))), 0u | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | (_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) + 0u)) >> 0u)))) * _GLF_struct_replacement_3.subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))), 0u | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) >> 0u))) * _GLF_struct_replacement_3.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))), 0u | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) >> 0u))) * _GLF_struct_replacement_3.subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))), 0u | (subgroup_id)) * _GLF_struct_replacement_3.subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) + 0u)) : subgroup_id)))), 0u | (subgroup_id)) * _GLF_struct_replacement_3.subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_id), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_id), 0u | ((false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))) << (1u ^ 1u))))), 0u | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) >> 0u))) * _GLF_struct_replacement_3.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_id), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_id), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_id), min((false ? _GLF_FUZZED(num_workgroup) : subgroup_id), (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_id), max((false ? _GLF_FUZZED(num_workgroup) : subgroup_id), (false ? _GLF_FUZZED(num_workgroup) : subgroup_id))))), (false ? _GLF_FUZZED(num_workgroup) : subgroup_id), (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))))), 0u | (subgroup_id)) * _GLF_struct_replacement_3.subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))), 0u | (subgroup_id)) * _GLF_struct_replacement_3.subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)))), 0u | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) - 0u)) >> 0u))) * _GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_size, (_GLF_struct_replacement_3.subgroup_size) | (_GLF_struct_replacement_3.subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)))), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))) : subgroup_id)))), 0u | (subgroup_id)) * _GLF_struct_replacement_3.subgroup_size))))))) * 1u) + ((GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x + _GLF_IDENTITY(1, 0 + (1))) % _GLF_struct_replacement_3.subgroup_size), vec3(1.0), mat2(1.0), _GLF_struct_14(_GLF_struct_10(_GLF_IDENTITY(ivec3(1), (true ? _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) << ivec3(0, 0, 0))) | (ivec3(1))) : _GLF_FUZZED(ivec3(-88829, -50476, -82126)))), _GLF_IDENTITY(ivec3(1), clamp(ivec3(1), _GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1))), ivec3(1))), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.1)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)), true && ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)))))))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat3(0.9, -4300.5461, _GLF_IDENTITY(-3079.4590, (false ? _GLF_FUZZED(4999.6753) : -3079.4590)), 620.353, -1.1, 2.0, 5.0, -62.31, 9.2)) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) * mat3(1.0)))), 1.0, 1.0, 1.0, 1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), ((false ? _GLF_FUZZED(mat3(0.9, -4300.5461, -3079.4590, 620.353, -1.1, 2.0, 5.0, -62.31, 9.2)) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY((mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3((mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-99.86, -205.868, -2.6, 81.13, 0.9, -7887.8347, -450.658, -7832.8214, 8134.8662)) : mat3(mat3((mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(512.742, 1583.2428, 2264.6499, 5238.8212, 30.80, 76.19, 30.67, -49.36, -8.7)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(512.742, 1583.2428, 2264.6499, 5238.8212, 30.80, 76.19, 30.67, -49.36, -8.7)))), (_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(512.742, 1583.2428, 2264.6499, 5238.8212, 30.80, 76.19, 30.67, -49.36, -8.7))))) * mat3(1.0)) : _GLF_FUZZED(mat3(77.01, 7.1, 4.2, 767.127, 9.1, 6499.9142, -101.917, -0.7, 6.3)))), (mat3(1.0)) / _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.9, -4300.5461, -3079.4590, 620.353, -1.1, 2.0, 5.0, -62.31, 9.2)) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0), mat3(mat4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, determinant(mat3(1.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), (float(vec2(1.0, determinant(mat3(1.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))) / 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), (mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(mat3(mat4(transpose(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.9, -4300.5461, -3079.4590, 620.353, -1.1, 2.0, 5.0, -62.31, 9.2)) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(_GLF_FUZZED(-9733.8306)), float(clamp(1.0, 1.0, 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), mat3(mat4(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(416.836)), float(1.0), bool(true))) : _GLF_FUZZED(3.5)))), min(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(416.836)), float(1.0), bool(true))) : _GLF_FUZZED(3.5)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(determinant(mat4(-9.2, 9.0, 3.5, -3099.7700, 2961.5085, -101.107, 79.53, -743.139, 2.9, 1.8, 53.68, 5.2, 6150.4134, -7.0, 6.6, 0.9))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(416.836)), float(1.0), bool(true))) : _GLF_FUZZED(3.5))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), (mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(inversesqrt(-2809.6993)))), 1.0)), 1.0, 1.0, 1.0, 1.0)) - mat3(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-9671.4400), min(_GLF_FUZZED(-9671.4400), _GLF_FUZZED(-9671.4400))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))), (false ? _GLF_FUZZED(mat3(4.4, -9.5, _GLF_IDENTITY(8.7, min(_GLF_IDENTITY(8.7, (true ? 8.7 : _GLF_FUZZED(-527.795))), 8.7)), _GLF_IDENTITY(-6.2, (false ? _GLF_FUZZED(-3.5) : _GLF_IDENTITY(-6.2, max(_GLF_IDENTITY(-6.2, 1.0 * (-6.2)), -6.2)))), 8725.6562, -531.616, -7.3, -9.9, -909.794)) : mat3(_GLF_IDENTITY(mat4(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, length(vec2(0.0, 0.0)) + (1.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat3(0.9, -4300.5461, -3079.4590, 620.353, -1.1, 2.0, 5.0, -62.31, 9.2), (mat3(0.9, -4300.5461, -3079.4590, 620.353, -1.1, 2.0, 5.0, -62.31, 9.2)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1329.0045))))), 1.0, 1.0, 1.0, 1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))))), mat3(mat3(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, length(vec2(0.0, 0.0)) + (1.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.9, -4300.5461, -3079.4590, 620.353, -1.1, 2.0, 5.0, -62.31, 9.2)) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1329.0045))))), 1.0, 1.0, 1.0, 1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))))), (mat4(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, length(vec2(0.0, 0.0)) + (1.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat3(0.9, -4300.5461, -3079.4590, 620.353, -1.1, 2.0, 5.0, -62.31, 9.2), (mat3(0.9, -4300.5461, -3079.4590, 620.353, -1.1, 2.0, 5.0, -62.31, 9.2)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1329.0045))))), 1.0, 1.0, 1.0, 1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))))), mat3(mat3(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, length(vec2(0.0, 0.0)) + (1.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.9, -4300.5461, -3079.4590, 620.353, -1.1, 2.0, 5.0, -62.31, 9.2)) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1329.0045))))), 1.0, 1.0, 1.0, 1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(mat3(mat4x3(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1861.3977)), bool(false))), 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.9, -4300.5461, -3079.4590, 620.353, _GLF_IDENTITY(-1.1, min(-1.1, -1.1)), 2.0, 5.0, -62.31, 9.2)) : _GLF_IDENTITY(mat3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.3)), float(1.0), bool(true))), 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat3(0.9, -4300.5461, -3079.4590, 620.353, -1.1, 2.0, 5.0, -62.31, 9.2), transpose(transpose(mat3(0.9, -4300.5461, -3079.4590, 620.353, -1.1, 2.0, 5.0, -62.31, 9.2))))) : _GLF_IDENTITY(mat3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.3)), float(1.0), bool(true))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.3)), float(1.0), bool(true))))), 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), mat3(mat4(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.9, -4300.5461, -3079.4590, 620.353, -1.1, 2.0, 5.0, -62.31, 9.2)) : _GLF_IDENTITY(mat3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.9) : 1.0)), 1.0)), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.3)), float(1.0), bool(true))), 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))))))))), _GLF_IDENTITY(mat3(mat3x4(mat3(mat4x3(transpose(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.9, -4300.5461, -3079.4590, 620.353, -1.1, 2.0, 5.0, _GLF_IDENTITY(-62.31, (-62.31) - length(vec2(0.0, 0.0))), 9.2)) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.6) : 1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 1.0, 1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4394.0657)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0))))))))))))), mat3(mat3(mat3(mat3x4(mat3(mat4x3(transpose(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(0.9, -4300.5461, -3079.4590, 620.353, -1.1, 2.0, 5.0, _GLF_IDENTITY(-62.31, (-62.31) - length(vec2(0.0, 0.0))), 9.2)) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.6) : 1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 1.0, 1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4394.0657)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0)))))))))))))))))))), vec4(1.0)), _GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1))), _GLF_struct_11(true, mat2x4(1.0), bvec4(_GLF_IDENTITY(true, (true) && true)), vec2(1.0), vec2(1.0), mat4x3(1.0)), mat3x4(1.0), _GLF_struct_12(bvec3(true), mat4x2(1.0), 1.0), _GLF_struct_13(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((ivec4(1)) << (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(2), ivec4(2))), min((ivec4(1)) << (ivec4(0, 0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0)) : _GLF_FUZZED(13925))), 0) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec4(2), (false ? _GLF_FUZZED(ivec4(-12843, -20221, -48382, -29850)) : _GLF_IDENTITY(_GLF_IDENTITY(ivec4(2), (true ? ivec4(2) : _GLF_FUZZED(ivec4(54518, 94896, 96374, -43354)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(2), (true ? ivec4(2) : _GLF_FUZZED(ivec4(54518, 94896, 96374, -43354)))), (_GLF_IDENTITY(ivec4(2), (true ? ivec4(2) : _GLF_FUZZED(ivec4(54518, 94896, 96374, -43354))))) | (_GLF_IDENTITY(ivec4(2), (true ? ivec4(2) : _GLF_FUZZED(ivec4(54518, 94896, 96374, -43354)))))), _GLF_IDENTITY(ivec4(2), (true ? ivec4(2) : _GLF_FUZZED(ivec4(54518, 94896, 96374, -43354)))), _GLF_IDENTITY(ivec4(2), (true ? ivec4(2) : _GLF_FUZZED(ivec4(54518, 94896, 96374, -43354)))))))), ivec4(2))), (ivec4(1)) << (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(2), ivec4(2)))))), vec4(1.0))), uvec3(1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     else
      {
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))) && true); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
        break;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      continue;
     continue;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0))), length(vec4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(0.0, 0.0, tan(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, length(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat4x3(0.0, 0.0, tan(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, length(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-795.875)), float(float(_GLF_IDENTITY(mat4x3(0.0, 0.0, tan(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, length(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat4x3(0.0, 0.0, tan(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, length(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(true)))), 0.0, 0.0)), 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(log(1.0), (log(1.0)) * 1.0), 1.0), vec2(1.0, 0.0)), dot(vec2(log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0), vec2(1.0, 0.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - sin(vec2(0.0, 0.0)))).x, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.2))), float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(log(1.0), 1.0), clamp(vec2(log(1.0), 1.0), vec2(log(1.0), 1.0), vec2(log(1.0), 1.0))), vec2(1.0, 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0))) : _GLF_FUZZED(-3435.4536))))) > injectionSwitch.y))))
    continue;
   GLF_merged2_0_2_55_2_1_13GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizenum_workgroup.xy.x = _GLF_struct_replacement_15.next_virtual_gid;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))
    break;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, log(1.0), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.9)), bool(false))))), (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) - 0.0)), vec3(0.0, 1.0, 0.0))), 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0), vec3(0.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-34.48) : dot(vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, abs(0.0)), (mat4x3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-34.48) : dot(vec3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, abs(0.0))) - mat4x3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat3(0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-738.610, 9.4)) : _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mat2(1.0) * (normalize(vec2(1.0, 1.0)))))))), 0.0)), dot(vec2(1.0, abs(0.0)), vec2(round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))), normalize(vec2(1.0, 1.0)))))), 0.0)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0) + (mat4(injectionSwitch.x, log(1.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(316.912)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-389.859) : 0.0))), bool(true))), injectionSwitch.x), float(_GLF_IDENTITY(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, abs(1.0)), mat2x3(mat2x4(_GLF_IDENTITY(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, abs(1.0)), (true ? mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x3(3.9, -34.72, 279.372, 3.2, 15.33, -2.9))))))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + sin(0.0))) - 0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec3(0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), min(tan(0.0), _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0)), (float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 1.0, 0.0))) - 0.0))) - tan(0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0), _GLF_IDENTITY((vec3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0)), (float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))) - 0.0), 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0))))) - 0.0))) - tan(0.0)), 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(trunc(vec3(52.35, 55.61, -13.08))) : _GLF_IDENTITY((vec3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0)), (float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0))) - 0.0))) - tan(0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0)), 1.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec3(_GLF_FUZZED(3159.5217), _GLF_FUZZED(6.7), _GLF_FUZZED(-8552.1107)), vec3(((vec3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), mat3(1.0) * (vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0)), (float(_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0), mat4(1.0) * (mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0))))) - 0.0))) - tan(0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[0], ((vec3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0)), (float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0))) - 0.0))) - tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))))), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[1], ((vec3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0)), _GLF_IDENTITY((float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0))) - 0.0, mix(float(_GLF_FUZZED(53.49)), float((float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0))) - 0.0), bool(true)))))) - tan(_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(cos(vec2(0.0, 0.0)))))))), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[2]), bvec3(true, true, true)))))), vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.7)), bool(false))))), 0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, abs(0.0)), max(_GLF_IDENTITY(vec2(1.0, abs(0.0)), (vec2(1.0, abs(0.0))) - vec2(0.0, 0.0)), vec2(1.0, abs(0.0)))), vec2(round(_GLF_IDENTITY(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) - 0.0)))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_FUZZED(257.584)), float(length(normalize(vec2(1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(3.5), _GLF_IDENTITY(float(mat3x4(true ? _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_FUZZED(257.584)), float(length(normalize(vec2(1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(3.5), 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, log(1.0))), dot(vec4(tan(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, log(1.0)))), 1.0)), min(float(mat3x4(true ? _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_FUZZED(257.584)), float(length(normalize(vec2(1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(3.5), 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, log(1.0))), dot(vec4(tan(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, log(1.0)))), 1.0)), _GLF_IDENTITY(float(mat3x4(true ? _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_FUZZED(257.584)), float(length(normalize(vec2(1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(3.5), 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, log(1.0))), dot(vec4(tan(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, log(1.0)))), 1.0)), mix(float(_GLF_FUZZED(449.142)), float(float(mat3x4(true ? _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_FUZZED(257.584)), float(length(normalize(vec2(1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(3.5), 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, log(1.0))), dot(vec4(tan(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, log(1.0)))), 1.0))), bool(true))))))))), 0.0)), dot(vec2(1.0, abs(0.0)), vec2(round(length(normalize(vec2(1.0, 1.0)))), 0.0)))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     break;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.9, -7018.1835)))).y, injectionSwitch.y))))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))) && true)) || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
  }
 atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, (GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id) >> uvec3(0u, 0u, 0u)).y], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-67021)))), (uint(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-67021))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))) << 0)), (false ? _GLF_FUZZED(-39262) : ~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ((_GLF_IDENTITY(4, (4) | (4)))) | 0) | (_GLF_IDENTITY(4, (4) / 1))), 0 ^ _GLF_IDENTITY((4), ((4)) | ((4))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))) | 0, (((_GLF_IDENTITY(4, 0 ^ (4)))) | 0) << 0), (((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_IDENTITY(4, 0 ^ (4))) - 0))) | 0) - 0)) << 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))), min((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4)))))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))) << 0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-39262), min(_GLF_FUZZED(-39262), _GLF_IDENTITY(_GLF_FUZZED(-39262), ~ (~ (_GLF_FUZZED(-39262)))))) : ~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))) | 0, (((_GLF_IDENTITY(4, 0 ^ (4)))) | 0) - (0 & 78644))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))), 1 * (_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))), int(_GLF_IDENTITY(ivec3(((_GLF_IDENTITY(4, 0 ^ (4)))), 1, 0), min(ivec3(((_GLF_IDENTITY(4, 0 ^ (4)))), 1, 0), ivec3(((_GLF_IDENTITY(4, 0 ^ (4)))), 1, 0))))))) | 0, (((_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (_GLF_IDENTITY(0 ^ (4), max(0 ^ (4), 0 ^ (4)))) - 0)))) | 0) - (0 & _GLF_IDENTITY(78644, (78644) ^ 0))))) / 1))), (((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), clamp(0 ^ (4), 0 ^ (4), 0 ^ (4)))), (_GLF_IDENTITY(4, 0 ^ (4))) - 0))) | 0) - 0)) << 0)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))) << 0)), (false ? _GLF_FUZZED(-39262) : ~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ((_GLF_IDENTITY(4, (4) | (4)))) | 0) | (_GLF_IDENTITY(4, (4) / 1))), 0 ^ _GLF_IDENTITY((4), ((4)) | ((4))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))) | 0, (((_GLF_IDENTITY(4, 0 ^ (4)))) | 0) << 0), (((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_IDENTITY(4, 0 ^ (4))) - 0))) | 0) - 0)) << 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))), min((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4)))))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))) << 0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-39262), min(_GLF_FUZZED(-39262), _GLF_IDENTITY(_GLF_FUZZED(-39262), ~ (~ (_GLF_FUZZED(-39262)))))) : ~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))) | 0, (((_GLF_IDENTITY(4, 0 ^ (4)))) | 0) - (0 & 78644))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))), 1 * (_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))), int(_GLF_IDENTITY(ivec3(((_GLF_IDENTITY(4, 0 ^ (4)))), 1, 0), min(ivec3(((_GLF_IDENTITY(4, 0 ^ (4)))), 1, 0), ivec3(((_GLF_IDENTITY(4, 0 ^ (4)))), 1, 0))))))) | 0, (((_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (_GLF_IDENTITY(0 ^ (4), max(0 ^ (4), 0 ^ (4)))) - 0)))) | 0) - (0 & _GLF_IDENTITY(78644, (78644) ^ 0))))) / 1))), (((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), clamp(0 ^ (4), 0 ^ (4), 0 ^ (4)))), (_GLF_IDENTITY(4, 0 ^ (4))) - 0))) | 0) - 0)) << 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))) << 0)), (false ? _GLF_FUZZED(-39262) : ~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ((_GLF_IDENTITY(4, (4) | (4)))) | 0) | (_GLF_IDENTITY(4, (4) / 1))), 0 ^ _GLF_IDENTITY((4), ((4)) | ((4))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))) | 0, (((_GLF_IDENTITY(4, 0 ^ (4)))) | 0) << 0), (((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_IDENTITY(4, 0 ^ (4))) - 0))) | 0) - 0)) << 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))), min((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4)))))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))) << 0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-39262), min(_GLF_FUZZED(-39262), _GLF_IDENTITY(_GLF_FUZZED(-39262), ~ (~ (_GLF_FUZZED(-39262)))))) : ~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))) | 0, (((_GLF_IDENTITY(4, 0 ^ (4)))) | 0) - (0 & 78644))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))), 1 * (_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))), int(_GLF_IDENTITY(ivec3(((_GLF_IDENTITY(4, 0 ^ (4)))), 1, 0), min(ivec3(((_GLF_IDENTITY(4, 0 ^ (4)))), 1, 0), ivec3(((_GLF_IDENTITY(4, 0 ^ (4)))), 1, 0))))))) | 0, (((_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (_GLF_IDENTITY(0 ^ (4), max(0 ^ (4), 0 ^ (4)))) - 0)))) | 0) - (0 & _GLF_IDENTITY(78644, (78644) ^ 0))))) / 1))), (((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), clamp(0 ^ (4), 0 ^ (4), 0 ^ (4)))), (_GLF_IDENTITY(4, 0 ^ (4))) - 0))) | 0) - 0)) << 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))) << 0)), (false ? _GLF_FUZZED(-39262) : ~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ((_GLF_IDENTITY(4, (4) | (4)))) | 0) | (_GLF_IDENTITY(4, (4) / 1))), 0 ^ _GLF_IDENTITY((4), ((4)) | ((4))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))) | 0, (((_GLF_IDENTITY(4, 0 ^ (4)))) | 0) << 0), (((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_IDENTITY(4, 0 ^ (4))) - 0))) | 0) - 0)) << 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))), min((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4)))))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))) << 0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-39262), min(_GLF_FUZZED(-39262), _GLF_IDENTITY(_GLF_FUZZED(-39262), ~ (~ (_GLF_FUZZED(-39262)))))) : ~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))) | 0, (((_GLF_IDENTITY(4, 0 ^ (4)))) | 0) - (0 & 78644))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))), 1 * (_GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4)))), int(_GLF_IDENTITY(ivec3(((_GLF_IDENTITY(4, 0 ^ (4)))), 1, 0), min(ivec3(((_GLF_IDENTITY(4, 0 ^ (4)))), 1, 0), ivec3(((_GLF_IDENTITY(4, 0 ^ (4)))), 1, 0))))))) | 0, (((_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (_GLF_IDENTITY(0 ^ (4), max(0 ^ (4), 0 ^ (4)))) - 0)))) | 0) - (0 & _GLF_IDENTITY(78644, (78644) ^ 0))))) / 1))), (((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), clamp(0 ^ (4), 0 ^ (4), 0 ^ (4)))), (_GLF_IDENTITY(4, 0 ^ (4))) - 0))) | 0) - 0)) << 0)))))))))), 64, 4);
 do
  {
   atomicStore(buf[GLF_merged2_0_2_55_2_1_13GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_sizenum_workgroup.xy.x], uint(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(32148) : 2))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY((64) << 0, ((64) << 0) | _GLF_IDENTITY(((64) << _GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(-63176))))), (((64) << 0)) + 0))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY((64) << 0, ((64) << 0) | _GLF_IDENTITY(((64) << _GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(-63176))))), (((64) << 0)) + 0))), 1))), int(int(64))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), 0.0 + (float(float(injectionSwitch.x))))) > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true, false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      continue;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
     if(_GLF_DEAD(false))
      return;
     break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-6.0)), bool(false)))))))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(4), int(4)))) ^ 0) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    {
     if(_GLF_DEAD(false))
      continue;
     continue;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (98759 & 0)); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) || false, ! (_GLF_IDENTITY(! ((bool(bvec2(true, _GLF_IDENTITY(true, false || (true))))) || false), (! ((bool(bvec2(true, true))) || false)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        break;
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
