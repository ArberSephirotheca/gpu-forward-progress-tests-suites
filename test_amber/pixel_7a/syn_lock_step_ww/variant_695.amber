#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true)) && _GLF_IDENTITY(true, true && (true)))))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false))) || false)))));
      }
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))));
  }
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))
      break;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
      return;
     return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-96.04), _GLF_FUZZED(-825.908)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-96.04), _GLF_FUZZED(-825.908)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-96.04), _GLF_FUZZED(-825.908)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))).y))) && true)))
  return;
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y = _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false))))))), true && (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), false || (! (false))))), (! (! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), false || ((false))), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((false), false || ((false))), true, false, true)), true, true))))) || false)))))) || false)))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = (1 & int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7226.5092))), 0.0, 0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0)))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((- 3265.3783)) : 0.0)), 1.0, 1.0, 0.0), mat2x3(mat2x3(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 0.0, exp(0.0), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, exp(0.0), 1.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0))))))))).y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true)), ! (! (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true)), true, true, false)), ! (! (bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true)), true, true, false)))))))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED((- 3265.3783)) : 0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(false ? _GLF_FUZZED((- 3265.3783)) : 0.0, mix(float(_GLF_FUZZED(-6.8)), float(false ? _GLF_FUZZED((- 3265.3783)) : 0.0), bool(true))))))), 1.0, 1.0, 0.0), mat2x3(mat2x3(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 0.0, exp(0.0), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-215.648, -672.806, -911.268), (vec3(-85.57, 7.7, 74.65) / vec3(-4.1, 259.810, -6959.0536)))))), 0.0, _GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), exp(0.0))), 1.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.0))), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 1.0)))))), 0.0, 1.0, 1.0, 0.0))))))))).y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true)), ! (! (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false, true)))), true)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false, false)))))), true, false)), _GLF_IDENTITY(! (! (bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true)), true, true, false)))), false || (! (! (bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true)), true, true, false))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED((- 3265.3783)) : 0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(false ? _GLF_FUZZED((- 3265.3783)) : 0.0, mix(float(_GLF_FUZZED(-6.8)), float(false ? _GLF_FUZZED((- 3265.3783)) : 0.0), bool(true))))))), 1.0, 1.0, 0.0), mat2x3(mat2x3(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 0.0, exp(0.0), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-215.648, -672.806, -911.268), (vec3(-85.57, 7.7, 74.65) / vec3(-4.1, 259.810, -6959.0536)))))), 0.0, _GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), exp(0.0))), 1.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.0))), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 1.0)))))), 0.0, 1.0, 1.0, 0.0))))))))).y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true)), ! (! (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false, true)))), true)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false, false)))))), true, false)), _GLF_IDENTITY(! (! (bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true)), true, true, false)))), false || (! (! (bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true)), true, true, false)))))))))))))))))))))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 continue;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
                  break;
                }
               break;
              }
             for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.4))), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(-9376.1687), _GLF_FUZZED(8.8)), bvec2(false, false))) : _GLF_FUZZED(refract(vec2(_GLF_IDENTITY(-140.990, min(_GLF_IDENTITY(-140.990, (true ? -140.990 : _GLF_FUZZED(acos(5.0)))), -140.990)), -24.36), injectionSwitch, -7.5)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(injectionSwitch) : min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))).x) : _GLF_FUZZED(-3.8)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++))) / 1), 1 * (_injected_loop_counter ++))))))
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = num_workgroup;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))), (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false)) && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false), (_GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(604.748) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))))).y)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) || false)) || false)) || false)) && (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.1)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)) || false)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))) || false))))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)).x, max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)).x) * 1u)));
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z = workgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uint(gl_WorkGroupID.x)), (uint(uint(gl_WorkGroupID.x))) - 0u))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_id)) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z * GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y, max(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z * GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y, GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y, clamp(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y = workgroup_base;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), _GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true)))) || false), _GLF_IDENTITY(! (! ((false) && true)), bool(bvec2(! (! ((false) && true)), true))))) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))));
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, uvec3(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[0], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[1], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(3), int(3))) | (2))])).y) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(usubBorrow(workgroup_id, atomicAnd(subgroup_size, subgroup_size), subgroup_size)) : 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, uvec3(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[0], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[1], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(3), int(3))) | (2))])).y, max(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, uvec3(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[0], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[1], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(3), int(3))) | (2))])).y, _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, uvec3(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[0], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[1], GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size[_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(3), int(3))) | (2))])).y))) + _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(usubBorrow(workgroup_id, atomicAnd(subgroup_size, subgroup_size), subgroup_size)) : 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(usubBorrow(workgroup_id, atomicAnd(subgroup_size, subgroup_size), subgroup_size)) : 0u)), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(usubBorrow(workgroup_id, atomicAnd(subgroup_size, subgroup_size), subgroup_size)) : 0u))) - 0u)) | 0u)) / 1u), (_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(66680u))), (_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u, 0u ^ ((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u))) | (_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u, clamp((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) << 0u, (_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) << 0u, ~ (~ ((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) << 0u)))) * 1u))) + 0u, _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y), ((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y)) ^ 0u) + 0u, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y, uint(uint(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y)))) + 0u))))) >> (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), min(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), clamp(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) - 0u), ~ (~ (0u ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec4(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u, 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u, _GLF_IDENTITY(((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id)))), min(_GLF_IDENTITY(((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id)))), (((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id))))) ^ 0u), ((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id)))))) ^ 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u, ~ (~ ((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u))), ((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u) ^ 0u), _GLF_IDENTITY(max(_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u, ((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u) ^ 0u), _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u, ((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u) ^ 0u)), max(max(_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u, ((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u) ^ 0u), _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u, ((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u) ^ 0u)), max(_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u, ((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u) ^ 0u), _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u, ((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u) ^ 0u))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) - (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << (1u ^ 1u)), max(_GLF_IDENTITY(0u, (0u) << (1u ^ 1u)), _GLF_IDENTITY(0u, (0u) << (1u ^ 1u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) >> 0u)) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) / 1u)))) | (5u))), uint(5u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) >> _GLF_IDENTITY(0u, min(0u, 0u)))) ^ 0u)) | (5u))), _GLF_IDENTITY(uint(5u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))))))))) + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   do
    {
     _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = _GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((mix(subgroup_local_id, _GLF_IDENTITY(num_workgroup, (num_workgroup) * (1u ^ 0u)), _GLF_IDENTITY(false, ! (! (false)))) + 123273u)) : virtual_gid)), _GLF_IDENTITY(0u ^ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = _GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)))), (true ? 0u ^ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid) : _GLF_FUZZED(subgroup_id))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint next_virtual_gid = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, (true ? GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id))).y + 1) % GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, 1u * ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, ~ (~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y))), GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y)))) + 1) % GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x)));
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   do
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-15699, (_GLF_IDENTITY(-15699, clamp(-15699, _GLF_IDENTITY(-15699, clamp(-15699, -15699, -15699)), _GLF_IDENTITY(-15699, (-15699) / 1)))) >> (0 >> _GLF_IDENTITY(int(4), int(4))))) : 1, min(false ? _GLF_FUZZED(_GLF_IDENTITY(-15699, (_GLF_IDENTITY(-15699, clamp(-15699, _GLF_IDENTITY(-15699, clamp(-15699, -15699, -15699)), _GLF_IDENTITY(-15699, (-15699) / 1)))) >> (0 >> _GLF_IDENTITY(int(4), int(4))))) : 1, false ? _GLF_FUZZED(_GLF_IDENTITY(-15699, (_GLF_IDENTITY(-15699, clamp(-15699, _GLF_IDENTITY(-15699, clamp(-15699, -15699, -15699)), _GLF_IDENTITY(-15699, (-15699) / 1)))) >> (0 >> _GLF_IDENTITY(int(4), int(4))))) : 1))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0), 0 | (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0)))).y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 ^ (1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.9), _GLF_FUZZED(-406.039)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id) | _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id), uvec2(0u, 0u) ^ ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)))).x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 | 1), _GLF_IDENTITY(int(ivec4((1 | 1), 1, 0, 1)), clamp(int(ivec4((1 | 1), 1, 0, 1)), int(ivec4((1 | 1), 1, 0, 1)), int(ivec4((1 | _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))), 1, 0, 1)))))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), _GLF_IDENTITY(min(1, 1), (min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))), 1)) | (_GLF_IDENTITY(min(1, 1), _GLF_IDENTITY((min(1, 1)), ((min(1, 1))) / 1) / 1))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y)))))), float(_GLF_FUZZED(_GLF_IDENTITY(-16.07, min(-16.07, -16.07)))), bool(false))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-16.07)), bool(false))))), 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), 1.0, 1.0, abs(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(199.821)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), (false ? _GLF_FUZZED(mat2x4(-1.9, 0.5, -3.6, 6554.1689, 85.62, 1.6, 8630.9191, -2.7)) : _GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-16.07)), bool(false))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, abs(0.0), 0.0, 0.0), (true ? mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-16.07)), bool(false))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, abs(0.0), 0.0, 0.0) : _GLF_FUZZED(mat2x4(-609.796, 3.4, 994.270, 8.6, -166.928, -8.9, _GLF_IDENTITY(1.7, min(1.7, 1.7)), _GLF_IDENTITY(963.146, float(vec3(963.146, 1.0, 0.0))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)) : _GLF_FUZZED(0.6))), float(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), min(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 0.0)), 0.0, 0.0))), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       atomicStore(buf[GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x], uint(2), 4, 64, 4);
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))) && true, ! (! ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))) && true)))), (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))) && true, ! (! ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))) && true))))) || false))))) && true)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))), ! (! ((_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), ! (! ((false)))))), (! (! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ((! ((false)))) && true))))) && true)))))) && true)) && true, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)), (bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))) || false))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))) && true), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true)), bool(bvec4(bool(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true, true && ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! (_GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))))))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)))) && true)), true, false, false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))), false || (((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false))))))), _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), bool(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), ! (! ((false))))), false), bvec2(bvec2(bvec2((! _GLF_IDENTITY((false), ! (! ((false))))), false)))))) && true)) && true)) && true))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false))))))), _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), bool(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), ! (! ((false))))), false), bvec2(bvec2(bvec2((! _GLF_IDENTITY((false), ! (! ((false))))), false)))))) && true)) && true)) && true))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false))))))), _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), bool(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), ! (! ((false))))), false), bvec2(bvec2(bvec2((! _GLF_IDENTITY((false), ! (! ((false))))), false)))))) && true)) && true)) && true)))), (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, true))), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ((false)) && true))), (! (! (_GLF_IDENTITY((false), ((false)) && true)))) && true)))))), ! (! (((false))))))), _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), bool(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), ! (! ((false))))), false), bvec2(bvec2(bvec2((! _GLF_IDENTITY((false), ! (! ((false))))), false)))))) && true)) && true)) && true))))) || false))))), ! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true, ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (_GLF_IDENTITY(! ((! ((false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((! ((false)))), false), bvec2(bvec2(bvec2(! ((! ((false)))), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(! ((! ((false)))), false), bvec2(bvec2(bvec2(! ((! ((false)))), false)))))))))))), (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec4(! ((false)), true, true, false)), bool(bvec4(bool(bvec4(! ((false)), true, true, false)), false, true, false))))) && true)))) && true)) && true, true && ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false)))))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false)))))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false)))))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false)))))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false)))))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false)))))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), (! ((! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false)))))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false)))))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))) && (! (bool(bool(false)))))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)))) && true) && true))))))))), _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (((false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((false)))), (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((false)))), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)))) && _GLF_IDENTITY(true, (true) && true))) && true)) && true))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! ((false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! ((false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) || false))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true, ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((false)), (((false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(((false)), (((false))) || false), bool(bvec2(_GLF_IDENTITY(((false)), (((false))) || false), true)))) || false))), (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))) && true)) && true))))) && true))), ! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && true), ! (! ((false))))) && true), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true))))) && _GLF_IDENTITY(true, false || (true)))) && true)))))))), false)), (bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), bool(bvec4(((false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))), ! (! _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (((false))), false || (! (((false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (((false))), false || (! (((false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), bool(bvec4(bool(_GLF_IDENTITY(((false)), ! (! (((false)))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)), ! (! (((false)))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), ! (! (((false)))))))), ! (! (((false)))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)), ! (! (((false)))))), bool(bvec4(bool(_GLF_IDENTITY(((false)), ! (! (((false)))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)), ! (! (((false)))))), bool(bvec4(bool(_GLF_IDENTITY(((false)), ! (! (((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))))))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) || false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && _GLF_IDENTITY(true, false || (true)))) && true)) && true))), ! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true)) && true))), ! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! _GLF_IDENTITY((false), ! (! ((false)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))))))), ! (! (false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), bool(bvec4(! _GLF_IDENTITY((false), ! (! ((false)))), false, true, true))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, true, true)))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))) && true)) && true)) && true)) && true))), ! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))), true && (! _GLF_IDENTITY((false), ! (! ((false)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))))))))))) || false)), false))) || _GLF_IDENTITY(false, (false) && true)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), true && (((false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! ((false))), false), bvec2(bvec2(bvec2((! ((false))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec2((! ((false))), false), bvec2(bvec2(bvec2((! ((false))), false))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))))), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)))) && true)) && true)) && true))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), true && (_GLF_IDENTITY((! ((false))), ((! ((false)))) || false)))), false || (_GLF_IDENTITY((false), ! (! ((false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (((false))) || false))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))), ! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))))))) && true))))) && true)) && true)))))))), false)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))), ! (! _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) || false)), ! (! ((_GLF_IDENTITY((false), ! (! ((false))))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec3(((false)), false, true)))) && true), ! (! _GLF_IDENTITY((((false))), ! (_GLF_IDENTITY(! ((((false)))), _GLF_IDENTITY(bool(bvec3(! ((((false)))), true, true)), (bool(bvec3(! ((((false)))), true, true))) || false))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)), ! (! (((false)))))), bool(bvec4(bool(_GLF_IDENTITY(((false)), _GLF_IDENTITY(! (! (((false)))), ! (! (! (! (((false))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), ! (! (((false)))))), bool(bvec4(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))))), ! (_GLF_IDENTITY(! (((false))), true && (_GLF_IDENTITY(! (((false))), (! (((false)))) || false)))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! (_GLF_IDENTITY((! ((false))), ! (_GLF_IDENTITY(! ((! ((false)))), bool(bvec3(! ((! ((false)))), false, false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true))) && true) && true)) && true))), ! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))))))), (false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true, ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! ((false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))), (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, false))), ! (! ((false))))) && true)) && true)) && true)) && true))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec2(bool(bvec4(false, true, false, false)), false)))))))), true && (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), true && ((_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bvec3((! ((false))), true, false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec2(bool(bvec4(false, true, false, false)), false)))))))), true && (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), true && ((_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bvec3((! ((false))), true, false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true)), bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec2(bool(bvec4(false, true, false, false)), false)))))))), true && (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), true && ((_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bvec3((! ((false))), true, false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true)))))) || false))))))) || false)), false))), false || ((bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))), ! (! _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) || false)), ! (! ((_GLF_IDENTITY((false), ! (! ((false))))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), bool(bvec3(((false)), false, true)))) && true), ! (! _GLF_IDENTITY((((false))), ! (_GLF_IDENTITY(! ((((false)))), _GLF_IDENTITY(bool(bvec3(! ((((false)))), true, true)), (bool(bvec3(! ((((false)))), true, true))) || false))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)), ! (! (((false)))))), bool(bvec4(bool(_GLF_IDENTITY(((false)), _GLF_IDENTITY(! (! (((false)))), ! (! (! (! (((false))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), ! (! (((false)))))), bool(bvec4(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))))), ! (_GLF_IDENTITY(! (((false))), true && (_GLF_IDENTITY(! (((false))), (! (((false)))) || false)))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! (_GLF_IDENTITY((! ((false))), ! (_GLF_IDENTITY(! ((! ((false)))), bool(bvec3(! ((! ((false)))), false, false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true))) && true) && true)) && true))), ! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))))))), (false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true, ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! ((false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))), (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, false))), ! (! ((false))))) && true)) && true)) && true)) && true))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec2(bool(bvec4(false, true, false, false)), false)))))))), true && (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), true && ((_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bvec3((! ((false))), true, false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec2(bool(bvec4(false, true, false, false)), false)))))))), true && (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), true && ((_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bvec3((! ((false))), true, false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true)), bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec2(bool(bvec4(false, true, false, false)), false)))))))), true && (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), true && ((_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bvec3((! ((false))), true, false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true)))))) || false))))))) || false)), false))))) || false), true))))), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (_GLF_IDENTITY(! (! ((false))), (_GLF_IDENTITY(! (! ((false))), bool(bool(! (! ((false))))))) || false)) || false)), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), true, false)))) && true)))), ! (! ((! ((false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), bool(bvec3(! _GLF_IDENTITY((false), ! (! ((false)))), true, false)))) || false), (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ! (! ((false))))) && true)) && true)) && true))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! (! _GLF_IDENTITY((false), ! (! ((false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true), true && (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false))) && true)))) && true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! (! _GLF_IDENTITY((false), ! (! ((false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true), true && (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false))) && true)))) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), ! (! ((! ((false))))))) && true)), ! (! (! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true, true))) || false)))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true, true))) || false))))), (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true, true))) || false)))))) || false)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((false)), (((false))) && true), (((false))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) || false)))) && true), true && (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false))))) && true)))) && true)) && true)) && true)))))), ! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), true && (_GLF_IDENTITY(((false)), true && (((false)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(bool((! _GLF_IDENTITY((false), ! (! ((false))))))), (bool(bool((! _GLF_IDENTITY((false), ! (! ((false)))))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (_GLF_IDENTITY(! (! (! ((false)))), ! (! (! (! (! ((false))))))))))) && true), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))) && true)) && true)), true, true, false)))))) && true)) && true)))))))), false)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), true && (! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))))))), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))))))), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true, ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))) || false)))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) || false))))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) || false)))))), (! (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) || false)))), _GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) || false)))), true)), true && (bool(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) || false)))), true)))))))) && true)))))) || false)) && true)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false)))))) || (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true, ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (_GLF_IDENTITY(! (! (! ((false)))), ! (! (! (! (! ((false)))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))) && true)) && true)) && true)))))))))), ((! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true, ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (_GLF_IDENTITY(! (! (! ((false)))), ! (! (! (! (! ((false)))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))) && true)) && true)) && true))))))))))) || false)))), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true, ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(_GLF_IDENTITY(bool((! ((false)))), ! (! (_GLF_IDENTITY(bool((! ((false)))), true && (bool((! ((false))))))))))))) || false))))), bool(bool((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(_GLF_IDENTITY(bool((! ((false)))), ! (! (_GLF_IDENTITY(bool((! ((false)))), true && (bool((! ((false))))))))))))) || false))))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))))))) && true)) && true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))))))))))) && true))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! (! _GLF_IDENTITY((false), ! (! ((false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY((false), true && ((false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))), ! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), false || (! ((false))))))))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true)))))))), false))), ! (! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true, ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(_GLF_IDENTITY(bool((! ((false)))), ! (! (_GLF_IDENTITY(bool((! ((false)))), true && (bool((! ((false))))))))))))) || false))))), bool(bool((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(_GLF_IDENTITY(bool((! ((false)))), ! (! (_GLF_IDENTITY(bool((! ((false)))), true && (bool((! ((false))))))))))))) || false))))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))))))) && true)) && true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))))))))))) && true))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! (! _GLF_IDENTITY((false), ! (! ((false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY((false), true && ((false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))), ! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), false || (! ((false))))))))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true)))))))), false))), bool(bvec4((bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true, ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(_GLF_IDENTITY(bool((! ((false)))), ! (! (_GLF_IDENTITY(bool((! ((false)))), true && (bool((! ((false))))))))))))) || false))))), bool(bool((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(_GLF_IDENTITY(bool((! ((false)))), ! (! (_GLF_IDENTITY(bool((! ((false)))), true && (bool((! ((false))))))))))))) || false))))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))))))) && true)) && true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))))))))))) && true))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! (! _GLF_IDENTITY((false), ! (! ((false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY((false), true && ((false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))), ! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), false || (! ((false))))))))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true)))))))), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ((bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! ((false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true, ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))) && true))), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (! _GLF_IDENTITY((false), ! (! ((false))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) || false)))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), ! (! ((false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))))))))))) || false)) && true)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true, ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true) && true))) && true))), _GLF_IDENTITY(! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))))), bool(bvec4(! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)) && true)) && true))))), false, true, true)))))), false)))) || false)))) || false), true))))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false || _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (_GLF_IDENTITY(! (bool((false))), false || (! (bool((false))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (_GLF_IDENTITY(! (bool((false))), false || (! (bool((false)))))))))))))), (! ((_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (_GLF_IDENTITY(! (bool((false))), false || (! (bool((false))))))))))))))) || false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, true, true)), (bool(bvec4((false), false, true, true))) && true)))))) && true)) && true)) && true)), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), false || (bool(bvec3((false), false, true))))), ! (! ((false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))) && true)) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))) && true)) && true, ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))) && true)) && true) && true)))))) && true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false)))))))) && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))), ! _GLF_IDENTITY((! ((false))), bool(bvec4((! ((false))), true, true, false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && _GLF_IDENTITY(true, ! (! (true))))) && true)) && true)), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, true), false)))))))) && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))), ! _GLF_IDENTITY((! ((false))), bool(bvec4((! ((false))), true, true, false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) && _GLF_IDENTITY(true, ! (! (true))))) && true)) && true))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), bool(bvec2(! _GLF_IDENTITY((false), ! (! ((false)))), true))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (_GLF_IDENTITY(! (! ((false))), bool(_GLF_IDENTITY(bool(! (! ((false)))), true && (bool(! (! ((false)))))))))))) && true)) && true)) && true)))))), false, false, true)))), false, true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 ^ 1), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != (0 ^ 1), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter != (0 ^ 1), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter != (0 ^ 1), true), true)), false)))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != (0 ^ 1), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter != (0 ^ 1), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter != (0 ^ 1), true), true)), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter != (0 ^ 1), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter != (0 ^ 1), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter != (0 ^ 1), true), true)), false)))), true, false))), false)))), false || (bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != (0 ^ 1), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter != (0 ^ 1), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter != (0 ^ 1), true), _GLF_IDENTITY(true, (true) && true))), false))))))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0), (_injected_loop_counter ++) * 1))
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))).y)))), bool(bool(false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))).y)))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true)))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
