#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 mat4 _f0;
 bvec4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_13 {
 bool _f0;
 ivec3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_15 {
 vec3 _f0;
 _GLF_struct_13 _f1;
 uvec4 _f2;
 _GLF_struct_14 _f3;
 mat2x3 _f4;
 bvec2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
 vec3 _f1;
 mat4x3 _f2;
 vec3 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_10 {
 mat2x3 _f0;
 bvec2 _f1;
 mat2x3 _f2;
 uint subgroup_size;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 uint _f1;
 int _f2;
 int _f3;
 uvec2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_8 {
 vec4 _f0;
 vec4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_7 {
 bool _f0;
 uint _f1;
 vec4 _f2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 int _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_4 {
 int _f0;
 uint _f1;
 mat2 _f2;
 vec4 _f3;
 float _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 mat3 _f1;
 int _f2;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 uvec2 _f1;
 mat4x3 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_16 {
 _GLF_struct_6 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_15 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_0 {
 uint workgroup_base;
 mat2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uvec4 _f1;
 mat3x4 _f2;
 int _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_6(mat4x2(1.0), _GLF_struct_2(ivec3(1), uvec2(1u), mat4x3(1.0), _GLF_IDENTITY(vec3(1.0), (true ? vec3(1.0) : _GLF_FUZZED(radians(vec3(-1.7, 4.6, 1427.9531)))))), _GLF_struct_3(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec3(bool(bool(true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), mat3(1.0), 1), _GLF_struct_4(1, 1u, mat2(1.0), vec4(1.0), 1.0, _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u)))), _GLF_struct_5(mat3x2(1.0), mat3x2(1.0))), _GLF_struct_12(_GLF_struct_7(true, 1u, vec4(1.0)), _GLF_struct_8(vec4(1.0), vec4(1.0), mat3(1.0)), 1, _GLF_struct_9(mat4x2(1.0), 1u, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) >> 0), uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uvec3(1u)), _GLF_struct_10(mat2x3(1.0), bvec2(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), mat2x3(1.0), gl_SubgroupSize), _GLF_struct_11(mat3x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(56.29)))), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3324.5102)))), min(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3324.5102)))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3324.5102)))))))), mat4x3(1.0), vec3(1.0), mat4(1.0)), ivec2(1)), _GLF_struct_15(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(-57.36) : _GLF_IDENTITY(clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), max(clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), clamp(clamp(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? -8.9 : -6534.0939))), bool(false)))), 1.0, 1.0), clamp(1.0, 1.0, 1.0))))), mix(float((false ? _GLF_FUZZED(-57.36) : _GLF_IDENTITY(clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), max(clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), clamp(clamp(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? -8.9 : -6534.0939))), bool(false)))), 1.0, 1.0), clamp(1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(-43.41)), bool(false)))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true)))))))) ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))) : _GLF_FUZZED(-200.144), float(vec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))) ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(-200.144), max(_GLF_IDENTITY(_GLF_FUZZED(-200.144), (false ? _GLF_FUZZED(9.8) : _GLF_FUZZED(-200.144))), _GLF_FUZZED(-200.144))), 0.0)))))), float(_GLF_FUZZED(-541.603)), bool(false)))), _GLF_struct_13(true, ivec3(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))), mat3x2(1.0)), uvec4(1u), _GLF_struct_14(mat4(1.0), bvec4(true), vec2(1.0)), mat2x3(1.0), bvec2(true), mat2x4(1.0)), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(clamp(-994.082, -7.3, 39.38)) : 1.0))) * 1.0), (true ? 1.0 : _GLF_FUZZED(3.2))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(clamp(-994.082, -7.3, 39.38)) : 1.0))) * 1.0), (true ? 1.0 : _GLF_FUZZED(3.2))), mix(float(_GLF_FUZZED(-744.782)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(clamp(-994.082, -7.3, 39.38)) : 1.0))) * 1.0), (true ? 1.0 : _GLF_FUZZED(3.2)))), bool(true)))), float(_GLF_FUZZED(-33.61)), bool(false))), (1.0) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(-4311.6744, -9.8, -0.9, -11.63).b)), bool(false))))));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED((true ? -323.023 : _GLF_IDENTITY(-7.6, mix(float(-7.6), float(_GLF_FUZZED(vec2(7.2, 0.2).r)), bool(false)))))), _GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (float(injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cos(8.9)) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(7.8)), bool(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-350.491), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-409.630)), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)), bool(true))) > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(vec2((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), false || ((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(workgroup_size * workgroup_id, mat2(1.0), mat3x4(1.0)), uvec4(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u))), min(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), 0u + (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u))), mat3x4(1.0), 1);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f4.subgroup_size, (_GLF_struct_replacement_16._f1._f4.subgroup_size) * 1u), (true ? _GLF_IDENTITY(_GLF_struct_replacement_1._f0.workgroup_base, (_GLF_struct_replacement_1._f0.workgroup_base) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x))) + subgroup_id * _GLF_struct_replacement_16._f1._f4.subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0), max(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, abs(0.0)), _GLF_IDENTITY(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(187.918)), float(0.0), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(_GLF_IDENTITY((_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose((_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (mat4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(intBitsToFloat(-19465)))), _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-55.80) : 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))), mix(vec2(_GLF_FUZZED(-3.5), _GLF_FUZZED(77.43)), vec2((vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_FUZZED(-1.3) : 0.0))))[0], (vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))), mix(vec2(_GLF_FUZZED(-3.5), _GLF_FUZZED(77.43)), vec2((vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (false ? _GLF_FUZZED(-1.3) : 0.0))))[0], (vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))))[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))), mix(vec2(_GLF_FUZZED(-3.5), _GLF_FUZZED(77.43)), vec2((vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))))[0], (vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))))[1]), bvec2(true, true))), max(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))), mix(vec2(_GLF_FUZZED(-3.5), _GLF_FUZZED(77.43)), vec2((vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.5) : 0.0))))))[0], (vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))), mix(vec2(_GLF_FUZZED(-3.5), _GLF_FUZZED(77.43)), vec2((vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))))[0], (vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))))[1]), bvec2(true, true))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))), mix(vec2(_GLF_FUZZED(-3.5), _GLF_FUZZED(77.43)), vec2((vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))))[_GLF_IDENTITY(0, int(int(0)))], (vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))))[1]), bvec2(true, true))), (_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))), mix(vec2(_GLF_FUZZED(-3.5), _GLF_FUZZED(77.43)), vec2((vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-1.3) : 0.0, (false ? _GLF_FUZZED(-1.3) : 0.0) / 1.0)))))[0], _GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))))[1], ((vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0))))[1]) - 0.0)), bvec2(true, true)))) + vec2(0.0, 0.0))))), dot(vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sign(1.4)) : 1.0))), vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(-6.0)), _GLF_IDENTITY(float((0.0)), max(_GLF_IDENTITY(float((0.0)), clamp(_GLF_IDENTITY(float((0.0)), max(float((0.0)), float((0.0)))), _GLF_IDENTITY(float((0.0)), 0.0 + (float((0.0)))), float((0.0)))), float((0.0)))), bool(true))) - 0.0), 1.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(false)) : 1.0)), sin(0.0)), transpose(transpose(_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sin(0.0)), mat4(1.0) * (_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sin(0.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(0.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sin(0.0)))))))))))))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(5.4)), bool(false)), clamp(mix(float(0.0), float(_GLF_FUZZED(5.4)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(5.4)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, false || (false)))) && true)), mix(float(0.0), float(_GLF_FUZZED(5.4)), bool(false)))))), min(vec3(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.4)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))), _GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.4)), bool(false)))), min(vec3(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.4)), bool(false)))), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.4)), bool(false)))))))), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))))), (float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(vec2(-0.0, -3.2)))).y, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY(max(min(1.0, 1.0), min(1.0, 1.0)), (max(min(1.0, 1.0), min(1.0, 1.0))) * 1.0))), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec3(0.6, -1.6, -3.0)) : vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-0.1, -0.8, -419.774, -5.2, -4.6, -2247.4498, 7919.5934, -95.95, _GLF_IDENTITY(-919.863, min(-919.863, -919.863)))))) * (vec3(0.0, 0.0, 1.0)), mix(vec3(_GLF_FUZZED(2.1), _GLF_FUZZED(-4876.2652), _GLF_FUZZED(7.9)), vec3((_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-0.1, -0.8, -419.774, -5.2, -4.6, -2247.4498, 7919.5934, -95.95, -919.863)))) * (vec3(0.0, 0.0, 1.0)))[0], (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-0.1, -0.8, -419.774, -5.2, -4.6, -2247.4498, 7919.5934, -95.95, -919.863)))), (false ? _GLF_FUZZED(mat3(560.095, 3562.7765, -904.239, -2129.6933, 0.2, -4514.7566, 34.42, -8.2, 5.8)) : _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-0.1, -0.8, _GLF_IDENTITY(-419.774, clamp(-419.774, -419.774, -419.774)), -5.2, -4.6, -2247.4498, 7919.5934, -95.95, -919.863)))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-0.1, -0.8, -419.774, -5.2, -4.6, -2247.4498, 7919.5934, -95.95, -919.863)))), (false ? _GLF_FUZZED(mat3(560.095, 3562.7765, -904.239, -2129.6933, 0.2, -4514.7566, 34.42, -8.2, 5.8)) : _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-0.1, -0.8, _GLF_IDENTITY(-419.774, clamp(-419.774, -419.774, -419.774)), -5.2, -4.6, -2247.4498, 7919.5934, -95.95, -919.863))))))))) * _GLF_IDENTITY((vec3(0.0, 0.0, 1.0)), (true ? (vec3(0.0, 0.0, 1.0)) : _GLF_FUZZED(vec3(-95.64, 969.620, 0.5)))))[1], (_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-0.1, -0.8, -419.774, -5.2, _GLF_IDENTITY(-4.6, max(_GLF_IDENTITY(-4.6, (false ? _GLF_FUZZED(-2855.2856) : -4.6)), -4.6)), -2247.4498, 7919.5934, -95.95, -919.863)))) * (vec3(0.0, 0.0, 1.0)))[2]), _GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), false))))), false))))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0)), _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))), max(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), 0.0 + (float(0.0))), float(_GLF_FUZZED(-6605.5078)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))), max(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), 0.0 + (float(0.0))), float(_GLF_FUZZED(-6605.5078)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + (mat4(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0)), min(float(mat4x3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat4x3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, exp(0.0), tan(abs(0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, log(1.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, log(1.0), 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0)))), _GLF_IDENTITY(dot(vec4(log(1.0), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(log(1.0), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), float(mat2(dot(vec4(log(1.0), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)))), 0.0, 0.0, 1.0, exp(0.0)), mat4x3(mat4x3(mat4x3(0.0, 1.0, exp(0.0), tan(abs(0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, log(1.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, log(1.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(log(1.0), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(log(1.0), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), float(mat2(dot(vec4(log(1.0), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)))), 0.0, 0.0, 1.0, exp(0.0))))))), clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(injectionSwitch, step(5641.8531, vec2(-99.37, -8.2)))) : 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(0.0), bool(true))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(0.0), bool(true))))))), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(0.0), bool(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(0.0), bool(true))))))), float(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(0.0), bool(true))))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-0.3, mix(float(_GLF_FUZZED(0.5)), float(_GLF_IDENTITY(-0.3, max(-0.3, -0.3))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), float(0.0), bool(true))))))), float(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.5)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(0.0), bool(true))))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) * 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), _GLF_IDENTITY(float(0.0), mix(float(_GLF_FUZZED(-4.9)), float(float(0.0)), bool(true))), bool(true))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(0.0), bool(true))))))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0)))))) / 1.0))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_1._f0.workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id))) * _GLF_struct_replacement_16._f1._f4.subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size) | 0u)) | 0u), max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f4.subgroup_size, (_GLF_struct_replacement_16._f1._f4.subgroup_size) >> 0u), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % _GLF_struct_replacement_16._f1._f4.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) >> 0u)) + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size) | 0u)) | 0u), max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f4.subgroup_size, (_GLF_struct_replacement_16._f1._f4.subgroup_size) >> 0u), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % _GLF_struct_replacement_16._f1._f4.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) >> 0u)) + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size) | 0u)) | 0u), max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f4.subgroup_size, (_GLF_struct_replacement_16._f1._f4.subgroup_size) >> 0u), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % _GLF_struct_replacement_16._f1._f4.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) >> 0u)) + 1) % _GLF_struct_replacement_16._f1._f4.subgroup_size)))));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED((-22.68 / _GLF_IDENTITY(2.2, min(2.2, 2.2))))), float(injectionSwitch.y), bool(true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-22.68 / 2.2))), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(true, (true) && true)))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED((-22.68 / 2.2))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-22.68 / _GLF_IDENTITY(2.2, min(2.2, 2.2))))), float(injectionSwitch.y), bool(true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-22.68 / 2.2))), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(true, (true) && true)))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED((-22.68 / 2.2))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-65.61)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.0)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, true && (true))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.5, 84.33)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))) + vec2(0.0, 0.0)).y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), true))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.0)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, true && (true))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.5, 84.33)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))) + vec2(0.0, 0.0)).y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), true))))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-9.5 + _GLF_IDENTITY(-9.2, min(-9.2, -9.2))))), float(injectionSwitch.x), bool(true)))) / sqrt(1.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), min(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x4(0.0, tan(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0)), 0.0)), 0.0), min(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))))).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8943.1526)), float(_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 1.0)))), bool(true))), 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8943.1526)), float(0.0), bool(true))), 0.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8943.1526)), float(0.0), bool(true))), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8943.1526)), float(0.0), bool(true))), 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8943.1526)), float(0.0), bool(true))), 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8943.1526)), float(0.0), bool(true))), 0.0))) * mat2(1.0))) / abs(sqrt(vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8943.1526)), float(0.0), bool(true))), 0.0)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y), float(_GLF_FUZZED(-3182.6357)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))).y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(round(vec2(-93.27, 21.34))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(round(vec2(-93.27, 21.34))))).x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | _GLF_IDENTITY((next_virtual_gid), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)) | (virtual_gid))) : _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | ((next_virtual_gid))))))], uint(2), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
