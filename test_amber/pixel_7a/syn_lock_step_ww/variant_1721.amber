#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(4.2, min(4.2, 4.2))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(4.2, min(4.2, 4.2))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(4.2, min(4.2, 4.2)))), float(_GLF_FUZZED(-6.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FUZZED(_GLF_IDENTITY(4.2, min(4.2, 4.2))))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-62.35, (-62.35) + 0.0), sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.4) : 1.0))) * (-62.35)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | 0)))], (injectionSwitch)[1]), bvec2(true, true))).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-1.3 * 8.9))), bool(false)))) + 0.0)), injectionSwitch[1])).y, mix(float(_GLF_FUZZED(-64.49)), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).y), bool(true)))))))), _GLF_IDENTITY(true, ! (! (true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), false, true, true)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), false, false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-767.850)), vec2(_GLF_FUZZED(78.52), (injectionSwitch)[1]), bvec2(false, true))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-767.850, float(mat3(-767.850, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0))))), vec2(_GLF_FUZZED(78.52), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-767.850)), vec2(_GLF_FUZZED(78.52), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(869.211))), _GLF_FUZZED(_GLF_IDENTITY(-767.850, (-767.850) - 0.0))), vec2(_GLF_FUZZED(78.52), (injectionSwitch)[1]), bvec2(false, true))).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x = num_workgroup;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupSize), max((_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))), (gl_WorkGroupSize))), clamp(uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))), max((gl_WorkGroupSize), (gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), max(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), max(max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)) : _GLF_FUZZED(uvec3(149317u, 134337u, 138437u))))))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)) ^ (uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u) | _GLF_IDENTITY((gl_WorkGroupSize), max((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))), (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))))))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(max((gl_WorkGroupSize), (gl_WorkGroupSize)), (max(_GLF_IDENTITY((gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize)), (~ ((gl_WorkGroupSize))) / uvec3(1u, 1u, 1u))))))), _GLF_IDENTITY((gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 1u)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 1u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 1u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize), uvec3(_GLF_IDENTITY(uvec4((gl_WorkGroupSize), 1u), (true ? uvec4((gl_WorkGroupSize), 1u) : _GLF_FUZZED(uvec4(193687u, 49218u, 12946u, 110009u))))))))))))) << uvec3(0u, 0u, 0u)))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4572.1385))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false)), _GLF_IDENTITY(true, true && (true)))), false || (bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false)), _GLF_IDENTITY(true, true && (true)))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), false, false))), true)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), false, false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), false, false))), true)), false, false))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), false, false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), false, false))), true)), false, false))), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), false, false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), false), false, false))), true)), false, false))), false)), true)))))))))), true, false))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - _GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(7.0)), bool(false))))), injectionSwitch.y)))) && true)) ? _GLF_FUZZED(37.19) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0))))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y))), max(vec2(mat3x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat3x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y)))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u ^ (workgroup_base), clamp(_GLF_IDENTITY(0u, 0u | (0u)) ^ (workgroup_base), 0u ^ (workgroup_base), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base))))))))), 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 1u * (workgroup_base)))))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-19.44, 6554.8111)) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.2)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_FUZZED(69.68)), _GLF_IDENTITY(float(injectionSwitch.y), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (_GLF_IDENTITY(float(injectionSwitch.y), float(mat2x3(float(injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0))))), (float(injectionSwitch.y)) - 0.0) : _GLF_FUZZED(-7.3))), bool(true))), abs(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(69.68)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(46.66) : injectionSwitch.y)))))) : _GLF_FUZZED(_GLF_IDENTITY(-776.897, clamp(-776.897, -776.897, _GLF_IDENTITY(-776.897, (true ? -776.897 : _GLF_FUZZED(asinh(-7.4)))))))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(69.68)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((true ? 229.845 : -2.8))), bvec2(true, false))).y, mix(float(_GLF_FUZZED(69.68)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.1), _GLF_FUZZED(float(true))), bvec2(false, false))), injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(69.68)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6230.9422), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-16.17)), bvec2(true, false)))) / vec2(1.0, 1.0)).y, injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-145.084, min(_GLF_IDENTITY(-145.084, max(-145.084, _GLF_IDENTITY(-145.084, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), _GLF_IDENTITY(mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), (vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), min(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))), vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), transpose(transpose(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / exp(0.0)))))))), (false ? _GLF_FUZZED(mat2x4(8400.2241, 148.935, -3404.3842, 18.79, -5.2, -1.9, 32.51, 52.65)) : mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), transpose(transpose(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0))), cos(0.0), 0.0)))))))))), clamp(float(_GLF_IDENTITY(mat2x4(-145.084, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), _GLF_IDENTITY(mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), transpose(transpose(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))), (false ? _GLF_FUZZED(mat2x4(8400.2241, _GLF_IDENTITY(148.935, max(148.935, 148.935)), -3404.3842, 18.79, -5.2, -1.9, 32.51, 52.65)) : mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (true ? length(vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(4.8))), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), transpose(transpose(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-369.607)), bool(false))))) : _GLF_FUZZED(max(492.846, 8.1)))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), cos(0.0), 0.0)))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), _GLF_IDENTITY(mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), transpose(transpose(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0)))))), (false ? _GLF_FUZZED(mat2x4(8400.2241, 148.935, -3404.3842, 18.79, -5.2, -1.9, 32.51, 52.65)) : mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(-145.084, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), max(exp(0.0), _GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(9280.2731)), float(exp(0.0)), bool(true))), exp(0.0))))), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), transpose(transpose(mat2x4(-145.084, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), cos(0.0), 0.0)))))))))), mix(float(_GLF_FUZZED(9.3)), float(float(_GLF_IDENTITY(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), _GLF_IDENTITY(mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(-145.084, 0.0, 1.0, exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(898.577))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), float(mat3x4(float(mat4x3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(898.577))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(-53.11), (vec3(0.0, 0.0, 1.0))[1], (vec3(0.0, 0.0, 1.0))[2]), vec3((vec3(0.0, 0.0, 1.0))[0], _GLF_FUZZED((- -72.32)), _GLF_FUZZED(4793.8650)), bvec3(true, false, false)))) / vec3(1.0, 1.0, 1.0))), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), transpose(transpose(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? length(vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(sign(63.72)))), 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.4)), bool(false))))))))), (false ? _GLF_FUZZED(mat2x4(8400.2241, 148.935, -3404.3842, 18.79, -5.2, -1.9, 32.51, 52.65)) : mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), transpose(transpose(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0))))))))))), bool(true))), float(_GLF_IDENTITY(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), _GLF_IDENTITY(mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), transpose(transpose(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], (vec3(0.0, 0.0, 0.0))[2]), vec3(_GLF_FUZZED(-1.1), _GLF_FUZZED(6.0), _GLF_FUZZED(-6.4)), bvec3(false, false, false)))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(-0.7), _GLF_FUZZED(517.820), _GLF_FUZZED(0.6)), vec3((vec3(0.0, 0.0, 1.0))[0], (vec3(0.0, 0.0, 1.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 1.0))[2], (true ? _GLF_IDENTITY((vec3(0.0, 0.0, 1.0))[2], ((vec3(0.0, 0.0, 1.0))[2]) / 1.0) : _GLF_FUZZED(618.815)))), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), cos(0.0), 0.0)))))), (false ? _GLF_FUZZED(mat2x4(8400.2241, 148.935, -3404.3842, 18.79, -5.2, -1.9, 32.51, 52.65)) : mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, log(1.0), 0.0))), 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0), transpose(transpose(mat2x4(-145.084, 0.0, 1.0, exp(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 0.0))))))))))))))), -145.084)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(69.68)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-832.795) : injectionSwitch.y))))), true))))) || false))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-145.084)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6269.3455) : float(_GLF_FUZZED(-145.084)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)))))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)))))) && true)))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))), (! ((_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)))) || false))))))) && true))))) && true)))))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))))).x), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))))).x), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) > injectionSwitch.y)))))), false || (! (false || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(float(vec3(mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, 0.0)), (_GLF_IDENTITY(true, false || (true)) ? float(vec3(mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, 0.0)) : _GLF_FUZZED(-82.98))))) > injectionSwitch.y))))))), true))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0))) > injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), false || (false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-145.084, min(-145.084, -145.084)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), false)))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false)))) && true))))) > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-145.084), mix(float(_GLF_FUZZED(-145.084)), float(_GLF_FUZZED(47.65)), bool(false)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0))) > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-145.084), mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(_GLF_FUZZED(-145.084), clamp(_GLF_FUZZED(-145.084), _GLF_FUZZED(-145.084), _GLF_FUZZED(-145.084)))), bool(true)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-145.084), mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(_GLF_FUZZED(-145.084), clamp(_GLF_FUZZED(-145.084), _GLF_FUZZED(-145.084), _GLF_FUZZED(-145.084)))), bool(true)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), bool(bool(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-145.084), mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(_GLF_FUZZED(-145.084), clamp(_GLF_FUZZED(-145.084), _GLF_FUZZED(-145.084), _GLF_FUZZED(-145.084)))), bool(true)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))))))), false || (false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-145.084, min(-145.084, -145.084))), min(_GLF_FUZZED(_GLF_IDENTITY(-145.084, min(-145.084, -145.084))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-145.084, min(-145.084, -145.084))), float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-145.084, min(-145.084, -145.084))), 0.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(2.2, -698.797, -4792.6822, -3263.5088, -5566.9158, -7757.9805)) : mat2x3(_GLF_FUZZED(_GLF_IDENTITY(-145.084, min(-145.084, -145.084))), 0.0, 0.0, 0.0, 0.0, 1.0)))))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-145.084)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), false)))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false)))) && true)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), false)))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false)))) && true))), bool(_GLF_IDENTITY(bvec3(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), false)))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false)))) && true))), false, true), bvec3(bvec4(bvec3(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), false)))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false)))) && true))), false, true), false)))))))))) > injectionSwitch.y)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) >> 0u), (workgroup_base + subgroup_id * subgroup_size) - 0u))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_id) : uint(4u)))), ~ (_GLF_IDENTITY(~ ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_id) : uint(4u))))), max(~ ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(4u, (4u) << 0u), 4u))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : uint(4u), ~ (~ (false ? _GLF_FUZZED(workgroup_id) : uint(4u))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floatBitsToUint(-95.73)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(4u, (4u) << 0u), 4u))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : uint(4u), ~ (~ (false ? _GLF_FUZZED(workgroup_id) : uint(4u))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(4u, (4u) << 0u), 4u))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : uint(4u), ~ (~ (false ? _GLF_FUZZED(workgroup_id) : uint(4u)))))))) | 0u)))), ~ ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(workgroup_id), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u & 1u)), (_GLF_IDENTITY(uvec4(_GLF_FUZZED(workgroup_id), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u & 1u)), (uvec4(_GLF_FUZZED(workgroup_id), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u & 1u))) | (uvec4(_GLF_FUZZED(workgroup_id), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u & 1u))))) | (uvec4(_GLF_FUZZED(workgroup_id), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), (1u & 1u)))))) : uint(4u))))))))))), uvec4(1u, 1u, 1u, 1u) * (uvec4(subgroup_id, 0u, 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_id) : uint(4u)))), ~ (_GLF_IDENTITY(~ ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_id) : uint(4u))))), max(~ ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(4u, _GLF_IDENTITY((4u), max(_GLF_IDENTITY((4u), min((4u), (4u))), (4u))) << 0u), 4u))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : uint(4u), ~ (~ (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(4u), (1u | 1u) * (uint(4u)))))))))), ~ ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(workgroup_id) : uint(4u))))))))))))))) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u ^ 1u)))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))), max(subgroup_local_id, subgroup_local_id)))))) + 1) % subgroup_size, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) - 0u)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) - _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(uint(0u))), clamp(uint(uint(uint(0u))), uint(uint(uint(0u))), uint(uint(uint(0u)))))))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), min(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))))), uint(0u))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) | 0u)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> 0u))))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))))) / _GLF_IDENTITY(1u, min(1u, 1u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(floor(8.3)) : injectionSwitch.y))))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-27555) : 4))) << (0 << _GLF_IDENTITY(int(1), int(1)))), 64, 4);
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
