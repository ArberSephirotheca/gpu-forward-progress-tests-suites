#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 vec3 _f0;
 uint workgroup_id;
 int _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat2(vec2(0.0, 0.0), 1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), bool(bvec2(bool(bvec2(! _GLF_IDENTITY((false), true && ((false))), true)), true)))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), false))), true)))))) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false))), false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), ! (! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false, false, false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))))), true)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ! (! ((false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ! (! ((false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(max(num_workgroup, num_workgroup))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false)))))))))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-9557.0636)) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), bool(bvec4(bool(bool(! (_GLF_DEAD(false)))), true, true, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, false || (false)), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))))))), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4.3, -795.361)) : injectionSwitch)).x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4.3, -795.361)) : injectionSwitch)).x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), false || (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y) || false)))), true)))))))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true)) && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(vec3(1.0), gl_WorkGroupID.x, 1);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, clamp(_GLF_struct_replacement_0.workgroup_id, _GLF_struct_replacement_0.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, ~ (~ (_GLF_struct_replacement_0.workgroup_id))))), (_GLF_struct_replacement_0.workgroup_id) | (_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, ~ (~ (_GLF_struct_replacement_0.workgroup_id)))) + 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, clamp(_GLF_struct_replacement_0.workgroup_id, _GLF_struct_replacement_0.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, ~ (~ (_GLF_struct_replacement_0.workgroup_id))))), (_GLF_struct_replacement_0.workgroup_id) | (_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, ~ (~ (_GLF_struct_replacement_0.workgroup_id)))) + 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, clamp(_GLF_struct_replacement_0.workgroup_id, _GLF_struct_replacement_0.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, ~ (~ (_GLF_struct_replacement_0.workgroup_id))))), (_GLF_struct_replacement_0.workgroup_id) | (_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, ~ (~ (_GLF_struct_replacement_0.workgroup_id)))) + 0u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, clamp(_GLF_struct_replacement_0.workgroup_id, _GLF_struct_replacement_0.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, ~ (~ (_GLF_struct_replacement_0.workgroup_id))))), (_GLF_struct_replacement_0.workgroup_id) | (_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, ~ (~ (_GLF_struct_replacement_0.workgroup_id)))) + 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) | (1u ^ 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u))))))) ^ (30932u & 0u)), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) | (1u ^ 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u))))))) ^ (30932u & 0u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) | (1u ^ 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u))))))) ^ (30932u & 0u)))) : _GLF_FUZZED(subgroup_local_id))) + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) | (1u ^ 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u))))))) ^ (30932u & 0u)), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) | (1u ^ 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u))))))) ^ (30932u & 0u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) | (1u ^ 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u))))))) ^ (30932u & 0u)))) : _GLF_FUZZED(subgroup_local_id))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) | (1u ^ 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u))))))) ^ (30932u & 0u)), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) | (1u ^ 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u))))))) ^ (30932u & 0u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) | (1u ^ 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u))))))) ^ (30932u & 0u)))) : _GLF_FUZZED(subgroup_local_id))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) | (1u ^ 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u))))))) ^ (30932u & 0u)), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) | (1u ^ 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u))))))) ^ (30932u & 0u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) | (1u ^ 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u))))))) ^ (30932u & 0u)))) : _GLF_FUZZED(subgroup_local_id))) + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), 1 * _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), (~ ((_GLF_IDENTITY(4, (4) / 1)))) | 0)), int(ivec4((_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), (~ ((_GLF_IDENTITY(4, (4) / 1)))) | 0)), 1, 0, 0)))), 1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * abs(1.0)))), (true ? ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(_GLF_IDENTITY(32397, clamp(32397, 32397, _GLF_IDENTITY(32397, max(32397, 32397)))), -16300, _GLF_IDENTITY(46764, ~ (_GLF_IDENTITY(~ (46764), clamp(~ (46764), _GLF_IDENTITY(~ (46764), (false ? _GLF_FUZZED(-5027) : ~ (46764))), ~ (46764)))))))))))))), min((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(10249))) / 1)) - 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(32397, -16300, 46764))))), (int(_GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) - 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(32397, -16300, 46764)))))) | (int(_GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) - 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(32397, -16300, 46764))))))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (4) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), int(_GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))))), (true ? _GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), float(_GLF_FUZZED(-70.57)), bool(false))))), ~ (~ (ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(32397, -16300, 46764)), (_GLF_FUZZED(ivec3(32397, -16300, 46764))) / ivec3(1, 1, 1))))))), (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), int(_GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(32397, -16300, 46764)))))))) ^ 0), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), int(_GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))))), (true ? _GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), float(_GLF_FUZZED(-70.57)), bool(false))))), ~ (~ (ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(32397, -16300, 46764)), (_GLF_FUZZED(ivec3(32397, -16300, 46764))) / ivec3(1, 1, 1))))))), (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), int(_GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(32397, -16300, 46764)))))))) ^ 0))))), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ((4) / 1) ^ 0)))), int(_GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), min(_GLF_IDENTITY((4), ((4)) | 0), (4))) / 1, 1 * (_GLF_IDENTITY((4) / 1, max((4) / 1, (4) / 1))))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), ~ (~ (~ ((_GLF_IDENTITY(4, (4) / 1))))))) / 1), 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x))) : _GLF_FUZZED(ivec3(32397, -16300, 46764)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), int(_GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(32397, -16300, 46764)), (_GLF_IDENTITY(_GLF_FUZZED(ivec3(32397, -16300, 46764)), (_GLF_FUZZED(ivec3(32397, -16300, 46764))) * ivec3(1, 1, 1))) - ivec3(0, 0, 0)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), int(_GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(1, 0 | (1)), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.3) : 0.0)), injectionSwitch.x))) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(32397, -16300, 46764)), (_GLF_IDENTITY(_GLF_FUZZED(ivec3(32397, -16300, 46764)), (_GLF_FUZZED(ivec3(32397, -16300, 46764))) * ivec3(1, 1, 1))) - ivec3(0, 0, 0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), int(_GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(32397, -16300, 46764)), (_GLF_IDENTITY(_GLF_FUZZED(ivec3(32397, -16300, 46764)), (_GLF_FUZZED(ivec3(32397, -16300, 46764))) * ivec3(1, 1, 1))) - ivec3(0, 0, 0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), int(_GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(true ? ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(32397, -16300, 46764)), (_GLF_IDENTITY(_GLF_FUZZED(ivec3(32397, -16300, 46764)), (_GLF_FUZZED(ivec3(32397, -16300, 46764))) * ivec3(1, 1, 1))) - ivec3(0, 0, 0)), ~ (~ (true ? ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(32397, -16300, 46764)), (_GLF_IDENTITY(_GLF_FUZZED(ivec3(32397, -16300, 46764)), (_GLF_FUZZED(ivec3(32397, -16300, 46764))) * ivec3(1, 1, 1))) - ivec3(0, 0, 0))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), int(_GLF_IDENTITY(ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), (_GLF_IDENTITY(true ? ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(32397, -16300, 46764)), ivec3(1, 1, 1) * (true ? ivec3(~ ((_GLF_IDENTITY(4, (4) / 1))), 1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(ivec3(32397, -16300, 46764))))))))))))))))) | _GLF_IDENTITY(((_GLF_IDENTITY(4, (4) / 1))), 0 | (((_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, ~ (~ (1))))))))) - 0), _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) | (64))))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, ~ (~ (4))), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, max(4, 4)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(52402)))), (~ (4)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) / 1), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4))))), 1 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))) ? 4 : _GLF_FUZZED(52402)))), (~ (4)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) / 1), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(52402)))), (~ (4)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) / 1), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)), ~ (~ (_GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)), clamp(clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)), ~ (~ (clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4))))), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(52402)))), (~ (4)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) / 1), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)))))))), ((0 << _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(0), int(0))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))) ? 4 : _GLF_FUZZED(52402)))), (~ (4)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) / 1), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(52402)))), (~ (4)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) / 1), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)), ~ (~ (_GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)), clamp(clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)), ~ (~ (clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4))))), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(52402)))), (~ (4)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) / 1), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))) ? 4 : _GLF_FUZZED(52402)))), (~ (4)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) / 1), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(52402)))), (~ (4)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) / 1), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)), ~ (~ (_GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)), clamp(clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)), ~ (~ (clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4))))), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4)))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(52402)))), (~ (4)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) / 1), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-75950) : 4), ((false ? _GLF_FUZZED(-75950) : 4)) + 0))), ~ (4), ~ (4))))))))) / 1)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
