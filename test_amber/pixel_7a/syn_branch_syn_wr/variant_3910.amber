#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), bool(bvec4(bool(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true))))))), false, false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), bool(bvec4((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), false, true, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])) : _GLF_FUZZED(uvec3(119455u, 174124u, 137851u))))) ^ uvec3(0u, 0u, 0u))) ^ ((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), abs(1.0)), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), abs(1.0)), mat2(_GLF_IDENTITY(mat4(mat2(injectionSwitch.y, 0.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), abs(1.0))), transpose(transpose(mat4(mat2(injectionSwitch.y, 0.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), abs(1.0))))))))) - mat2(0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(303.259) : float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), abs(1.0)), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), abs(1.0)), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), abs(1.0)), (false ? _GLF_FUZZED(mat2(893.770, -3915.2811, -1.1, -2.0)) : mat2(injectionSwitch.y, 0.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), abs(1.0))))) + mat2(0.0, 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), abs(1.0)), (mat2(injectionSwitch.y, 0.0, determinant(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0), mat2(mat2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0), (mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(4.2)), bool(false)))) * 1.0), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(mat2(-2.5, -5.0, -2.2, -4.4), mat2(mat3(_GLF_IDENTITY(mat2(-2.5, -5.0, -2.2, -4.4), mat2(mat4x2(mat2(-2.5, -5.0, -2.2, -4.4))))))))))), abs(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))) - _GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-489.372)), bool(false))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0)), float(_GLF_FUZZED(-489.372)), bool(false))) : _GLF_FUZZED(99.92))), 0.0, 0.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(min(9.4, -9509.0238)) : 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-489.372)), bool(false))), 0.0, 0.0), mat2(mat4(mat2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-489.372)), bool(false))), 0.0, 0.0))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_FUZZED(303.259) : float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), abs(1.0)), _GLF_IDENTITY((mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(96.07, 80.72)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 0.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), abs(1.0))) - mat2(0.0, 0.0, 0.0, 0.0), ((mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(96.07, 80.72)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 0.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), abs(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))) / 1.0))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) | 0u))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).x)) > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true), true, false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec3(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 0u)))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, true && (true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(num_workgroup))))) : subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))))), subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true && (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : 0u, max(false ? _GLF_FUZZED(num_workgroup) : 0u, false ? _GLF_FUZZED(num_workgroup) : 0u))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y))) | (uint(1))), 4, _GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-69371))) : _GLF_FUZZED(-46298))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((_GLF_IDENTITY(4, max(4, 4))), _GLF_IDENTITY((4), max((4), (4))))) | _GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), 0 ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))), ~ (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), 1 * (_GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), (false ? _GLF_FUZZED(ivec2(-73529, -66655).g) : _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)), 0 + ((~ (4)))) << (0 & -94227)))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))))), ~ (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), (false ? _GLF_FUZZED(ivec2(-73529, -66655).g) : _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)), 0 + ((~ (4)))) << (0 & -94227)))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8))))))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))))), (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), min(_GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), 0 + (_GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8))))))))) / 1))) << 0)) << 0)))))))))), clamp((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) / 1), max((4), _GLF_IDENTITY((4), max((4), (4))))) | _GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), (0 << _GLF_IDENTITY(int(8), int(8))) >> (0 << _GLF_IDENTITY(int(2), int(2))))) : _GLF_FUZZED(_GLF_IDENTITY(79769, max(79769, 79769)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), 0 ^ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8))))))), 0 | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), 0 ^ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))))))) / 1), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), 0 ^ ((4))), (4))))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))))), (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0))))))), (0 | 0) ^ (~ (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))))), (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0)), (0 | 0) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))))), (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0)))))))))))))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), max((4), (4))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4)), ~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))), ~ (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(_GLF_IDENTITY(79769, max(79769, 79769)))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(_GLF_IDENTITY(79769, max(79769, 79769)))))), max(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(_GLF_IDENTITY(79769, max(79769, 79769)))))), ~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(_GLF_IDENTITY(79769, max(79769, 79769))))))))) ^ 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), (true ? _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))) : _GLF_FUZZED(-49762)))) ^ 0), min(~ _GLF_IDENTITY((~ (4)), (_GLF_IDENTITY((~ (4)), ((~ (4))) >> 0)) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (true ? _GLF_IDENTITY(int(8), int(8)) : _GLF_FUZZED(3156))))), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) << 0), ~ (~ (8)))))))), (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0)), 0 ^ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8))), clamp(_GLF_IDENTITY(((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8))), int(int(((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8))))))) | (((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8))))), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8))), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) | ((~ (4)))), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))), max(~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))), _GLF_IDENTITY(~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))), int(int(_GLF_IDENTITY(~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))), int(ivec4(~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))), 1, 1, 0)))))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, ~ (~ (8)))), (int(_GLF_IDENTITY(8, ~ (~ (8))))) >> 0))))), (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, min(0, 0)))) << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0)))))))))))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), ((4)) * 1))))))) | _GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))))), (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0))))))), (true ? ~ (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_IDENTITY(_GLF_FUZZED(79769), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(79769), (_GLF_FUZZED(79769)) | 0)), ~ (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(79769), (_GLF_FUZZED(79769)) | 0)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((_GLF_IDENTITY(~ (4), max(_GLF_IDENTITY(~ (4), (~ (4)) / 1), _GLF_IDENTITY(~ (4), (~ (4)) + (0 << _GLF_IDENTITY(int(1), int(1)))))))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, ~ (~ (8)))), (int(_GLF_IDENTITY(8, ~ (~ (8))))) >> ((0 >> _GLF_IDENTITY(int(3), int(3))) ^ 0)))))), (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0))))))) : _GLF_FUZZED(-69634))), max(_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), ~ (~ (0 << _GLF_IDENTITY(int(8), int(8))))))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (_GLF_IDENTITY(4, (4) | 0)))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (~ (~ _GLF_IDENTITY((~ _GLF_IDENTITY((4), max((4), (4)))), ((~ _GLF_IDENTITY((4), int(_GLF_IDENTITY(ivec2((4), 0), min(ivec2((4), 0), ivec2((4), 0))))))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8))))), 0 | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8))))), (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))) | (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))))))))), (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), (false ? _GLF_FUZZED(22579) : (~ (4)))), ((_GLF_IDENTITY(~ (4), max(_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))), ~ (4))))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0))))))), max(_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769)))), clamp(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769)))), ~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769)))), (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769))))) - 0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(-66896)))), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | (_GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) + 0)))))))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) | (int(8))), int(8)))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))), ((0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8))))))) - 0)) | ((0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))))))), (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(-66896)))), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | (_GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) + 0)))))))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) | (int(8))), int(8)))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))), ((0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8))))))) - 0)) | ((0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))))))), (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0)), 0 ^ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(-66896)))), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | (_GLF_IDENTITY(int(8), max(int(8), _GLF_IDENTITY(int(8), (int(8)) + 0)))))))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) | (int(8))), int(8)))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))), ((0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8))))))) - 0)) | ((0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))))))), (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0))))) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))), 0 | (~ (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_IDENTITY(_GLF_FUZZED(79769), _GLF_IDENTITY(int(int(_GLF_FUZZED(79769))), (int(int(_GLF_FUZZED(79769)))) >> (68555 & 0)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))))), (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) >> 0))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), (~ (4)) * 1)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8))))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8))))))), (_GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))))) >> 0)) / (1 & 1))), (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0)))))))))))), ~ (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY((_GLF_IDENTITY(true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769) : _GLF_FUZZED(-37689)))), ((_GLF_IDENTITY(true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769) : _GLF_FUZZED(-37689))))) | (_GLF_IDENTITY((_GLF_IDENTITY(true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769) : _GLF_FUZZED(-37689)))), ((_GLF_IDENTITY(true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769) : _GLF_FUZZED(-37689))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), (_GLF_IDENTITY((~ (4)), int(ivec3(_GLF_IDENTITY((~ (4)), (_GLF_IDENTITY((~ (4)), ((~ (4))) | 0)) ^ 0), 1, 1)))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(99020) : 4)))), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))))), (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0))))))))), ~ (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), (true ? (0 << _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(79769)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((_GLF_IDENTITY(~ (4), ~ (~ (~ (4)))))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), 0 + (int(8))), int(8)))), min(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), ~ (~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), (0 << _GLF_IDENTITY(int(8), int(8))) / 1)) | (0 << _GLF_IDENTITY(int(8), int(8))))) | 0))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))))), (~ (~ _GLF_IDENTITY((~ (4)), (_GLF_IDENTITY((~ (4)), (false ? _GLF_FUZZED(5693) : (~ (4))))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) << 0)) << 0)))))))))))))) + 0), 64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67854) : 0)));
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), max(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)))), min(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), bool(bvec3(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))) < subgroup_size, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u))), (subgroup_size) >> 0u), bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, _GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))), bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u) < subgroup_size, true, false))))), _GLF_IDENTITY(bool(bvec4(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))), bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u) < subgroup_size, true, false))))), false, true, true)), (bool(bvec4(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))), bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u) < subgroup_size, true, false))))), false, true, true))) || false))))))
  {
   int i = 0;
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) && _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) && true))) ? injectionSwitch.x : _GLF_FUZZED(-753.061))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-2.2), (normalize(vec2(1.0, 1.0)))[1]), vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(88.88)), bvec2(true, false)))) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)))), cos(0.0)))), (false ? _GLF_FUZZED(-16.10) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) && true))) ? injectionSwitch.x : _GLF_FUZZED(-753.061))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.10) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) && true)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) && true))))) ? injectionSwitch.x : _GLF_FUZZED(-753.061))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-16.10) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat2x4(max(injectionSwitch.y, injectionSwitch.y), sin(0.0), determinant(mat3(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0)))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), false, false, true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(asinh(vec2(699.496, _GLF_IDENTITY(-235.244, max(-235.244, -235.244))))), (_GLF_FUZZED(asinh(vec2(699.496, -235.244)))) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-50.81, (false ? _GLF_FUZZED(inversesqrt(393.251)) : _GLF_IDENTITY(-50.81, (-50.81) * 1.0)))), _GLF_FUZZED(-3736.7205)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(0.0, 0.0), mix(_GLF_IDENTITY(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-29.65)), mix(vec2(_GLF_FUZZED(-15.13), (vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-29.65)))[1]), vec2((vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-29.65)))[0], _GLF_FUZZED(6.8)), bvec2(true, false))), vec2(_GLF_FUZZED((false ? 3541.7358 : -5.3)), (vec2(0.0, 0.0))[1]), bvec2(false, true)))))) : injectionSwitch)).y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false, bool(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), virtual_gid, virtual_gid)), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))))) * (virtual_gid)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), max(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), _GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))) - 0u)))) / 1u), 0u | (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), virtual_gid, virtual_gid)), 1u * (virtual_gid)))), ((~ (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))) / 1u), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), virtual_gid, virtual_gid))) << 0u), 1u * (virtual_gid)))), ((~ (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))) / 1u)) - 0u))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, (0u) << 0u) + (virtual_gid)), virtual_gid, virtual_gid)), 1u * (virtual_gid)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))), 0u ^ (~ (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))))) / 1u), 0u | (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), virtual_gid, virtual_gid)), 1u * (virtual_gid)))), ((~ (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))) / 1u), max(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), virtual_gid, virtual_gid)), 1u * (virtual_gid)))), ((~ (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))) / 1u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), virtual_gid, virtual_gid)), 1u * (virtual_gid)))), ((~ (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))) / 1u)))))) << 0u))], read, _GLF_IDENTITY(4, max(4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-8362.3449, 5.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-8362.3449, 5.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-8362.3449, 5.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-8362.3449, 5.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0))))) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-8362.3449, 5.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)))))), 1.0)), (vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-8362.3449, 5.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-8362.3449, 5.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-8362.3449, 5.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0))))) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-8362.3449, 5.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)))))), 1.0))) / vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (true ? vec3(injectionSwitch, 1.0) : _GLF_FUZZED(vec3(-0.6, -1.5, 21.93)))))))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2476.4267)), float(1.0), bool(true))))))[1]), vec2(_GLF_FUZZED((true ? -3.0 : -2.7)), _GLF_FUZZED(3.4)), bvec2(false, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]), mix(vec2((vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]))[0], _GLF_FUZZED(650.415)), vec2(_GLF_FUZZED(-0.6), (vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]))[1]), bvec2(false, true))), vec2(_GLF_FUZZED(-254.031), _GLF_FUZZED(78.24)), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true))), true))))))))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-298.542, mix(float(_GLF_IDENTITY(-298.542, clamp(-298.542, -298.542, _GLF_IDENTITY(-298.542, (false ? _GLF_FUZZED(1.5) : -298.542))))), float(_GLF_FUZZED(-1.0)), bool(false))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))), injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))), injectionSwitch.y))))), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
