#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9594.5154, 8.4)) : injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true)))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), mix(float(_GLF_FUZZED(0.6)), float(dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), bool(true)))), 1.0, 0.0))) > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), bool(bool(bool(bvec2((false), true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(false || ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_FUZZED(vec2(-9.5, -9823.6199)))).y)))), _GLF_IDENTITY((false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_IDENTITY(true, ! (! (true)))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), false, true))) || false)))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, _GLF_IDENTITY(true, (true) || false), true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false, true, true))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))) || false), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))), false || (bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))), false || (bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))))))))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))), false || (bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))))) && true), false, true, false)))))), false || (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))), _GLF_IDENTITY(false, ! (! (false))) || (bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))))))), true && ((bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), bool(bvec3(bool(true), false, true)))), false || (bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))))))))))) || false), true, _GLF_IDENTITY(false, (false) || false), false)))))), true && _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false))))))), false || (_GLF_IDENTITY(((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false))))))), (((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false)))))))) && true))), bool(bvec3(! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false)))), (! (_GLF_IDENTITY(! _GLF_IDENTITY(((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false)))))))))), false || (_GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false))))), ! (! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false)))))))), true, false))))), (((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false)))))))) && true))), bool(_GLF_IDENTITY(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(! (false), false), false)), false)))))), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bvec4(! (! (! (false))), false, false, true)), bool(bvec4(bool(bvec4(! (! (! (false))), false, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), false, false), bvec3(bvec4(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(! (false), false), false)), false)))))), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bvec4(! (! (! (false))), false, false, true)), bool(bvec4(bool(bvec4(! (! (! (false))), false, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))), ((! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, false))))))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, false)))) && true)), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))))).y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))) > injectionSwitch.y)))))), false || ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, false)))) && true)), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))))).y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))) > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * exp(vec2(0.0, 0.0))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * exp(vec2(0.0, 0.0))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * exp(vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * exp(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), mix(vec2((exp(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-596.552)), vec2(_GLF_FUZZED(1.7), (exp(vec2(0.0, 0.0)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) + vec2(0.0, 0.0))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * exp(vec2(0.0, 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(-595.000), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))[1]), vec2((true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(-270.942)), bvec2(true, false))))) * exp(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * exp(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * exp(vec2(0.0, 0.0))).x)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? _GLF_IDENTITY((injectionSwitch), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-55.49)), vec2(_GLF_FUZZED(-466.591), ((injectionSwitch))[1]), bvec2(false, true))))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)))))) / vec2(1.0, 1.0)))) * exp(vec2(0.0, 0.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * exp(vec2(0.0, 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * exp(vec2(0.0, 0.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * exp(vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(-280.478), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * exp(vec2(0.0, 0.0))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * exp(vec2(0.0, 0.0))))[0], _GLF_FUZZED(-45.70)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))) * exp(vec2(0.0, 0.0))).x, (false ? _GLF_FUZZED(679.392) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))) * exp(vec2(0.0, 0.0))).x)))))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sin(0.0), length(vec3(0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0))), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(1.0, 1.0, 0.0))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))) && true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-56.89)), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(6.2) : float(injectionSwitch.y))), bool(true))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))), false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (bool(bool((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), bool(bvec4(! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (bool(bool((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), true, false, true))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, mix(float(_GLF_FUZZED(-56.89)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.7) : injectionSwitch.y)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.7) : injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.7) : injectionSwitch.y))))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))) || false))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0)))).x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))) || false))), false)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0)))).x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))) || false))), false))))) || false))), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(664.545)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(1.0)))), float(vec2(1.0, 1.0)))), (mat2(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.6) : 1.0)), 1.0))))))) + mat2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / abs(1.0)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-8331.4065)), bool(false))))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y) - 0.0)), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-83.62) : injectionSwitch.y))))))))), false, true)), ! (! (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0)))), (mat2(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))))) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(75.08), _GLF_FUZZED(90.11)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - sin(vec2(0.0, 0.0))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED((false ? vec2(8.1, 68.26) : (false ? vec2(-604.649, 6.3) : injectionSwitch))))).x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), clamp(float(0.0), _GLF_IDENTITY(float(0.0), mix(float(_GLF_FUZZED(-8.5)), float(float(0.0)), bool(true))), float(0.0))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(mat2x4((injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, exp(0.0)))) + 0.0), injectionSwitch.x)))))))).y) - 0.0, 0.0 + ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0)))), mat2(1.0) * (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0))))))))), (mat2(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))))) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(75.08), _GLF_FUZZED(90.11)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - sin(vec2(0.0, 0.0))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED((false ? vec2(8.1, 68.26) : (false ? vec2(-604.649, 6.3) : injectionSwitch))))).x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(float(0.0), min(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))), float(0.0))), clamp(float(0.0), _GLF_IDENTITY(float(0.0), mix(float(_GLF_FUZZED(-8.5)), float(float(0.0)), bool(true))), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * cos(0.0))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(mat2x4((injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, exp(0.0)))) + 0.0), injectionSwitch.x))), max(max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(mat2x4((injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, exp(0.0)))) + 0.0), injectionSwitch.x))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(mat2x4((injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, exp(0.0)))) + 0.0), injectionSwitch.x))), (true ? max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(mat2x4((injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, exp(0.0)))) + 0.0), injectionSwitch.x))) : _GLF_FUZZED(2831.8555)))))))))).y) - 0.0)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false, true))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (false) && true)) && true), bool(bvec2(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (false) && true)) && true), false || (bool((_GLF_IDENTITY(false, (false) && true)) && true))), false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(86.98) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * mat2(1.0)))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(86.98) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * mat2(1.0))))))), float(_GLF_FUZZED(-534.452)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, min((1u) / 1u, (1u) / 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) / 1u))), 0u | (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) / 1u))))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, 0u + (1u))))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) / 1u))))), 1u, 1u)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(false, ! (! (false)))))), false || (! ((bool(_GLF_IDENTITY(false, ! (! (false))))))))))))), bool(bvec4(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(false, ! (! (false)))))), false || (! ((bool(_GLF_IDENTITY(false, ! (! (false))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))))))), bool(bvec4(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false)))))))))), _GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false, ! (! (false))) || (bool(false))))))), false, false, false)), false || (bool(bvec4((bool(_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))), ! (! (bool(bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))), true && (bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true))))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))) || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-710.213)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), (bool(bvec4(_GLF_DEAD(false), false, true, true))) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), clamp(_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY((max(subgroup_id, subgroup_id)), (true ? (max(subgroup_id, subgroup_id)) : _GLF_FUZZED(subgroup_local_id))) / 1u), max(subgroup_id, subgroup_id), max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))), uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))))), uint(uint(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))))))), 1u, 1u, 0u))))))))))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))), _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id)))))) * subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id))), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), min(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.6), clamp(_GLF_FUZZED(-9.6), _GLF_FUZZED(-9.6), _GLF_FUZZED(-9.6)))), float(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), bool(true))), max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)))), injectionSwitch.x)), clamp(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), mix(float(float(float(0.0))), float(_GLF_FUZZED(-7.1)), bool(false)))), 0.0)), injectionSwitch.x)))) + (clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 1u, 1u)))) ^ 0u)))) | 0u), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size), max(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1.9) : _GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1.9) : _GLF_ZERO(0.0, injectionSwitch.x))) * 1.0))) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size), ((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1.9) : _GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1.9) : _GLF_ZERO(0.0, injectionSwitch.x))) * 1.0))) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size)) | (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1.9) : _GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1.9) : _GLF_ZERO(0.0, injectionSwitch.x))) * 1.0))) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size), clamp((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1.9) : _GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1.9) : _GLF_ZERO(0.0, injectionSwitch.x))) * 1.0))) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1.9) : _GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1.9) : _GLF_ZERO(0.0, injectionSwitch.x))) * 1.0))) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1.9) : _GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(1.9) : _GLF_ZERO(0.0, injectionSwitch.x))) * 1.0))) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id)))))) * subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(uvec2((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size) << (0u ^ 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))))))), uvec2(_GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (~ (0u))) | (0u))), 0u) ^ (uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id)))))) * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u)))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), (_GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), ((_GLF_FUZZED(subgroup_size))) << 0u)) | 0u) / 1u)) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(subgroup_size) : uint(0u))))), ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(subgroup_size) : uint(0u)))))) / 1u) >> _GLF_IDENTITY(uint(0u), uint(0u)))) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size))), uint(_GLF_IDENTITY(uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) >> 0u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), min(_GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u), max(subgroup_id, subgroup_id))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))).x, (false ? _GLF_FUZZED(abs(421.615)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))).x, mix(float(_GLF_FUZZED(4.9)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))).x), bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x) / _GLF_IDENTITY(1.0, (1.0) - 0.0))) - 0.0))), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.0)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)).x))) >> 0u) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (_GLF_IDENTITY(max(subgroup_id, subgroup_id), max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) * subgroup_size), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (0u)))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (0u)))), _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (0u)))), min((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (0u)))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (0u)))))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (0u)))))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 0u, 0u, 1u)), 0u ^ (uint(uvec4(0u, 0u, 0u, 1u))))), clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), _GLF_IDENTITY(0u, max(0u, 0u))) ^ (uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u)))), 1u), min(uvec2(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u)))), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u)))), 1u), (uvec2(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u)))), 1u)) - uvec2(0u, 0u)))))))), max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec2(0u, 0u) ^ (uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), 0u + (_GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u)))))))) * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))) << uvec2(0u, 0u)))))))))), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), clamp(_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY((max(subgroup_id, subgroup_id)), (true ? (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) : _GLF_FUZZED(subgroup_local_id))) / 1u), max(subgroup_id, subgroup_id), max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))))))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))), _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), subgroup_id))))), subgroup_id)))))) * subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), min(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), mix(float(_GLF_FUZZED(-9.6)), float(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), bool(true))), max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)))), injectionSwitch.x)), clamp(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)))) + (clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | 0u), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), min(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), mix(float(_GLF_FUZZED(-9.6)), float(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), bool(true))), max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)))), injectionSwitch.x)), clamp(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)))) + (clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | 0u), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), min(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), mix(float(_GLF_FUZZED(-9.6)), float(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), bool(true))), max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)))), injectionSwitch.x)), clamp(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)))) + (clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | 0u), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | 0u)) * 1u)) * subgroup_size, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), min(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), mix(float(_GLF_FUZZED(-9.6)), float(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), bool(true))), max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)))), injectionSwitch.x)), clamp(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)))) + (clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | 0u), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), min(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), mix(float(_GLF_FUZZED(-9.6)), float(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), bool(true))), max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)))), injectionSwitch.x)), clamp(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)))) + (clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | 0u), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), min(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), mix(float(_GLF_FUZZED(-9.6)), float(max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), bool(true))), max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)))), injectionSwitch.x)), clamp(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), injectionSwitch.x)))) + (clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | 0u), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | 0u)) * 1u)) * subgroup_size) ^ 0u)), max((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, sin(0.0), 1.0, 0.0, abs(1.0), 1.0, sin(0.0), 1.0, log(1.0), 0.0, 1.0, 1.0)))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))))) ? _GLF_FUZZED(_GLF_IDENTITY(1.9, float(mat2x4(1.9, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0)))) : _GLF_ZERO(0.0, injectionSwitch.x)))) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 0u | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))))) * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), min((subgroup_id), _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))))), clamp(~ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, (0u | 0u), 1u, 0u)))), ~ (subgroup_id), ~ (subgroup_id)))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), min((subgroup_id), _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))))), clamp(~ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, (0u | 0u), 1u, 0u)))), ~ (subgroup_id), ~ (subgroup_id))))) | ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) - 0u), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))))))) / 1u))) * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), max((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size), ((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size)) | 0u)) - 0u))), ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))))))), uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))) + _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : 0u, (false ? _GLF_FUZZED(workgroup_size) : 0u) | (false ? _GLF_FUZZED(workgroup_size) : 0u)))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) | 0u) | (0u))))), 0u) ^ _GLF_IDENTITY((uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + log(exp(vec2(0.0, 0.0)))))) - vec2(0.0, 0.0)).x)) + _GLF_IDENTITY((clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 0u ^ (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 0u ^ (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id)) ^ 0u))), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 0u ^ (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id)))))))))))))), 0u | ((clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 0u ^ (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 0u ^ (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id)) ^ 0u))), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 0u ^ (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id)))))))))))))))))) * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))), ((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))), (uvec2(0u, 0u) & uvec2(112409u, 45259u)) | ((uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + log(exp(vec2(0.0, 0.0)))))) - vec2(0.0, 0.0)).x)) + _GLF_IDENTITY((clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 0u ^ (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 0u ^ (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id)) ^ 0u))), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 0u ^ (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id)))))))))))))), 0u | ((clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 0u ^ (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 0u ^ (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id)) ^ 0u))), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id), 0u ^ (max(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base ^ workgroup_base)))), subgroup_id)))))))))))))))))) * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))), ((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u)))))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / 1u), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / 1u)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / 1u)))) / ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(subgroup_size) : uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) : _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) + (clamp(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) * subgroup_size), uint(_GLF_IDENTITY(uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (_GLF_IDENTITY(true, ! (! (true))) ? subgroup_id : _GLF_FUZZED(num_workgroup))), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, _GLF_IDENTITY(0u, (0u) / 1u), 0u)), ~ (~ (uint(uvec3(subgroup_id, _GLF_IDENTITY(0u, (0u) / 1u), 0u))))))), min(_GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u), max(subgroup_id, subgroup_id)))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, _GLF_IDENTITY(0u, (0u) / 1u), 0u)), ~ (~ (uint(uvec3(subgroup_id, _GLF_IDENTITY(0u, (0u) / 1u), 0u))))))), min(_GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u), max(subgroup_id, subgroup_id))))) << 0u)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(71.18, 552.424)) : injectionSwitch)), (injectionSwitch) + vec2(0.0, 0.0)), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(71.18, 552.424)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) * mat2(1.0))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(809.375) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))))) / 1.0)) - 0.0))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch))) + vec2(0.0, 0.0)).x))) >> 0u) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), min(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)))))))) * subgroup_size), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u), min(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u)))))), max(uint(0u), uint(0u))), uint(0u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u), min(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u)))))), max(uint(0u), uint(0u))), uint(0u)), min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u), min(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u)))))), max(uint(0u), uint(0u))), uint(0u)), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u), min(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u)))))), max(uint(0u), uint(0u))), uint(0u))))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u), min(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u)))))), max(uint(0u), uint(0u))), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (0u)))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u | 0u) + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u))), 0u) ^ (uvec2((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))), (0u ^ 0u) + (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id))) * 1u), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), ~ (~ (subgroup_id))), max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), 0u ^ (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), 0u | (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), 0u | (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))))), (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) | (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))))))) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - (0u & 154993u))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY((uvec2(0u, 0u) ^ (uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), uint(_GLF_IDENTITY(uint(max(subgroup_id, subgroup_id)), (true ? uint(max(subgroup_id, subgroup_id)) : _GLF_FUZZED((workgroup_size / workgroup_base)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(max(subgroup_id, subgroup_id), 0u + (_GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u)))))))) * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) << uvec2(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) >> 0u), 0u)), 0u), (_GLF_IDENTITY((uvec2(0u, 0u) ^ (uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY(0u, (0u) ^ (59333u & (0u ^ 0u))) + _GLF_IDENTITY((_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY((max(subgroup_id, subgroup_id)), clamp((max(subgroup_id, subgroup_id)), _GLF_IDENTITY((max(subgroup_id, subgroup_id)), ((max(subgroup_id, subgroup_id))) | ((max(subgroup_id, subgroup_id)))), (max(subgroup_id, subgroup_id)))) | 0u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY((max(subgroup_id, subgroup_id)), clamp((max(subgroup_id, subgroup_id)), _GLF_IDENTITY((max(subgroup_id, subgroup_id)), ((max(subgroup_id, subgroup_id))) | ((max(subgroup_id, subgroup_id)))), (max(subgroup_id, subgroup_id)))) | 0u))), _GLF_IDENTITY(uint(uvec4(~ ((_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY((max(subgroup_id, subgroup_id)), clamp((max(subgroup_id, subgroup_id)), _GLF_IDENTITY((max(subgroup_id, subgroup_id)), ((max(subgroup_id, subgroup_id))) | ((max(subgroup_id, subgroup_id)))), (max(subgroup_id, subgroup_id)))) | 0u))), 1u, 0u, 1u)), (uint(uvec4(~ ((_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY((max(subgroup_id, subgroup_id)), clamp((max(subgroup_id, subgroup_id)), _GLF_IDENTITY((max(subgroup_id, subgroup_id)), ((max(subgroup_id, subgroup_id))) | ((max(subgroup_id, subgroup_id)))), (max(subgroup_id, subgroup_id)))) | 0u))), 1u, 0u, 1u))) / 1u)))))))))) * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) << uvec2(0u, 0u), uvec2(_GLF_IDENTITY(uvec2((uvec2(0u, 0u) ^ (uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), 0u + (_GLF_IDENTITY(max(subgroup_id, subgroup_id), (_GLF_IDENTITY(max(subgroup_id, subgroup_id), 0u + (max(subgroup_id, subgroup_id)))) | 0u)))))))) * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) << uvec2(0u, 0u)), uvec2(uvec3(uvec2(_GLF_IDENTITY((uvec2(0u, 0u) ^ (uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), 0u + (_GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u)))))))) * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) << uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(75214u, 148049u)) : (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), 0u + (_GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u)))))))) * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), clamp(uvec2(0u, 0u) ^ (uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), 0u + (_GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u)))))))) * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), uvec2(0u, 0u) ^ (uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), 0u + (_GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u)))))))) * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), uvec2(0u, 0u) ^ (uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), 0u + (_GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) | 0u)))))))) * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))) << uvec2(0u, 0u)))), 1u)))))) / uvec2(1u, 1u)))))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))) || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) >> 0u), clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (workgroup_base)), workgroup_base)), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(0u, (0u) - 0u) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, 0u, 0u)))) | 0u), (((subgroup_local_id + 1) % subgroup_size)) | ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)) + 0)), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)) + 0)), ~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)) + 0)), max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)) + 0)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)) + 0)))))))) * 1u) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id))) >> 0u), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size)) | (((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0), (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-31092) : (_GLF_IDENTITY(1, (1) ^ 0)))))) ^ 0)) - 0)) % subgroup_size)))) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true, true, false))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true, true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch, injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true, true, false))), false), true, true))), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((63.06 - -165.450))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((63.06 - -165.450))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(17.73), _GLF_FUZZED(-1707.3061)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * exp(0.0))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 49.50)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(72.15)), bvec2(true, false))).x < injectionSwitch.y))))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ((! (false))) && true) || false))), true, false, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((! (false)) || false, bool(_GLF_IDENTITY(bool((! (false)) || false), bool(bvec3(bool((! (false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false, true))), (bool(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, _GLF_IDENTITY(false, (false) && true), true)))) && true))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) / 1.0))))) || false), false, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) / 1.0))))) || false), false, false, false))) || false))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y) / 1.0))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false, true)))))), (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))).y) / 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))).y) / 1.0))), (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))).y) / 1.0)))) && true)))))) || false), false, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) / 1.0, (false ? _GLF_FUZZED(1.9) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) / 1.0, clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) / 1.0, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) / 1.0, max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) / 1.0, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) / 1.0))))))))))) || false), false, false, false))) || false)))))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))) && (false), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY((! (true && (_GLF_IDENTITY(false, ! (! (false)))))) || false, true && ((! (true && (_GLF_IDENTITY(false, ! (! (false)))))) || false))), bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false, true && ((! (true && (_GLF_IDENTITY(false, ! (! (false)))))) || false))), true))), bool(bool(_GLF_IDENTITY(! (true && (false)), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))) && true)), ! (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (_GLF_IDENTITY(false || (true), true && (false || _GLF_IDENTITY((true), false || ((true)))))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false) || false), true, true, false))))))))) || _GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), (_GLF_IDENTITY(true && (false), bool(bvec4(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true, false || (true)) && (false)))), false, _GLF_IDENTITY(true, false || (true)), false)))) && true)), (! (true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || ((! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false))))), true && (bool((_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(bool(bool((_GLF_IDENTITY(false, ! (! (false)))))), false, true)))))) || false), bool(bool(_GLF_IDENTITY(! (true && (false)), (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (true && (_GLF_IDENTITY(false, ! (! (false))))))))) || false))))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true))))))) || false))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(true, true && (true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && _GLF_IDENTITY((false), ((false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.3) : 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat4(2.5, 217.678, -696.117, 865.985, -0.5, 4.8, 4.9, -9.5, _GLF_IDENTITY(-7.7, (true ? _GLF_IDENTITY(-7.7, clamp(-7.7, -7.7, _GLF_IDENTITY(-7.7, (false ? _GLF_FUZZED(-35.99) : -7.7)))) : _GLF_FUZZED(6.7))), 6241.7946, -9871.1630, -305.043, -12.70, -21.87, -0.5, -1170.4941)) : mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))), 0.0)))), float(float(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat4(2.5, 217.678, -696.117, 865.985, -0.5, 4.8, 4.9, -9.5, -7.7, 6241.7946, -9871.1630, -305.043, -12.70, -21.87, -0.5, -1170.4941)) : mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5849.6622)), float(0.0), bool(true))), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)))))))), injectionSwitch.x)) > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat2(1.0, 1.0, 0.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-404.692) : 0.0)))), 0.0))), (false ? _GLF_FUZZED(mat4(2.5, 217.678, -696.117, 865.985, -0.5, 4.8, 4.9, -9.5, -7.7, 6241.7946, -9871.1630, -305.043, -12.70, -21.87, -0.5, -1170.4941)) : mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)))), float(float(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.7)), float(injectionSwitch.x), bool(true))))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0)), 0.0), (false ? _GLF_FUZZED(mat4(2.5, 217.678, -696.117, 865.985, -0.5, 4.8, 4.9, -9.5, -7.7, 6241.7946, -9871.1630, -305.043, -12.70, -21.87, -0.5, -1170.4941)) : mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(33.31)))) + log(1.0)), 0.0, 1.0, 0.0)), 0.0)))))))), injectionSwitch.x)) > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), (vec2(mat2x4(injectionSwitch, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))) / vec2(1.0, 1.0))))).x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), (vec2(mat2x4(injectionSwitch, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))) / vec2(1.0, 1.0))))).x > injectionSwitch.y, true, true))))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))) || false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(dot(vec4(-4893.4800, -3.8, _GLF_IDENTITY(84.91, max(84.91, 84.91)), -7.4), vec4(59.69, 1.3, -8.3, -9.1))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), (false ? _GLF_FUZZED(mat4(2.5, 217.678, -696.117, 865.985, -0.5, 4.8, 4.9, -9.5, -7.7, 6241.7946, -9871.1630, _GLF_IDENTITY(-305.043, (_GLF_IDENTITY(-305.043, (_GLF_IDENTITY(-305.043, max(-305.043, _GLF_IDENTITY(-305.043, (true ? -305.043 : _GLF_FUZZED(1.5)))))) - 0.0)) / 1.0), -12.70, -21.87, -0.5, -1170.4941)) : mat4(injectionSwitch.x, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(26615u))), float(1.0), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(26615u))), float(1.0), bool(true)))) / 1.0), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-179.131))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)))), float(float(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(2.5, 217.678, -696.117, 865.985, -0.5, 4.8, 4.9, -9.5, -7.7, 6241.7946, -9871.1630, -305.043, -12.70, -21.87, -0.5, _GLF_IDENTITY(-1170.4941, clamp(-1170.4941, -1170.4941, _GLF_IDENTITY(-1170.4941, (_GLF_IDENTITY(-1170.4941, max(_GLF_IDENTITY(-1170.4941, float(float(-1170.4941))), -1170.4941))) * 1.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat4(660.080, 8390.7487, -6.5, 6.7, 1.1, -307.348, -666.056, -99.16, -9758.8773, -9.9, 1.5, -654.536, 9.0, 0.7, 3681.0025, -88.94)) : _GLF_FUZZED(mat4(2.5, 217.678, -696.117, 865.985, _GLF_IDENTITY(-0.5, (-0.5) / 1.0), 4.8, 4.9, -9.5, -7.7, 6241.7946, -9871.1630, -305.043, -12.70, -21.87, -0.5, _GLF_IDENTITY(_GLF_IDENTITY(-1170.4941, clamp(-1170.4941, -1170.4941, _GLF_IDENTITY(-1170.4941, (-1170.4941) * 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(-1170.4941, clamp(-1170.4941, -1170.4941, _GLF_IDENTITY(-1170.4941, (-1170.4941) * 1.0))), max(_GLF_IDENTITY(-1170.4941, clamp(-1170.4941, -1170.4941, _GLF_IDENTITY(-1170.4941, (-1170.4941) * 1.0))), _GLF_IDENTITY(-1170.4941, clamp(-1170.4941, -1170.4941, _GLF_IDENTITY(-1170.4941, (-1170.4941) * 1.0)))))) - determinant(mat4(0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), transpose(_GLF_IDENTITY(transpose(false ? _GLF_FUZZED(mat4(660.080, 8390.7487, -6.5, 6.7, 1.1, -307.348, -666.056, -99.16, -9758.8773, -9.9, 1.5, -654.536, 9.0, 0.7, 3681.0025, -88.94)) : _GLF_FUZZED(mat4(2.5, 217.678, -696.117, 865.985, _GLF_IDENTITY(-0.5, (-0.5) / 1.0), 4.8, 4.9, -9.5, -7.7, 6241.7946, -9871.1630, -305.043, -12.70, -21.87, -0.5, _GLF_IDENTITY(_GLF_IDENTITY(-1170.4941, clamp(-1170.4941, -1170.4941, _GLF_IDENTITY(-1170.4941, (-1170.4941) * 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(-1170.4941, clamp(-1170.4941, -1170.4941, _GLF_IDENTITY(-1170.4941, (-1170.4941) * 1.0))), max(_GLF_IDENTITY(-1170.4941, clamp(-1170.4941, -1170.4941, _GLF_IDENTITY(-1170.4941, (-1170.4941) * 1.0))), _GLF_IDENTITY(-1170.4941, clamp(-1170.4941, -1170.4941, _GLF_IDENTITY(-1170.4941, (-1170.4941) * 1.0)))))) - determinant(mat4(0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), (true ? transpose(false ? _GLF_FUZZED(mat4(660.080, 8390.7487, -6.5, 6.7, 1.1, -307.348, -666.056, -99.16, -9758.8773, -9.9, 1.5, -654.536, 9.0, 0.7, 3681.0025, -88.94)) : _GLF_FUZZED(mat4(2.5, 217.678, -696.117, 865.985, _GLF_IDENTITY(-0.5, (-0.5) / 1.0), 4.8, 4.9, -9.5, -7.7, 6241.7946, -9871.1630, -305.043, -12.70, -21.87, -0.5, _GLF_IDENTITY(_GLF_IDENTITY(-1170.4941, clamp(-1170.4941, -1170.4941, _GLF_IDENTITY(-1170.4941, (-1170.4941) * 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(-1170.4941, clamp(-1170.4941, -1170.4941, _GLF_IDENTITY(-1170.4941, (-1170.4941) * 1.0))), max(_GLF_IDENTITY(-1170.4941, clamp(-1170.4941, -1170.4941, _GLF_IDENTITY(-1170.4941, (-1170.4941) * 1.0))), _GLF_IDENTITY(-1170.4941, clamp(-1170.4941, -1170.4941, _GLF_IDENTITY(-1170.4941, (-1170.4941) * 1.0)))))) - determinant(mat4(0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) : _GLF_FUZZED(mat4(6199.3767, 8.8, 5923.6666, -16.07, -3.6, -35.05, 63.26, 2.7, 3.1, 0.9, -8.2, 4785.9341, -36.63, 1.5, -7.8, -260.046)))))))) : mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.8)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(442.603)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0)))))))))), injectionSwitch.x)) > injectionSwitch.y))))))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))) * _GLF_IDENTITY(1u, ~ (~ (1u))))], _GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) | 0u, clamp(_GLF_IDENTITY((uint(1)) | 0u, ((uint(1)) | 0u) | ((uint(1)) | 0u)), _GLF_IDENTITY((uint(1)) | 0u, ~ (~ ((uint(1)) | 0u))), (uint(1)) | 0u))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))), true))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(64, int(ivec3(64, 1, 1))), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false, false))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false, false)))))) && true))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) || false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) || false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))))))), ! (! (bool(bool((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))))))))))) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true))))))
    barrier();
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))
  {
   int i = 0;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), true))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)), false, true, true)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)), false, true, true))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(1.8, -7.1), min(vec2(1.8, -7.1), _GLF_IDENTITY(vec2(1.8, -7.1), _GLF_IDENTITY((vec2(1.8, -7.1)) * vec2(1.0, 1.0), mix(vec2(((vec2(1.8, -7.1)) * vec2(1.0, 1.0))[0], _GLF_FUZZED(-377.140)), vec2(_GLF_FUZZED(7028.5440), ((vec2(1.8, -7.1)) * vec2(1.0, 1.0))[1]), bvec2(false, true))))))) : injectionSwitch)).y)) || (true)), (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, true, false)))) && true), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(8.9, 8.4)) : injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(6.5)), vec2((false ? _GLF_FUZZED(vec2(8.9, 8.4)) : injectionSwitch)[0], (false ? _GLF_FUZZED(vec2(8.9, 8.4)) : injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), false)))))), vec2(mat2x4(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.9, clamp(8.9, 8.9, _GLF_IDENTITY(8.9, max(8.9, 8.9)))), clamp(8.9, 8.9, _GLF_IDENTITY(8.9, clamp(8.9, _GLF_IDENTITY(8.9, mix(float(8.9), float(_GLF_FUZZED(-977.276)), bool(false))), 8.9)))), 8.4), vec2(mat2x3(vec2(_GLF_IDENTITY(8.9, clamp(8.9, 8.9, _GLF_IDENTITY(_GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9)), (_GLF_IDENTITY(_GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9)), max(_GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9)), _GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9))))) * 1.0))), 8.4), 1.0, 0.0, 1.0, exp(0.0))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(8.9, 8.4)), (_GLF_FUZZED(vec2(8.9, 8.4))) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) : injectionSwitch), vec2(mat4x3((false ? _GLF_FUZZED(vec2(8.9, 8.4)) : injectionSwitch), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(90.98))), 1.0, 1.0, 1.0)))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(8.9, 8.4)) : injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(6.5)), vec2((false ? _GLF_FUZZED(vec2(8.9, 8.4)) : injectionSwitch)[0], (false ? _GLF_FUZZED(vec2(8.9, 8.4)) : injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), false)))))), vec2(mat2x4(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(8.9, clamp(8.9, 8.9, _GLF_IDENTITY(8.9, max(8.9, 8.9)))), clamp(8.9, 8.9, _GLF_IDENTITY(8.9, clamp(8.9, _GLF_IDENTITY(8.9, mix(float(8.9), float(_GLF_FUZZED(-977.276)), bool(false))), 8.9)))), 8.4), vec2(mat2x3(vec2(_GLF_IDENTITY(8.9, clamp(8.9, 8.9, _GLF_IDENTITY(_GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9)), (_GLF_IDENTITY(_GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9)), max(_GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9)), _GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9))))) * 1.0))), 8.4), 1.0, 0.0, 1.0, exp(0.0))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(8.9, 8.4)), (_GLF_FUZZED(vec2(8.9, 8.4))) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) : injectionSwitch), vec2(mat4x3((false ? _GLF_FUZZED(vec2(8.9, 8.4)) : injectionSwitch), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(90.98))), 1.0, 1.0, 1.0)))).y : _GLF_FUZZED(-685.466)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, abs(1.0), 1.0, 1.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y)))) || false))
      barrier();
     return;
    }
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY(4, _GLF_IDENTITY(0, 1 * (0)) + (4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))))) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.9) : injectionSwitch.y))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-391.667)), bool(false)))) - 0.0), (true ? injectionSwitch.y : _GLF_FUZZED(2359.5683))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), (false ? _GLF_FUZZED(945.094) : min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(546.606)), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2359.5683))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, 1.0)))))))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), clamp(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), min(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))))))).y, mix(float(_GLF_FUZZED(546.606)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(1.0))), (true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) : _GLF_FUZZED(2359.5683))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y), mix(float(_GLF_FUZZED(-6.5)), float(min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), bool(true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(546.606)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2359.5683))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))), mix(float(_GLF_FUZZED(5281.1471)), float(min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2359.5683))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))), bool(true)))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(546.606, exp(0.0) * (546.606)))), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2359.5683))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(546.606)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2359.5683))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(546.606)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-71.25)), bool(false)))) - 0.0) : _GLF_FUZZED(2359.5683))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))) && true)), false)))))))), ! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(546.606)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)), bool(true)), 1.0 * (_GLF_IDENTITY(mix(float(_GLF_FUZZED(546.606)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sqrt(0.0)))).y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)), bool(true)), mix(float(mix(float(_GLF_FUZZED(546.606)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) - 0.0) - 0.0)), bool(true))), float(_GLF_FUZZED(1405.3362)), bool(false)))))), min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2359.5683))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), min(min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), injectionSwitch.y))))))))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), _GLF_IDENTITY(! (! (! (! (! (false))))), (! (! (! (! (! (false)))))) || false)))), bool(bvec2((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), ! (_GLF_IDENTITY(! (! (! (! (false)))), (! (! (! (! (false))))) || false))))), false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-816.384, -8.8)) : _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-4.7, -266.966)) : (injectionSwitch))) * mat2(1.0)))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, true)))))))) ? _GLF_FUZZED(vec2(-816.384, -8.8)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))) * mat2(1.0)))).y) / 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (1)))), 1))]), vec2(_GLF_FUZZED(_GLF_IDENTITY(2024.0334, max(2024.0334, _GLF_IDENTITY(2024.0334, mix(float(_GLF_FUZZED(-98.97)), float(2024.0334), bool(true)))))), _GLF_FUZZED(6.1)), bvec2(false, false)), min(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (1)))), 1))]), vec2(_GLF_FUZZED(_GLF_IDENTITY(2024.0334, max(2024.0334, _GLF_IDENTITY(2024.0334, mix(float(_GLF_FUZZED(-98.97)), float(2024.0334), bool(true)))))), _GLF_FUZZED(6.1)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (1)))), 1))]), vec2(_GLF_FUZZED(_GLF_IDENTITY(2024.0334, max(2024.0334, _GLF_IDENTITY(2024.0334, mix(float(_GLF_FUZZED(-98.97)), float(2024.0334), bool(true)))))), _GLF_FUZZED(6.1)), bvec2(false, false))))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), bool(bvec4(! (false || (false)), false, true, true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)) && true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) || false)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && ((false) && true)), (_GLF_IDENTITY((false) && true, ((false) && true) || false)) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), false, false, true)))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.0)))))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(7248.3418), max(_GLF_IDENTITY(_GLF_FUZZED(7248.3418), mix(float(_GLF_FUZZED(vec2(56.84, -3.3).g)), float(_GLF_FUZZED(7248.3418)), bool(true))), _GLF_FUZZED(7248.3418)))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false, false, false))))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
