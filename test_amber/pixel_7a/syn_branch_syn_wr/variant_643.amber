#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, true && (true)), true))), false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, false || ((_GLF_DEAD(false)) || false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.2, -4.6)))).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.2, -4.6)))).y)))))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[0] : _GLF_FUZZED(6.0))), injectionSwitch[1]))), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-0.8), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-2523.1098, 7.6)))))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))))))), max((injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)))) && true)))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec3(true, false, true))))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) && true)))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)))))))), true)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, length(length(vec2(0.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(0.0), 0.0, tan(0.0), 0.0))).x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(false, (false) || false)) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(false, (false) || false)) || false)))))) || false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(false, (false) || false)) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(false, (false) || false)) || false)))))) || false) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(false, (false) || false)) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(false, (false) || false)) || false)))))) || false) || false)))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), true)))))))), false, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 1.0)), min(float(mat2x4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 1.0)), float(mat2x4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 1.0)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), max(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), clamp(max(gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))))), uvec3(uvec3(max(gl_WorkGroupSize, gl_WorkGroupSize)))))), ~ _GLF_IDENTITY((~ (uvec3(uvec3(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(uvec3(max(gl_WorkGroupSize, gl_WorkGroupSize)))))))), ((~ (uvec3(uvec3(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(uvec3(max(gl_WorkGroupSize, gl_WorkGroupSize))))))))) << uvec3(0u, 0u, 0u)))), max(gl_WorkGroupSize, gl_WorkGroupSize))), max(gl_WorkGroupSize, gl_WorkGroupSize)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), _GLF_IDENTITY((vec2(0.0, 0.0) + (injectionSwitch)) * mat2(1.0), max(_GLF_IDENTITY((vec2(0.0, 0.0) + (injectionSwitch)) * mat2(1.0), vec2(0.0, 0.0) + ((vec2(0.0, 0.0) + (injectionSwitch)) * mat2(1.0))), (vec2(0.0, 0.0) + (injectionSwitch)) * mat2(1.0))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(min(-211.216, length(-40.61))) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-99.93), 1.0 * (_GLF_FUZZED(-99.93))) : injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, true && (false))), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), false), true)))))), true, false), bvec3(bvec3(bvec3(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0)))), (vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0))))) - vec4(0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y)))), true, false)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(false), true, true))) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), clamp(1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), _GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), ((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))) / 1u), min(1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (workgroup_size)))), 1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_size, ~ (~ _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_size), 0u), uvec2(1u, 1u) * (uvec2((workgroup_size), 0u)))), ~ (~ (uint(_GLF_IDENTITY(uvec2((workgroup_size), 0u), uvec2(1u, 1u) * (uvec2((workgroup_size), 0u))))))))))), clamp(1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))))), 1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), 1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))))))), (0u & _GLF_IDENTITY(30907u, ~ (~ (30907u)))) + (_GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), clamp(1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))))))), min(1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), 1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), clamp(_GLF_IDENTITY(1u, (1u) | (1u)) * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), uint(uvec3((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), 1u, 0u))), 1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), 1u * (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))))))))) + 0u)) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), workgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, max((workgroup_base) / 1u, (workgroup_base) / 1u))) | _GLF_IDENTITY(((workgroup_base) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (((workgroup_base) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) - ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(5u), uint(5u))))))), max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, _GLF_IDENTITY(((workgroup_base) / 1u), (false ? _GLF_FUZZED(atomicMin(workgroup_size, bitfieldExtract(workgroup_base, 12033, -87253))) : _GLF_IDENTITY(((workgroup_base) / 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))) / 1u) : _GLF_FUZZED(12361u))))) | ((workgroup_base) / 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) | ((workgroup_base) / 1u))), 0u | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), 0u | (_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))))) / 1u, ((workgroup_base) / 1u) | ((workgroup_base) / 1u)))))), (0u & 55905u) ^ ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) | (_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))) | (_GLF_IDENTITY((workgroup_base), 0u | (_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))))) / 1u)))))))) | 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), 0u, 1u)) * uvec3(1u, 1u, 1u)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) + _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max((0u), (0u))) - 0u)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1)))), (subgroup_local_id + 1) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))))))) : _GLF_FUZZED(workgroup_size)), ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) | (1))) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))))))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), clamp(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size), _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (true ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(subgroup_local_id)))) + 0u))))) | ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) * 1u) : _GLF_FUZZED((~ subgroup_id)))) + 1) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))), clamp((~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))), (0u | 0u) ^ ((~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))))))))))) : _GLF_FUZZED(workgroup_size)))))) % subgroup_size), 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), clamp((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), clamp(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))))))) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0)) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))), (true ? mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))) : _GLF_FUZZED(mat2(623.574, -550.482, 6951.2442, 1.5))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) * mat2(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), clamp((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), clamp(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))))))) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0)) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))), (true ? mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))) : _GLF_FUZZED(mat2(623.574, -550.482, 6951.2442, 1.5))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) * mat2(1.0)))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), clamp((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), clamp(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))))))) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0)) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))), (true ? mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))) : _GLF_FUZZED(mat2(623.574, -550.482, 6951.2442, 1.5))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) * mat2(1.0)))))[0], _GLF_FUZZED(-2743.3003)), vec2(_GLF_FUZZED(9.8), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), clamp((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), clamp(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))))))) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0)) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))), (true ? mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))) : _GLF_FUZZED(mat2(623.574, -550.482, 6951.2442, 1.5))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) * mat2(1.0)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), clamp((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), clamp((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)), 1.0, tan(0.0)), mat3x4(_GLF_IDENTITY(mat4(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), clamp((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)), 1.0, tan(0.0))), (false ? _GLF_FUZZED(mat4(-70.55, 4.6, -4822.1137, -6.9, 4.6, -7.0, -8358.2623, -1593.1041, -857.490, -2.1, 5470.7972, 2566.0903, -955.314, -1.4, 91.92, 6.1)) : mat4(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), clamp((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)), 1.0, tan(0.0))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), clamp(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), vec2(1.0, 1.0) * (_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), clamp(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))))))))) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0)))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))), (true ? mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))) : _GLF_FUZZED(mat2(623.574, -550.482, 6951.2442, 1.5))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))[0], ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))[1]), vec2(_GLF_FUZZED(-86.51), _GLF_FUZZED(3.2)), bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) * mat2(1.0)))).x), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), clamp((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), clamp((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)), 1.0, tan(0.0)), mat3x4(_GLF_IDENTITY(mat4(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), clamp((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)), 1.0, tan(0.0))), (false ? _GLF_FUZZED(mat4(-70.55, 4.6, -4822.1137, -6.9, 4.6, -7.0, -8358.2623, -1593.1041, -857.490, -2.1, 5470.7972, 2566.0903, -955.314, -1.4, 91.92, 6.1)) : mat4(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), clamp((true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))), (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)), 1.0, tan(0.0))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), clamp(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), vec2(1.0, 1.0) * (_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), clamp(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))))))))) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7))))) * mat2(1.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0)))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))), (true ? mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), (mat3x4(mat2(1.0))) * mat3(1.0))) : _GLF_FUZZED(mat2(623.574, -550.482, 6951.2442, 1.5))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))[0], ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))[1]), vec2(_GLF_FUZZED(-86.51), _GLF_FUZZED(3.2)), bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)), mix(vec2((_GLF_FUZZED(mod(sqrt(injectionSwitch), 3.7)))[0], _GLF_FUZZED((- -23.00))), vec2(_GLF_FUZZED(3.1), (_GLF_FUZZED(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(_GLF_IDENTITY(mod(sqrt(injectionSwitch), 3.7), max(mod(sqrt(injectionSwitch), 3.7), mod(sqrt(injectionSwitch), 3.7))), mod(sqrt(injectionSwitch), 3.7)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) * mat2(1.0)))).x) : _GLF_FUZZED(-12.11))) * 1.0) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u) : _GLF_FUZZED(workgroup_size)))) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-1231)))), 4, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, 0 ^ (64)))), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, ~ (~ (4)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) / _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | 0)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), min(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1)))) ^ (1u ^ 1u), clamp((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(14980) : _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) | (1))))))), min(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1)) | (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) ^ 0), 1))) / 1)))) / 1u)))) ^ (_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | 0u)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(min(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1)), (min(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ (_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) + 0u)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), min(subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 + (~ (1)))))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))) / 1, (false ? _GLF_FUZZED(89855) : (_GLF_IDENTITY(1, max(1, 1))) / _GLF_IDENTITY(1, (1) | 0))))))) ^ (1u ^ 1u)))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    return;
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (virtual_gid) | (virtual_gid))], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, false)))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))).x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)))))))))))), true, false)))) || false)), true)), false || (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-704.486), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0], _GLF_FUZZED(float(true))), bvec2(true, false))))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)))), true, false)))) || false)), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6470.0086) : _GLF_IDENTITY(1.0, (1.0) - 0.0))))) > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false) && true, true && ((false) && true)), _GLF_IDENTITY(false, false || (false)), true, true)), false || (bool(bvec4(_GLF_IDENTITY((false) && true, true && ((false) && true)), _GLF_IDENTITY(false, false || (false)), true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(223.824, 37.61)) : injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-556.681)), bool(false))), injectionSwitch.x)))) > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (true && (_GLF_IDENTITY(false, ! (! (false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((false ? -838.824 : 5.3))), bool(false)))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
