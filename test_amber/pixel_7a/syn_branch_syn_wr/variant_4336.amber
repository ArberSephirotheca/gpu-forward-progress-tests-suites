#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(5.6, -5281.2466), mat2(1.0) * (vec2(5.6, -5281.2466)))) : injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.6, -5281.2466)) : injectionSwitch)).y)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)) - 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)))), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(6746u, 966u, 140981u)) : _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(1300u, 169482u, 97720u)) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)))))), _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))))))))).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)), gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)))))), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))))))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)))))), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))))))) >> uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))))))))))).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))))))).x))) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), min(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) + uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(min(gl_WorkGroupID, gl_WorkGroupID), (min(gl_WorkGroupID, gl_WorkGroupID)) + uvec3(0u, 0u, 0u))).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (gl_WorkGroupID))))), clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)))), (false ? _GLF_FUZZED(10098u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED((false ? uvec3(136058u, 24472u, 29601u) : uvec3(20683u, 99681u, 158134u))) : _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) | uvec3(0u, 0u, 0u), max((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) | uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) - (uvec3(0u, 0u, 0u) & _GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), (uvec3(181959u, 163764u, 166817u)) >> uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), (uvec3(181959u, 163764u, 166817u)) >> uvec3(0u, 0u, 0u)))), (true ? uvec3(uvec3(_GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), (uvec3(181959u, 163764u, 166817u)) >> uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(51666u, 15295u, 33617u))))))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), (uvec3(181959u, 163764u, 166817u)) >> uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), (uvec3(181959u, 163764u, 166817u)) >> uvec3(0u, 0u, 0u)))), (true ? uvec3(uvec3(_GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), (uvec3(181959u, 163764u, 166817u)) >> uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(51666u, 15295u, 33617u)))))))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), (uvec3(181959u, 163764u, 166817u)) >> uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), (uvec3(181959u, 163764u, 166817u)) >> uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), (uvec3(181959u, 163764u, 166817u)) >> uvec3(0u, 0u, 0u)))) | (uvec3(_GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), (uvec3(181959u, 163764u, 166817u)) >> uvec3(0u, 0u, 0u)))))), (true ? uvec3(uvec3(_GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), (uvec3(181959u, 163764u, 166817u)) >> uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(51666u, 15295u, 33617u))))))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), (_GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), max(uvec3(181959u, 163764u, 166817u), uvec3(181959u, 163764u, 166817u)))) >> uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(181959u, 163764u, 166817u), (uvec3(181959u, 163764u, 166817u)) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))), (true ? uvec3(uvec3(_GLF_IDENTITY(uvec3(181959u, 163764u, _GLF_IDENTITY(166817u, clamp(166817u, 166817u, _GLF_IDENTITY(166817u, clamp(166817u, 166817u, _GLF_IDENTITY(166817u, min(166817u, 166817u))))))), (uvec3(181959u, 163764u, 166817u)) >> uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(51666u, 15295u, 33617u)))))))))) : _GLF_FUZZED(uvec3(165623u, 164927u, 147257u))))))))).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(((subgroup_local_id >> subgroup_id) | uvec3(126215u, 71115u, 54463u))))), gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x) * ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))), gl_WorkGroupID)).x)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x) * ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x) - 0u) : _GLF_FUZZED(uvec3(51385u, 143620u, 6512u).s))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x) * ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x) * ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x) * ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID), (clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)) | (clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))).x, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))).x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))).x))))), min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) - uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x))) | 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), (gl_WorkGroupID)))) | uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x), (min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)) - 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))).x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))))).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x))))))) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x))))));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec3(uint(7u), 1u, 0u))))))) | (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(12.88)), vec2(_GLF_FUZZED((2947.7323)), (injectionSwitch)[1]), bvec2(false, true))).y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))) % subgroup_size, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(uvec3(_GLF_IDENTITY(185576u, (_GLF_IDENTITY(185576u, uint(_GLF_IDENTITY(uvec3(185576u, 1u, 1u), ~ (~ (uvec3(185576u, 1u, 1u))))))) >> 0u), 16220u, 102141u)[2]))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), clamp(_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) - 0), 0))))) << ivec2(0, 0)))), ~ (~ (~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), ((int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))) - 0), (true ? ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))) : _GLF_FUZZED(20961))), ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), (true ? int(ivec2(1, 0)) : _GLF_FUZZED(34597)))), 0)) << ivec2(0, 0))))))))), 1)), 1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))) % subgroup_size) >> 0u))), ((subgroup_local_id + 1) % subgroup_size) | _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) - 0u), ((subgroup_local_id + 1) % subgroup_size))))), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(clamp(1, 1, 1), (true ? clamp(1, 1, 1) : _GLF_FUZZED(-72379))))) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0)))), clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), clamp(_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), ~ (~ (~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(_GLF_IDENTITY(0, (0) << 0), 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(_GLF_IDENTITY(0, (0) << 0), 0))), 1, ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))), 1), max(ivec4(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(_GLF_IDENTITY(0, (0) << 0), 0))), 1, ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))), 1), ivec4(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(_GLF_IDENTITY(0, (0) << 0), 0))), 1, ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))), 1)))), (int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(_GLF_IDENTITY(0, (0) << 0), 0))), 1, ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))), 1), max(ivec4(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(_GLF_IDENTITY(0, (0) << 0), 0))), 1, ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))), 1), ivec4(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(_GLF_IDENTITY(0, (0) << 0), 0))), 1, ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))), 1))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), (true ? ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))) : _GLF_FUZZED(20961))), ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))))), 1)), 1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) + 0))))))), 1, 1))) % subgroup_size) >> 0u))), ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))) % subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))), uint(uvec3((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))), (0u | 0u), 1u))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), clamp(_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), ~ (~ (~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))), _GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), (0 ^ 0))))) << ivec2(0, 0)))), (true ? ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))) : _GLF_FUZZED(20961))), ~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 0), (ivec2(1, 0)) << ivec2(0, 0))))))))), 1)), 1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))) % subgroup_size) >> 0u))), ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) >> 0))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), clamp((int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), min((int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))))), (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))))), clamp(_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), ~ (~ (~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))), _GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), (true ? ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))) : _GLF_FUZZED(20961))), ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), clamp(_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), ~ (~ (~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))), _GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), (true ? ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))) : _GLF_FUZZED(20961))), ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), clamp(_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), ~ (~ (~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))), _GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (_GLF_IDENTITY(ivec2(1, 0), (false ? _GLF_FUZZED(ivec2(26745, -46605)) : ivec2(1, 0)))) << ivec2(0, 0)))), (true ? ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))) : _GLF_FUZZED(20961))), ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))))), clamp(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), clamp(_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), ~ (~ (~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))), _GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), (true ? ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))) : _GLF_IDENTITY(_GLF_FUZZED(20961), clamp(_GLF_IDENTITY(_GLF_FUZZED(20961), ~ (~ (_GLF_FUZZED(20961)))), _GLF_FUZZED(20961), _GLF_IDENTITY(_GLF_FUZZED(20961), ~ (~ (_GLF_FUZZED(20961)))))))), ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))))), ~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), clamp(_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), ~ (~ (~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))), _GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, _GLF_IDENTITY(0, (0 ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) | (0)))))), (true ? ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))) : _GLF_FUZZED(20961))), ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))), (false ? _GLF_FUZZED(-902) : (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), clamp(_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), ~ (~ (~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))), _GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, _GLF_IDENTITY(0, (0 ^ (0 >> _GLF_IDENTITY(int(3), int(3)))) | (0)))))), (true ? ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))) : _GLF_FUZZED(20961))), ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))))))), ~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), ~ (~ (~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))), _GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), (true ? ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))) : _GLF_FUZZED(20961))), ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))), 0 | (clamp(_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), ~ (~ (~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))), _GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))), (true ? ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0)))) : _GLF_FUZZED(20961))), ~ (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))))))))))))))))), 1)), 1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(clamp(1, 1, 1), 0 | (_GLF_IDENTITY(clamp(1, 1, 1), max(clamp(1, 1, 1), clamp(1, 1, 1))))))) % subgroup_size) >> 0u))), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uint((subgroup_local_id + 1))), (uint(uint((subgroup_local_id + 1)))) << 0u)) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)))) >> 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED((subgroup_local_id ++))))], uint(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))), (bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, true)), (bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, true))) || false), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, true)), (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), true && (false || (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, true))) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, true)), (bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, true))) || false), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, true)), (bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, true))) || false))))))))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, false || (true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, true))) || false))), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, true)), (bool(bvec4(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true)))), false, false, true))) || false))), true))))))))))) || false)), true)))), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))))), bvec2(bvec2(bvec2(false, true)))), true, false)), true))), true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((182.155 - mat2(-5.7, -9.3, 9.1, -42.26))) : mat2(1.0))) * (injectionSwitch)) * mat2(1.0))))).y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), (false ? _GLF_FUZZED(max(-52745, -97607)) : _GLF_IDENTITY(4, 0 | (4)))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false, true))), false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), (! (! (false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, true, false, true)), true, false, false)), (bool(bvec4(bool(bvec4(false, true, false, true)), true, false, false))) || false)))), (! (! (false))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))) >> 0u)) << 0u))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, true))), false)), true && (bool(bvec2((_GLF_DEAD(false)), false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, true)))))))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, true)))))))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY((read) ^ 0u, _GLF_IDENTITY(((read) ^ 0u) | 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(((read) ^ 0u) | 0u, 0u), (_GLF_IDENTITY(uvec2(((read) ^ 0u) | 0u, 0u), (uvec2(((_GLF_IDENTITY(read, uint(uvec4(read, 0u, 0u, ((((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, 0u + (_GLF_IDENTITY(7u, min(7u, 7u))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))) ^ 0u) | 0u, 0u)) | (uvec2(((read) ^ 0u) | 0u, 0u)))) ^ uvec2(0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((read) ^ 0u), max(((read) ^ 0u), _GLF_IDENTITY(((read) ^ 0u), ~ (~ (((read) ^ 0u)))))) | 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u))))), (uvec2(((read) ^ 0u) | 0u, 0u)) | (uvec2(((read) ^ 0u) | 0u, 0u)))) ^ uvec2(0u, 0u))), min(uint(_GLF_IDENTITY(uvec2(((read) ^ 0u) | 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u))))), (uvec2(((read) ^ 0u) | 0u, 0u)) | (uvec2(((read) ^ 0u) | 0u, 0u)))) ^ uvec2(0u, 0u), uvec2(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY(_GLF_IDENTITY((read), min((read), (read))), max(_GLF_IDENTITY((read), min((read), (read))), _GLF_IDENTITY(_GLF_IDENTITY((read), min((read), (read))), ~ (~ (_GLF_IDENTITY((read), min((read), (read)))))))) ^ 0u) | 0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)))), uvec2(0u, 0u) | ((_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u))))))) << uvec2(0u, 0u))), (uvec2(((read) ^ 0u) | 0u, 0u)) | (uvec2(((read) ^ 0u) | 0u, 0u)))) ^ uvec2(0u, 0u)), ~ (~ (uvec2((_GLF_IDENTITY(_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u))))), (uvec2(((read) ^ 0u) | 0u, 0u)) | (uvec2(((read) ^ 0u) | 0u, 0u)))) ^ uvec2(0u, 0u))))))))), uint(_GLF_IDENTITY(uvec2(((read) ^ 0u) | 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), _GLF_IDENTITY((read), ((read)) / 1u))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), _GLF_IDENTITY((uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)), (false ? _GLF_FUZZED(uvec2(166814u, 50406u)) : (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)))) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u))))), (_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))))))), ((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u)))))))) + (0u | 0u)), 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)))))) / uvec2(1u, 1u)), (uvec2(((read) ^ 0u) | 0u, 0u)) | (uvec2(((read) ^ 0u) | 0u, 0u)))) ^ uvec2(0u, 0u)))))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((read) ^ 0u), max(((read) ^ 0u), _GLF_IDENTITY(((read) ^ 0u), ~ (~ (((read) ^ 0u)))))) | 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u))))), (uvec2(((read) ^ 0u) | 0u, 0u)) | (uvec2(((read) ^ 0u) | 0u, 0u)))) ^ uvec2(0u, 0u))), min(uint(_GLF_IDENTITY(uvec2(((read) ^ 0u) | 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u))))), (uvec2(((read) ^ 0u) | 0u, 0u)) | (uvec2(((read) ^ 0u) | 0u, 0u)))) ^ uvec2(0u, 0u), uvec2(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY(_GLF_IDENTITY((read), min((read), (read))), max(_GLF_IDENTITY((read), min((read), (read))), _GLF_IDENTITY(_GLF_IDENTITY((read), min((read), (read))), ~ (~ (_GLF_IDENTITY((read), min((read), (read)))))))) ^ 0u) | 0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)))), uvec2(0u, 0u) | ((_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u))))))) << uvec2(0u, 0u))), (uvec2(((read) ^ 0u) | 0u, 0u)) | (uvec2(((read) ^ 0u) | 0u, 0u)))) ^ uvec2(0u, 0u)), ~ (~ (uvec2((_GLF_IDENTITY(_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u))))), (uvec2(((read) ^ 0u) | 0u, 0u)) | (uvec2(((read) ^ 0u) | 0u, 0u)))) ^ uvec2(0u, 0u))))))))), uint(_GLF_IDENTITY(uvec2(((read) ^ 0u) | 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), _GLF_IDENTITY((read), ((read)) / 1u))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), _GLF_IDENTITY((uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)), (false ? _GLF_FUZZED(uvec2(166814u, 50406u)) : (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)))) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u))))), (_GLF_IDENTITY(uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))))))), ((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u)))))))) + (0u | 0u)), 0u), (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)) | (uvec2((_GLF_IDENTITY((read), min((read), (read))) ^ 0u) | 0u, 0u)))))) / uvec2(1u, 1u)), (uvec2(((read) ^ 0u) | 0u, 0u)) | (uvec2(((read) ^ 0u) | 0u, 0u)))) ^ uvec2(0u, 0u))))))) * 1u) * 1u)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false)))), true, true, true))), true)))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)) && true)))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)) && true)))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, false || (false))), bvec2(bvec4(bvec2(false, false), false, true))))), _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), bool(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))), (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(15.63)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), (bool(bvec4(_GLF_DEAD(false), false, true, false))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-158.014)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
