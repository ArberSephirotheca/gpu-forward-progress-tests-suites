#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_118 {
 mat3x2 _f0;
 uvec4 _f1;
 mat3 _f2;
 mat4x3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_117 {
 ivec3 _f0;
} ;

struct _GLF_struct_119 {
 vec4 _f0;
 _GLF_struct_117 _f1;
 bvec4 _f2;
 mat2 _f3;
 ivec3 _f4;
 _GLF_struct_118 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_115 {
 mat2 _f0;
 mat3x4 _f1;
 bool _f2;
 mat4x3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_116 {
 _GLF_struct_115 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_113 {
 uvec2 _f0;
 mat3 _f1;
 mat3x4 _f2;
 bvec4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_112 {
 uint _f0;
 mat3 _f1;
 float _f2;
} ;

struct _GLF_struct_114 {
 _GLF_struct_112 _f0;
 _GLF_struct_113 _f1;
} ;

struct _GLF_struct_110 {
 mat3x4 _f0;
 mat4x3 _f1;
 mat2 _f2;
 vec2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_109 {
 uvec3 _f0;
 mat3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_108 {
 bvec3 _f0;
} ;

struct _GLF_struct_107 {
 uvec4 _f0;
} ;

struct _GLF_struct_111 {
 _GLF_struct_107 _f0;
 mat2 _f1;
 mat3x4 _f2;
 _GLF_struct_108 _f3;
 _GLF_struct_109 _f4;
 int _f5;
 _GLF_struct_110 _f6;
} ;

struct _GLF_struct_105 {
 mat2x4 _f0;
 float _f1;
 uint _f2;
 uvec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_106 {
 _GLF_struct_105 _f0;
 bvec4 _f1;
 mat2 _f2;
 ivec2 _f3;
 int _injected_loop_counter;
 vec4 _f4;
 float _f5;
} ;

struct _GLF_struct_120 {
 bool _f0;
 _GLF_struct_106 _f1;
 _GLF_struct_111 _f2;
 _GLF_struct_114 _f3;
 _GLF_struct_116 _f4;
 bvec4 _f5;
 _GLF_struct_119 _f6;
} ;

struct _GLF_struct_102 {
 mat2 _f0;
 vec2 _f1;
 mat4x2 _f2;
 ivec3 _f3;
 bool _f4;
 bool _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_101 {
 mat3 _f0;
 mat3x2 _f1;
 ivec3 _f2;
 vec3 _f3;
 bool _f4;
} ;

struct _GLF_struct_100 {
 mat2x3 _f0;
 mat3x4 _f1;
 int _f2;
 vec3 _f3;
} ;

struct _GLF_struct_103 {
 _GLF_struct_100 _f0;
 _GLF_struct_101 _f1;
 _GLF_struct_102 _f2;
} ;

struct _GLF_struct_104 {
 uint subgroup_local_id;
 _GLF_struct_103 _f0;
} ;

struct _GLF_struct_99 {
 bvec3 _f0;
 mat2x4 _f1;
 int _injected_loop_counter;
} ;

struct _GLF_struct_96 {
 mat3 _f0;
 int _f1;
} ;

struct _GLF_struct_95 {
 mat3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_97 {
 mat4x3 _f0;
 vec4 _f1;
 _GLF_struct_95 _f2;
 _GLF_struct_96 _f3;
} ;

struct _GLF_struct_93 {
 ivec3 _f0;
 uvec3 _f1;
 vec4 _f2;
 uvec3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_94 {
 _GLF_struct_93 _f0;
} ;

struct _GLF_struct_91 {
 mat3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_90 {
 vec4 _f0;
 mat3 _f1;
 vec4 _f2;
 mat2 _f3;
 uvec4 _f4;
 int _f5;
} ;

struct _GLF_struct_89 {
 mat2x4 _f0;
 uvec4 _f1;
 vec2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_92 {
 _GLF_struct_89 _f0;
 mat4x3 _f1;
 _GLF_struct_90 _f2;
 bvec3 _f3;
 _GLF_struct_91 _f4;
 uvec4 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_87 {
 vec2 _f0;
 uvec4 _f1;
 float _f2;
 mat2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_86 {
 mat2x4 _f0;
 bvec3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_85 {
 mat2x4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_84 {
 bool _f0;
 mat2 _f1;
 mat3 _f2;
 mat3x4 _f3;
 ivec3 _f4;
 mat2 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_83 {
 mat2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_88 {
 _GLF_struct_83 _f0;
 _GLF_struct_84 _f1;
 float _f2;
 _GLF_struct_85 _f3;
 _GLF_struct_86 _f4;
 _GLF_struct_87 _f5;
} ;

struct _GLF_struct_81 {
 ivec2 _f0;
 float _f1;
 ivec4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_82 {
 mat4 _f0;
 _GLF_struct_81 _f1;
 float _f2;
} ;

struct _GLF_struct_98 {
 _GLF_struct_82 _f0;
 _GLF_struct_88 _f1;
 mat4x3 _GLF_SWITCH_0_40v;
 _GLF_struct_92 _f2;
 _GLF_struct_94 _f3;
 ivec3 _f4;
 _GLF_struct_97 _f5;
} ;

struct _GLF_struct_79 {
 int _f0;
} ;

struct _GLF_struct_80 {
 uint workgroup_size;
 mat3x4 _f0;
 _GLF_struct_79 _f1;
 ivec3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_76 {
 ivec2 _f0;
 mat3 _f1;
 mat2x3 _f2;
 vec2 _f3;
 ivec3 _f4;
 bool _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_75 {
 vec3 _f0;
 bool _f1;
 ivec4 _f2;
 int _injected_loop_counter;
} ;

struct _GLF_struct_77 {
 vec2 _f0;
 _GLF_struct_75 _f1;
 bool _f2;
 vec4 _f3;
 _GLF_struct_76 _f4;
} ;

struct _GLF_struct_73 {
 mat3x4 _f0;
 float _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_72 {
 mat3x4 _f0;
} ;

struct _GLF_struct_71 {
 vec3 _f0;
 ivec4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_70 {
 uvec4 _f0;
 vec2 _f1;
 int _f2;
} ;

struct _GLF_struct_74 {
 _GLF_struct_70 _f0;
 uvec4 _f1;
 uvec2 _f2;
 _GLF_struct_71 _f3;
 _GLF_struct_72 _f4;
 _GLF_struct_73 _f5;
} ;

struct _GLF_struct_78 {
 _GLF_struct_74 _f0;
 _GLF_struct_77 _f1;
 int _f2;
} ;

struct _GLF_struct_69 {
 bvec4 _f0;
 vec4 _f1;
 ivec2 _f2;
 int _injected_loop_counter;
} ;

struct _GLF_struct_66 {
 int _f0;
 vec3 _f1;
} ;

struct _GLF_struct_65 {
 uvec2 _f0;
 bvec2 _f1;
 mat4x3 _f2;
 bvec3 _f3;
 ivec3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_64 {
 mat2x4 _f0;
 mat4x3 _f1;
 int _f2;
 uvec2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_67 {
 _GLF_struct_64 _f0;
 _GLF_struct_65 _f1;
 _GLF_struct_66 _f2;
} ;

struct _GLF_struct_63 {
 mat2 _f0;
} ;

struct _GLF_struct_61 {
 mat4x2 _f0;
 mat3 _f1;
 mat3x4 _f2;
 mat3 _f3;
 mat4 _f4;
 int _f5;
} ;

struct _GLF_struct_60 {
 bool _f0;
 ivec2 _f1;
 bvec2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_59 {
 mat3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_62 {
 bvec3 _f0;
 _GLF_struct_59 _f1;
 vec4 _f2;
 _GLF_struct_60 _f3;
 mat3x2 _f4;
 vec2 _f5;
 _GLF_struct_61 _f6;
} ;

struct _GLF_struct_57 {
 mat3x2 _f0;
 mat4 _f1;
 vec2 _f2;
 float _f3;
 int _injected_loop_counter;
 vec3 _f4;
} ;

struct _GLF_struct_56 {
 mat3x4 _f0;
 bvec2 _f1;
 uvec4 _f2;
 int _f3;
 mat4x2 _f4;
 float _f5;
 bool _f6;
} ;

struct _GLF_struct_58 {
 _GLF_struct_56 _f0;
 _GLF_struct_57 _f1;
} ;

struct _GLF_struct_55 {
 mat2x3 _f0;
 uint _f1;
 mat3 _f2;
 ivec2 _f3;
 mat3x2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_68 {
 _GLF_struct_55 _f0;
 _GLF_struct_58 _f1;
 _GLF_struct_62 _f2;
 _GLF_struct_63 _f3;
 _GLF_struct_67 _f4;
} ;

struct _GLF_struct_53 {
 bool _f0;
 mat2x3 _f1;
 mat2x4 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_51 {
 mat3x2 _f0;
 mat3x2 _f1;
 bvec3 _f2;
 mat2x3 _f3;
 mat2x3 _f4;
 mat3x2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_50 {
 mat3x4 _f0;
 bvec3 _f1;
 bool _f2;
 ivec4 _f3;
 ivec3 _f4;
 bool _f5;
} ;

struct _GLF_struct_49 {
 mat3x2 _f0;
 mat2x4 _f1;
 vec3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_48 {
 float _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 mat3x4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_52 {
 _GLF_struct_48 _f0;
 uint _f1;
 _GLF_struct_49 _f2;
 _GLF_struct_50 _f3;
 _GLF_struct_51 _f4;
} ;

struct _GLF_struct_54 {
 mat3x4 _f0;
 uint num_workgroup;
 vec2 _f1;
 vec2 _f2;
 mat3x2 _f3;
 _GLF_struct_52 _f4;
 _GLF_struct_53 _f5;
} ;

struct _GLF_struct_45 {
 bool _f0;
 ivec3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_44 {
 uint _f0;
 int _f1;
} ;

struct _GLF_struct_43 {
 bvec2 _f0;
 mat2x3 _f1;
 bvec2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_46 {
 _GLF_struct_43 _f0;
 _GLF_struct_44 _f1;
 vec2 _f2;
 vec4 _f3;
 _GLF_struct_45 _f4;
} ;

struct _GLF_struct_47 {
 vec2 _GLF_SWITCH_0_100v;
 _GLF_struct_46 _f0;
} ;

struct _GLF_struct_40 {
 uvec4 _f0;
 mat4 _f1;
 vec2 _f2;
 mat4x2 _f3;
 mat3x4 _f4;
 int _f5;
} ;

struct _GLF_struct_39 {
 ivec2 _f0;
 uvec2 _f1;
 int _f2;
 mat2x3 _f3;
 uint _f4;
 vec3 _f5;
} ;

struct _GLF_struct_41 {
 vec4 _f0;
 _GLF_struct_39 _f1;
 _GLF_struct_40 _f2;
 vec3 _f3;
 vec2 _f4;
 bvec3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_37 {
 vec4 _f0;
} ;

struct _GLF_struct_36 {
 mat4x3 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 mat3x2 _f3;
 mat2 _f4;
 bvec3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_38 {
 _GLF_struct_36 _f0;
 bool _f1;
 uvec2 _f2;
 _GLF_struct_37 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_34 {
 ivec4 _f0;
 mat3x2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_33 {
 bvec4 _f0;
 uvec2 _f1;
 ivec2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_35 {
 int _injected_loop_counter;
 _GLF_struct_33 _f0;
 _GLF_struct_34 _f1;
} ;

struct _GLF_struct_31 {
 ivec3 _f0;
 float _f1;
 vec3 _f2;
 ivec2 _f3;
 bool _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_32 {
 _GLF_struct_31 _f0;
} ;

struct _GLF_struct_42 {
 _GLF_struct_32 _f0;
 vec2 _f1;
 _GLF_struct_35 _f2;
 mat3x2 _f3;
 _GLF_struct_38 _f4;
 _GLF_struct_41 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_29 {
 ivec3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_27 {
 mat2x4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_26 {
 uvec4 _f0;
 mat4 _f1;
 ivec2 _f2;
 uvec4 _f3;
 vec3 _f4;
 mat4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_25 {
 bool _f0;
 mat3x2 _f1;
 mat4x2 _f2;
 mat3x4 _f3;
 mat2x3 _f4;
 mat2x4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_28 {
 mat3x2 _f0;
 uvec4 _f1;
 _GLF_struct_25 _f2;
 _GLF_struct_26 _f3;
 _GLF_struct_27 _f4;
 mat3x2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_23 {
 mat2x3 _f0;
 mat2x3 _f1;
 bvec4 _f2;
 mat4x3 _f3;
 uvec2 _f4;
 uvec4 _f5;
 uint _f6;
} ;

struct _GLF_struct_24 {
 uvec3 _f0;
 _GLF_struct_23 _f1;
} ;

struct _GLF_struct_21 {
 vec4 _f0;
 mat2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_22 {
 int _f0;
 _GLF_struct_21 _f1;
} ;

struct _GLF_struct_19 {
 ivec2 _f0;
 mat2 _f1;
 uvec2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_18 {
 float _f0;
 mat2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_20 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 ivec2 _f2;
 bvec3 _f3;
 uvec3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_30 {
 _GLF_struct_20 _f0;
 _GLF_struct_22 _f1;
 int _injected_loop_counter;
 _GLF_struct_24 _f2;
 _GLF_struct_28 _f3;
 _GLF_struct_29 _f4;
} ;

struct _GLF_struct_17 {
 vec2 _GLF_SWITCH_0_12v;
 float _f0;
 vec4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_14 {
 ivec2 _f0;
 ivec2 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
 mat3x4 _f4;
 bvec3 _f5;
 bool _f6;
} ;

struct _GLF_struct_13 {
 float _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 bvec3 _f2;
 vec4 _f3;
 int _f4;
 float _f5;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
 uint next_virtual_gid;
 bvec4 _f1;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 uvec4 _f1;
 bvec2 _f2;
 int _f3;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
} ;

struct _GLF_struct_8 {
 ivec4 _f0;
 int _f1;
 uint _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 mat4x2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_5 {
 float _f0;
 bool _f1;
} ;

struct _GLF_struct_4 {
 uint _f0;
 ivec4 _f1;
 mat4 _f2;
 mat4x2 _f3;
 bvec3 _f4;
 mat4x2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_3 {
 int _f0;
 ivec2 _f1;
 bvec3 _f2;
 mat4x2 _f3;
 vec3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 mat2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_12 {
 _GLF_struct_1 _f0;
 ivec4 _f1;
 uint subgroup_id;
 _GLF_struct_7 _f2;
 _GLF_struct_11 _f3;
 mat3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_1(_GLF_struct_0(mat2x4(1.0), mat2(1.0), mat2(1.0))), ivec4(1), gl_SubgroupID, _GLF_struct_7(_GLF_struct_2(uvec3(1u), mat2x3(1.0), mat3x4(1.0), mat2x4(1.0)), _GLF_struct_3(1, ivec2(1), bvec3(true), mat4x2(1.0), vec3(1.0), mat4x3(1.0)), _GLF_struct_4(1u, ivec4(1), mat4(1.0), mat4x2(1.0), bvec3(true), mat4x2(1.0), mat2(1.0)), _GLF_struct_5(1.0, true), _GLF_struct_6(mat2x3(1.0), mat4x2(1.0), uvec3(1u))), _GLF_struct_11(_GLF_struct_8(ivec4(1), 1, 1u, bvec4(true)), _GLF_struct_9(mat4x2(1.0)), _GLF_struct_10(ivec2(1), uvec4(1u), bvec2(true), 1)), mat3(1.0));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     switch(_GLF_SWITCH((0 & -64530)))
      {
       case 69:
       ivec4 _GLF_SWITCH_0_0v[19], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
       case 83:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(true)
        {
         switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(1), int(1)))))
          {
           case 0:
           if(true)
            {
             switch(_GLF_SWITCH(0))
              {
               case 89:
               mat4x2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
               case 47:
               for(               mat3x2(-8575.8056, -12.66, -6.3, -6071.9270, 4.6, -7.6);
 true; mat2x4(mat3x4(mat3(0.9, -3898.8709, 163.849, 5.4, 11.19, 995.816, -37.55, 459.180, -870.424))))
                {
                 injectionSwitch;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   ;
                  }
                 else
                  {
                  }
                 vec4 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v[1];
                 ;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 bvec2 _GLF_SWITCH_1_4v[96], _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v;
                 do
                  {
                   mat4(-83.52);
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 mat2 _GLF_SWITCH_1_7v[54], _GLF_SWITCH_1_8v[8];
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 int _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v[64], _GLF_SWITCH_1_11v;
                 ;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
               case 0:
               case 80:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               case 91:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 barrier();
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                   return;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   continue;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               {
                ivec4 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
                if(_GLF_DEAD(false))
                 barrier();
                for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec2(0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                 {
                  ;
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                ivec3(85012, 31183, 92430);
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    continue;
                   }
                  return;
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  barrier();
                 }
                mat2x3(797.130, 8.5, 9286.6082, -6.1, -374.626, 255.901);
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                if(_GLF_DEAD(false))
                 barrier();
                (mat4x3(mat2x3(-7.4, -8.1, 5.3, -5.1, 4088.1111, -4295.8224)) + mat4x3(75.86, 15.87, -612.577, 2.9, 1.6, 2.5, -3.8, -5148.0047, -56.97, -8808.2990, -4232.7062, -52.76));
                if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                 return;
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                 }
                uvec4(151699u, 52902u, 163014u, 49107u);
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 continue;
                uvec3(115706u, 59365u, 170825u);
                if(_GLF_DEAD(false))
                 return;
                mat2x4 _GLF_SWITCH_0_5v;
               }
               if(_GLF_DEAD(false))
                barrier();
               case 66:
               case 14:
               for(               (-5.2 , (6.2 + mat2x4(-8.3, -464.761, -329.601, 9.7, 4.7, -151.392, -5.5, 6.2)));
 (-46145 < -83716); (+ mat3x4(-7559.2537, -2.9, -7.5, 585.734, 5018.1939, 4.2, -6950.8846, 1.6, -21.58, -3.1, -494.756, -0.6)))
                {
                 mat4x3(-4067.7488, -2.6, 9.2, -96.27, -6.2, -55.26, -57.88, 7.8, 6.1, 9.5, 6.8, 5.0);
                 mat2(-33.37, 111.248, -3945.0838, 4217.5353);
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   mat3(-0.6, -776.262, -751.228, -7954.8641, -3.3, 1683.7102, 5401.8418, -7583.0321, -354.395);
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 mat4x2(mat3x4(6.5, -29.42, 8.4, -68.40, -7746.0431, -9382.7390, 46.33, 6684.1740, -1.5, -2.1, 8120.6463, -91.17));
                }
               ivec3 _GLF_SWITCH_0_6v[82];
               case 93:
               -17731;
               case 26:
               if(false)
                {
                 switch(_GLF_SWITCH((0 ^ 0)))
                  {
                   case 0:
                   case 43:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 79:
                   case 8:
                   case 60:
                   case 62:
                   case 82:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 94:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     return;
                    }
                   break;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     continue;
                    }
                   case 54:
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                   mat2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                   case 50:
                   ;
                   default:
                   1;
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
               case 54:
               do
                {
                 float _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v;
                 if(_GLF_DEAD(false))
                  continue;
                 uvec4(72220u, 85044u, 28010u, 124271u);
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   return;
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 (vec2(-722.561, 8.2));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                }
               while((sign(vec4(-5.5, -370.699, 70.57, 2.8)) == vec4(5319.0894, -5.8, -3.3, -3205.9733)));
               default:
               1;
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           bvec2(false, false);
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               119437u;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           break;
           default:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           1;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             ;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          break;
         (mat3(-8807.5871, -59.51, 740.792, 4026.7321, -53.56, -30.62, -213.003, -747.956, -4058.1457) + -3.8);
        }
       case 0:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       case 49:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 46:
       case 55:
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        break;
       for(_GLF_struct_68 _GLF_struct_replacement_68 = _GLF_struct_68(_GLF_struct_55(mat2x3(1.0), 1u, mat3(1.0), ivec2(1), mat3x2(1.0), vec3(1.0)), _GLF_struct_58(_GLF_struct_56(mat3x4(1.0), bvec2(true), uvec4(1u), 1, mat4x2(1.0), 1.0, true), _GLF_struct_57(mat3x2(1.0), mat4(1.0), vec2(1.0), 1.0, (0 << _GLF_IDENTITY(int(3), int(3))), vec3(1.0))), _GLF_struct_62(bvec3(true), _GLF_struct_59(mat3(1.0), bvec4(true)), vec4(1.0), _GLF_struct_60(true, ivec2(1), bvec2(true), mat3x2(1.0)), mat3x2(1.0), vec2(1.0), _GLF_struct_61(mat4x2(1.0), mat3(1.0), mat3x4(1.0), mat3(1.0), mat4(1.0), 1)), _GLF_struct_63(mat2(1.0)), _GLF_struct_67(_GLF_struct_64(mat2x4(1.0), mat4x3(1.0), 1, uvec2(1u), uvec2(1u)), _GLF_struct_65(uvec2(1u), bvec2(true), mat4x3(1.0), bvec3(true), ivec3(1), uvec4(1u)), _GLF_struct_66(1, vec3(1.0)))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_68._f1._f1._injected_loop_counter < 1); _GLF_struct_replacement_68._f1._f1._injected_loop_counter ++)
        {
         barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       break;
       case 88:
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         if((mat3(-4.1, 2.6, -0.5, 2409.8694, 9.7, 793.234, -7.0, -3048.2736, 2851.0500) == mat3(2687.5719, 9569.3187, 4.9, 5.1, -9.3, -37.59, -70.90, -9.4, 8.3)))
          {
           mat4x3 _GLF_SWITCH_0_7v[12], _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
           while(true)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       return;
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   return;
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
                    break;
                  }
                }
               barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               vec3(-7.9, 76.88, 86.24);
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             vec4 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v[4];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             _GLF_struct_17 _GLF_struct_replacement_17;
             mat2x3 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
             for(bvec4 _GLF_SWITCH_0_16v[74], _GLF_SWITCH_0_17v; true; ivec3(-22290, ivec2(23654, 44212)))
              {
               if(_GLF_DEAD(false))
                return;
               findMSB(43910);
               bvec2 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   continue;
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                barrier();
               ivec3(32316, 62199, 91428);
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 break;
                }
               _GLF_SWITCH_0_8v;
               mat3x4 _GLF_SWITCH_0_21v;
               91386;
               if(_GLF_DEAD(false))
                return;
               (false ? (ivec3(18276, 51246, 40473) - -80961) : (-82144 / ivec3(11839, 50465, -35555)));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               uvec3(98431u, 151370u, 39088u);
              }
             if((ivec4(-52701, 49021, 21287, -76632) != _GLF_SWITCH_0_1v))
              {
               bvec3(false, true, true);
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                 barrier();
                }
               uvec2 _GLF_SWITCH_0_22v[93], _GLF_SWITCH_0_23v;
               _GLF_SWITCH_0_23v;
               mat2x4(4281.7690, 7232.9195, 40.56, 19.53, -304.651, 4324.2963, -70.12, 20.95);
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 (floatBitsToInt(vec3(-272.391, 351.565, 5.6)) ^ -90499);
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(_GLF_struct_69 _GLF_struct_replacement_69 = _GLF_struct_69(bvec4(true), vec4(1.0), ivec2(1), (0 >> _GLF_IDENTITY(int(7), int(7)))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_69._injected_loop_counter < 1); _GLF_struct_replacement_69._injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               mat4x2(2.7, -2.6, 1.7, -57.62, -2437.9527, 4.9, -53.75, -7.5);
               mat2x4 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v[46];
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               vec4 _GLF_SWITCH_0_27v[12], _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v[64];
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   break;
                  }
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
              }
             ;
            }
           mat3x2(6.6, -4.1, -5946.8288, 0.3, -7881.1425, 3.4);
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 40:
               float _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[78];
               case 99:
               ivec2 _GLF_SWITCH_2_2v;
               if(_GLF_DEAD(false))
                barrier();
               case 0:
               do
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               break;
               if(_GLF_DEAD(false))
                break;
               case 18:
               if(_GLF_DEAD(false))
                barrier();
               if(true)
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 90:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               do
                {
                 mat4x3(-15.64, 7.0, -5.2, -952.595, -90.50, -14.84, -7.0, 477.188, -860.336, 7272.9335, -5.0, 920.066);
                }
               while(_GLF_WRAPPED_LOOP(false));
               default:
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 1;
                }
               else
                {
                }
              }
            }
           {
            injectionSwitch;
            if(_GLF_DEAD(false))
             return;
            if((false != true))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                return;
               }
              bvec2 _GLF_SWITCH_0_30v[34], _GLF_SWITCH_0_31v;
              ;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
               barrier();
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  do
                   {
                    barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                if(_GLF_DEAD(false))
                 break;
               }
              else
               {
                if(_GLF_DEAD(false))
                 break;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                 barrier();
                barrier();
               }
              float _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
             }
            else
             {
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
               barrier();
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 break;
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                 {
                  for(_GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(_GLF_struct_20(_GLF_struct_18(1.0, mat2(1.0), mat3x4(1.0)), _GLF_struct_19(ivec2(1), mat2(1.0), uvec2(1u), ivec3(1)), ivec2(1), bvec3(true), uvec3(1u), vec4(1.0)), _GLF_struct_22(1, _GLF_struct_21(vec4(1.0), mat2(1.0), vec4(1.0))), (0 >> _GLF_IDENTITY(int(7), int(7))), _GLF_struct_24(uvec3(1u), _GLF_struct_23(mat2x3(1.0), mat2x3(1.0), bvec4(true), mat4x3(1.0), uvec2(1u), uvec4(1u), 1u)), _GLF_struct_28(mat3x2(1.0), uvec4(1u), _GLF_struct_25(true, mat3x2(1.0), mat4x2(1.0), mat3x4(1.0), mat2x3(1.0), mat2x4(1.0), vec3(1.0)), _GLF_struct_26(uvec4(1u), mat4(1.0), ivec2(1), uvec4(1u), vec3(1.0), mat4(1.0), mat2(1.0)), _GLF_struct_27(mat2x4(1.0), vec3(1.0)), mat3x2(1.0), mat4(1.0)), _GLF_struct_29(ivec3(1), vec3(1.0))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_30._injected_loop_counter != 1); _GLF_struct_replacement_30._injected_loop_counter ++)
                   {
                    switch(_GLF_SWITCH((91149 & 0)))
                     {
                      case 65:
                      if(_GLF_DEAD(false))
                       return;
                      ;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      case 69:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      52591;
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(false))
                       barrier();
                      case 0:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                       continue;
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          return;
                         }
                        return;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                       }
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      case 79:
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         break;
                        barrier();
                       }
                      case 19:
                      if(_GLF_DEAD(false))
                       barrier();
                      case 55:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      case 29:
                      case 64:
                      return;
                      for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) + 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           break;
                          if(_GLF_DEAD(false))
                           break;
                          barrier();
                         }
                       }
                      break;
                      default:
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        1;
                       }
                      else
                       {
                       }
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      break;
                     }
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  if(_GLF_DEAD(false))
                   barrier();
                 }
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              bvec2 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
              uvec2 _GLF_SWITCH_0_37v[91], _GLF_SWITCH_0_38v[74];
              mat4x2 _GLF_SWITCH_0_39v[33];
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                return;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 continue;
               }
              vec3(-149.598, 0.6, 1195.2674);
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  barrier();
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                   barrier();
                 }
               }
              for(int _injected_loop_counter = (0 | ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
               {
                uvec3(181018u, 92777u, 26315u);
                if(_GLF_DEAD(false))
                 barrier();
               }
              _GLF_struct_98 _GLF_struct_replacement_98;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 barrier();
                mat2x4(-312.741, -52.47, -131.001, 4668.6215, -1.0, -31.23, 5.2, 8299.8572);
               }
              else
               {
               }
              subgroup_size;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              if(_GLF_DEAD(false))
               continue;
             }
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(false))
               break;
              ;
             }
            else
             {
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
               }
              if(_GLF_DEAD(false))
               barrier();
             }
            ;
            mat2x4 _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v;
            if(_GLF_DEAD(false))
             continue;
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             vec2(-13.78, -295.663);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             ivec4 _GLF_SWITCH_0_43v[6], _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               mat4x3(mat2(-3.0, 2.8, -61.22, 0.6));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     return;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 break;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             ;
            }
            if(_GLF_DEAD(false))
             barrier();
            vec4(-26.95, -505.911, 88.38, 7.3);
            if(_GLF_DEAD(false))
             barrier();
            float _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(false)
             {
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
               {
                ;
               }
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                mat4x3(-2.3, -38.61, 70.04, 4092.5462, -4473.4482, 9.5, -5648.8871, -3589.2565, 5.7, -8546.3009, -8132.5795, -55.91);
               }
              if(_GLF_DEAD(false))
               barrier();
              bvec3(false, true, false);
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                do
                 {
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    vec3(1.0, -219.855, -9.7);
                   }
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               }
              else
               {
               }
              ivec2(-69630, 90371);
             }
            else
             {
              mat4 _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              if(_GLF_DEAD(false))
               barrier();
              bvec2 _GLF_SWITCH_0_52v;
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               continue;
             }
           }
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           (mat4(-0.6, -8519.7507, -37.12, -73.64, -241.083, -2525.6710, -73.08, -486.655, 690.994, -0.8, 55.58, 18.22, 6693.1337, -520.027, 31.31, -7726.5966));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 0 ^ (0))); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
           for(uvec3 _GLF_SWITCH_0_53v; false; bvec3(true, true, false))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               for(_GLF_struct_42 _GLF_struct_replacement_42 = _GLF_struct_42(_GLF_struct_32(_GLF_struct_31(ivec3(1), 1.0, vec3(1.0), ivec2(1), true, mat4x2(1.0))), vec2(1.0), _GLF_struct_35(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), _GLF_struct_33(bvec4(true), uvec2(1u), ivec2(1), bvec3(true)), _GLF_struct_34(ivec4(1), mat3x2(1.0), uvec2(1u))), mat3x2(1.0), _GLF_struct_38(_GLF_struct_36(mat4x3(1.0), mat4x3(1.0), mat2x3(1.0), mat3x2(1.0), mat2(1.0), bvec3(true), uvec4(1u)), true, uvec2(1u), _GLF_struct_37(vec4(1.0)), mat2x4(1.0)), _GLF_struct_41(vec4(1.0), _GLF_struct_39(ivec2(1), uvec2(1u), 1, mat2x3(1.0), 1u, vec3(1.0)), _GLF_struct_40(uvec4(1u), mat4(1.0), vec2(1.0), mat4x2(1.0), mat3x4(1.0), 1), vec3(1.0), vec2(1.0), bvec3(true), mat3(1.0)), mat4x3(1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_42._f2._injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_struct_replacement_42._f2._injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     continue;
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       return;
                       if(_GLF_DEAD(false))
                        barrier();
                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
              }
             mat2x3 _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v[88];
             mat4x2 _GLF_SWITCH_0_57v, _GLF_SWITCH_0_58v, _GLF_SWITCH_0_59v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                }
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             mat2x3 _GLF_SWITCH_0_60v[51];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(             mat3x4(-9777.5101, -201.560, 413.707, -3.4, 9.8, 371.372, 5.8, 0.9, 718.649, 3.8, 9814.2740, -5.8);
 true; mat4x2(-2.0, -27.11, -5556.7861, 378.763, 862.775, -50.63, -367.324, -0.4))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
               if(_GLF_DEAD(false))
                return;
               bvec4(bvec2(false, false), false, false);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 return;
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) * (0))); _injected_loop_counter --)
              {
               for(_GLF_struct_78 _GLF_struct_replacement_78 = _GLF_struct_78(_GLF_struct_74(_GLF_struct_70(uvec4(1u), vec2(1.0), 1), uvec4(1u), uvec2(1u), _GLF_struct_71(vec3(1.0), ivec4(1), vec2(1.0)), _GLF_struct_72(mat3x4(1.0)), _GLF_struct_73(mat3x4(1.0), 1.0, bvec2(true))), _GLF_struct_77(vec2(1.0), _GLF_struct_75(vec3(1.0), true, ivec4(1), (((1 & 1) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(findLSB(18320)))))) >> _GLF_IDENTITY(int(1), int(1)))), true, vec4(1.0), _GLF_struct_76(ivec2(1), mat3(1.0), mat2x3(1.0), vec2(1.0), ivec3(1), true, bvec2(true))), 1); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_78._f1._f1._injected_loop_counter > (0 | (0 >> _GLF_IDENTITY(int(2), int(2))))); _GLF_struct_replacement_78._f1._f1._injected_loop_counter --)
                {
                 while(true)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                        barrier();
                       continue;
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
                        barrier();
                       continue;
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   for(int _injected_loop_counter = (0 & -86562); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     greaterThanEqual(uvec4(155767u, 23854u, 46447u, 18779u), (mat2x4(534.540, 42.18, 5368.7132, -21.67, -369.507, -4120.3933, 965.948, -2.3) , uvec4(28394u, 181876u, 13751u, 141949u)));
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   subgroup_size;
                   bvec2 _GLF_SWITCH_0_61v;
                   mix(vec3(4.7, -71.32, 49.78), vec3(-2.8, 97.43, -57.01), bvec3(false, false, true));
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
                    {
                     mat2x3(mat2x4(-607.509, -47.12, -9.7, 5.3, -22.65, 11.64, -20.77, 4.0));
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       continue;
                      }
                     bvec3((146913u >= 50702u), false, (uvec3(151809u, 170426u, 61937u) != uvec3(103429u, 25554u, 7560u)));
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                        {
                         return;
                        }
                      }
                    }
                  }
                }
              }
             if(_GLF_DEAD(false))
              return;
             _GLF_SWITCH_0_1v;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           {
            if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))
             {
              ((mat3(-102.309, 24.31, -539.360, -1799.9291, 1.2, -6.6, -8.4, 5.1, -1639.9697) * mat3(-4560.5475, -4.8, 8321.7780, 185.767, 4.1, 52.84, 7.3, -25.02, -7.2)) / mat3(-3.5, -5.4, 879.476, -6.6, 27.38, 146.648, 95.34, 610.800, -81.70));
             }
            else
             {
             }
            if(_GLF_DEAD(false))
             {
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -29362)); _injected_loop_counter --)
               {
                barrier();
               }
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            bool _GLF_SWITCH_0_62v, _GLF_SWITCH_0_63v;
            mat4 _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v, _GLF_SWITCH_0_66v[33];
            if(_GLF_DEAD(false))
             barrier();
            vec3 _GLF_SWITCH_0_67v;
            (step(-15.89, _GLF_SWITCH_0_67v) * mat2x3(2189.6912, 2.5, -7.9, -822.374, -97.95, 255.791));
            mat3x2 _GLF_SWITCH_0_68v[7], _GLF_SWITCH_0_69v[6];
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(false)
             {
              if(_GLF_DEAD(false))
               barrier();
              mat4x3 _GLF_SWITCH_0_70v, _GLF_SWITCH_0_71v, _GLF_SWITCH_0_72v;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  return;
                 }
               }
             }
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 16:
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   (55533 + _GLF_SWITCH_0_1v);
                  }
                 else
                  {
                  }
                 uvec2(23818u, 123213u);
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   ivec3(ivec2(-91719, -51393), 72383);
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 uint _GLF_SWITCH_2_0v;
                 do
                  {
                   mat4x3(-504.927, -3.5, roundEven((+ 0.3)), sinh(1.5), -69.01, 13.60, -391.124, -4.1, -4167.9058, trunc(dot(injectionSwitch, vec2(-9367.3157, 459.112))), -2.5, -7016.0533);
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 (_GLF_SWITCH_0_2v / 84436);
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) - 0) : _GLF_FUZZED(79336))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   -1262.0013;
                  }
                 do
                  {
                   mat3x4((mat4x3(3108.0135, 28.04, 445.281, -8.4, 0.4, 1.9, 82.60, 177.582, 37.76, 6135.7715, -4.2, 5.4) * mat3x4(mat3x2(346.650, -16.98, -9.7, -6.5, 18.87, 410.786))));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 uint _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v[95];
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(false);
               case 0:
               for(_GLF_struct_99 _GLF_struct_replacement_99 = _GLF_struct_99(bvec3(true), mat2x4(1.0), int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_99._injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _GLF_struct_replacement_99._injected_loop_counter ++)
                {
                 return;
                }
               break;
               case 45:
               ;
               default:
               1;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           do
            {
             (max(uvec3(156728u, 157649u, 83071u), uvec3(191889u, 73994u, 21111u)) - uvec3(15818u, 104189u, 123873u));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           {
            for(            -5433.4635;
 true; (ivec3(-34770, 73797, 33260) * ivec3(18904, 45471, 98147)))
             {
              (mat2x3(9440.6418, -7.2, 1.4, -9.6, 96.19, 3888.6165));
              float _GLF_SWITCH_0_73v;
              bool _GLF_SWITCH_0_74v[31];
              if(_GLF_DEAD(false))
               barrier();
              mat4 _GLF_SWITCH_0_75v, _GLF_SWITCH_0_76v;
              do
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    return;
                   }
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
               {
               }
              else
               {
                ;
               }
              if(_GLF_DEAD(false))
               barrier();
              lessThan(uvec2(167500u, 93261u), uvec2(152277u, 45236u));
              if(_GLF_DEAD(false))
               barrier();
              vec4(931.011, -22.06, 77.50, 25.06);
              ivec3 _GLF_SWITCH_0_77v, _GLF_SWITCH_0_78v;
             }
            for(int _injected_loop_counter = (-16390 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
             {
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                   barrier();
                  do
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      barrier();
                     }
                    findMSB(ivec3(31625, -35174, -36786));
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       continue;
                      barrier();
                     }
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(false))
                       break;
                      ;
                     }
                    (mat3(1.6, -5.6, -476.056, 80.53, -66.14, 662.801, 2.4, 86.73, -127.887) * mat3(-7.9, -2.1, -456.418, -913.589, -7216.5921, 0.3, -1214.8138, -3.1, 452.946));
                   }
                  while((mat3x2(9813.9578, 8.2, 119.441, 151.618, -6.3, 9704.2846) == outerProduct(injectionSwitch, vec3(-5.7, -71.17, -8.0))));
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 return;
               }
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if((true))
             {
              do
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
               barrier();
              -61184;
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              mat4x3(7.8, -869.646, -29.11, 5.4, 1245.6881, 778.304, -6.8, -96.28, 494.919, -4120.9254, 307.318, -473.509);
              if(_GLF_DEAD(false))
               barrier();
              mat4x3 _GLF_SWITCH_0_79v, _GLF_SWITCH_0_80v, _GLF_SWITCH_0_81v;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  barrier();
                 }
                else
                 {
                 }
               }
              int _GLF_SWITCH_0_82v;
              mat4x3 _GLF_SWITCH_0_83v, _GLF_SWITCH_0_84v[2], _GLF_SWITCH_0_85v;
              mat4 _GLF_SWITCH_0_86v, _GLF_SWITCH_0_87v;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  continue;
                 }
                return;
               }
              vec3 _GLF_SWITCH_0_88v;
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               barrier();
              ivec2 _GLF_SWITCH_0_89v[54];
              vec3 _GLF_SWITCH_0_90v, _GLF_SWITCH_0_91v[59];
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            subgroup_size;
            if(_GLF_DEAD(false))
             return;
            vec4 _GLF_SWITCH_0_92v, _GLF_SWITCH_0_93v;
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               barrier();
             }
            uvec2 _GLF_SWITCH_0_94v, _GLF_SWITCH_0_95v[42], _GLF_SWITCH_0_96v[94];
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              break;
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              if(_GLF_DEAD(false))
               return;
              return;
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_DEAD(false))
             break;
           }
           for(           transpose((sqrt(-5298.8851) + mat2(7.5, -4194.9590, -7906.1949, -6.5)));
 any(bvec4(false, true, true, false)); mat2x3(length(vec3(590.389, 112.641, 783.952))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             mat4x3 _GLF_SWITCH_0_97v[54], _GLF_SWITCH_0_98v;
             vec4 _GLF_SWITCH_0_99v[88];
             {
              _GLF_struct_47 _GLF_struct_replacement_47;
              mat4x3 _GLF_SWITCH_0_101v, _GLF_SWITCH_0_102v;
              if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
               {
               }
              else
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              mat4 _GLF_SWITCH_0_103v[91], _GLF_SWITCH_0_104v, _GLF_SWITCH_0_105v;
              mat4 _GLF_SWITCH_0_106v;
              ;
              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
               }
              else
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
                 barrier();
                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                 {
                  ;
                 }
               }
              if(_GLF_DEAD(false))
               break;
             }
             if(_GLF_DEAD(false))
              barrier();
             mat4x2(3.6, 7283.3201, 50.22, 695.847, -6425.1495, 15.40, -2.0, -4.3);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             injectionSwitch;
            }
           while(false)
            {
             if(true)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               do
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   subgroup_size;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               -66407;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
               ivec4 _GLF_SWITCH_0_107v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             {
              mat2x3 _GLF_SWITCH_0_108v, _GLF_SWITCH_0_109v;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                     }
                    else
                     {
                      barrier();
                      if(_GLF_DEAD(false))
                       return;
                     }
                   }
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
                   return;
                 }
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
               barrier();
              _GLF_SWITCH_0_1v;
              if(_GLF_DEAD(false))
               barrier();
              bool _GLF_SWITCH_0_110v[97];
             }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             mat2 _GLF_SWITCH_0_111v, _GLF_SWITCH_0_112v, _GLF_SWITCH_0_113v[31];
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     continue;
                    }
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                barrier();
               ((ivec4(10212, -26324, -16205, -78355) | -29032) + min(ivec4(22304, 28493, 7688, -26602), 83015));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             ivec4 _GLF_SWITCH_0_114v, _GLF_SWITCH_0_115v, _GLF_SWITCH_0_116v;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
               continue;
              }
             if(_GLF_DEAD(false))
              break;
             for(             outerProduct(vec2(-54.77, 2.7), vec4(70.97, 1.8, -6147.6529, -35.05));
 (-74262 < 17402); lessThanEqual(ldexp(vec3(-7.7, 4.8, -2.5), ivec3(-88638, -92351, -44629)), vec3(-61.17, 3.8, -672.705)))
              {
               mat2(-25.45, 952.129, 9816.6041, 9.1);
              }
             for(             mat2x3(979.899, -1.2, -8556.6738, -7.0, -8159.5767, 8.6);
 true; bvec2(false, true))
              {
               mat4x3(-3.9, 893.844, 92.95, -0.1, 8.6, 24.08, -4.0, 47.45, 279.295, 594.852, 7.4, 6264.7060);
               vec3(-549.685, -9.7, 282.014);
               vec4 _GLF_SWITCH_0_117v[85], _GLF_SWITCH_0_118v[23];
               ;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 (_GLF_SWITCH_0_111v / _GLF_SWITCH_0_112v);
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
               mat4x3 _GLF_SWITCH_0_119v, _GLF_SWITCH_0_120v;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 else
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
                return;
               ivec3 _GLF_SWITCH_0_121v, _GLF_SWITCH_0_122v, _GLF_SWITCH_0_123v[1];
               ;
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             ;
            }
           else
            {
            }
           {
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             return;
            mat3x4((mat4x3(1.5, -947.385, 7.7, -3.1, 4.7, 8709.6484, 2.2, 5816.3734, 78.04, -64.65, 38.88, -232.165) - smoothstep(-12.56, 118.003, 5.1)));
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
            ivec3 _GLF_SWITCH_0_124v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              do
               {
                barrier();
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             }
            do
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             barrier();
            for(bvec3 _GLF_SWITCH_0_125v, _GLF_SWITCH_0_126v[14], _GLF_SWITCH_0_127v; (196467u != subgroup_size); uvec4(195792u, 89168u, 69424u, 41761u))
             {
              (4.7 / mat3x2(-644.909, -7.2, -4.3, 78.72, -7.5, -9.4));
              (+ mat3x4(2.2, -692.412, -3.3, -944.000, -7.1, 0.6, -9660.3256, -9308.8021, -0.2, 0.9, 6802.6637, -6.9));
              float _GLF_SWITCH_0_128v;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              ivec2 _GLF_SWITCH_0_129v, _GLF_SWITCH_0_130v[85];
              uint _GLF_SWITCH_0_131v[82], _GLF_SWITCH_0_132v[37], _GLF_SWITCH_0_133v;
              if(_GLF_DEAD(false))
               barrier();
              mat2x4(-5.0, -898.768, 95.63, 21.87, 258.115, -3862.5458, -587.388, -3085.4241);
              ivec4 _GLF_SWITCH_0_134v, _GLF_SWITCH_0_135v;
             }
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
             {
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 continue;
                barrier();
               }
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                barrier();
               }
              else
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               continue;
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             return;
            mat4x3 _GLF_SWITCH_0_136v, _GLF_SWITCH_0_137v[62];
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               return;
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             break;
            if(false)
             {
              mat2x4(-455.192, -636.216, 9.6, -1915.2774, 2.5, 1.8, 5183.4832, 61.86);
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0)); _injected_loop_counter ++)
               {
                do
                 {
                  vec3(613.023, -700.903, 7350.9462);
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                 }
                else
                 {
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  return;
                 }
               }
              ;
              do
               {
                if(_GLF_DEAD(false))
                 return;
               }
              while(_GLF_WRAPPED_LOOP(false));
              mat3 _GLF_SWITCH_0_138v, _GLF_SWITCH_0_139v;
             }
            else
             {
              switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(4), int(4)))))
               {
                case 0:
                case 96:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 {
                  for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    return;
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                 }
                (- vec3(-7.0, 948.053, -492.099));
                if(_GLF_DEAD(false))
                 continue;
                ((subgroup_size >> (20791u << subgroup_size)) * uvec4(121427u, 38918u, 96336u, 196625u));
                (78970u / uvec3(91459u, 26097u, 90672u));
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                case 87:
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 barrier();
                mat2x3 _GLF_SWITCH_0_140v, _GLF_SWITCH_0_141v, _GLF_SWITCH_0_142v;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  return;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                break;
                default:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                do
                 {
                  1;
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               }
             }
            do
             {
              switch(_GLF_SWITCH((((0 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) * 1))) << _GLF_IDENTITY(int(8), int(8)))))
               {
                case 34:
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    return;
                   }
                 }
                mat4x2(411.439, 0.0, -91.69, -7.5, -7.0, 3.4, 5.9, 2752.1284);
                case 0:
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  return;
                 }
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    (_GLF_SWITCH_0_124v == abs(_GLF_SWITCH_0_124v));
                   }
                 }
                else
                 {
                 }
                (820.319 + mat2x4(-90.30, -7.3, -963.909, -61.47, -431.166, -9.7, 2761.9117, -3.7));
                break;
                case 54:
                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7)))))); _injected_loop_counter --)
                 {
                  (mat3(2.7, 32.99, -5.1, -5.0, 3.5, -3.4, 5.2, -6.0, 4.0) - mat3(4.0, -8.5, 88.53, 6.2, 2.1, -7.3, 32.03, 70.32, -75.78));
                 }
                case 38:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                mat4 _GLF_SWITCH_2_0v[16], _GLF_SWITCH_2_1v;
                default:
                1;
                if(_GLF_DEAD(false))
                 return;
               }
             }
            while((true || (ivec3(-44617, 79605, -4414) == ivec3(-2302, -19722, -62239))));
            bvec2(false, true);
            do
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  break;
                 }
                barrier();
                if(_GLF_DEAD(false))
                 continue;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  continue;
                 }
                return;
               }
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            for(bvec4 _GLF_SWITCH_0_143v, _GLF_SWITCH_0_144v[37], _GLF_SWITCH_0_145v[59]; (-9.6 < -878.617); uvec2(1112u, 112045u))
             {
              mat4(9.4, 29.69, 8339.7647, -113.902, -41.55, -9.2, 5.8, 43.25, -572.518, 9717.1588, 151.578, -1252.6712, -2156.3797, 179.698, -184.458, 8.4);
             }
            bvec2 _GLF_SWITCH_0_146v, _GLF_SWITCH_0_147v, _GLF_SWITCH_0_148v[88];
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             barrier();
           }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       default:
       1;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 _GLF_struct_104 _GLF_struct_replacement_104 = _GLF_struct_104(gl_SubgroupInvocationID, _GLF_struct_103(_GLF_struct_100(mat2x3(1.0), mat3x4(1.0), 1, vec3(1.0)), _GLF_struct_101(mat3(1.0), mat3x2(1.0), ivec3(1), vec3(1.0), true), _GLF_struct_102(mat2(1.0), vec2(1.0), mat4x2(1.0), ivec3(1), true, true, uvec4(1u))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_54 _GLF_struct_replacement_54 = _GLF_struct_54(mat3x4(1.0), gl_NumWorkGroups.x, vec2(1.0), vec2(1.0), mat3x2(1.0), _GLF_struct_52(_GLF_struct_48(1.0, mat2x4(1.0), mat3x2(1.0), mat3x4(1.0), bvec4(true)), 1u, _GLF_struct_49(mat3x2(1.0), mat2x4(1.0), vec3(1.0), bvec2(true)), _GLF_struct_50(mat3x4(1.0), bvec3(true), true, ivec4(1), ivec3(1), true), _GLF_struct_51(mat3x2(1.0), mat3x2(1.0), bvec3(true), mat2x3(1.0), mat2x3(1.0), mat3x2(1.0), vec2(1.0))), _GLF_struct_53(true, mat2x3(1.0), mat2x4(1.0), uvec4(1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_80 _GLF_struct_replacement_80 = _GLF_struct_80(gl_WorkGroupSize.x, mat3x4(1.0), _GLF_struct_79(1), ivec3(1), vec4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
    }
  }
 else
  {
  }
 for(_GLF_struct_120 _GLF_struct_replacement_120 = _GLF_struct_120(true, _GLF_struct_106(_GLF_struct_105(mat2x4(1.0), 1.0, 1u, uvec2(1u), mat4x3(1.0)), bvec4(true), mat2(1.0), ivec2(1), 0, vec4(1.0), 1.0), _GLF_struct_111(_GLF_struct_107(uvec4(1u)), mat2(1.0), mat3x4(1.0), _GLF_struct_108(bvec3(true)), _GLF_struct_109(uvec3(1u), mat3(1.0), uvec3(1u)), 1, _GLF_struct_110(mat3x4(1.0), mat4x3(1.0), mat2(1.0), vec2(1.0), mat3(1.0))), _GLF_struct_114(_GLF_struct_112(1u, mat3(1.0), 1.0), _GLF_struct_113(uvec2(1u), mat3(1.0), mat3x4(1.0), bvec4(true), mat2(1.0))), _GLF_struct_116(_GLF_struct_115(mat2(1.0), mat3x4(1.0), true, mat4x3(1.0), uvec3(1u)), bvec2(true)), bvec4(true), _GLF_struct_119(vec4(1.0), _GLF_struct_117(ivec3(1)), bvec4(true), mat2(1.0), ivec3(1), _GLF_struct_118(mat3x2(1.0), uvec4(1u), mat3(1.0), mat4x3(1.0), mat4x3(1.0)), mat2x3(1.0))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_120._f1._injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_struct_replacement_120._f1._injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(6), int(6)))))
      {
       case 0:
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       break;
       default:
       if(_GLF_DEAD(false))
        barrier();
       1;
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_struct_replacement_80.workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size + _GLF_struct_replacement_104.subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_15(_GLF_struct_13(1.0), _GLF_struct_14(ivec2(1), ivec2(1), mat4x2(1.0), mat2x3(1.0), mat3x4(1.0), bvec3(true), true), bvec3(true), vec4(1.0), 1, 1.0), workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size + ((_GLF_struct_replacement_104.subgroup_local_id + 1) % subgroup_size), bvec4(true));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_struct_replacement_104.subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[_GLF_struct_replacement_16.next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       switch(_GLF_SWITCH((_GLF_IDENTITY(0, 0 + (0)) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)))))
        {
         case 0:
         case 81:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          barrier();
         case 75:
         if(_GLF_DEAD(false))
          barrier();
         case 69:
         case 86:
         case 8:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         break;
         if(_GLF_DEAD(false))
          barrier();
         case 92:
         for(         mat3x2(11.94, 8807.2012, 7.0, 36.62, 7529.5112, -5.4);
 false; (mat2x4(-3617.4594, -9.7, 7.6, -3.6, 2791.5769, -2.1, -1367.3691, -3497.4987)))
          {
           ;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat2x4(-8.6, -37.32, 112.694, 7.1, 3.2, -73.99, 3196.3039, 1.1);
           while(true)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             greaterThanEqual(ivec4(-14688, 45296, -42903, 41624), ivec4(17417, -99868, 52924, 10717));
             mat4x2(-4.8, 797.003, 8834.3854, 9467.9195, -9.9, 0.8, 1.8, -323.200)[1];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             lessThan((workgroup_id & uvec3(49723u, 5721u, 191441u)), uvec3(2715u, 163414u, 156005u));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               mat2x3(-44.00, 425.441, 73.24, 68.76, -20.69, -947.139);
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             int _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
             mat3(mat3x2(-34.11, 3.1, 6.7, 5.5, 2.6, -595.609));
             ivec4 _GLF_SWITCH_2_3v;
             (vec3(1.1, -5378.7695, -5.5) , mat3x4(-4114.6666, 992.403, 213.659, 4119.9821, 2541.3624, -65.87, -9814.2570, -523.861, 37.53, -97.28, 3.6, 1.5));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
            }
           uvec3(33136u, 148939u, 69266u);
           mat2x4 _GLF_SWITCH_2_4v[73], _GLF_SWITCH_2_5v, _GLF_SWITCH_2_6v;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             continue;
            }
          }
         default:
         1;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
        return;
      }
    }
   atomicStore(buf[_GLF_struct_replacement_16.next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
