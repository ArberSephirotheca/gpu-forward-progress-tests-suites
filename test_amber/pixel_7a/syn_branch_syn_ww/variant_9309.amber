#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(false || (_GLF_DEAD(false))), ! (! (bool(false || (_GLF_DEAD(false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(false || (_GLF_DEAD(false))), ! (! (bool(false || (_GLF_DEAD(false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(false || (_GLF_DEAD(false))), ! (! (bool(false || (_GLF_DEAD(false))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(false || (_GLF_DEAD(false))), ! (! (bool(false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))) || false), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(732.889))), injectionSwitch.y)))), true)))) || false)) && true)))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))) || false), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(732.889))), injectionSwitch.y)))), true)))) || false)) && true))))))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))) || false), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(732.889))), injectionSwitch.y)))), true)))) || false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))) || false), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(732.889))), injectionSwitch.y)))), true)))) || false)) && true, ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-881.611, 2.6).g)), float(injectionSwitch.y), bool(true))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y) / 1.0))), (true ? injectionSwitch.y : _GLF_FUZZED(732.889))), injectionSwitch.y)))), true)))) || false)) && true)))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((length(vec3(-219.932, 443.198, -1.3)))) : injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec2(1.0, 1.0))), 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + vec2(0.0, 0.0)))), 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(length(vec4(0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))))), bool(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.2)), bool(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false, ((_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false) || false)))))))), false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((length(vec3(-219.932, 443.198, -1.3)))) : injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec2(1.0, 1.0))), 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + vec2(0.0, 0.0)))), 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(length(vec4(0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))))), bool(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.2)), bool(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false, ((_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false) || false)))))))), false))), false, false), true)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))))), false || (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))), (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))))))), bool(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)), true && (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && true)), _GLF_IDENTITY(true, ! (! (true))))))) || false))))))))))), false))), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true)))) || false)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true)))) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true)))) || false)))), ! (! (bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true)))) || false)))))))), true, false)))))))), false || (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true), (injectionSwitch.x < injectionSwitch.y)), true)))) && true)) || false))))))))), bool(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (mat2(injectionSwitch.x, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), clamp(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (mat2(injectionSwitch.x, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (mat2(injectionSwitch.x, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (mat2(injectionSwitch.x, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))))) > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))))))), false))), false, false))))))), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false), false, false))), true)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), 0.0 + (length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))), 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), min(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7499.3626)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(954.730)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(length(vec4(0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.0)), bool(false))) > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), 0.0 + (length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))), 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), min(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7499.3626)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(954.730)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(length(vec4(0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.0)), bool(false))) > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), 0.0 + (length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))), 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), min(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7499.3626)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(954.730)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(length(vec4(0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.0)), bool(false))) > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, false)))))) || false))))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))))) && true), true, false)))), false))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, exp(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0), transpose(transpose(mat3(injectionSwitch, 0.0, 1.0, exp(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0)))))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat2x3(mat2(1.0) * (injectionSwitch), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(vec2(mat2x3(mat2(1.0) * (injectionSwitch), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat2x3(mat2(1.0) * (injectionSwitch), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat2x3(mat2(1.0) * (injectionSwitch), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))).y) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))))), false || (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), true)))) || false)))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), true)))) || false)))))))))))), bool(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))))))), false))), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.4) : injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))))), false || (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))))))), bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))) || false)))))), false))), false, false))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0), length(0.0), 0.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0), length(0.0), 0.0, 1.0, 1.0, 1.0))))) < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) && true)))))))), ! (_GLF_IDENTITY(! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0), length(0.0), 0.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0), length(0.0), 0.0, 1.0, 1.0, 1.0))))) < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) && true))))))))), ! (! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0), length(0.0), 0.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0), length(0.0), 0.0, 1.0, 1.0, 1.0))))) < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) && true))))))))))))))))) || false)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x, (gl_WorkGroupSize.x) ^ 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(_GLF_IDENTITY(bool(bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, false))), ! (! (bool(bool(bvec4(false, false, true, false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.4), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch), (injectionSwitch)))[0], log(1.0) + (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[0])), _GLF_FUZZED((-1909.8058 - 1.0))), bvec2(true, false))).y) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), _GLF_IDENTITY(float(injectionSwitch.y), float(mat4x2(float(injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-208.266)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))), float(_GLF_FUZZED(float(100330u))), bool(_GLF_IDENTITY(false, (false) || false)))), 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), bool(true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(8365.1510), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_FUZZED(8365.1510)), bool(true)))), mix(float(_GLF_FUZZED(4355.9347)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(8365.1510), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_FUZZED(8365.1510)), bool(true)))), mix(float(_GLF_FUZZED(4.6)), float(float(_GLF_IDENTITY(_GLF_FUZZED(8365.1510), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_FUZZED(8365.1510)), bool(true))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true))), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false)), 0.0 + (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false)), float(mat2(mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false)), 1.0, 1.0, 1.0)))))) / 1.0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7299.1315)), vec2(_GLF_FUZZED(-2998.6961), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(8365.1510)), (false ? _GLF_FUZZED(310.234) : float(_GLF_FUZZED(8365.1510)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), (bool(true)) || false)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))))), float(_GLF_FUZZED(-66.59)), bool(false))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(691.535))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(8365.1510), mix(float(_GLF_FUZZED(-15.49)), float(_GLF_FUZZED(8365.1510)), bool(true)))), float(injectionSwitch.y), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, cos(0.0), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), 0.0, 0.0), transpose(transpose(mat3x4(injectionSwitch, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))), min(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, cos(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.4)), float(0.0), bool(true))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), transpose(transpose(mat3x4(injectionSwitch, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), transpose(transpose(mat3x4(injectionSwitch, cos(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)))))))).y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))) || false))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-9.1, -1.8)))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(8365.1510), min(_GLF_FUZZED(8365.1510), _GLF_FUZZED(8365.1510)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(407.105)))), (float(injectionSwitch.y)) - determinant(mat4(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), bool(true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)))))), _GLF_IDENTITY(bool(bvec4(! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)))))), false, true, true)), (bool(bvec4(! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)))))), false, true, true))) || false)))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)))))), _GLF_IDENTITY(bool(bvec4(! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)))))), false, true, true)), (bool(bvec4(! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)))))), false, true, true))) || false)))), false, true)))))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-280.198)), bvec2(true, false))))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.4), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], log(1.0) + ((injectionSwitch)[0])), _GLF_FUZZED((-1909.8058 - 1.0))), bvec2(true, false))).y) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0))).y), bool(true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false)))))))))), true && (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), _GLF_IDENTITY(float(injectionSwitch.y), (_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))) * round(length(normalize(vec2(1.0, 1.0))))), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), false || (bool(true)))), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (true)))), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false)))))))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9054.6952)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), ! (! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)))))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false))))))))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0))).y), bool(true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false)))))))))), true && (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), _GLF_IDENTITY(float(injectionSwitch.y), (_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))) * round(length(normalize(vec2(1.0, 1.0))))), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), false || (bool(true)))), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (true)))), min(mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(-66.59)), bool(false)))))))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9054.6952)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true))))), ! (! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8365.1510)), float(injectionSwitch.y), bool(true)))))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false))))))))))))))))))))))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) | 0u)], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) * 1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(-89586) : (4)))))), min(~ (4), ~ (4))))))) : _GLF_FUZZED(_GLF_IDENTITY(-82077, max(-82077, _GLF_IDENTITY(-82077, 0 | (-82077))))))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) << 0), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false)))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY((! (false)) || false, ((! (false)) || false) || false)), (_GLF_IDENTITY(! (false), false || (! (false)))) || false)))) && true)), false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY((! (false)) || false, ((! (false)) || false) || false)), (_GLF_IDENTITY(! (false), false || (! (false)))) || false)))) && true)), false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY((! (false)) || false, ((! (false)) || false) || false)), (_GLF_IDENTITY(! (false), false || (! (false)))) || false)))) && true)), false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, min((0u) / 1u, (0u) / 1u)))))) & 190061u), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(0u, (0u) / 1u) & 190061u), (0u & 183383u)), (_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))) | (_GLF_IDENTITY(0u, (0u) / 1u))) & 190061u), (0u & 183383u)), ~ (~ (uvec2((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) << 0u) / _GLF_IDENTITY(1u, (1u) + 0u)) & 190061u), _GLF_IDENTITY((0u & 183383u), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * ((0u & 183383u)))))))) | (uvec2((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (0u))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (0u))))), clamp(~ (~ (_GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (0u))))), ~ (~ (_GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (0u))))), ~ (~ (_GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (0u)))))))) | (~ (~ (_GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (0u)))))))) * 1u), (0u) / 1u) & _GLF_IDENTITY(190061u, (true ? 190061u : _GLF_FUZZED(next_virtual_gid)))), (0u & 183383u)))))) | (next_virtual_gid))], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | (64)), max(64, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(89201))))), _GLF_IDENTITY(4, max(4, 4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-419.871)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))), ! (! (! (false))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))))) && true))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))), ! (! (! (false))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))))) && true))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).x > injectionSwitch.y))))), (! ((! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))), ! (! (! (false))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))))) && true))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, false), true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
