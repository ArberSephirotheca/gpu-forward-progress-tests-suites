#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], mix(float(_GLF_FUZZED(8.5)), float(((injectionSwitch))[1]), bool(true)))), vec2(_GLF_FUZZED((- 1.8)), _GLF_FUZZED(2.0)), bvec2(false, false)))) * vec2(1.0, 1.0)) * mat2(1.0)).y))), true)))))))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, false || (false)), false))))
          barrier();
        }
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), (_GLF_IDENTITY(int(3), 0 ^ (int(3)))) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), int(_GLF_IDENTITY(8, max(8, 8))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | (1 ^ 1))) / 1, 0 ^ ((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | (1 ^ 1))) / 1))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), false)))))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))));
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = _GLF_IDENTITY((1 ^ 0), int(int((1 ^ _GLF_IDENTITY(0, 1 * (0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, ~ (~ (3)))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(1, (1) | 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))));
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), min((int(0)), _GLF_IDENTITY((int(0)), clamp((int(0)), (int(0)), (int(0)))))) + 0)), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), min((int(0)), _GLF_IDENTITY((int(0)), clamp((int(0)), (int(0)), (int(0)))))) + 0))) / 1), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), ~ (_GLF_IDENTITY(~ ((int(0))), _GLF_IDENTITY(int(ivec3(~ ((int(0))), 0, 0)), ~ (~ (int(ivec3(~ ((int(0))), 0, 0)))))))) + 0))) * 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               do
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))));
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), clamp(1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(4), int(4)), int(int(_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(4), int(4))))), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(true ? int(4) : _GLF_FUZZED(findLSB(subgroup_local_id)), (false ? _GLF_FUZZED(76038) : true ? int(4) : _GLF_FUZZED(findLSB(subgroup_local_id)))))), int(4))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) * (0 ^ 1))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY(int(4), _GLF_IDENTITY((false ? _GLF_FUZZED(-52703) : int(4)), clamp((false ? _GLF_FUZZED(-52703) : int(4)), _GLF_IDENTITY((false ? _GLF_FUZZED(-52703) : int(4)), int(ivec4(_GLF_IDENTITY((false ? _GLF_FUZZED(-52703) : int(4)), 1 * ((false ? _GLF_FUZZED(-52703) : int(4)))), 1, 1, 1))), (false ? _GLF_FUZZED(-52703) : int(4)))))) * (0 | 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), (0 << _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6))))), (0 << _GLF_IDENTITY(int(6), int(6))) ^ 0), ~ (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, max(6, 6)), 6, 6))))))), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, ~ (~ (6)))), int(6))) ^ 0)))))))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) + 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) || false)); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-5456.1627, 2274.0227)) : mat2(1.0) * (injectionSwitch)))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0), mat2(mat4(mat2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-92.06)), float(1.0), bool(true))) : _GLF_FUZZED(-93.24))), 1.0)))))), injectionSwitch)).y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((5.1 - _GLF_IDENTITY(_GLF_IDENTITY(170.788, 1.0 * (170.788)), mix(float(_GLF_IDENTITY(170.788, 1.0 * (_GLF_IDENTITY(170.788, clamp(170.788, 170.788, 170.788))))), float(_GLF_FUZZED(3618.5577)), bool(false))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(350.373)), bvec2(true, false))).x < injectionSwitch.y))), true), bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, true), true, false)))))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sqrt(0.0), sin(0.0)))).y) - 0.0), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))), true), bvec3(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(true, ! (! (true))), true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), true))))), (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(true, ! (! (true))), true)))))) && true))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.3)), bool(false)))) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(mat4x2(41.62, 3.1, -91.24, 3584.3097, 6.5, -8.4, 4.8, 1.0)[0]) : sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED((41.15 - -5415.0540)), _GLF_FUZZED(-73.80)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true))))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))), true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) + sqrt(vec2(0.0, 0.0))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(true, ! (! (true))), true))))), (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(true, ! (! (true))), true)))))) && true))))), false)))))))
                        {
                         barrier();
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.0)), bool(false)))))))
                            barrier();
                          }
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
                  barrier();
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0)))))], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))))) << 0u, ((workgroup_size * workgroup_id) << 0u) | ((workgroup_size * workgroup_id) << 0u)), _GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (true ? _GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), (true ? float(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch.x)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), (true ? float(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch.x)))), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), (true ? float(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch.x))))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(mat2(vec4(0.0, 0.0, 0.0, 0.0)), (mat2(vec4(0.0, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0))))))), determinant(mat4(0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), (true ? float(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch.x)))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-85.97))))), (true ? float(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), (workgroup_size) / 1u) * workgroup_id) << 0u), (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), (workgroup_size) / 1u) * workgroup_id) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0)), injectionSwitch.x)), 1u, 0u))) / 1u) : _GLF_FUZZED(num_workgroup))))), max(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, ((workgroup_size * workgroup_id) << 0u) | ((workgroup_size * workgroup_id) << 0u)), _GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (true ? _GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), (true ? float(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch.x)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), (true ? float(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch.x)))), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(-5.8) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), (true ? float(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch.x))))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), (true ? float(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch.x)))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8867.4744))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(mat2(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), clamp(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 0.0, 0.0))))))), (false ? _GLF_FUZZED(vec4(4465.7592, -4.8, 2.1, 7.4)) : vec4(mat2(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), clamp(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 0.0, 0.0))))))))))), (true ? float(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, 0u)), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(workgroup_size, workgroup_size), min(min(workgroup_size, workgroup_size), _GLF_IDENTITY(min(workgroup_size, workgroup_size), (min(workgroup_size, workgroup_size)) >> 0u)))), (workgroup_size) / 1u) * workgroup_id) << 0u), (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), (workgroup_size) / 1u) * workgroup_id) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0)), injectionSwitch.x)), 1u, 0u), (uvec4(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(workgroup_size, workgroup_size), min(min(workgroup_size, workgroup_size), _GLF_IDENTITY(min(workgroup_size, workgroup_size), (min(workgroup_size, workgroup_size)) >> 0u)))), (workgroup_size) / 1u) * workgroup_id) << 0u), (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), (workgroup_size) / 1u) * workgroup_id) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0)), injectionSwitch.x)), 1u, 0u)) << uvec4(0u, 0u, 0u, 0u)))) / 1u) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, ((workgroup_size * workgroup_id) << 0u) | ((workgroup_size * workgroup_id) << 0u)), _GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (true ? _GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ONE(_GLF_IDENTITY(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)) + (1.0)), injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), (true ? float(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.6)), bool(false))), 0.0, 0.0)) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), injectionSwitch.x)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(49.09)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))) : _GLF_FUZZED(-40.84))), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), (true ? float(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch.x)))), (uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), (true ? float(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch.x))))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-29.94) : float(vec4(0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch.x)))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_FUZZED(788.701)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), (true ? float(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-8303.9877)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), (workgroup_size) / 1u) * workgroup_id) << 0u, uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), (workgroup_size) / 1u) * workgroup_id) << 0u, 1u, 1u)))), (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), (workgroup_size) / 1u) * workgroup_id) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0)), injectionSwitch.x)), 1u, 0u))) / 1u) : _GLF_FUZZED(num_workgroup))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)))) ^ (0u | 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)))) ^ (0u | 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)))) ^ (0u | 0u)), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)))) ^ (0u | 0u)), 1u, 0u))) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)))) ^ (0u | 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)))) ^ (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)))) ^ (0u | 0u)))))))) * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, _GLF_IDENTITY(uint(uvec4((workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec3(workgroup_id, 0u, 0u), (uvec3(workgroup_id, 0u, 0u)) >> uvec3(0u, 0u, 0u))))))) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)))) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, (1u) << 0u), 0u)), (true ? _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)) * workgroup_id) << 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x))), (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)) * 1u) | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec2(1.0, 1.0))))), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | 0u))), 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(cosh(-4.0)))))), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), clamp(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), vec3(vec3(vec3(1.0, 0.0, 1.0)))))))), 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(122.278))) : _GLF_IDENTITY(_GLF_FUZZED(62.08), max(_GLF_IDENTITY(_GLF_FUZZED(62.08), max(_GLF_FUZZED(62.08), _GLF_FUZZED(62.08))), _GLF_FUZZED(62.08))))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.1)), bool(false)))))), injectionSwitch.x))) | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.1)), float(1.0), bool(true))), 1.0)), 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0))), injectionSwitch.x))))), ~ (~ ((_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), min(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), min(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0))), vec3(1.0, 0.0, 1.0))), vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), vec3(vec3(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.0)))), bool(true))))))))))), mix(float(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), clamp(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), vec3(vec3(vec3(1.0, 0.0, 1.0))))))))), float(_GLF_FUZZED(-454.477)), bool(_GLF_IDENTITY(false, (false) && true)))), 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sin(9.1)))), 1.0))), tan(0.0) + (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sin(9.1)))), 1.0))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.1)), bool(false)))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x))) | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.1)), (false ? _GLF_FUZZED(-984.419) : _GLF_IDENTITY(float(_GLF_FUZZED(0.1)), clamp(float(_GLF_FUZZED(0.1)), float(_GLF_FUZZED(0.1)), _GLF_IDENTITY(float(_GLF_FUZZED(0.1)), clamp(float(_GLF_FUZZED(0.1)), float(_GLF_FUZZED(0.1)), float(_GLF_FUZZED(0.1)))))))), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-34.38)))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)))))))), 1u * ((uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec3(0.0, 1.0, 0.0))[1], (_GLF_IDENTITY((vec3(0.0, 1.0, 0.0))[1], clamp((vec3(0.0, 1.0, 0.0))[1], (vec3(0.0, 1.0, 0.0))[1], (vec3(0.0, 1.0, 0.0))[1]))) / 1.0), _GLF_FUZZED(-4.0)), vec3(_GLF_FUZZED((- -50.09)), _GLF_FUZZED(-4810.5482), (vec3(0.0, 1.0, 0.0))[2]), _GLF_IDENTITY(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))), false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false))), true)))))))))), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), clamp(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), cos(vec3(0.0, 0.0, 0.0)) * (_GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), mix(vec3(((vec3(1.0, 0.0, 1.0)))[0], ((vec3(1.0, 0.0, 1.0)))[1], ((vec3(1.0, 0.0, 1.0)))[2]), vec3(_GLF_FUZZED((1.7 - 7.0)), _GLF_FUZZED(-88.97), _GLF_FUZZED(7126.5837)), bvec3(false, false, false))))) + vec3(0.0, 0.0, 0.0)), vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (vec3(1.0, 0.0, 1.0)) * mat3(1.0)))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(20.43)), bool(false))), (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(_GLF_IDENTITY(20.43, max(20.43, 20.43)))), bool(false)))) / 1.0), 0.0, 0.0, 0.0))), injectionSwitch.x))))), _GLF_IDENTITY((uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.9)), float(1.0), bool(true)))), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), max(float(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, length(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), (true ? _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) : _GLF_FUZZED(-4788.5470))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0)), float(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)))))))))), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.5))), 0.0, 0.0))), injectionSwitch.x))), 0u | ((uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.9)), float(1.0), bool(true)))), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), max(float(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, length(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), (true ? _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) : _GLF_FUZZED(-4788.5470))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0)), float(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)))))))))), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.5))), 0.0, 0.0))), injectionSwitch.x)))))))), 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id))) << 0u) - (uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(float(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? float(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-2795.2476))))), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - tan(0.0), clamp((injectionSwitch.x) - tan(0.0), _GLF_IDENTITY((injectionSwitch.x) - tan(0.0), ((injectionSwitch.x) - tan(0.0)) / 1.0), _GLF_IDENTITY((injectionSwitch.x) - tan(0.0), max((injectionSwitch.x) - tan(0.0), (injectionSwitch.x) - tan(0.0))))))))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u), (((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id))) << 0u) - (uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0))))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id))) << 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id))) << 0u), min(((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id))) << 0u), ((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id))) << 0u)))) << 0u) - (uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0))))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u), (((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id))) << 0u) - (uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0))))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)) | (((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id))) << 0u) - (uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sin(0.0), 1.0)))), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0))))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec4(mat2(1.0) * (injectionSwitch), 1.0, 1.0)), max(vec2(vec4(mat2(1.0) * (injectionSwitch), 1.0, 1.0)), vec2(vec4(mat2(1.0) * (injectionSwitch), 1.0, 1.0)))))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec4(mat2(1.0) * (injectionSwitch), 1.0, 1.0)), max(vec2(vec4(mat2(1.0) * (injectionSwitch), 1.0, 1.0)), vec2(vec4(mat2(1.0) * (injectionSwitch), 1.0, 1.0)))))).x : _GLF_FUZZED(-2.5))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(1u, (1u) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u))) / 1u) : _GLF_FUZZED(num_workgroup)))))))) / 1u) : _GLF_FUZZED(subgroup_local_id)), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uint(workgroup_size * workgroup_id))), workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, (true ? (workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), _GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), _GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u))))) * workgroup_id) << _GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, min(1u, 1u)), 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, min(1u, 1u)), 0u))) << 0u), (uint(uvec4((workgroup_size * workgroup_id) << 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1u, 0u))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), 1u * (uint(uvec2(workgroup_size, 1u))))) - 0u)) * workgroup_id) << _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (0u))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)), 1u, 0u))) / 1u), (_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u)) | (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << _GLF_IDENTITY(0u, (0u) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) | 0u)))))) : _GLF_FUZZED(num_workgroup))))))), ~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uint(workgroup_size * workgroup_id))), workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, (true ? (workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), _GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), _GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u))))) * workgroup_id) << _GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, min(1u, 1u)), 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, min(1u, 1u)), 0u))) << 0u), (uint(uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (workgroup_size * workgroup_id))) << 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1u, 0u))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), 1u * (uint(uvec2(workgroup_size, _GLF_IDENTITY(1u, (1u) | (1u))))))) - 0u)) * workgroup_id) << _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (0u))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)), 1u, 0u))) / 1u), (_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, _GLF_IDENTITY(0u, (0u) >> 0u)))) / 1u)) | (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), ~ (~ (_GLF_IDENTITY(0u, (0u) << 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u)), (true ? _GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), workgroup_id))) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))) : _GLF_FUZZED(uvec4(142376u, 78202u, 99683u, 92212u)))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) | 0u)))))) : _GLF_FUZZED(num_workgroup)))))))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) | 0u))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) | 0u)))) | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) | 0u)))))), clamp((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) ? _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, (true ? (workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), 0u ^ (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u))) * 1u) * workgroup_id) << _GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ ((workgroup_size * workgroup_id) << 0u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / abs(vec2(1.0, 1.0))).x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(workgroup_size, _GLF_IDENTITY(1u, 0u + (1u)))), 1u * (uint(_GLF_IDENTITY(uvec2(workgroup_size, 1u), min(_GLF_IDENTITY(uvec2(workgroup_size, 1u), (_GLF_IDENTITY(uvec2(workgroup_size, 1u), uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size, 1u), clamp(uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u), uvec2(workgroup_size, 1u))), 0u, 0u)))) - uvec2(0u, 0u)), uvec2(workgroup_size, 1u))))))) - 0u)) * workgroup_id) << _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0))) * 1u))), 1u, 0u))) / 1u), (_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0)))).x)), 1u, 0u))) / 1u)) | (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))) / 1u))))) : _GLF_FUZZED(num_workgroup))))))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) | 0u)))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, (true ? (workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * workgroup_id) << _GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), 1u * (uint(uvec2(workgroup_size, 1u))))) - 0u, ((_GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), 1u * (uint(uvec2(workgroup_size, 1u))))) - 0u) ^ 0u))) * workgroup_id) << _GLF_IDENTITY(0u, (0u) - 0u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)), 1u, 0u))) / 1u), (_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u)) | (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)))), (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))) / 1u))))) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, (true ? (workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * workgroup_id) << _GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), 1u * (uint(uvec2(workgroup_size, 1u))))) - 0u)) * workgroup_id) << _GLF_IDENTITY(0u, (0u) - 0u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)), 1u, 0u))) / 1u), (_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u)) | (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))) / 1u))))) : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, (true ? (workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * workgroup_id) << _GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((workgroup_size * workgroup_id), (_GLF_IDENTITY((workgroup_size * workgroup_id), max((workgroup_size * workgroup_id), _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id)))))) / 1u) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), 1u * (uint(uvec2(workgroup_size, 1u))))) - 0u)) * workgroup_id) << _GLF_IDENTITY(0u, (0u) - 0u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)), 1u, 0u))) / 1u), (_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u)) | (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((++ workgroup_id)) : 1u))))))) : _GLF_FUZZED(num_workgroup)))))) * 1u))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, (true ? (workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * workgroup_id) << _GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), 1u * (uint(uvec2(workgroup_size, 1u))))) - 0u)) * workgroup_id) << _GLF_IDENTITY(0u, (0u) - 0u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)), 1u, 0u))) / 1u), (_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u)) | (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))) / 1u))))) : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, (true ? (workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * workgroup_id) << _GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((workgroup_size * workgroup_id), (_GLF_IDENTITY((workgroup_size * workgroup_id), max((workgroup_size * workgroup_id), _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id)))))) / 1u) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), 1u * (uint(uvec2(workgroup_size, 1u))))) - 0u)) * workgroup_id) << _GLF_IDENTITY(0u, (0u) - 0u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)), 1u, 0u))) / 1u), (_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u)) | (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((++ workgroup_id)) : 1u))))))) : _GLF_FUZZED(num_workgroup)))))) * 1u)))) >> 0u)))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) | 0u)))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, (true ? (workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * workgroup_id) << _GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, ~ (~ (1u))), 0u))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(workgroup_size, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u)))), 1u * (uint(uvec2(workgroup_size, 1u))))) - 0u)) * workgroup_id) << _GLF_IDENTITY(0u, (0u) - 0u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_ZERO(0.0, injectionSwitch.x)))) * 1.0)), 1u, 0u))) / 1u), (_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u)) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u)) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u, ((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u) | 0u)) << (0u | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) | 0u)) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))) / 1u))))) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(subgroup_local_id) : num_workgroup))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * workgroup_id) << _GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, ~ (~ (1u))), 0u))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(workgroup_size, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u)))), 1u * (uint(uvec2(workgroup_size, 1u))))) - 0u)) * workgroup_id) << _GLF_IDENTITY(0u, (0u) - 0u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_ZERO(0.0, injectionSwitch.x)))) * 1.0)), 1u, 0u))) / 1u), (_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u)) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u)) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u, ((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u) | 0u)) << (0u | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) | 0u)) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))) / 1u))))) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(subgroup_local_id) : num_workgroup))))), 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u)), (uint(uvec4(_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * workgroup_id) << _GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, ~ (~ (1u))), 0u))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(workgroup_size, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u)))), 1u * (uint(uvec2(workgroup_size, 1u))))) - 0u)) * workgroup_id) << _GLF_IDENTITY(0u, (0u) - 0u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_ZERO(0.0, injectionSwitch.x)))) * 1.0)), 1u, 0u))) / 1u), (_GLF_IDENTITY(uint(uvec4((workgroup_size * workgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u)) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) / 1u)) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u, ((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), 0u + (uint(workgroup_size))))) * workgroup_id) << 0u) | 0u)) << (0u | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)), (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) | 0u)) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (uvec4((_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) << 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u), 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))) / 1u))))) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(subgroup_local_id) : num_workgroup))))), 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u))) - 0u)))))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), ~ (~ (subgroup_local_id)))), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id))))))) | 0u))))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u);
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) : _GLF_IDENTITY(_GLF_FUZZED(79817u), (_GLF_IDENTITY(_GLF_FUZZED(79817u), max(_GLF_FUZZED(79817u), _GLF_FUZZED(79817u)))) / 1u))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u ^ (workgroup_base + subgroup_id * subgroup_size))) ^ 0u))) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | 0u)), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u)) + _GLF_IDENTITY((subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id) : _GLF_FUZZED(num_workgroup)))), subgroup_local_id), (max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u)) + _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id) : _GLF_FUZZED(num_workgroup)))), subgroup_local_id)) - 0u)) + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | 0u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u)) + _GLF_IDENTITY((subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id) : _GLF_FUZZED(num_workgroup)))), clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u)) + _GLF_IDENTITY((subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u)) + _GLF_IDENTITY((subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u)) + _GLF_IDENTITY((subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id) : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u)) + _GLF_IDENTITY((subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id) : _GLF_FUZZED(num_workgroup))))) ^ 0u))), subgroup_local_id), (max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u)) + _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u))), (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id) : _GLF_FUZZED(num_workgroup)))), subgroup_local_id)) - 0u)) + 1))) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), min(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0)))))))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-930.623), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.9)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(true, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(bvec2(true, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))))))))).y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) | 0, (true ? (_injected_loop_counter) | 0 : _GLF_FUZZED(_injected_loop_counter)))) != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))) && true); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) / _GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-3.3, float(vec3(-3.3, 0.0, 0.0))))), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(_GLF_IDENTITY(-3.3, clamp(_GLF_IDENTITY(-3.3, (true ? -3.3 : _GLF_FUZZED(mix(6.8, -5.6, true)))), -3.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)))))), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(_GLF_IDENTITY(-3.3, clamp(_GLF_IDENTITY(-3.3, (true ? -3.3 : _GLF_FUZZED(mix(6.8, -5.6, true)))), -3.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)))))), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(_GLF_IDENTITY(-3.3, clamp(_GLF_IDENTITY(-3.3, (true ? -3.3 : _GLF_FUZZED(mix(6.8, -5.6, true)))), -3.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)))))), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + log(1.0)), (false ? _GLF_FUZZED(-4.4) : injectionSwitch.x)), injectionSwitch.x)), mix(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((9.5 / 9.1))), vec2(_GLF_FUZZED(286.215), (injectionSwitch)[1]), bvec2(false, true))).x), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 1.0)))))))))), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), false || (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (false ? _GLF_FUZZED(-4.4) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x)), injectionSwitch.x)), mix(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x))), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), false || (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.4) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), injectionSwitch.x)), mix(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(injectionSwitch.x))), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), 1.0 * (_GLF_FUZZED(-3.3))), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))))), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))) + 0.0)))), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float((10429)))), bool(false))), 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / exp(0.0)), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), 1.0 * (_GLF_FUZZED(-3.3))), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9293.9457, -67.17)) : injectionSwitch))) + vec2(0.0, 0.0))))).y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), min(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3))))), bool(true))), bool(false))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))).y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), min(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3))))), bool(true))), bool(false))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))).y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))) - 0.0), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / 1.0), _GLF_FUZZED(-3.3), _GLF_IDENTITY(_GLF_FUZZED(-3.3), min(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-3.3, (-3.3) / 1.0))), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_FUZZED(-3.3))), bool(true))), bool(false)), (_GLF_IDENTITY(mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_FUZZED(-3.3))), bool(_GLF_IDENTITY(true, ! (! (true)))))), bool(false)), (false ? _GLF_FUZZED(2307.8691) : mix(float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_FUZZED(-3.3))), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), (false ? _GLF_FUZZED(-616.782) : float(_GLF_FUZZED(-3.3)))), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_FUZZED(-3.3))), bool(true))) : _GLF_FUZZED(-33.74))), bool(false))))) / 1.0)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch)))), (_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))))).y)))))) || false) && true)) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), 1.0 * (_GLF_FUZZED(-3.3))), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))))), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))) + 0.0)))), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float((10429)))), bool(false))), 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / exp(0.0)), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), 1.0 * (_GLF_FUZZED(-3.3))), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9293.9457, -67.17)) : injectionSwitch))) + vec2(0.0, 0.0))))).y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), min(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3))))), bool(true))), bool(false))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))).y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), min(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3))))), bool(true))), bool(false))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))).y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))) - 0.0), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / 1.0), _GLF_FUZZED(-3.3), _GLF_IDENTITY(_GLF_FUZZED(-3.3), min(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-3.3, (-3.3) / 1.0))), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_FUZZED(-3.3))), bool(true))), bool(false)), (_GLF_IDENTITY(mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_FUZZED(-3.3))), bool(_GLF_IDENTITY(true, ! (! (true)))))), bool(false)), (false ? _GLF_FUZZED(2307.8691) : mix(float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_FUZZED(-3.3))), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), (false ? _GLF_FUZZED(-616.782) : float(_GLF_FUZZED(-3.3)))), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_FUZZED(-3.3))), bool(true))) : _GLF_FUZZED(-33.74))), bool(false))))) / 1.0)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch)))), (_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))))).y)))))) || false) && true)) && true, ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), 1.0 * (_GLF_FUZZED(-3.3))), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))))), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))) + 0.0)))), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float((10429)))), bool(false))), 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / exp(0.0)), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), 1.0 * (_GLF_FUZZED(-3.3))), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0))))), min(clamp(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float((10429)))), bool(false))), 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / exp(0.0)), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), 1.0 * (_GLF_FUZZED(-3.3))), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float((10429)))), bool(false))), 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / exp(0.0)), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), 1.0 * (_GLF_FUZZED(-3.3))), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0))))), (true ? _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float((10429)))), bool(false))), 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / exp(0.0)), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), 1.0 * (_GLF_FUZZED(-3.3))), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0))))), min(clamp(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float((10429)))), bool(false))), 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / exp(0.0)), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), 1.0 * (_GLF_FUZZED(-3.3))), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2x3(_GLF_FUZZED(-3.3), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float((10429)))), bool(false))), 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / exp(0.0)), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), 1.0 * (_GLF_FUZZED(-3.3))), float(mat2x3(_GLF_FUZZED(-3.3), 0.0, 0.0, 1.0, 0.0, 0.0))))))) : _GLF_FUZZED(6929.0938)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(9293.9457, -67.17)), mix(vec2((_GLF_FUZZED(vec2(9293.9457, -67.17)))[0], _GLF_FUZZED(158.922)), vec2(_GLF_FUZZED(((false ? -4.8 : 754.591) + 8.6)), (_GLF_FUZZED(vec2(9293.9457, -67.17)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : injectionSwitch))) + vec2(0.0, 0.0))))).y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), min(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3))))), bool(true))), bool(false))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))).y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - _GLF_IDENTITY(0.0, 1.0 * (0.0))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-3.3, clamp(-3.3, -3.3, -3.3)))), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), min(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3))))), bool(true))), bool(false))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch)), clamp(false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch)), false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch)), false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))))).y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))) - 0.0), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / 1.0), _GLF_FUZZED(-3.3), _GLF_IDENTITY(_GLF_FUZZED(-3.3), min(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3)))))), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))) - 0.0), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / 1.0), max(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / 1.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / 1.0)), float(_GLF_FUZZED(-31.29)), bool(false))))), _GLF_FUZZED(-3.3), _GLF_IDENTITY(_GLF_FUZZED(-3.3), min(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3)))))), bool(false))) : _GLF_FUZZED(length(vec3(-47.07, -9.6, 5.4))))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-3.3, (-3.3) / 1.0))), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_FUZZED(-3.3))), bool(true))), bool(false)), (_GLF_IDENTITY(mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(23.37), max(_GLF_IDENTITY(_GLF_FUZZED(23.37), (_GLF_FUZZED(23.37)) * 1.0), _GLF_IDENTITY(_GLF_FUZZED(23.37), (_GLF_IDENTITY(_GLF_FUZZED(23.37), (_GLF_FUZZED(23.37)) / 1.0)) - 0.0)))), float(float(_GLF_FUZZED(-3.3))), bool(_GLF_IDENTITY(true, ! (! (true)))))), bool(false)), (false ? _GLF_FUZZED(2307.8691) : mix(float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_FUZZED(-3.3))), bool(true))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), (false ? _GLF_FUZZED(-616.782) : float(_GLF_FUZZED(-3.3)))), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_FUZZED(-3.3))), bool(true))) : _GLF_FUZZED(-33.74)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), (false ? _GLF_FUZZED(-616.782) : float(_GLF_FUZZED(-3.3)))), mix(float(_GLF_FUZZED(23.37)), float(float(_GLF_FUZZED(-3.3))), bool(true))) : _GLF_FUZZED(-33.74))) - 0.0)), bool(false))))) / 1.0)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch)))), (_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))))).y)))))) || false) && true)) && true))))))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_IDENTITY(bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), (bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))) || false)))))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY(0 & 5621, clamp(0 & 5621, 0 & 5621, 0 & 5621))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | 0)); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-839.733) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-839.733) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) * 1.0)))))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                        barrier();
                      }
                     barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) && true), false)))))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
            }
           int i = 0;
           atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (-13455 & int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-12.10)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-24.02) : 1.0)), 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(injectionSwitch.x) : 0.0)), injectionSwitch.x)), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0), transpose(transpose(mat3x2(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat3x2(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0), transpose(transpose(mat3x2(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0))))), vec2(_GLF_IDENTITY(mat3x2(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0), transpose(transpose(mat3x2(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0))))))))), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))).y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(429.783))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), max(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))))))), max(injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, round(length(normalize(1.0)))), (vec3(injectionSwitch, round(length(normalize(1.0))))) - vec3(0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, round(length(normalize(1.0)))), (vec3(injectionSwitch, round(length(normalize(1.0))))) - vec3(0.0, 0.0, 0.0)))) - vec2(0.0, 0.0))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch)))))), injectionSwitch)), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))), injectionSwitch)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), mix(vec2((min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))[0], _GLF_FUZZED(-1.7)), vec2(_GLF_FUZZED(float(-8387)), (min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))[1]), bvec2(false, true)))), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)))))), (injectionSwitch.x > injectionSwitch.y))), true, false))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            barrier();
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec4(false, false, false, false)))))
                {
                }
               else
                {
                 barrier();
                }
              }
             do
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false)))))))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))));
                  }
                 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u + _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u))) ^ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), ~ (_GLF_IDENTITY(~ ((0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), uint(uvec2(~ ((0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u))))) ^ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))), clamp((_GLF_IDENTITY(next_virtual_gid, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) / 1u))), next_virtual_gid))))), (_GLF_IDENTITY(next_virtual_gid, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))), (_GLF_IDENTITY(next_virtual_gid, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))))))))], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 | (2))) ^ _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0)))))), 4, 64, 4);
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), int(8))), (_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), int(8)))) && true)); _injected_loop_counter --)
              {
               do
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) || false))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))) - vec2(0.0, 0.0)).x < injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = (0 ^ (1 & 1)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                      barrier();
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))))))))))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 else
                  {
                  }
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true)), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))))));
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))), true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
              {
              }
             else
              {
               do
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), (0 >> _GLF_IDENTITY(int(0), int(0))) | (0 >> _GLF_IDENTITY(int(0), int(0))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), (0 >> _GLF_IDENTITY(int(0), int(0))) | (0 >> _GLF_IDENTITY(int(0), int(0))))))), min((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), (0 >> _GLF_IDENTITY(int(0), int(0))) | (0 >> _GLF_IDENTITY(int(0), int(0))))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-60747) : _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) - 0)))) | (0 >> _GLF_IDENTITY(int(0), int(0))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
