#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_FUZZED((-394.231 - 8.7))), vec2(_GLF_FUZZED(8.9), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), true, false)), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(vec3(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0)), sin(0.0))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) || false))) || false, (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) || false))) || false, ((bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)))) || false) && true)) || false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) || false)), false))), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) || false)), false))), false, false)), true, true))))) || (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x = subgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), (gl_WorkGroupSize) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))) && true, bool(bvec2((bool(bool(false))) && true, true)))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(bool(bool(false)), (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, true))))))))), true))))))))), false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y = workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, 1u * (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, 0u | (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), vec2(mat4x2(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), sin(0.0))))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, true)))), true, false, true)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-979.592), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + length(vec3(0.0, 0.0, 0.0))), _GLF_FUZZED(-121.372)), bvec2(true, false))).x > injectionSwitch.y))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)), true)))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0)))))))))
  barrier();
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true), _GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? subgroup_size : _GLF_FUZZED(workgroup_base))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  barrier();
 atomicStore(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-18758), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-18758), clamp(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-18758), (true ? 1 : _GLF_FUZZED(-18758)) ^ 0), true ? 1 : _GLF_FUZZED(-18758), true ? 1 : _GLF_FUZZED(-18758)))) | (true ? 1 : _GLF_FUZZED(-18758)))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), float(mat4x3(injectionSwitch.x, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.9)), vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), bvec2(false, true))).y), 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(6.9)), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(6.9)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(6.9)), vec2((injectionSwitch)[0], _GLF_FUZZED(6.9))))) - vec2(0.0, 0.0)), (vec2((injectionSwitch)[0], _GLF_FUZZED(6.9))) / vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), bvec2(false, true))).y), 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0)))) > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(6.9)), (vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.9), float(mat4(_GLF_FUZZED(6.9), abs(exp(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, abs(1.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, abs(1.0), 0.0))), cos(0.0), tan(0.0), 0.0, 0.0))))) / vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), bvec2(false, true))).y), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (0.0) - 0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), 0.0))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.6), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(2.5)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2302.4225), _GLF_FUZZED(_GLF_IDENTITY(-4442.7006, mix(float(_GLF_IDENTITY(-4442.7006, (true ? -4442.7006 : _GLF_FUZZED(3941.7116)))), float(_GLF_FUZZED(9597.1094)), bool(false))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2302.4225), _GLF_FUZZED(-4442.7006)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))))))), (_GLF_IDENTITY(abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2302.4225), _GLF_FUZZED(-4442.7006)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2302.4225), _GLF_FUZZED(-4442.7006)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) - abs(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)), max(abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2302.4225), _GLF_FUZZED(-4442.7006)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2302.4225), _GLF_FUZZED(-4442.7006)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))))))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) | (subgroup_local_id + 1), 0u, (_GLF_IDENTITY(1u & 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(1u & 1u, 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3(1u & 1u, 1u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(1u & 1u, 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3(1u & 1u, 1u, 1u)))), max(uint(_GLF_IDENTITY(uvec3(1u & 1u, 1u, 1u), uvec3(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u) * (uvec3(1u & 1u, 1u, 1u)))), uint(_GLF_IDENTITY(uvec3(1u & 1u, 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3(1u & 1u, 1u, 1u))))))) - 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1) | (subgroup_local_id + 1), 0u, (1u & 1u))), (uint(uvec3((subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), 0u, (1u & 1u)))) | (uint(uvec3((subgroup_local_id + 1) | (subgroup_local_id + 1), 0u, (1u & 1u))))), (uint(uvec3((subgroup_local_id + 1) | (subgroup_local_id + 1), 0u, (1u & 1u)))) << 0u))))))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1)) < _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))))) && true)) || false, false || ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) && true)) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), (bool(bvec2(false, false))) && true)), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), false, true)))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), false, true)))))))), false, true)))), true, false), bvec3(bvec4(bvec3(false, true, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), (bool(bvec2(false, false))) && true)), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), false, true)))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec2(false, false))) && true)), false, true)))))))), false, true)))), true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec4(uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY(1u, min(1u, 1u)) & 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 0))), (true ? 4 : _GLF_FUZZED(i))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)) - 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << (0u | 0u))))], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))), 0, 1), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))), 0, 1), (ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(_GLF_IDENTITY(-33821, (-33821) ^ 0), 478, -10625)[1]))), 0, 1)) | (ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))) && true))), (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))), 0, 1))), ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), bool(bvec3(bool(bvec4(true, true, true, true)), false, false))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, exp(0.0))), dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, exp(0.0)))), 0.0, 0.0)), (float(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, exp(0.0))), dot(vec3(0.0, 0.0, cos(0.0)), vec3(0.0, 0.0, exp(0.0)))), 0.0, 0.0))) / exp(0.0))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), bool(bvec3(bool(bvec4(true, true, true, true)), false, false)))))))) || false)) && true))) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))), 0, 1), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))), max(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))), _GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))))), 0, 1))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))), 0, 1), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))), 0, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(findMSB(workgroup_size)) : 1))), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(_GLF_IDENTITY(-33821, (-33821) ^ 0), 478, -10625)[1]))), (_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(_GLF_IDENTITY(-33821, (-33821) ^ 0), 478, -10625)[1])))) | (_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(_GLF_IDENTITY(-33821, (-33821) ^ 0), 478, -10625)[1]))))), 0, 1)) | (ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (true) || false))) && true))), (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))), _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))), ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), bool(bvec3(bool(bvec4(true, true, true, true)), false, false))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), bool(bvec3(bool(bvec4(true, true, true, true)), false, false)))))))) || false)) && true))) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) >> 0), 1), ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))), 0, 1)))) << ivec3(0, 0, 0))), _GLF_IDENTITY((true ? int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) ? 2 : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-33821, 478, -10625)[_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)))]), ~ (~ (_GLF_FUZZED(ivec3(-33821, 478, -10625)[1])))))), 0, _GLF_IDENTITY(1, 0 | (1))), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) - 0))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) ? 2 : _GLF_FUZZED(ivec3(_GLF_IDENTITY(-33821, (_GLF_IDENTITY(-33821, (-33821) << 0)) >> (97326 & 0)), 478, -10625)[1]))), 0, _GLF_IDENTITY(1, (1) ^ 0)), (ivec3(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-33821, 478, -10625)[1]), (_GLF_FUZZED(ivec3(-33821, 478, -10625)[1])) | (_GLF_FUZZED(ivec3(-33821, 478, -10625)[1])))), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(_GLF_IDENTITY(-33821, int(ivec2(-33821, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (_GLF_IDENTITY(0, clamp(0, 0, 0))))))), _GLF_IDENTITY(478, 0 | (478)), -10625)[1])), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))), (bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))) && true))))))) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, _GLF_IDENTITY(-10625, clamp(_GLF_IDENTITY(-10625, 0 + (-10625)), -10625, _GLF_IDENTITY(-10625, ~ (~ (-10625))))))[1])), _GLF_IDENTITY(((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))) | (0 >> _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(int(ivec4(((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))) | (0 >> _GLF_IDENTITY(int(2), int(2))), 1, 0, 1)), (int(ivec4(((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))) | (0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 ^ (2))))), 1, 0, 1))) / 1))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, sqrt(0.0), 1.0, cos(0.0), 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0)), vec2(_GLF_IDENTITY(mat4x2(vec2(mat3(injectionSwitch, sqrt(0.0), 1.0, cos(0.0), 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0), (mat4x2(vec2(mat3(injectionSwitch, sqrt(0.0), 1.0, cos(0.0), 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))))), 0, 1)) | (ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8571.6454)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(951.600)), bvec2(true, false)))) - vec2(0.0, 0.0)).x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))), injectionSwitch.x)))) < injectionSwitch.y))))) ? 2 : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-33821, 478, _GLF_IDENTITY(-10625, min(-10625, -10625)))[1]), (false ? _GLF_FUZZED(40392) : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))))), 0, 1))), ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(2, min(2, 2)) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-33821, _GLF_IDENTITY(478, (true ? 478 : _GLF_FUZZED(14300))), -10625)[1]), (_GLF_FUZZED(ivec3(-33821, 478, -10625)[1])) << (0 >> _GLF_IDENTITY(int(1), int(1)))))), 0, 1), ivec3(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]), 1 * (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1])))) / 1))), 0, 1)))) : _GLF_FUZZED(34143)), ((true ? int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7813.6571))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, tan(0.0), 0.0, 0.0)), mix(float(_GLF_FUZZED(-681.672)), float(float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, tan(0.0), 0.0, 0.0))), bool(true)))))))) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))), 0, 1), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))), _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (0)), 1), (ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))), 0, 1)) | (ivec3(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.44), _GLF_FUZZED(-4.6)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1] : _GLF_FUZZED(-474.614)))), bvec2(true, true))).x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.44), _GLF_FUZZED(-4.6)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-474.614)))), bvec2(true, true))).x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(55.44), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4.6, _GLF_IDENTITY((-4.6) / abs(exp(0.0)), ((-4.6) / abs(exp(0.0))) + tan(0.0))), (_GLF_IDENTITY(-4.6, (-4.6) / abs(exp(0.0)))) * 1.0))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | 0), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | 0)))], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-474.614)))), bvec2(true, true))).x < injectionSwitch.y)) ? _GLF_IDENTITY(2, int(int(2))) : _GLF_FUZZED(ivec3(-33821, 478, -10625)[1]))))), 0, 1))), ivec3(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(_GLF_IDENTITY(ivec3(-33821, 478, -10625)[1], min(ivec3(-33821, 478, -10625)[1], ivec3(-33821, 478, -10625)[1]))), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(_GLF_IDENTITY(ivec3(-33821, 478, -10625)[1], _GLF_IDENTITY(min(ivec3(-33821, 478, -10625)[1], ivec3(-33821, 478, -10625)[1]), clamp(min(ivec3(-33821, 478, -10625)[1], ivec3(-33821, 478, -10625)[1]), min(ivec3(-33821, 478, -10625)[1], ivec3(-33821, 478, -10625)[1]), _GLF_IDENTITY(min(ivec3(-33821, 478, -10625)[1], ivec3(-33821, 478, -10625)[1]), (_GLF_IDENTITY(min(ivec3(-33821, 478, -10625)[1], ivec3(-33821, 478, -10625)[1]), int(ivec3(min(ivec3(-33821, 478, -10625)[1], ivec3(-33821, 478, -10625)[1]), 0, 1)))) - 0))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(-33821, 478, -10625)[1], (ivec3(-33821, 478, -10625)[1]) ^ 0), min(ivec3(-33821, 478, -10625)[1], ivec3(-33821, 478, -10625)[1]))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(_GLF_IDENTITY(ivec3(-33821, 478, -10625)[1], min(ivec3(-33821, 478, -10625)[1], ivec3(-33821, 478, -10625)[1]))))))), 0, 1), ivec3(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(_GLF_IDENTITY(ivec3(-33821, 478, -10625)[1], _GLF_IDENTITY((ivec3(-33821, 478, -10625)[1]) >> 0, int(_GLF_IDENTITY(ivec2((ivec3(-33821, 478, -10625)[1]) >> 0, 0), (ivec2((ivec3(-33821, 478, -10625)[1]) >> 0, 0)) | (ivec2((ivec3(-33821, 478, -10625)[1]) >> 0, 0))))))))), 0, 1)))) : _GLF_FUZZED(34143))) - (0 >> _GLF_IDENTITY(int(1), int(1))))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(_GLF_IDENTITY(false, false || (false)))) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, true && (false)))), false || (_GLF_IDENTITY(false, true && (false)))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
