#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(degrees(atanh(28.49))) : injectionSwitch.x)) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY((false), ((false)) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 0.0))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 0.0))) - vec2(0.0, 0.0))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.6))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(434.563)), bool(false))))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), determinant(mat4(0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))))), 1.0)) + vec3(0.0, 0.0, 0.0), mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))))), 1.0)) + vec3(0.0, 0.0, 0.0)))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0)))))) / 1.0))))), 1.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(1.0, sin(0.0)), _GLF_IDENTITY(vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 0.0) + (vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(_GLF_IDENTITY(transpose(mat3(1.0, 1.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(1.0, sin(0.0)), vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), mat3(mat4x3(transpose(mat3(1.0, 1.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(1.0, sin(0.0)), vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), 0.0, 0.0)), vec2(1.0, 1.0) * (vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), determinant(mat4(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), 0.0, 0.0))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))) && true, ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false, false))))))) && true) && true)))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), false || (false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), false, true), bvec3(bvec4(bvec3((_GLF_DEAD(false)), false, true), true))), false))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(178.446), _GLF_FUZZED(-63.12)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(vec4(1.0, -3648.0381, 389.598, 3.1).q)), bool(false)))), bvec2(true, true))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY((5164.1112 / 80.88), ((5164.1112 / 80.88)) - 0.0))), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, sqrt(1.0), 0.0), (_GLF_IDENTITY(true ? vec4(injectionSwitch.y, 1.0, sqrt(1.0), 0.0) : _GLF_FUZZED(tan(vec4(-6.7, 2305.0601, -851.671, -8.9))), vec4(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(true ? vec4(injectionSwitch.y, 1.0, sqrt(1.0), 0.0) : _GLF_FUZZED(tan(vec4(-6.7, 2305.0601, -851.671, -8.9))), mix(vec4((true ? vec4(injectionSwitch.y, 1.0, sqrt(1.0), 0.0) : _GLF_FUZZED(tan(vec4(-6.7, 2305.0601, -851.671, -8.9))))[0], (true ? vec4(injectionSwitch.y, 1.0, sqrt(1.0), 0.0) : _GLF_FUZZED(tan(vec4(-6.7, 2305.0601, -851.671, -8.9))))[1], (true ? vec4(injectionSwitch.y, 1.0, sqrt(1.0), 0.0) : _GLF_FUZZED(tan(vec4(-6.7, 2305.0601, -851.671, -8.9))))[2], (true ? vec4(injectionSwitch.y, 1.0, sqrt(1.0), 0.0) : _GLF_FUZZED(tan(vec4(-6.7, 2305.0601, -851.671, -8.9))))[3]), vec4(_GLF_FUZZED(-0.8), _GLF_FUZZED(93.16), _GLF_FUZZED(-94.62), _GLF_FUZZED(-83.95)), bvec4(false, false, false, false)))))))))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec3(true, false, true))), false, true))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-77.26)), vec2(_GLF_FUZZED(9.0), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), false, true, false)))) && (false))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (! (bool(true))), (! (! (bool(true)))) && true))))), bool(bvec4(bool(_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), false, true, false)))) && (false))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || ((injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || ((injectionSwitch.x > injectionSwitch.y))))))), false)), bool(bvec2(bool(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || ((injectionSwitch.x > injectionSwitch.y))))))), false)), true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), _GLF_IDENTITY((vec2(vec2(injectionSwitch))) * mat2(1.0), max((vec2(vec2(injectionSwitch))) * mat2(1.0), (vec2(vec2(injectionSwitch))) * mat2(1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))))) || false, bool(bvec4((! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))))) || false, false, false, false))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ((_GLF_DEAD(false))) && true)), ! (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (false ? _GLF_FUZZED(dot(vec4(0.0, -6.8, -84.35, -6.6), vec4(-8.5, 433.043, 698.172, -7513.5034))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), false)))), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), false || (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), true && (true && (false)))) || false))))) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(340.651))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, true, false))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true))))))))), false))))) || false))))) || false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2263.7528), _GLF_FUZZED(-7.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))) - sqrt(vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED((571.544 * 1.9))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(2263.7528), _GLF_FUZZED(-7.7)), min(vec2(_GLF_FUZZED(2263.7528), _GLF_FUZZED(-7.7)), _GLF_IDENTITY(vec2(_GLF_FUZZED(2263.7528), _GLF_FUZZED(-7.7)), vec2(mat3(vec2(_GLF_FUZZED(2263.7528), _GLF_FUZZED(-7.7)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(56.39)), float(0.0), bool(true))), 1.0, 0.0, 0.0, 1.0, 0.0))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))) - sqrt(vec2(0.0, 0.0))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2263.7528), _GLF_FUZZED(-7.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))) - sqrt(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2263.7528), _GLF_FUZZED(-7.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))) - sqrt(vec2(0.0, 0.0))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2263.7528), _GLF_FUZZED(-7.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))) - sqrt(vec2(0.0, 0.0))).y, float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2263.7528), _GLF_FUZZED(-7.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))) - sqrt(vec2(0.0, 0.0))).y, 1.0, 0.0, exp(abs(0.0)))))))), bool(true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.0))) > injectionSwitch.y)))), false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(0.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(0.0), 0.0)), max(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(0.0), 0.0)))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), _GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), ! (! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false))))))), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false))))))), _GLF_IDENTITY(false, false || (false)), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, true)), ! (! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, true)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))), bool(bvec4(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))), true, true, false)))), true, true), true))))))), bool(bool(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true, true), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true, true), true)))))))))))))))))) && true))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, true))), (! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, true)))) && _GLF_IDENTITY(true, ! (! (true))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, true && ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), bool(bvec4(bool(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, true && ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), false, true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, true && ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), bool(bvec4(bool(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, true && ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), false, true, false))))) && true)), ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))), bool(bvec4(_GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))))) && true, ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))))))), true, true, false)))), true, true), true))))))), bool(bool(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))) && true), true, true), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true), true, true), true)))))))))))))))))) && true)))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(0u | (subgroup_local_id), _GLF_IDENTITY(0u | (subgroup_local_id), clamp(0u | (subgroup_local_id), 0u | (subgroup_local_id), 0u | (subgroup_local_id))), 0u | _GLF_IDENTITY((subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(49384u) : (subgroup_local_id)))))), ~ (~ (uint(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(0u | (subgroup_local_id), 0u | (subgroup_local_id), 0u | (subgroup_local_id)))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) >> 0u)), clamp(0u | (subgroup_local_id), 0u | (subgroup_local_id), _GLF_IDENTITY(0u, (0u) << 0u) | (subgroup_local_id)))), ~ (~ (uint(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))))))), clamp(0u | (subgroup_local_id), 0u | (subgroup_local_id), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (_GLF_IDENTITY(~ (~ (0u)), min(~ (~ (0u)), ~ (~ (0u))))) | 0u)), 0u)) | (subgroup_local_id)))))))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(0u | (subgroup_local_id), 0u | (subgroup_local_id), 0u | (subgroup_local_id)))), ~ (~ (uint(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), clamp(0u | (subgroup_local_id), 0u | (subgroup_local_id), 0u | (subgroup_local_id))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_local_id), _GLF_IDENTITY(clamp(0u | (subgroup_local_id), 0u | (subgroup_local_id), 0u | (subgroup_local_id)), _GLF_IDENTITY(uint(uvec3(clamp(0u | (subgroup_local_id), 0u | (subgroup_local_id), 0u | (subgroup_local_id)), 0u, 1u)), (false ? _GLF_FUZZED(workgroup_base) : uint(uvec3(clamp(0u | (subgroup_local_id), 0u | (subgroup_local_id), 0u | (subgroup_local_id)), 0u, 1u))))))), ~ (~ (uint(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(0u | (subgroup_local_id), 0u | (subgroup_local_id), 0u | (subgroup_local_id)))))))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(0u | (subgroup_local_id), 0u | (subgroup_local_id), 0u | (subgroup_local_id)))), ~ (~ _GLF_IDENTITY((uint(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(0u | (subgroup_local_id), 0u | (subgroup_local_id), 0u | (subgroup_local_id))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((uint(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(0u | (subgroup_local_id), 0u | (subgroup_local_id), 0u | (subgroup_local_id))))), ~ (~ ((uint(_GLF_IDENTITY(0u | (subgroup_local_id), clamp(0u | (subgroup_local_id), 0u | (subgroup_local_id), 0u | (subgroup_local_id)))))))))))))))))))) : _GLF_FUZZED(num_workgroup)));
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : subgroup_size), ((false ? _GLF_FUZZED(workgroup_size) : subgroup_size)) | 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), (subgroup_size))) | (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))))), (subgroup_size))))) << 0u)) / 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) >> 0u)))))), subgroup_size, subgroup_size), clamp(clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), (subgroup_size))) | (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))))), (subgroup_size))))) << 0u)) / 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) >> 0u)))))), subgroup_size, subgroup_size), clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), (subgroup_size))) | (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))))), (subgroup_size))))) << 0u)) / 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) >> 0u)))))), subgroup_size, subgroup_size), clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), (subgroup_size))) | (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), 0u + ((subgroup_size))))), (subgroup_size))))) << 0u)) / 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) >> 0u)))))), subgroup_size, subgroup_size)))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), 0u | (uint(_GLF_IDENTITY(1, (1) << 0)))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(-0.1, -67.97)) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(-0.1, -67.97)) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(-0.1, -67.97)) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false, false)))) && true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false))) && true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), true && ((_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false))) && true)))))) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && _GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec3(((_GLF_DEAD(false))), false, false)))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false))) && true)))))) && true, false), bvec2(bvec3(bvec2((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true && ((_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false))) && true)))))) && true, false), true)))))))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(104.057)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.7) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), (true ? float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) : _GLF_FUZZED(-2681.4678)))))) > injectionSwitch.y))), false)))))))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) / vec2(1.0, 1.0)).y)) || false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), (mat2(injectionSwitch, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), (mat2(injectionSwitch, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), (mat2(injectionSwitch, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), (mat2(injectionSwitch, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), mix(vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]))[0], (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]))[1]), vec2(_GLF_FUZZED(922.077), _GLF_FUZZED(-6.1)), bvec2(false, _GLF_IDENTITY(false, (false) || false))))).y) || false, bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) || false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(faceforward(injectionSwitch, vec2(0.5, 4.4), injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6717.3737, 1.8)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, true))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), max((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))), (true ? (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) : _GLF_FUZZED(injectionSwitch))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-7.6, max(_GLF_IDENTITY(-7.6, clamp(-7.6, -7.6, -7.6)), -7.6))), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, true))))) : _GLF_FUZZED(injectionSwitch))) - sqrt(vec2(0.0, 0.0)))))[0], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(faceforward(injectionSwitch, vec2(0.5, 4.4), injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), vec2(mat4x3(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(6300.7177, 6.7).r)), bool(false))))))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, sqrt(1.0), 0.0, 0.0))), 0.0))))))[1]), bvec2(false, true))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), injectionSwitch)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(36.15, -470.567, 93.23, 0.0).y)), float(1.0), bool(true))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0))))))))))[1]), bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-7.6, clamp(-7.6, _GLF_IDENTITY(-7.6, (-7.6) - 0.0), -7.6)), mix(float(_GLF_FUZZED(-4057.3611)), float(-7.6), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), vec2(0.0, 0.0) + ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, true))))[0], _GLF_FUZZED(-5885.4181)), vec2(_GLF_FUZZED(3.3), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, true))))[1]), bvec2(false, true)), vec2(mat4(_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, true))))[0], _GLF_FUZZED(-5885.4181)), vec2(_GLF_FUZZED(3.3), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, true))))[1]), bvec2(false, true)), mix(vec2(_GLF_FUZZED(-54.45), _GLF_FUZZED(-49.70)), vec2((mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, true))))[0], _GLF_FUZZED(-5885.4181)), vec2(_GLF_FUZZED(3.3), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, true))))[1]), bvec2(false, true)))[0], (mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, true))))[0], _GLF_FUZZED(-5885.4181)), vec2(_GLF_FUZZED(3.3), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, true))))[1]), bvec2(false, true)))[1]), bvec2(true, true))), 0.0, 1.0, 0.0, 0.0, 1.0, abs(abs(1.0)), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 0.0))), 1.0, abs(0.0), 1.0, 1.0))))) - vec2(0.0, 0.0)))) : _GLF_FUZZED(injectionSwitch))) - sqrt(vec2(0.0, 0.0)))))[0]) - 0.0), mix(float(_GLF_FUZZED((- _GLF_IDENTITY(86.00, clamp(86.00, _GLF_IDENTITY(86.00, (true ? 86.00 : _GLF_FUZZED(-5511.4413))), 86.00))))), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(faceforward(injectionSwitch, vec2(0.5, 4.4), injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0)), 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(9.1)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(85685)))]), (true ? vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(85685)))]) : _GLF_FUZZED(injectionSwitch))), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))) - sqrt(vec2(0.0, 0.0)))))[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch[1])).y) || false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true)), bool(bvec2((! (! (_GLF_IDENTITY(false, (false) && true)))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true)), bool(bvec2((! (! (_GLF_IDENTITY(false, (false) && true)))), false)))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true)), bool(bvec2((! (! (_GLF_IDENTITY(false, (false) && true)))), false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true)), bool(bvec2((! (! (_GLF_IDENTITY(false, (false) && true)))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true)), bool(bvec2((! (! (_GLF_IDENTITY(false, (false) && true)))), false)))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true)), bool(bvec2((! (! (_GLF_IDENTITY(false, (false) && true)))), false)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true)), bool(bvec2((! (! (_GLF_IDENTITY(false, (false) && true)))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true)), bool(bvec2((! (! (_GLF_IDENTITY(false, (false) && true)))), false)))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true)), bool(bvec2((! (! (_GLF_IDENTITY(false, (false) && true)))), false)))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true)), bool(bvec2((! (! (_GLF_IDENTITY(false, (false) && true)))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true)), bool(bvec2((! (! (_GLF_IDENTITY(false, (false) && true)))), false)))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (! (_GLF_IDENTITY(false, (false) && true)))) && true)), bool(bvec2((! (! (_GLF_IDENTITY(false, (false) && true)))), false)))))))))))))))) || false))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(494.058)), bool(false))), injectionSwitch[1])).y) || false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y) || false, true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) || false, ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false)))))))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false)))))))), ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false))))))))) || false))))))))), true, false))), true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! (! (bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! (! (bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))))), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), (! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))) || false)), bool(bvec2((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), _GLF_IDENTITY(((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true)))))))) && true))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! (! (bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! (! (bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true)))), true), true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true)))), true), true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true)))), true), true))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true)))), true), true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true)))), true), true)))))))))))))))) && true))))), false || ((_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), false, false)), false)), ! (! (bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! (! (bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))))), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), _GLF_IDENTITY(false, false || (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0))).x > injectionSwitch.y))))) && true)))), bool(bvec2((! _GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false), bvec2(bvec2(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false), bvec2(bvec2(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))), _GLF_IDENTITY(bool(bool((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false))))), (bool(bool((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))))) && true)), ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, false, false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))))) && true)))), true)))))))) && true))))))), false))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(813.864, (true ? _GLF_IDENTITY(813.864, float(mat4x3(_GLF_IDENTITY(813.864, min(813.864, 813.864)), 1.0, 1.0, sqrt(sin(0.0)), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))) : _GLF_FUZZED(fma(27.26, 34.92, 71.28))))), _GLF_FUZZED(-4.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0), (mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-266.526))), 0.0, 0.0)))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.6)), bool(false))), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0), (mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-266.526))), 0.0, 0.0))), min(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.6)), bool(false))), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0), (mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-266.526))), 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.6)), bool(false))), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0), (mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-266.526))), 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.6)), bool(false))), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0), (mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-266.526))), 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.6)), bool(false))), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0), (mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-266.526))), 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.6)), bool(false))), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0), (mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-266.526))), 0.0, 0.0)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, ! (! (false))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! _GLF_IDENTITY((! (false)), false || ((! (false))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true))))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? subgroup_size : _GLF_FUZZED(113260u))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)))))))))), true && (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))))), ! (! (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)))))))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(98.47)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(asin(-60.79)) : injectionSwitch.x)) > injectionSwitch.y))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) / 1.0)) - 0.0)) < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)))), true)), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), true))))), true, false))))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), true))))), true, false))))))))), true && ((bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), true))))), true, false)))))))))))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)))), false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))) && true))), bool(bool(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))), _GLF_IDENTITY(4, (4) | 0), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(false))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), true && (! (bool(bool(false)))))))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)))))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true))))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (! (_GLF_IDENTITY(bool(false), false || (bool(false))))))))))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true, true, true))))) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true))))) || false), false, true, true))) && true))) && true))) || false)), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(_GLF_FUZZED(-7.0)), bool(false))))) > injectionSwitch.y)))))))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (true)), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)), false, false), true))), false))), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))), bvec3(bvec3(bvec3(false, false, false))))))), true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp2(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))))) || false)), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), _GLF_IDENTITY(true, ! (! (true)))))))) || false)), ! (! (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), _GLF_IDENTITY(bool(bvec4(true && (false), false, true, true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(true && (false), _GLF_IDENTITY(false, ! (! (false))), true, true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true && (false), false, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(true && (false), false, true, true)))), true && (bool(bvec4(true && (false), false, true, true)))))))), ! (! ((_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, false || (false))) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), false || (_GLF_IDENTITY(bool((! (false))), (bool((! (_GLF_IDENTITY(false, false || (false)))))) && true)))))))), true, true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true && (false), false, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(true && (false), false, true, true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec4(true && (false), false, true, true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec4(true && (false), false, true, true))))))))))), true && (! (_GLF_IDENTITY(bool(bvec4(true && (false), false, true, true)), ! (! (bool(bvec4(true && (false), false, true, true))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(determinant(mat2(1.0, 0.0, 1.0, 1.0))))), 1.0, abs(1.0), 1.0))) > injectionSwitch.y))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), 0u + (uint(2))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
