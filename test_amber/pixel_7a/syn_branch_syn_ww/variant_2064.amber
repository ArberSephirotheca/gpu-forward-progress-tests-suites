#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 mat4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_22 {
 bvec2 _f0;
 mat3x2 _f1;
 ivec4 _f2;
 mat3x2 _f3;
 uint _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_21 {
 mat3x2 _f0;
} ;

struct _GLF_struct_20 {
 vec4 _f0;
 ivec3 _f1;
 ivec3 _f2;
 vec2 _f3;
 bvec3 _f4;
 ivec2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_24 {
 mat2 _f0;
 _GLF_struct_20 _f1;
 _GLF_struct_21 _f2;
 mat2 _f3;
 _GLF_struct_22 _f4;
 _GLF_struct_23 _f5;
} ;

struct _GLF_struct_18 {
 ivec4 _f0;
 bvec4 _f1;
 float _f2;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 bvec4 _f1;
 vec3 _f2;
 uvec3 _f3;
 mat4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_19 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
} ;

struct _GLF_struct_25 {
 mat2 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_19 _f2;
 uint _f3;
 uint workgroup_base;
 _GLF_struct_24 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_13 {
 bool _f0;
 mat3x4 _f1;
 uvec2 _f2;
 vec3 _f3;
 mat2x3 _f4;
 bvec4 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 bool _f1;
 mat4x3 _f2;
 vec4 _f3;
 ivec2 _f4;
 uvec3 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_11 {
 uvec4 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
 mat2x3 _f3;
 float _f4;
 uvec4 _f5;
 int _f6;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 uvec2 _f3;
 vec4 _f4;
 uint workgroup_id;
 mat4x2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 uvec3 _f1;
 uvec3 _f2;
 mat3 _f3;
 bvec2 _f4;
 mat2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
 uvec4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_7 {
 bool _f0;
 vec3 _f1;
 ivec3 _f2;
 vec2 _f3;
 mat2x3 _f4;
 mat4x3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 ivec2 _f1;
 vec3 _f2;
 uint _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_15 {
 mat2 _f0;
 _GLF_struct_8 _f1;
 mat2 _f2;
 _GLF_struct_14 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 mat2 _f1;
 mat3 _f2;
 float _f3;
 ivec3 _f4;
 bool _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_2 {
 int _f0;
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 mat4 _f1;
 mat3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_0 {
 float _f0;
 float _f1;
 ivec2 _f2;
 mat3 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uvec4 _f2;
 _GLF_struct_2 _f3;
 bvec2 _f4;
 mat3 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, max(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), _GLF_IDENTITY(-8.3, (_GLF_IDENTITY(-8.3, max(-8.3, -8.3))) / 1.0))), -409.681), clamp(vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681), _GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681), (true ? vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681) : _GLF_FUZZED(injectionSwitch))), vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, max(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), -8.3)), -409.681), clamp(vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681), _GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681), (true ? vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681) : _GLF_FUZZED(injectionSwitch))), vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681)))) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681))).t)), vec2(_GLF_FUZZED(-3666.5915), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / cos(vec2(0.0, 0.0)))[1], (_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))) + _GLF_IDENTITY(0.0, max(0.0, 0.0))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(reflect(8.5, -15.59)) : _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) + abs(vec2(0.0, 0.0))))[1], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]))) + 0.0)))), bvec2(false, true)), (false ? _GLF_FUZZED(vec2(36.85, -10.19)) : mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (false ? _GLF_FUZZED(296.169) : -8.3)), max(-8.3, -8.3)), -409.681), clamp(vec2(_GLF_IDENTITY(-8.3, _GLF_IDENTITY(max(-8.3, -8.3), min(_GLF_IDENTITY(max(-8.3, -8.3), min(max(-8.3, -8.3), _GLF_IDENTITY(_GLF_IDENTITY(max(-8.3, -8.3), min(max(-8.3, -8.3), _GLF_IDENTITY(max(-8.3, -8.3), (true ? max(-8.3, -8.3) : _GLF_FUZZED(9.0))))), clamp(max(-8.3, -8.3), _GLF_IDENTITY(max(-8.3, -8.3), 1.0 * (max(-8.3, -8.3))), _GLF_IDENTITY(max(-8.3, -8.3), mix(float(max(-8.3, -8.3)), float(_GLF_FUZZED(8.5)), bool(false))))))), max(-8.3, -8.3)))), -409.681), _GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681), (true ? vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681) : _GLF_FUZZED(injectionSwitch))), vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681), (false ? _GLF_FUZZED((true ? injectionSwitch : injectionSwitch)) : vec2(_GLF_IDENTITY(-8.3, max(-8.3, -8.3)), -409.681))))).t)), vec2(_GLF_FUZZED(-3666.5915), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)))) + 0.0), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(reflect(8.5, _GLF_IDENTITY(-15.59, (-15.59) * 1.0))) : _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) + abs(vec2(0.0, 0.0))))[1], (injectionSwitch)[1]))) + 0.0)))), bvec2(false, true))))).y)) || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(26.97, 3.1) * mat2(mat4x2(-324.342, -21.67, -9.6, -52.66, _GLF_IDENTITY(200.300, clamp(_GLF_IDENTITY(200.300, max(200.300, 200.300)), _GLF_IDENTITY(200.300, mix(float(_GLF_IDENTITY(200.300, (200.300) * 1.0)), float(_GLF_FUZZED(-4.2)), bool(false))), _GLF_IDENTITY(200.300, min(200.300, _GLF_IDENTITY(200.300, (200.300) - 0.0))))), -648.796, -9.2, 4594.6083)))))).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, false, false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, false || (false)), false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, false, false)))))), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / cos(0.0))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-5408.4796))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), false || (bool(bvec3((_GLF_DEAD(false)), false, true))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_replacement_5._f0._f3.GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = num_workgroup;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(mat2(1.0), _GLF_struct_8(_GLF_struct_6(mat2x3(1.0), ivec2(1), vec3(1.0), 1u), _GLF_struct_7(true, vec3(1.0), ivec3(1), vec2(1.0), mat2x3(1.0), mat4x3(1.0), mat4x3(1.0))), mat2(1.0), _GLF_struct_14(_GLF_struct_9(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), uvec3(1u), uvec3(1u), _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4(mat3(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(mat3(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4(mat3(1.0)) : _GLF_FUZZED(mat4(-6.6, 717.600, -3.9, -6.5, 0.5, -1749.4702, 716.000, -583.195, -7450.8051, 2.0, -4.7, -5.2, -13.87, -65.02, 2.3, 7185.8020))))), transpose(transpose(transpose(_GLF_IDENTITY(mat4(mat3(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))) : _GLF_FUZZED(mat4(-6.6, 717.600, -3.9, -6.5, 0.5, -1749.4702, 716.000, _GLF_IDENTITY(-583.195, (_GLF_IDENTITY(-583.195, (-583.195) / 1.0)) / 1.0), -7450.8051, 2.0, -4.7, -5.2, -13.87, -65.02, 2.3, 7185.8020))))))))))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(mat3(-96.58, 7444.8007, -104.543, -865.704, 7.6, -2.4, -52.04, -3.5, 3.6)) : mat3(_GLF_IDENTITY(mat4(mat3(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(mat3(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4(mat3(1.0)) : _GLF_FUZZED(mat4(-6.6, 717.600, -3.9, _GLF_IDENTITY(-6.5, max(-6.5, _GLF_IDENTITY(-6.5, (false ? _GLF_FUZZED(0.6) : -6.5)))), 0.5, -1749.4702, 716.000, -583.195, -7450.8051, 2.0, -4.7, -5.2, -13.87, -65.02, 2.3, 7185.8020))))), transpose(transpose(transpose(_GLF_IDENTITY(mat4(mat3(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4(mat3(1.0)) : _GLF_FUZZED(mat4(-6.6, 717.600, -3.9, -6.5, 0.5, -1749.4702, 716.000, -583.195, -7450.8051, 2.0, -4.7, -5.2, -13.87, -65.02, 2.3, 7185.8020)))))))))))))), bvec2(true), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-6.2, -1847.8064, -2877.9227, -326.375)) : mat2(1.0))), ivec4(1)), _GLF_struct_10(bvec3(true), mat4x3(1.0), mat2x3(1.0), uvec2(1u), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) + vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))).x, mat4x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED((mat3(-8.0, -66.56, 7.3, -9.6, -6803.3073, 53.84, -1412.2825, _GLF_IDENTITY(-4.2, (-4.2) + 0.0), 2.2) + mat3(8.6, -4610.4895, 4448.7911, _GLF_IDENTITY(_GLF_IDENTITY(-4411.2545, mix(float(_GLF_FUZZED(-4.6)), float(-4411.2545), bool(true))), (_GLF_IDENTITY(-4411.2545, mix(float(_GLF_FUZZED(-4.6)), float(-4411.2545), bool(true)))) * 1.0), 7527.6281, -976.193, -2302.7448, _GLF_IDENTITY(-361.339, min(_GLF_IDENTITY(-361.339, clamp(-361.339, -361.339, -361.339)), _GLF_IDENTITY(-361.339, clamp(_GLF_IDENTITY(-361.339, clamp(-361.339, -361.339, -361.339)), -361.339, -361.339)))), -9356.1003))) : _GLF_IDENTITY(mat3(1.0), mat3(1.0) * (mat3(1.0))))), mat3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-8.2))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + 0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) + (_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), (_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(99.54)), bool(false))), exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(9.2) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0))))), 1.0, 1.0, abs(1.0))) * mat2(1.0))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), 1.0, 1.0, abs(1.0))) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-2198.8477))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0))) * mat2(1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-8.8, (true ? -8.8 : _GLF_FUZZED(5.0)))) : 1.0)), 1.0))), (_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), float(mat3x4((1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), (1.0), (1.0))), (1.0))) / sqrt(1.0)), 0.0), (false ? _GLF_FUZZED(clamp(vec2(9463.1741, 9.3), vec2(6.6, -2.4), vec2(639.799, 1.0))) : vec2(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 0.0)))))))))) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(length(vec3(0.6, -8.4, 1.6))))) + 0.0)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(1932.9184) : _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)))), 1.0, 1.0, abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED(-5822.3913)), bool(false))))))) * mat2(1.0))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), 1.0, 1.0, abs(1.0))) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 0.0), (mat2(0.0, 1.0, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), 0.0, 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0))) * mat2(1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-144.276)))) / 1.0)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-76.08) : 0.0)), exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(9.2) : _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 1.0, abs(1.0))) * mat2(1.0))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) * cos(0.0))))) * mat2(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3138.1471)), bool(false))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(2.0)))), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0))) * mat2(1.0))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, _GLF_IDENTITY(exp(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(-2.4) : exp(_GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.2)), float(1.0), bool(true))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(1.0, 0.0)), dot(vec2(0.0, exp(0.0)), vec2(1.0, 0.0))))))))) * mat2(1.0))), clamp(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4955.9609, -9467.1228).s) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)))), 1.0, 1.0)), abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0))) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0))) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))) * mat2(1.0))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, 1.0)), abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0))) * mat2(1.0)))))))), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, abs(0.0), 1.0, 1.0, 1.0, 0.0)), min(float(mat3x2(0.0, abs(0.0), 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3x2(0.0, abs(0.0), 1.0, 1.0, 1.0, 0.0)), (float(mat3x2(0.0, abs(0.0), 1.0, 1.0, 1.0, 0.0))) + 0.0)))), 0.0, 0.0), ((_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))) : _GLF_FUZZED(-144.276)))) / 1.0)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-76.08) : 0.0)), exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(9.2) : _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 1.0, abs(1.0))) * mat2(1.0))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), 1.0, 1.0, abs(1.0))) * mat2(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3138.1471)), bool(false))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0))) * mat2(1.0))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, _GLF_IDENTITY(exp(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(-2.4) : exp(_GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)), 1.0, 1.0, abs(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.2)), float(1.0), bool(true))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(1.0, 0.0)), dot(vec2(0.0, exp(0.0)), vec2(1.0, 0.0))))))))) * mat2(1.0))), clamp(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4955.9609, -9467.1228).s) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)))), 1.0, 1.0)), abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, abs(1.0))) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(68.75)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))))), mix(float(_GLF_FUZZED(1721.5435)), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(68.75)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true)))))), bool(true))), exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ 87.83))), float(0.0), bool(true))), 0.0)), 0.0, 0.0, 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0))) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), sqrt(0.0), 0.0, 0.0, 1.0), mat3(mat4x3(_GLF_IDENTITY(mat3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), sqrt(0.0), 0.0, 0.0, 1.0), transpose(transpose(mat3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), sqrt(0.0), 0.0, 0.0, 1.0))))))))), 0.0, 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))) * mat2(1.0))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, 1.0)), abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0))) * mat2(1.0)))))))), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, abs(0.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(115.978) : 1.0)), abs(1.0), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(115.978) : 1.0)), abs(1.0), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(115.978) : 1.0)), abs(1.0), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(115.978) : 1.0)), abs(1.0), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(115.978) : 1.0)), abs(1.0), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(115.978) : 1.0)), abs(1.0), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 0.0)), min(float(mat3x2(0.0, abs(0.0), 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3x2(0.0, abs(0.0), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 0.0)), (float(mat3x2(0.0, abs(0.0), 1.0, 1.0, 1.0, 0.0))) + 0.0)))), 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), transpose(transpose(mat4(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))), _GLF_IDENTITY(mat3(mat4x3(transpose(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))), (mat3(mat4x3(transpose(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))))))) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))), _GLF_IDENTITY(mat3(mat4x3(transpose(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(mat4x3(transpose(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(mat3(mat3(mat3(1.0))), transpose(transpose(mat3(mat3(mat3(1.0)))))))) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, _GLF_IDENTITY(exp(_GLF_ZERO(0.0, injectionSwitch.x)), (exp(_GLF_ZERO(0.0, injectionSwitch.x))) - length(vec2(0.0, 0.0))), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(9.2) : _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 1.0, abs(1.0))) * mat2(1.0))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), 1.0, 1.0, abs(1.0))) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, _GLF_IDENTITY(exp(_GLF_ZERO(0.0, injectionSwitch.x)), (exp(_GLF_ZERO(0.0, injectionSwitch.x))) - 0.0), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.4)), bool(false))), 0.0)), 0.0))), 1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(abs(1.0), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) / 1.0), 0.0), mat2(mat3(mat2(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), 0.0, 1.0, 0.0))))))), (mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0))) * mat2(1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))), (false ? _GLF_FUZZED((7.8 / mat3(83.32, -1.4, -5857.5739, 54.41, 8579.7663, 8991.6192, 6.2, 8286.4224, -591.583))) : (_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))))) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-1476.4721) : _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(9.2) : _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(1.0))) * mat2(1.0))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(934.795))), exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.3)), vec2(_GLF_FUZZED(vec2(58.81, 8018.6344).g), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x)), 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))))) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(859.432)), bool(false))))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.9))), 0.0, 0.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-439.859)), bool(false))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7530.6084)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.9) : 1.0))), bool(true))), 1.0, abs(1.0))) * mat2(1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0))), mat3(_GLF_IDENTITY(mat4(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))), (false ? _GLF_FUZZED((7.8 / mat3(83.32, -1.4, -5857.5739, 54.41, 8579.7663, 8991.6192, 6.2, 8286.4224, -591.583))) : (_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))))) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-1476.4721) : _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(9.2) : _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(1.0))) * mat2(1.0))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(934.795))), exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.3)), vec2(_GLF_FUZZED(vec2(58.81, 8018.6344).g), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x)), 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))))) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(859.432)), bool(false))))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.9))), 0.0, 0.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-439.859)), bool(false))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7530.6084)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.9) : 1.0))), bool(true))), 1.0, abs(1.0))) * mat2(1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat3(-4.7, 5837.6635, -5757.5599, -94.39, 60.29, -267.181, 2996.8698, 8.0, -833.594)) : _GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))), (false ? _GLF_FUZZED((7.8 / mat3(83.32, -1.4, -5857.5739, 54.41, 8579.7663, 8991.6192, 6.2, 8286.4224, -591.583))) : (_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))))) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-1476.4721) : _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(9.2) : _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(1.0))) * mat2(1.0))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(934.795))), exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.3)), vec2(_GLF_FUZZED(vec2(58.81, 8018.6344).g), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x)), 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))))) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(859.432)), bool(false))))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.9))), 0.0, 0.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-439.859)), bool(false))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7530.6084)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.9) : 1.0))), bool(true))), 1.0, abs(1.0))) * mat2(1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0))), mat3(mat4(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))), (false ? _GLF_FUZZED((7.8 / mat3(83.32, -1.4, -5857.5739, 54.41, 8579.7663, 8991.6192, 6.2, 8286.4224, -591.583))) : (_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))))) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-1476.4721) : _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(9.2) : _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(1.0))) * mat2(1.0))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(934.795))), exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.3)), vec2(_GLF_FUZZED(vec2(58.81, 8018.6344).g), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x)), 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))))) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(859.432)), bool(false))))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.9))), 0.0, 0.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-439.859)), bool(false))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7530.6084)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.9) : 1.0))), bool(true))), 1.0, abs(1.0))) * mat2(1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0))))))))), transpose(transpose(mat4(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))), (false ? _GLF_FUZZED((7.8 / mat3(83.32, -1.4, -5857.5739, 54.41, 8579.7663, 8991.6192, 6.2, 8286.4224, -591.583))) : (_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))))) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-1476.4721) : _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(9.2) : _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(1.0))) * mat2(1.0))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(934.795))), exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.3)), vec2(_GLF_FUZZED(vec2(58.81, 8018.6344).g), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x)), 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))))) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(859.432)), bool(false))))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.9))), 0.0, 0.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-439.859)), bool(false))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7530.6084)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.9) : 1.0))), bool(true))), 1.0, abs(1.0))) * mat2(1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat3(-4.7, 5837.6635, -5757.5599, -94.39, 60.29, -267.181, 2996.8698, 8.0, -833.594)) : _GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))), (false ? _GLF_FUZZED((7.8 / mat3(83.32, -1.4, -5857.5739, 54.41, 8579.7663, 8991.6192, 6.2, 8286.4224, -591.583))) : (_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))))) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-1476.4721) : _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(9.2) : _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(1.0))) * mat2(1.0))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(934.795))), exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.3)), vec2(_GLF_FUZZED(vec2(58.81, 8018.6344).g), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x)), 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))))) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(859.432)), bool(false))))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.9))), 0.0, 0.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-439.859)), bool(false))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7530.6084)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.9) : 1.0))), bool(true))), 1.0, abs(1.0))) * mat2(1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0))), mat3(mat4(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))), (false ? _GLF_FUZZED((7.8 / mat3(83.32, -1.4, -5857.5739, 54.41, 8579.7663, 8991.6192, 6.2, 8286.4224, -591.583))) : (_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))))) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, 0.0, exp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-1476.4721) : _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(9.2) : _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(1.0))) * mat2(1.0))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0)), (mat2x3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(934.795))), exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.3)), vec2(_GLF_FUZZED(vec2(58.81, 8018.6344).g), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x)), 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))))) * mat2(1.0))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, exp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(859.432)), bool(false))))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.9))), 0.0, 0.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0))), 1.0, 1.0)), 1.0, 1.0)), abs(1.0)), (mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-439.859)), bool(false))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7530.6084)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.9) : 1.0))), bool(true))), 1.0, abs(1.0))) * mat2(1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0))))))))))))))))))))))))), _GLF_struct_11(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)), mat3x2(1.0), mat2x4(1.0), mat2x3(1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.9) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat4(-5.4, -48.71, 0.8, 8.7, _GLF_IDENTITY(3.8, 1.0 * (3.8)), 3099.3367, -114.124, 64.24, _GLF_IDENTITY(-39.69, float(mat4(-39.69, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0)))), 5800.5576, 9.5, 589.795, -9.1, 1843.6741, 58.48, -1.0))))))), uvec4(1u), 1), _GLF_struct_12(ivec3(1), true, mat4x3(1.0), vec4(1.0), ivec2(1), uvec3(1u), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), _GLF_struct_13(true, mat3x4(1.0), uvec2(1u), vec3(1.0), mat2x3(1.0), bvec4(true), mat2x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 1.0)))), uvec4(1u), ivec4(1)), mat3(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(mat2(1.0), _GLF_struct_16(bvec4(true)), _GLF_struct_19(_GLF_struct_17(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bvec4(true), _GLF_IDENTITY(vec3(1.0), vec3(vec4(vec3(1.0), 1.0))), uvec3(_GLF_IDENTITY(1u, ~ (~ (1u)))), mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2479.9555)), bool(false)))), bvec2(true)), _GLF_struct_18(ivec4(1), bvec4(true), 1.0)), 1u, workgroup_size * _GLF_struct_replacement_15._f3._f1.workgroup_id, _GLF_struct_24(mat2(1.0), _GLF_struct_20(vec4(1.0), ivec3(1), ivec3(1), vec2(1.0), bvec3(true), ivec2(_GLF_IDENTITY(1, 0 ^ (1))), bvec4(true)), _GLF_struct_21(mat3x2(1.0)), mat2(1.0), _GLF_struct_22(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), _GLF_IDENTITY(false, ! (! (false)))))), mat3x2(1.0), ivec4(1), mat3x2(1.0), 1u, bvec4(true)), _GLF_struct_23(mat4(1.0), mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), true && (! (true))), _GLF_IDENTITY(true, false || (true)), false)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), bool(bool((true))))) || false)))))))), true && (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), bool(bool((true))))) || false)))))))))), true && (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))), false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))))))))) || false))))), ! (! (! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), true && (! (true))), true, false)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), bool(bool((true))))) || false)))))))), true && (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), bool(bool((true))))) || false)))))))))), true && (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))), false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))))))))) || false)))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)) && ((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_25.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) + 0.0) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (_GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))) && true, ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false)))))), false)), (bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false)))))), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_25.workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_25.workgroup_base + subgroup_id * subgroup_size, (_GLF_struct_replacement_25.workgroup_base + subgroup_id * subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(_GLF_struct_replacement_5._f0._f3.GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_5._f0._f3.GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, ~ (~ (_GLF_struct_replacement_5._f0._f3.GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && true, (((true)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? uint(1) : _GLF_FUZZED(packUnorm4x8(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(8.1, clamp(8.1, 8.1, _GLF_IDENTITY(8.1, min(8.1, 8.1)))), _GLF_IDENTITY((8.1) - 0.0, mix(float(_GLF_FUZZED(44.68)), float((8.1) - 0.0), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(-902.862, (false ? _GLF_FUZZED(-3.1) : -902.862)), min(_GLF_IDENTITY(-902.862, (false ? _GLF_FUZZED(-3.1) : -902.862)), _GLF_IDENTITY(-902.862, (false ? _GLF_FUZZED(-3.1) : -902.862)))), 55.05, _GLF_IDENTITY(3.8, mix(float(3.8), float(_GLF_FUZZED(float(3934))), bool(false)))), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(_GLF_IDENTITY(_GLF_IDENTITY(8.1, clamp(8.1, 8.1, _GLF_IDENTITY(8.1, min(8.1, 8.1)))), _GLF_IDENTITY((8.1) - 0.0, mix(float(_GLF_FUZZED(44.68)), float((8.1) - 0.0), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(-902.862, (false ? _GLF_FUZZED(-3.1) : -902.862)), min(_GLF_IDENTITY(-902.862, (false ? _GLF_FUZZED(-3.1) : -902.862)), _GLF_IDENTITY(-902.862, (false ? _GLF_FUZZED(-3.1) : -902.862)))), 55.05, _GLF_IDENTITY(3.8, mix(float(3.8), float(_GLF_FUZZED(float(3934))), bool(false)))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && true, (((true)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? uint(1) : _GLF_FUZZED(packUnorm4x8(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(8.1, clamp(8.1, 8.1, _GLF_IDENTITY(8.1, min(8.1, 8.1)))), _GLF_IDENTITY((8.1) - 0.0, mix(float(_GLF_FUZZED(44.68)), float((8.1) - 0.0), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(-902.862, (false ? _GLF_FUZZED(-3.1) : -902.862)), min(_GLF_IDENTITY(-902.862, (false ? _GLF_FUZZED(-3.1) : -902.862)), _GLF_IDENTITY(-902.862, (false ? _GLF_FUZZED(-3.1) : -902.862)))), 55.05, _GLF_IDENTITY(3.8, mix(float(3.8), float(_GLF_FUZZED(float(3934))), bool(false)))), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(_GLF_IDENTITY(_GLF_IDENTITY(8.1, clamp(8.1, 8.1, _GLF_IDENTITY(8.1, min(8.1, 8.1)))), _GLF_IDENTITY((8.1) - 0.0, mix(float(_GLF_FUZZED(44.68)), float((8.1) - 0.0), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(-902.862, (false ? _GLF_FUZZED(-3.1) : -902.862)), min(_GLF_IDENTITY(-902.862, (false ? _GLF_FUZZED(-3.1) : -902.862)), _GLF_IDENTITY(-902.862, (false ? _GLF_FUZZED(-3.1) : -902.862)))), 55.05, _GLF_IDENTITY(3.8, mix(float(3.8), float(_GLF_FUZZED(float(3934))), bool(false)))))))))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), uint(_GLF_IDENTITY(uvec2(~ (~ (subgroup_local_id)), 0u), uvec2(0u, 0u) ^ (uvec2(~ (~ (subgroup_local_id)), 0u)))))), (subgroup_local_id) / 1u) + 1 < subgroup_size, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), false, true, true))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.85), _GLF_FUZZED(_GLF_IDENTITY(-84.45, min(-84.45, -84.45)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x < injectionSwitch.y)) && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u))))), 0u))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(4465.7047) : injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), uint(uvec4(~ (subgroup_local_id), 0u, 0u, 0u))))), ~ (~ (subgroup_local_id))), (subgroup_local_id) / 1u) + 1 < subgroup_size, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.85), _GLF_FUZZED(-84.45)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.85), _GLF_FUZZED(-84.45)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x < injectionSwitch.y))))) && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, length(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, length(0.0), 0.0, tan(0.0), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), float(_GLF_IDENTITY(vec3(determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), 1.0, 1.0), clamp(_GLF_IDENTITY(vec3(determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), 1.0, 1.0), (vec3(determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), 1.0, 1.0)) + vec3(0.0, 0.0, 0.0)), vec3(determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), 1.0, 1.0), vec3(determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), 1.0, 1.0))))), 1.0)), float(mat2(float(mat4x3(injectionSwitch.x, length(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, length(0.0), 0.0, tan(0.0), determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))), mat2(mat4x3(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))))))), mix(float(_GLF_FUZZED(-5555.8480)), float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))), mat2(mat4x3(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)))))))), bool(true)))), 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), 1.0)), 1.0, 0.0, 0.0)))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(vec4(8.6, -4.3, 568.100, 7.5), (vec4(8.6, -4.3, 568.100, 7.5)) * mat4(1.0)).p))))))), dot(vec2(0.0, 1.0), vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))))) + (injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.8)), bool(_GLF_IDENTITY(false, (false) && true)))) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), bool(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))) || false), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(false))))) || false), true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_5._f0._f3.GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup, (_GLF_struct_replacement_5._f0._f3.GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup) - _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(88189u, 132334u)) : uvec2(0u, 0u)))).x], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * vec2(1.0, 1.0))).x), float(_GLF_FUZZED(486.891)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), (_GLF_IDENTITY(bool(bool(bool(false))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (bool(bool(bool(false)))))) && true)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true, false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))))), ! (! (_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), min(injectionSwitch, injectionSwitch)).y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((vec3(-12.48, 2.4, -8946.2977) * mat3(-999.286, 987.731, 780.501, -1.8, -815.507, 4.3, -5.8, -87.84, -5.5)).r)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false, false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), true && (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), true, true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))), true)), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83.08) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_5._f0._f3.GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, determinant(mat4(0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
