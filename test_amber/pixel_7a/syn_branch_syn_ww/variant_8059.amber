#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 mat2 _f0;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 mat2x3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 mat2x4 _f1;
 ivec2 _f2;
 mat4x2 _f3;
 bvec2 _f4;
 bool _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 _GLF_struct_5 _f1;
 mat4x3 _f2;
 _GLF_struct_6 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_3 {
 float _f0;
 bvec3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 bvec2 _f1;
 mat4 _f2;
 mat2x3 _f3;
 mat2x4 _f4;
 uint workgroup_size;
 mat4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 mat2 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 mat3 _f1;
 bool _f2;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat4x2 _f1;
 uvec2 _f2;
 _GLF_struct_0 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_1 _f0;
 _GLF_struct_4 _f1;
 mat3x4 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_9 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true))), bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, true))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) || false))))), (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-70.48) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.8) : _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0)))))) / 1.0))) > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-70.48) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-70.48) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-70.48) : injectionSwitch.x))) + _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))) > injectionSwitch.y)))))), false))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-799.492)))))), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-799.492))))))) / 1.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, abs(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))).x > injectionSwitch.y) || false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)))))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-281.479)), float(injectionSwitch.y), bool(true))))), true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch - vec2(-4.2, 2323.7898))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y) - tan(length(0.0)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(false, true, true, false)), false, true, true))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * abs(1.0))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0)))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) - vec2(0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9776.1033)), bvec2(true, false))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.9)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))))), true, true)), ! (! (bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))))), true, true)))))) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1060.8520)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true)))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1060.8520)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true)))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1060.8520)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true))))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1060.8520)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true)))))))) || false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1060.8520)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true)))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1060.8520)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true)))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1060.8520)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true))))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1060.8520)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true)))))))) || false))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1060.8520)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true)))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1060.8520)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true)))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1060.8520)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true))))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1060.8520)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true)))))))) || false))))))), true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(sqrt(vec2(-3.0, 334.209))), max(_GLF_FUZZED(sqrt(vec2(-3.0, 334.209))), _GLF_IDENTITY(_GLF_FUZZED(sqrt(vec2(-3.0, 334.209))), clamp(_GLF_FUZZED(sqrt(vec2(-3.0, 334.209))), _GLF_FUZZED(sqrt(vec2(-3.0, 334.209))), _GLF_FUZZED(sqrt(vec2(-3.0, 334.209))))))))).x > injectionSwitch.y), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true), true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY((bool(bvec3(false, true, false))), false || ((bool(bvec3(false, true, false))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_1(mat3(1.0), mat4x2(1.0), uvec2(1u), _GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(49310, 84508)) : _GLF_IDENTITY(ivec2(1), ivec2(ivec3(ivec2(1), 0))))), ~ (~ (_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(49310, 84508)) : _GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(1)))))))), mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY((60.94 * 5062.3880), mix(float((60.94 * 5062.3880)), float(_GLF_FUZZED(8.2)), bool(false))))), float(1.0), bool(true)))), true)), _GLF_struct_4(_GLF_struct_2(mat3x2(1.0), bvec2(true), mat4(1.0), mat2x3(1.0), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(517.261) : float(vec4(1.0, 0.0, 0.0, 0.0)), max(false ? _GLF_IDENTITY(_GLF_FUZZED(517.261), float(vec3(_GLF_IDENTITY(_GLF_FUZZED(517.261), float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(517.261), abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (mat4x2(_GLF_FUZZED(517.261), abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat4(1.0)))), 1.0, abs(0.0)))) : float(vec4(1.0, 0.0, 0.0, 0.0)), false ? _GLF_FUZZED(517.261) : float(vec4(1.0, 0.0, 0.0, 0.0))))))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), clamp(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))) + vec4(0.0, 0.0, 0.0, 0.0)), min(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, max(_GLF_IDENTITY((1.0) + 0.0, 1.0 * ((1.0) + 0.0)), (1.0) + 0.0)))) - 0.0), 1.0, abs(1.0)))), 0.0, 0.0, 0.0))), vec4(1.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(517.261) : float(vec4(1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false))))), true && _GLF_IDENTITY((false), ((false)) || false)))) ? _GLF_FUZZED(517.261) : float(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))))))), gl_WorkGroupSize.x, _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(fma(6.2, -9342.3115, -38.37))))), ivec3(1)), mat2(1.0), _GLF_struct_3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.7))), min(1.0, 1.0)), bvec3(true), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), mat3x4(1.0), _GLF_struct_7(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_struct_5(mat2(1.0), mat2x4(1.0), ivec2(1), mat4x2(1.0), bvec2(true), true, mat3x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8084.8877)), bool(false))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0)))))))) + _GLF_IDENTITY((1.0), ((1.0)) - 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0, (false ? _GLF_FUZZED(13.08) : (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(1.8), clamp(_GLF_FUZZED(1.8), _GLF_FUZZED(1.8), _GLF_FUZZED(1.8)))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-87.05)), (false ? _GLF_IDENTITY(_GLF_FUZZED(0.0), min(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0))) : _GLF_IDENTITY(float(_GLF_FUZZED(-87.05)), 1.0 * (float(_GLF_FUZZED(-87.05)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))), min(0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))), (false ? _GLF_FUZZED(7388.0841) : 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-89.00), float(vec3(_GLF_FUZZED(-89.00), 0.0, 0.0))) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true))), (1.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true))), (1.0) / 1.0)) * 1.0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true))), (1.0) / 1.0)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true))))), (1.0) / 1.0))) - 0.0)) - 0.0) / 1.0)))), mix(float(0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-89.00), float(vec3(_GLF_FUZZED(-89.00), 0.0, 0.0))) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true)), float(_GLF_IDENTITY(mat2(mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true)), 1.0, 0.0, sqrt(1.0)), (mat2(mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true)), 1.0, 0.0, sqrt(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))))), (1.0) / 1.0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true))), (1.0) / 1.0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-17.24)), float(1.0), bool(true))), (1.0) / 1.0))) - 0.0)) - 0.0) / 1.0))))), float(_GLF_FUZZED(-7.1)), bool(false))))))))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(378.689))), 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) * 1.0), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0))))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.1))))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (true ? _GLF_IDENTITY(0.0 + (1.0), clamp(_GLF_IDENTITY(0.0 + (1.0), max(0.0 + (1.0), 0.0 + (1.0))), 0.0 + (1.0), 0.0 + (1.0))) : _GLF_FUZZED(8173.1535))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) / 1.0), 0.0 + (1.0))))) - 0.0)), _GLF_IDENTITY(min(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0))))), max(min(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0))))), min(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)) + (1.0), max(_GLF_IDENTITY(0.0 + (1.0), float(mat2x3(0.0 + (1.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), 0.0 + (1.0)))), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0), (mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), min(0.0 + (1.0), 0.0 + (1.0))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - 0.0)))), _GLF_IDENTITY(mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))) - 0.0), 0.0)), max(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))) - 0.0), 0.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))) - 0.0), 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-37.23)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true))), injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), min(0.0 + (1.0), 0.0 + (1.0))))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(15.35) : float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) - 0.0))))), float(_GLF_FUZZED(38.21)), bool(false)), min(mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))) - 0.0), 0.0)), max(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))) - 0.0), 0.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))) - 0.0), 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-37.23)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true))), injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), min(0.0 + (1.0), 0.0 + (1.0))))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(15.35) : float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) - 0.0))))), float(_GLF_FUZZED(38.21)), bool(false)), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))) - 0.0), 0.0)), max(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))) - 0.0), 0.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))) - 0.0), 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-37.23)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true))), injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), min(0.0 + (1.0), 0.0 + (1.0))))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(15.35) : float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) - 0.0))))), float(_GLF_FUZZED(38.21)), bool(false))))), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, min(1.0, 1.0)))) / 1.0)))))), ((_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, min(1.0, 1.0)))) / 1.0))))))) - determinant(mat2(0.0, 0.0, 0.0, 0.0))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(243.691)), float(1.0), bool(true)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)))), float(mat2x4(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-95.23)), float(_GLF_IDENTITY(0.0, (0.0) + length(0.0))), bool(true))) + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)) + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0))))) - 0.0)))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), bool(true)))), min(min(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-89.00, (true ? _GLF_IDENTITY(-89.00, max(-89.00, -89.00)) : _GLF_FUZZED(-87.69)))) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))) / 1.0) / 1.0)))))) - 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))), 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(exp2(73.73)))), 0.0 + (1.0))) - 0.0)), min(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(acosh(-4.9)))), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), tan(sqrt(0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-82.13)), float(1.0), bool(true))), 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, sqrt(0.0))))) - 0.0)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(-403.788))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0)), float(mat4(float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(-403.788))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0)), round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, sin(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, sin(0.0))), (false ? _GLF_FUZZED(-46.43) : dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, sin(0.0)))))), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), clamp((_GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), ((_GLF_IDENTITY(1.0, 0.0 + (1.0)))) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(vec3((_GLF_IDENTITY(1.0, 0.0 + (1.0))), 1.0, 0.0))))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))))) - 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), mix(float(_GLF_FUZZED((-84.64))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), bool(true))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0 + (1.0), max(_GLF_IDENTITY(0.0 + (1.0), float(mat2x3(0.0 + (1.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), 0.0 + (1.0)))), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), min(0.0 + (1.0), 0.0 + (1.0))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - 0.0, min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - 0.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - 0.0)))))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0) + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))) - 0.0), 0.0)), max(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)), float(vec4((false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))), clamp(0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))))) - 0.0)))) - 0.0), 0.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), min((_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))) - 0.0))), 0.0, 1.0, 1.0), mat2(_GLF_IDENTITY(mat2x3(mat2(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), min((_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))) - 0.0))), 0.0, 1.0, 1.0)), (mat2x3(mat2(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), min((_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))) - 0.0))), 0.0, 1.0, 1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) / 1.0)))))) - 0.0)))) - 0.0), 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-37.23)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true))), injectionSwitch.y), 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), min(0.0 + (1.0), 0.0 + (1.0))))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(15.35) : float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0)))))))), max((_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), min(0.0 + (1.0), 0.0 + (1.0))))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(15.35) : float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0)))))))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), min(0.0 + (1.0), 0.0 + (1.0))))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(15.35) : float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-27.67)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1775.6682) : 0.0))))), bool(true))) + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) - 0.0))))), float(_GLF_FUZZED(38.21)), bool(false))), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0)))) / 1.0), clamp(false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0)))) / 1.0), false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0)))) / 1.0), false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0)))) / 1.0)))))))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(float(mat2x4(0.0 + (1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat2x4(0.0 + (1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat2x4(0.0 + (1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0))))))) - 0.0)))), float(mat2x4(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0))))) - 0.0))), (false ? _GLF_FUZZED(-5.3) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) + 0.0))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0))), mix(float(_GLF_FUZZED(float(194934u))), float(_GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)))), bool(true))))))) - 0.0)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), bool(true)))), min(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-1447.0298)), bool(false)))))), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)), min(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED((690.180))), float((1.0)), bool(true))))) - 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.1) : 1.0)), 0.0 + (1.0))) - 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0 + (1.0), max(_GLF_IDENTITY(0.0 + (1.0), float(mat2x3(0.0 + (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - abs(0.0))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), 0.0 + (1.0)))), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), min(0.0 + (1.0), 0.0 + (1.0))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))) - 0.0)))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))) - 0.0), 0.0)), max(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))), (false ? _GLF_FUZZED(-1.5) : (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7270.2898) : 0.0))), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))) - 0.0), 0.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0), clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))))) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0)))))) - 0.0), 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-37.23)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true))), injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), min(0.0 + (1.0), 0.0 + (1.0))))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), clamp(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), float(mat4x3(float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), sin(0.0), 1.0))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(15.35) : float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) / 1.0)), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, 0.0 + (1.0))), min((_GLF_IDENTITY(1.0, 0.0 + (1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) - 0.0))))), _GLF_IDENTITY(float(_GLF_FUZZED(38.21)), (float(_GLF_FUZZED(38.21))) - 0.0), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, min(1.0, 1.0)))) / 1.0)))))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(991.725)), float(1.0), bool(true))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), float(mat2x4(0.0 + (1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, log(cos(0.0)), 1.0, 1.0, 0.0))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0)))), float(mat2x4(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-89.00) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(0.0), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0))))) - 0.0), mix(float(_GLF_FUZZED(1.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0))))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0))))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0))))) - 0.0)))) / 1.0)), bool(true)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0)))), bool(true))))))), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.2))), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.2))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.9)), bool(false))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), (true ? 1.0 : _GLF_FUZZED(-7.2))), mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.2)))), float(_GLF_FUZZED(6.0)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.2))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0))), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * cos(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)))), 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (true ? mat2(1.0) * (vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(777.340, 75.21)))), abs(1.0), 1.0, sin(0.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0))), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0)))))))), (true ? _GLF_IDENTITY((injectionSwitch) * cos(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)))), 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (true ? mat2(1.0) * (vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(777.340, 75.21)))), abs(1.0), 1.0, sin(0.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0))), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0)))))))), max(_GLF_IDENTITY((injectionSwitch) * cos(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)))), 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (true ? mat2(1.0) * (vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(777.340, 75.21)))), abs(1.0), 1.0, sin(0.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0))), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0)))))))), ((injectionSwitch) * cos(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)))), 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (true ? mat2(1.0) * (vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(777.340, 75.21)))), abs(1.0), 1.0, sin(0.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0))), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0))))))))) * mat2(1.0)), (injectionSwitch) * cos(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0)))), 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (true ? mat2(1.0) * (vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(777.340, 75.21)))), abs(1.0), 1.0, sin(0.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0))), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0)))))))))) : _GLF_FUZZED(injectionSwitch)))).y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(trunc(vec2(-14.59, 7.8)))))))))), mat2(1.0) * (max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0))))))))))).y, 0.0, 1.0, 0.0, 1.0, sin(0.0)), mat3x2(mat3x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0))))))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0))))))), _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0))))))), _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0))))))))))).y, 0.0, 1.0, 0.0, 1.0, sin(0.0)), (false ? _GLF_FUZZED(mat3x2(-369.798, -45.98, 0.6, _GLF_IDENTITY(47.77, mix(float(_GLF_IDENTITY(47.77, (47.77) / 1.0)), float(_GLF_FUZZED(8.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -3.6, -7.9)) : mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3x4(vec2(0.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), vec2(0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7673.1139)), float(1.0), bool(true))), 1.0))) * (vec2(0.0, 0.0))))))))).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3x4(vec2(0.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), vec2(0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7673.1139)), float(1.0), bool(true))), 1.0))) * (vec2(0.0, 0.0))))))))).y : _GLF_FUZZED(8.3))), 0.0, 1.0, 0.0, 1.0, sin(0.0)))))))), _GLF_IDENTITY((float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), max(mat2(1.0) * (vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (vec2(0.0, 0.0))))))))).y, 0.0, 1.0, 0.0, 1.0, sin(0.0)), mat3x2(mat3x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0))))))))).y, 0.0, 1.0, 0.0, 1.0, sin(0.0)), (false ? _GLF_FUZZED(mat3x2(-369.798, -45.98, 0.6, 47.77, -3.6, -7.9)) : mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0))))))))).y, 0.0, 1.0, 0.0, 1.0, sin(0.0))))))))) - 0.0, mix(float(_GLF_FUZZED(-5776.2365)), float((float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), max(mat2(1.0) * (vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (vec2(0.0, 0.0))))))))).y, 0.0, 1.0, 0.0, 1.0, sin(0.0)), mat3x2(mat3x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0))))))))).y, 0.0, 1.0, 0.0, 1.0, sin(0.0)), (false ? _GLF_FUZZED(mat3x2(-369.798, -45.98, 0.6, 47.77, -3.6, -7.9)) : mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0))))))))).y, 0.0, 1.0, 0.0, 1.0, sin(0.0))))))))) - 0.0), bool(true)))))), 0.0))))))), mat4x3(1.0), _GLF_struct_6(mat4x2(_GLF_IDENTITY(1.0, float(mat2x4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-759.386)), bool(false))), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), mat2x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))), (true ? _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat3(mat2(1.0))), (_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (false ? _GLF_FUZZED(mat2(-846.670, 8.3, 3849.0509, 2.9)) : mat2(mat3(mat2(1.0)))))) - mat2(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(_GLF_IDENTITY(mat2(1.9, -60.23, -53.43, 5.1), (false ? _GLF_FUZZED(mat2(747.474, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))), 1.0, 1.0, exp(0.0), 0.0))), 6513.6993, 78.09)) : mat2(1.9, -60.23, -53.43, 5.1))))))), vec2(1.0)), _GLF_struct_9(mat3x2(1.0), _GLF_struct_8(mat2(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))), 0u | (~ (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_10._f1._f0.workgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_10._f1._f0.workgroup_size, uint(uvec3(_GLF_struct_replacement_10._f1._f0.workgroup_size, 0u, _GLF_IDENTITY(((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))))) | (1u)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(6u), ~ (_GLF_IDENTITY(~ (uint(6u)), 0u ^ (~ (uint(6u)))))))), _GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))))), uint(6u))), (true ? ((_GLF_IDENTITY(1u, (1u) | (1u)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))), _GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))))), uint(6u))) : _GLF_FUZZED(subgroup_local_id)))))), _GLF_struct_replacement_10._f1._f0.workgroup_size, _GLF_struct_replacement_10._f1._f0.workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(acos(vec2(-61.89, -9.4))) : injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-56.43, 1.5, -5.4).p)), bool(false))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), true, true, true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(false, false, false, true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))) * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (1) : _GLF_FUZZED(12010))), (~ (1)) - (0 & -25399))))) % subgroup_size), uint(uvec2(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, 0u + ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size)))) / 1u), 1u))), min(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (1) : _GLF_FUZZED(12010))), (~ (1)) - (0 & -25399))))) % subgroup_size), uint(uvec2(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, 0u + ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size)))) / 1u), 1u))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (1) : _GLF_FUZZED(12010))), (~ (1)) - (0 & -25399))))) % subgroup_size), uint(uvec2(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, 0u + ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size)))) / 1u), 1u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch)).y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)), min(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)), min(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4x2(-468.364, -783.376, 9210.2411, 361.273, 0.8, 831.765, 15.40, -3.0)))))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0)))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true), false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), _GLF_IDENTITY(false, ! (! (false))), false)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, false, false)))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false)))), false))))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))), false)))))) || _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), tan(vec2(0.0, 0.0)) + ((injectionSwitch))) + vec2(0.0, 0.0)).x)))], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 0 + (1)), 1, 0), (ivec3(_GLF_IDENTITY(1, 0 + (1)), 1, 0)) - ivec3(0, 0, 0))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-84.06, -4134.6961)) : injectionSwitch)).x, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-7680.0657, 75.81, 735.546, 603.423, -7602.9602, 693.386, 5.2, 4.0, -61.11, 77.53, 5.3, -130.166, -61.15, -157.893, 15.81, 9855.7645)) : mat4(injectionSwitch.x, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), float(mat2x4(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat4(_GLF_IDENTITY(-7680.0657, clamp(-7680.0657, -7680.0657, -7680.0657)), 75.81, 735.546, 603.423, -7602.9602, 693.386, 5.2, 4.0, -61.11, 77.53, 5.3, -130.166, -61.15, -157.893, 15.81, 9855.7645)) : mat4(injectionSwitch.x, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-8.8), clamp(_GLF_FUZZED(-8.8), _GLF_FUZZED(-8.8), _GLF_FUZZED(-8.8))), (true ? true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-8.8), clamp(_GLF_FUZZED(-8.8), _GLF_FUZZED(-8.8), _GLF_FUZZED(-8.8))) : _GLF_FUZZED(-7.5))))), 1.0, 0.0, 1.0)), transpose(transpose((false ? _GLF_FUZZED(mat4(_GLF_IDENTITY(-7680.0657, _GLF_IDENTITY(clamp(-7680.0657, -7680.0657, -7680.0657), clamp(_GLF_IDENTITY(clamp(-7680.0657, -7680.0657, -7680.0657), (_GLF_IDENTITY(clamp(-7680.0657, -7680.0657, -7680.0657), (true ? clamp(-7680.0657, -7680.0657, -7680.0657) : _GLF_FUZZED(82.39)))) - sqrt(0.0)), clamp(-7680.0657, -7680.0657, -7680.0657), _GLF_IDENTITY(clamp(-7680.0657, -7680.0657, -7680.0657), mix(float(_GLF_FUZZED(-411.288)), float(clamp(-7680.0657, -7680.0657, -7680.0657)), bool(true)))))), 75.81, 735.546, 603.423, -7602.9602, 693.386, 5.2, 4.0, -61.11, 77.53, 5.3, -130.166, -61.15, -157.893, 15.81, 9855.7645)) : mat4(injectionSwitch.x, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.8))), 1.0, 0.0, 1.0))))))), 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1 < subgroup_size))))
  {
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))), false, true, true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (0u | 0u) + (next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, (0u | 0u) + (next_virtual_gid))) | 0u)], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))) && true)))), true && (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))) : _GLF_FUZZED(injectionSwitch))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))) : _GLF_FUZZED(injectionSwitch))).y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))))))) && true))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
