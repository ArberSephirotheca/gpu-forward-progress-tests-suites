#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(48.31)), vec2(_GLF_FUZZED(-3.5), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).x : _GLF_FUZZED(refract(_GLF_IDENTITY(-2056.7802, min(_GLF_IDENTITY(-2056.7802, 0.0 + (-2056.7802)), _GLF_IDENTITY(-2056.7802, 0.0 + _GLF_IDENTITY((-2056.7802), mix(float(_GLF_FUZZED(-9163.3633)), float(_GLF_IDENTITY((-2056.7802), (false ? _GLF_FUZZED(pow(9.0, -61.20)) : (-2056.7802)))), bool(true)))))), -2.5, 315.370)))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.2), _GLF_FUZZED(3.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (true))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID))), clamp((_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID))))) >> (uvec3(181745u, 86176u, 61901u) & uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))) + (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))))) ^ (gl_WorkGroupID))), (clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID))) >> (_GLF_IDENTITY(uvec3(181745u, 86176u, 61901u) & uvec3(0u, 0u, 0u), (uvec3(181745u, 86176u, 61901u) & uvec3(0u, 0u, 0u)) | (uvec3(181745u, 86176u, 61901u) & uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID))) >> (uvec3(181745u, _GLF_IDENTITY(86176u, max(86176u, _GLF_IDENTITY(86176u, min(86176u, 86176u)))), 61901u) & uvec3(0u, 0u, 0u)))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))) | uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y) + 0.0)))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), false, true), true))))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), workgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(672.600)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0, ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0) * 1.0))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) >> 0u, ((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) >> 0u) + 0u)))), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) >> 0u), 1u, 1u), (uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) >> 0u), 1u, 1u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) >> 0u), 1u, 1u), (uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) >> 0u), 1u, 1u)) / uvec3(1u, 1u, 1u))))), ~ (~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) >> 0u), 1u, 1u), (uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) >> 0u), 1u, 1u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) >> 0u), 1u, 1u), (uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) >> 0u), 1u, 1u)) / uvec3(1u, 1u, 1u))))))))) + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) >> 0u))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size) >> 0u), 1u))))) + subgroup_local_id) / 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), float(_GLF_FUZZED(-8401.0801)), bool(false)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), float(_GLF_FUZZED(-8401.0801)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(-8401.0801)), 0.0 + (float(_GLF_FUZZED(-8401.0801)))), bool(false)))))))))) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(74.46, -7676.8491, 20.27).s), mix(float(_GLF_FUZZED(vec3(74.46, -7676.8491, 20.27).s)), float(_GLF_FUZZED(-9.8)), bool(false)))), bool(false))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(74.46, -7676.8491, 20.27).s), mix(float(_GLF_FUZZED(vec3(74.46, -7676.8491, 20.27).s)), float(_GLF_FUZZED(-9.8)), bool(false)))), bool(false))) > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), float(_GLF_FUZZED(-8401.0801)), bool(false)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, length(vec2(0.0, 0.0)), 1.0, cos(0.0), 0.0), mat3x2(mat3x4(mat3x2(injectionSwitch, length(vec2(0.0, 0.0)), 1.0, cos(0.0), 0.0))))), (false ? _GLF_FUZZED(clamp(injectionSwitch, -796.525, -2474.0225)) : vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, length(vec2(0.0, 0.0)), 1.0, cos(0.0), 0.0), mat3x2(mat3x4(mat3x2(injectionSwitch, length(vec2(0.0, 0.0)), 1.0, cos(0.0), 0.0)))))))).y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(-8401.0801)), 0.0 + (float(_GLF_FUZZED(-8401.0801)))), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), float(_GLF_FUZZED(-8401.0801)), bool(false)))))))))) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(74.46, -7676.8491, 20.27).s), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec3(74.46, -7676.8491, 20.27), vec3(mat3x4(vec3(74.46, -7676.8491, 20.27), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))).s)), float(_GLF_FUZZED(-9.8)), bool(false)))), bool(false))) > injectionSwitch.y)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.1) : injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(28.03)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), injectionSwitch.y))), float(_GLF_FUZZED(-8401.0801)), bool(false)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((vec2(-3.0, -6.2) - injectionSwitch)) : injectionSwitch)).y))), float(_GLF_FUZZED(-8401.0801)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), injectionSwitch.y))), float(_GLF_FUZZED(-8401.0801)), bool(false)))))))))) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(74.46, -7676.8491, 20.27).s), mix(float(_GLF_FUZZED(vec3(74.46, -7676.8491, 20.27).s)), float(_GLF_FUZZED(-9.8)), bool(false)))), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(74.46, -7676.8491, 20.27).s), mix(float(_GLF_FUZZED(vec3(74.46, -7676.8491, 20.27).s)), float(_GLF_FUZZED(-9.8)), bool(false)))), bool(false))) > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, false || (false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (false)))) && true))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (false)))) && true)))))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (false)))) && true))))))))) || false) && true), false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-90.07, -4129.8032)))).y))) && true))))), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), _GLF_IDENTITY(true, true && (true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), true, true, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) / 1u), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, 6u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, 0u | (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, 0u | (6u))) / 1u))), ~ (~ (6u))))), min(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, max(6u, 6u)))), _GLF_IDENTITY(uint(6u), uint(6u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (true ? _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))) : _GLF_FUZZED(subgroup_local_id))), uint(6u)), _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec4(6u, 1u, 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), ~ (~ (_GLF_IDENTITY(uint(7u), (uint(7u)) | (uint(7u))))))) - 0u), uint(7u)))), max(uvec4(6u, 1u, 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), ~ (~ (_GLF_IDENTITY(uint(7u), (uint(7u)) | (uint(7u))))))) - 0u), uint(7u)))), uvec4(6u, 1u, 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), ~ (~ (_GLF_IDENTITY(uint(7u), (uint(7u)) | (uint(7u))))))) - 0u), uint(7u))))))))))))))) | (subgroup_size))), uint(uvec2((_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(1u * (uint(6u)), 0u | (1u * (uint(6u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u | (uint(6u))), uint(6u))))) | (subgroup_size))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, tan(0.0), 1.0)), (vec2(mat2(injectionSwitch, tan(0.0), 1.0))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y))))), min((_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) | (subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) + 0u))))))))) | (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) | (6u))) + 0u)), uint(6u)), min(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(6u), (uint(6u)) + 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(6u, (6u) | (6u)))), (_GLF_IDENTITY(6u, uint(uvec3(6u, 1u, 1u)))) >> 0u)), uint(6u))))) | (subgroup_size)))) << 0u))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)) | (0u), ((_GLF_IDENTITY(0u, (0u) << 0u)) | (0u)) | ((_GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u)))))))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_IDENTITY(uint((0u << _GLF_IDENTITY(uint(6u), uint(6u)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint((0u << _GLF_IDENTITY(uint(6u), uint(6u)))), (uint((0u << _GLF_IDENTITY(uint(6u), uint(6u))))) / 1u))), ((~ (_GLF_IDENTITY(uint((0u << _GLF_IDENTITY(uint(6u), uint(6u)))), (uint((0u << _GLF_IDENTITY(uint(6u), uint(6u))))) / 1u)))) / 1u)))) | (subgroup_size))) ^ 0u), subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), 0u + (uint(6u)))) | (uint(6u))))) | (subgroup_size))) ^ 0u, min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), 0u + (uint(6u)))) | (uint(6u))))) | (subgroup_size))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), 0u + (uint(6u)))) | (uint(6u))))) | (subgroup_size))) ^ 0u, ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), 0u + (uint(6u)))) | (uint(6u))))) | (subgroup_size))) ^ 0u) | ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), 0u + (uint(6u)))) | (uint(6u))))) | (subgroup_size))) ^ 0u))))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : 6u))), uint(6u))))) | (subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), 0u | (_GLF_IDENTITY(0u, min(0u, 0u)))) << _GLF_IDENTITY(uint(6u), uint(6u))) | _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), 0u | (~ ((subgroup_size)))))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), (subgroup_size)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ 0u), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))))))), ((_GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(6u), uint(6u))), (uint(_GLF_IDENTITY(uint(6u), uint(6u)))) - 0u)))))) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), clamp(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))))), _GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), clamp(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))))), _GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))))), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), clamp(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))))), _GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))))))) | 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), clamp(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))))), _GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))))), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), clamp(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))))), _GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))))))) | 0u), 0u))) * 1u))) * _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (false ? _GLF_FUZZED((~ subgroup_local_id)) : _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) | 0u)))) ^ 0u)) / 1u))), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u))), ((subgroup_size)) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((subgroup_size)))), clamp((_GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((subgroup_size)))), 0u | ((_GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((subgroup_size)))))), (_GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((subgroup_size))))))))) ^ 0u), max(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size)))) / 1u) ^ 0u), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))) / 1u)), uint(6u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), uint(uint(uint(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), (0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(virtual_gid)))))), (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) | (subgroup_size))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u))), max((0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))))))), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u))))), (true ? _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u + (0u)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u))), max(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u)))) | 0u)) | (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), max(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))) + (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))))))), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u + (0u)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u))))))) : _GLF_FUZZED(subgroup_local_id))))))), _GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), 0u | (_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))) << 0u))) | (subgroup_size))) | 0u)) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, (true ? (subgroup_size) - 0u : _GLF_FUZZED(workgroup_base))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), min(_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, (0u) | (0u))))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(packUnorm4x8(normalize(vec4(-54.09, -457.605, 4.2, -419.984)))) : 6u))), uint(6u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(packUnorm4x8(normalize(vec4(-54.09, -457.605, 4.2, -419.984)))) : 6u))), uint(6u))) / 1u)) | (subgroup_size))) ^ 0u), (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(packUnorm4x8(normalize(vec4(-54.09, -457.605, 4.2, -419.984)))) : 6u))), uint(6u))) | (subgroup_size))) ^ 0u) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u ^ (_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) | 0u)))))) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), 1u)))))))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, 0u ^ (0u))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, ~ (~ (5u)))) | (5u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((5u))), clamp(~ (5u), _GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u))), ~ (5u))))), (_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (~ (5u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(workgroup_size)))) ^ 0u)), 0u | (~ (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(workgroup_size)))) ^ 0u))))), ((~ (5u))) ^ 0u))) | (5u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u))) | (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u)))))) - 0u)))) + 0u)), uint(uvec2(uint(0u), 0u)))) | (uint(0u))), uint(0u))), 1u)), uint(uvec2(uint(uvec3(_GLF_IDENTITY(5u, (_GLF_IDENTITY(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) << 0u))))))) | (5u))) / 1u), ~ (~ (5u)))) | (5u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u)), 1u)))) << 0u))), uint(5u))) + (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, _GLF_IDENTITY(6u, (6u) ^ 0u)))), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) | (subgroup_size))) ^ 0u))))))), (((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), 0u | (_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))) << 0u))) | (subgroup_size))) | 0u)) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, (true ? (subgroup_size) - 0u : _GLF_FUZZED(workgroup_base))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), min(_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, (0u) | (0u))))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(packUnorm4x8(normalize(vec4(-54.09, -457.605, 4.2, -419.984)))) : 6u))), uint(6u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(packUnorm4x8(normalize(vec4(-54.09, -457.605, 4.2, -419.984)))) : 6u))), uint(6u))) / 1u)) | (subgroup_size))) ^ 0u), (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(packUnorm4x8(normalize(vec4(-54.09, -457.605, 4.2, -419.984)))) : 6u))), uint(6u))) | (subgroup_size))) ^ 0u) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u ^ (_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) | 0u)))))) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), 1u)))))))) | (subgroup_size))))) ^ _GLF_IDENTITY(0u, 0u ^ (0u))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, ~ (~ (5u)))) | (5u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((5u))), clamp(~ (5u), _GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u))), ~ (5u))))), (_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (~ (5u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(workgroup_size)))) ^ 0u)), 0u | (~ (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(workgroup_size)))) ^ 0u))))), ((~ (5u))) ^ 0u))) | (5u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u)) | (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u))) | (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u, 0u)))))) - 0u)))) + 0u)), uint(uvec2(uint(0u), 0u)))) | (uint(0u))), uint(0u))), 1u)), uint(uvec2(uint(uvec3(_GLF_IDENTITY(5u, (_GLF_IDENTITY(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) << 0u))))))) | (5u))) / 1u), ~ (~ (5u)))) | (5u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u)), 1u)))) << 0u))), uint(5u))) + (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, _GLF_IDENTITY(6u, (6u) ^ 0u)))), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) | (subgroup_size))) ^ 0u)))))))) + 0u) << 0u)) + ((subgroup_local_id + 1) % subgroup_size)) - _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(_GLF_IDENTITY(uint(2u), (uint(2u)) + 0u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u), _GLF_IDENTITY(uint(2u), 0u | _GLF_IDENTITY((uint(2u)), max((uint(2u)), (uint(2u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(2u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, 0u ^ (2u)), (2u) | 0u))) >> 0u)))))), _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(1u, (1u) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(_GLF_IDENTITY(2u, (2u) | 0u))) >> 0u)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, false || (true)))))) && (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(47599) : int(0))), (_GLF_IDENTITY(int(0), min(int(0), int(0)))) + 0)))), 4)), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(36632) : 64)), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, abs(1.0), abs(1.0), 0.0, 0.0, 0.0)), 1.0 * (float(mat3x2(injectionSwitch.y, abs(1.0), abs(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true))) && true), true, true)), true, false, false)), _GLF_IDENTITY(false || (bool(bvec4(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))), true)), true, false, false))), _GLF_IDENTITY(bool(bvec3(false || (bool(bvec4(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, true)), true, false, false))), false, false)), (bool(bvec3(false || (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true)), true, _GLF_IDENTITY(false, ! (! (false))), false))), false, false))) || false)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (false), true && (false || (false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false || (false), true && (false || _GLF_IDENTITY((false), ! (! ((false)))))), false, true, false))) && true)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false, true))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0, sqrt(0.0), 0.0, 1.0, abs(1.0)), (mat2x3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0, sqrt(0.0), 0.0, 1.0, abs(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0, sqrt(0.0), 0.0, 1.0, abs(1.0)), (mat2x3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0, sqrt(0.0), 0.0, 1.0, abs(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(2.4))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
