#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat2x4 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 vec4 _f3;
 mat2x3 _f4;
 uint _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_3 {
 bool _f0;
 bool _f1;
 ivec4 _f2;
 mat4x2 _f3;
 float _f4;
 vec2 _f5;
 float _f6;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_6 {
 uint subgroup_size;
 _GLF_struct_5 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(gl_SubgroupSize, _GLF_struct_5(_GLF_struct_0(mat3x4(1.0), uvec2(1u)), _GLF_struct_1(mat3x2(1.0)), _GLF_struct_2(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)))), max(1.0 * (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)), 1.0 * (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0))))))), _GLF_struct_3(true, true, ivec4(1), mat4x2(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), _GLF_IDENTITY(_GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), (clamp((1.0), (1.0), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2626.2996) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))) - abs(length(vec3(0.0, 0.0, 0.0)))), max(clamp((1.0), (1.0), (1.0)), clamp((1.0), (1.0), (1.0))))))), 1.0, _GLF_IDENTITY(vec2(1.0), exp(vec2(0.0, 0.0)) * (vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(25.51) : 1.0))))), 1.0), _GLF_struct_4(mat2x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(-7.0)) : 1.0)) : _GLF_FUZZED(-520.706)))), mat4x3(1.0), mat2x3(1.0), vec4(1.0), mat2x3(1.0), 1u, mat4x3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-504.570)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = (((0 ^ 1) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 ^ (int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (1 ^ 1) ^ (_injected_loop_counter --))) - 0))
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false))))), _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), false || ((! (false)))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))) && true), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false))))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false)))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))) && true), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false))))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false)))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false))))))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))) && true), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false))))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false)))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false))))))), true, true), false)))), (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))) && true), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false))))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false)))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false))))))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))) && true), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false))))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false)))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false))))))), true, true), false))))) && true))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))) && true), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false))))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false)))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))) && true), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false))))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false)))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false))))))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))) && true), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false))))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false)))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false))))))), true, true), false)))), (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))) && true), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false))))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false)))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false))))))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))) && true), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false))))), (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), bool(bvec4(bool(bool(true && (false))), true, true, false)))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), true))))))), false))))))), true, true), false))))) && true))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))), true)), false))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (false) && true)))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (false) && true)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true))))))), false)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))), false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true))))))), false)))))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true))), false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true)))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true))))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true)))))))))))))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))))), false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), true))))))), false)))))))), true)), true))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), ! (! ((bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && true))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)))), false))) && true))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))), true))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))) && true)), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))) && true)), false))))))))))))))))), (false) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4522.4269)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (! ((false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))))))), _GLF_IDENTITY((false), ! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ 363.056))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))))))))))))) && true)) || false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true))) && true)), ! (! (! _GLF_IDENTITY((! (false)), false || ((! (false)))))))))) || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, false)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false)))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false)))))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false)))))), false)))))), false)))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))))))))), true))))))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) && true))))), true))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), false))))), true)))), true))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))))))))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))))))), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))))))), false)))))), false)))))))), (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / 1.0))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))))), _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, true && (false)))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ 363.056))), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(atanh(-4.5)))), mix(float(_GLF_FUZZED((+ 363.056))), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))))))) && true))))))))))) && true)) || false))), true, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3((_GLF_IDENTITY((false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true)), (bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true))) && true)), ! (! (! _GLF_IDENTITY((! (false)), false || ((! (false)))))))))) || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, false)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(false, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false)))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false)))))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false)))))), false)))))), false)))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), false))))))))))), true))))))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) && true))))), true))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))), true))))), false))))), true)))), true))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))))))))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))))))), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))))))), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)))))))))))))), false)))))), false)))))))), (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / 1.0))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))))), _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, true && (false)))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ 363.056))), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(atanh(-4.5)))), mix(float(_GLF_FUZZED((+ 363.056))), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))))))) && true))))))))))) && true)) || false))), true, _GLF_IDENTITY(false, true && (false))), true))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, min((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, 0.0 + ((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0)), (false ? _GLF_FUZZED(vec4(-567.602, 46.54, 783.759, 8.2).t) : _GLF_IDENTITY((_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), clamp(_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), mix(float(float(vec3(injectionSwitch.y, abs(0.0), 0.0))), float(_GLF_FUZZED(8.9)), bool(false))), _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), mix(float(_GLF_FUZZED(6.4)), float(float(vec3(injectionSwitch.y, abs(0.0), 0.0))), bool(true))), float(vec3(injectionSwitch.y, abs(0.0), 0.0))))) * 1.0, 0.0 + ((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0)))))), min((_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), clamp(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), float(mat2x4(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), float(vec3(injectionSwitch.y, abs(0.0), 0.0))))) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))), mix(float(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))), mix(float(_GLF_FUZZED(8.8)), float((float(vec3(injectionSwitch.y, abs(0.0), 0.0)))), bool(true)))), float(_GLF_FUZZED(-8470.8837)), bool(_GLF_IDENTITY(false, (false) && true)))) * 1.0, float(mat2x3(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, (true ? (float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0 : _GLF_FUZZED(23.02))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, min((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, 0.0 + ((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0)), (false ? _GLF_FUZZED(vec4(-567.602, 46.54, 783.759, 8.2).t) : _GLF_IDENTITY((_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), clamp(_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), mix(float(float(vec3(injectionSwitch.y, abs(0.0), 0.0))), float(_GLF_FUZZED(8.9)), bool(false))), _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), mix(float(_GLF_FUZZED(6.4)), float(float(vec3(injectionSwitch.y, abs(0.0), 0.0))), bool(true))), float(vec3(injectionSwitch.y, abs(0.0), 0.0))))) * 1.0, 0.0 + ((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0)))))), min((_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), clamp(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), float(mat2x4(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), float(vec3(injectionSwitch.y, abs(0.0), 0.0))))) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))), mix(float(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))), mix(float(_GLF_FUZZED(8.8)), float((float(vec3(injectionSwitch.y, abs(0.0), 0.0)))), bool(true)))), float(_GLF_FUZZED(-8470.8837)), bool(_GLF_IDENTITY(false, (false) && true)))) * 1.0, float(mat2x3(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, (true ? (float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0 : _GLF_FUZZED(23.02))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))))))), false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, min((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, 0.0 + ((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0)), (false ? _GLF_FUZZED(vec4(-567.602, 46.54, 783.759, 8.2).t) : _GLF_IDENTITY((_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), clamp(_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), mix(float(float(vec3(injectionSwitch.y, abs(0.0), 0.0))), float(_GLF_FUZZED(8.9)), bool(false))), _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), mix(float(_GLF_FUZZED(6.4)), float(float(vec3(injectionSwitch.y, abs(0.0), 0.0))), bool(true))), float(vec3(injectionSwitch.y, abs(0.0), 0.0))))) * 1.0, 0.0 + ((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0)))))), min((_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), clamp(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), float(mat2x4(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), float(vec3(injectionSwitch.y, abs(0.0), 0.0))))) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))), mix(float(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))), mix(float(_GLF_FUZZED(8.8)), float((float(vec3(injectionSwitch.y, abs(0.0), 0.0)))), bool(true)))), float(_GLF_FUZZED(-8470.8837)), bool(_GLF_IDENTITY(false, (false) && true)))) * 1.0, float(mat2x3(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, (true ? (float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0 : _GLF_FUZZED(23.02))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0)))))))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, min((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, 0.0 + ((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0)), (false ? _GLF_FUZZED(vec4(-567.602, 46.54, 783.759, 8.2).t) : _GLF_IDENTITY((_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), clamp(_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), mix(float(float(vec3(injectionSwitch.y, abs(0.0), 0.0))), float(_GLF_FUZZED(8.9)), bool(false))), _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), mix(float(_GLF_FUZZED(6.4)), float(float(vec3(injectionSwitch.y, abs(0.0), 0.0))), bool(true))), float(vec3(injectionSwitch.y, abs(0.0), 0.0))))) * 1.0, 0.0 + ((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0)))))), min((_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), clamp(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), float(mat2x4(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), float(vec3(injectionSwitch.y, abs(0.0), 0.0))))) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))), mix(float(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))), mix(float(_GLF_FUZZED(8.8)), float((float(vec3(injectionSwitch.y, abs(0.0), 0.0)))), bool(true)))), float(_GLF_FUZZED(-8470.8837)), bool(_GLF_IDENTITY(false, (false) && true)))) * 1.0, float(mat2x3(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, (true ? (float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0 : _GLF_FUZZED(23.02))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))))))), false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, min((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, 0.0 + ((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0)), (false ? _GLF_FUZZED(vec4(-567.602, 46.54, 783.759, 8.2).t) : _GLF_IDENTITY((_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), clamp(_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), mix(float(float(vec3(injectionSwitch.y, abs(0.0), 0.0))), float(_GLF_FUZZED(8.9)), bool(false))), _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), mix(float(_GLF_FUZZED(6.4)), float(float(vec3(injectionSwitch.y, abs(0.0), 0.0))), bool(true))), float(vec3(injectionSwitch.y, abs(0.0), 0.0))))) * 1.0, 0.0 + ((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0)))))), min((_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), clamp(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), float(mat2x4(float(vec3(injectionSwitch.y, abs(0.0), 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), float(vec3(injectionSwitch.y, abs(0.0), 0.0))))) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))), mix(float(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))), mix(float(_GLF_FUZZED(8.8)), float((float(vec3(injectionSwitch.y, abs(0.0), 0.0)))), bool(true)))), float(_GLF_FUZZED(-8470.8837)), bool(_GLF_IDENTITY(false, (false) && true)))) * 1.0, float(mat2x3(_GLF_IDENTITY((float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0, (true ? (float(vec3(injectionSwitch.y, abs(0.0), 0.0))) * 1.0 : _GLF_FUZZED(23.02))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0)))))))))), false)))))))) || false)))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))));
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_6.subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-35098) : 0)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), false || (! ((injectionSwitch.x < injectionSwitch.y))))))), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     do
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && true))))), true, false, true)))))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))), false || ((bool(bvec2(_GLF_DEAD(false), true)))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! _GLF_IDENTITY((bool(bvec4(true, true, true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), ! (! ((bool(bvec4(true, true, true, _GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))) && true))), false)), bvec2(bvec4(bvec2(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! _GLF_IDENTITY((bool(bvec4(true, true, true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), ! (! ((bool(bvec4(true, true, true, _GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))) && true))), false)), false, false)))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) - 0)))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false), bvec3(bvec4(bvec3(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false), false)))), true && (bool(bvec3(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.6)))) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-178.239)))) > injectionSwitch.y))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (_GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true)) || false)), (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, true)))) ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(_GLF_IDENTITY(315.128, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(315.128, (_GLF_IDENTITY(315.128, mix(float(_GLF_FUZZED(-61.46)), float(315.128), bool(true)))) - 0.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, abs(0.0), round(length(normalize(1.0))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, abs(0.0), round(length(normalize(1.0)))))), 1.0)), (float(mat4x3(_GLF_IDENTITY(315.128, (_GLF_IDENTITY(315.128, mix(float(_GLF_FUZZED(-61.46)), float(315.128), bool(true)))) - 0.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, abs(0.0), round(length(normalize(1.0))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, abs(0.0), round(length(normalize(1.0)))))), 1.0))) / 1.0))))))))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) && (bool(bvec3(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(315.128))))))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) && (bool(bvec3(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), sin(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0))))) / 1.0))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.5)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), sin(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0))))) / 1.0))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.5)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), sin(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0))))) / 1.0))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.5)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)), true && (bool(bvec3(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)), true && (bool(bvec3(bool(bvec4(false, false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) && true))))), true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), true && (bool(bvec3(bool(bvec4(false, false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)), true && (bool(bvec3(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((7.8))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-35.23)), float(injectionSwitch.x), bool(true)))), bool(true))) < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), true && (bool(bvec3(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))) && true)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), false || (bool(_GLF_WRAPPED_IF_FALSE(false))))))) || _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), false || (bool(_GLF_WRAPPED_IF_FALSE(false)))), ! (! (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), false || (bool(_GLF_WRAPPED_IF_FALSE(false)))))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), false || (bool(_GLF_WRAPPED_IF_FALSE(false)))), ! (! (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), false || (bool(_GLF_WRAPPED_IF_FALSE(false)))))))))) || false, true && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), false || (bool(_GLF_WRAPPED_IF_FALSE(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_WRAPPED_IF_FALSE(false)), false, true)), false || (bool(bvec3(bool(_GLF_WRAPPED_IF_FALSE(false)), false, true))))), _GLF_IDENTITY(false || (bool(_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(false || (bool(_GLF_WRAPPED_IF_FALSE(false))), ! (! (false || (bool(_GLF_WRAPPED_IF_FALSE(false))))))) && true)))))))) || false))) || false)), ! (! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), false || (bool(_GLF_WRAPPED_IF_FALSE(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), false || (bool(_GLF_WRAPPED_IF_FALSE(false)))), bool(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), false || (bool(_GLF_WRAPPED_IF_FALSE(false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), false || (bool(_GLF_WRAPPED_IF_FALSE(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), false || (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), true && (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), bool(bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))), false || (bool(_GLF_WRAPPED_IF_FALSE(false))))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), false || (bool(_GLF_WRAPPED_IF_FALSE(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), false || (bool(_GLF_WRAPPED_IF_FALSE(false)))), bool(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), false || (bool(_GLF_WRAPPED_IF_FALSE(false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), false || (bool(_GLF_WRAPPED_IF_FALSE(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), bool(bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), bool(bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), bool(bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), bool(bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), true)))))))))))), false || (bool(_GLF_WRAPPED_IF_FALSE(false))))))))))), false))))) || false)))) && true)))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = (-48824 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) && true)))))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), float(_GLF_FUZZED(20.12)), bool(false)), clamp(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) && true)))))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), float(_GLF_FUZZED(20.12)), bool(false)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) && true)))))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), float(_GLF_FUZZED(20.12)), bool(false)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) && true)))))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(102.456)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), float(_GLF_FUZZED(20.12)), bool(false))))) > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) && true)), (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false))))), false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false))))), false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false)))))))), ! (! (! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false))))), false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false))))))))))))))))) && true))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) && true)), (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false))))), false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false))))), false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false)))))))), ! (! (! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false))))), false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false))))))))))))))))) && true))) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) && true)), (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) && true))) && true)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) && true)), (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) && true))) && true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) && true)), (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) && true))) && true)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) && true)), (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) && true))) && true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) >> 0), int(8)), (_GLF_IDENTITY(0, (0) * 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(_GLF_IDENTITY(8, clamp(_GLF_IDENTITY(8, (false ? _GLF_FUZZED(-86727) : 8)), 8, 8)))) >> 0), int(8))) << 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
                      {
                       barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, (-86393 & 0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, max(_GLF_struct_replacement_6.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (true ? _GLF_struct_replacement_6.subgroup_size : _GLF_FUZZED(workgroup_base))))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-48035) : 1)), 1)), 0 ^ (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(findLSB(workgroup_size)), ~ (~ (_GLF_FUZZED(findLSB(workgroup_size))))) : 1))))), ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(findLSB(workgroup_size), ~ (~ (findLSB(workgroup_size)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(findLSB(workgroup_size), ~ (~ (findLSB(workgroup_size)))), 0, 1), (ivec3(_GLF_IDENTITY(findLSB(workgroup_size), ~ (~ (findLSB(workgroup_size)))), 0, 1)) | (ivec3(_GLF_IDENTITY(findLSB(workgroup_size), ~ (~ (findLSB(workgroup_size)))), 0, 1)))))) : 1)))))) ^ 0u) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, max(_GLF_struct_replacement_6.subgroup_size, _GLF_struct_replacement_6.subgroup_size)), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, max(_GLF_struct_replacement_6.subgroup_size, _GLF_struct_replacement_6.subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1), ((false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1)) | ((false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1))))), 0 ^ (0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1)))))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : _GLF_IDENTITY(1, (1) | 0)))), 0 ^ (0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1))))))) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1), ((false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1)) | ((false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1))))), 0 ^ (0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1)))))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : _GLF_IDENTITY(1, (1) | 0)))), 0 ^ (0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1))))))) | 0u)), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1), ((false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1)) | ((false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1))))), 0 ^ (0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1)))))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : _GLF_IDENTITY(1, (1) | 0)))), 0 ^ (0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1))))))) | 0u))) << 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1))), _GLF_IDENTITY(min(0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1))), 0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1)))), ~ (~ (min(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1)), 1, 0)), (true ? int(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1)), 1, 0)) : _GLF_FUZZED(63901))))), 0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1))))))))), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(findLSB(workgroup_size)), int(ivec3(_GLF_FUZZED(findLSB(workgroup_size)), 0, _GLF_IDENTITY(0, max(0, 0))))) : 1))), min(0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1))), 0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findLSB(workgroup_size)) : 1))))))))))) ^ 0u) % _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) / 1u)) | 0u));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (0 ^ 0) ^ (1)))), (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), bool(_GLF_IDENTITY(bvec3(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1)))), true, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1)))), true, true)))))))))), true, true))))))) && true))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           do
            {
             do
              {
               atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))))], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY((_GLF_IDENTITY(64, (64) << 0)) ^ 0, ((_GLF_IDENTITY(64, (64) << 0)) ^ 0) - 0))) >> 0, ((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-92490) : 64)), (64) << 0)) ^ 0)) >> 0) - 0)), _GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec2((64), 1))) | (64), max(_GLF_IDENTITY((64), int(ivec2((64), 1))) | (64), _GLF_IDENTITY((64), int(ivec2((64), 1))) | (64)))), 4);
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(subgroup_local_id + 1 < _GLF_struct_replacement_6.subgroup_size)
  {
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY((0), max((0), (0))) << 0);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-19.55), max(_GLF_FUZZED(-19.55), _GLF_IDENTITY(_GLF_FUZZED(-19.55), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-19.55), clamp(_GLF_FUZZED(-19.55), _GLF_IDENTITY(_GLF_FUZZED(-19.55), max(_GLF_FUZZED(-19.55), _GLF_FUZZED(-19.55))), _GLF_FUZZED(-19.55))), float(mat4(_GLF_FUZZED(-19.55), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-19.55), float(mat4(_GLF_FUZZED(-19.55), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), mix(_GLF_IDENTITY(float(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-19.55), float(mat4(_GLF_FUZZED(-19.55), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6728.0371) : 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), max(_GLF_IDENTITY(float(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-19.55), float(mat4(_GLF_FUZZED(-19.55), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6728.0371) : 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), mix(float(float(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-19.55), float(mat4(_GLF_FUZZED(-19.55), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6728.0371) : 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))), float(_GLF_FUZZED(-2.9)), bool(false))), float(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-19.55), float(mat4(_GLF_FUZZED(-19.55), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6728.0371) : 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), float(_GLF_FUZZED(-526.760)), bool(false))), mix(float(_GLF_FUZZED(561.698)), float(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-19.55), float(mat4(_GLF_FUZZED(-19.55), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), mix(_GLF_IDENTITY(float(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-19.55), float(mat4(_GLF_FUZZED(-19.55), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6728.0371) : 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), max(_GLF_IDENTITY(float(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-19.55), float(mat4(_GLF_FUZZED(-19.55), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6728.0371) : 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), mix(float(float(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-19.55), float(mat4(_GLF_FUZZED(-19.55), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6728.0371) : 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))), float(_GLF_FUZZED(-2.9)), bool(false))), float(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-19.55), float(mat4(_GLF_FUZZED(-19.55), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6728.0371) : 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), float(_GLF_FUZZED(-526.760)), bool(false)))), bool(true)))) + 0.0)))), ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch))))) * mat2(1.0))[0], float(vec3(((injectionSwitch) * mat2(1.0))[0], 1.0, 0.0))), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch))), (injectionSwitch))))) * mat2(1.0))[0], float(vec3(((injectionSwitch) * mat2(1.0))[0], 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.0))), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.5) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))) / 1.0), _GLF_FUZZED(-3.2)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) && true, false || ((true) && true)), ! (! (_GLF_IDENTITY((true) && true, false || ((true) && true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(-2.0), _GLF_IDENTITY((injectionSwitch)[1], exp(0.0) * (_GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), bvec2(false, true))).x, injectionSwitch.x)))) > injectionSwitch.y)))))).y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), 0 | (_GLF_IDENTITY(~ (4), (~ (4)) * 1))))));
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))) || false))))) && true))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _injected_loop_counter, _injected_loop_counter)) != _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, int(ivec4(1, 1, 1, _GLF_IDENTITY(1, min(1, 1))))))) << _GLF_IDENTITY(int(5), int(5))), max((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, int(ivec4(1, 1, 1, _GLF_IDENTITY(1, min(1, 1))))))) << _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, int(ivec4(1, 1, 1, _GLF_IDENTITY(1, min(1, 1))))))) << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (int(5)), min(~ (int(5)), ~ (int(5))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (int(5)), min(~ (int(5)), ~ (int(5)))))))))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (int(5)), min(~ (int(5)), ~ (int(5)))))))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(ivec4(int(8), 1, 0, 0))))), (_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(_GLF_IDENTITY(ivec4(int(8), 1, 0, 0), (ivec4(int(8), 1, 0, 0)) - ivec4(0, 0, 0, 0))))))) / 1)))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (~ (_GLF_IDENTITY(1, min(1, 1))))))))), clamp(ivec4(1, 0, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(ivec4(int(8), 1, 0, 0))))), (_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(_GLF_IDENTITY(ivec4(int(8), 1, 0, 0), (ivec4(int(8), 1, 0, 0)) - ivec4(0, 0, 0, 0))))))) / 1)))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (~ (_GLF_IDENTITY(1, min(1, 1))))))))), ivec4(1, 0, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(ivec4(int(8), 1, 0, 0))))), (_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(_GLF_IDENTITY(ivec4(int(8), 1, 0, 0), (ivec4(int(8), 1, 0, 0)) - ivec4(0, 0, 0, 0))))))) / 1)))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (~ (_GLF_IDENTITY(1, min(1, 1))))))))), ivec4(1, 0, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(ivec4(int(8), 1, 0, 0))))), (_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(_GLF_IDENTITY(ivec4(int(8), 1, 0, 0), (ivec4(int(8), 1, 0, 0)) - ivec4(0, 0, 0, 0))))))) / 1)))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (~ (_GLF_IDENTITY(1, min(1, 1))))))))))))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), _GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(5, (5) | (5)))), min(~ (int(5)), ~ (int(5))))))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0)))) : _GLF_IDENTITY(int(5), (int(5)) << 0)))), min(~ (int(5)), ~ (int(5)))))))) | 0), int(ivec3((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(ivec4(int(8), 1, 0, 0))))), (_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(_GLF_IDENTITY(ivec4(int(8), 1, 0, 0), (ivec4(int(8), 1, 0, 0)) - ivec4(0, 0, 0, 0))))))) / 1)))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (~ (_GLF_IDENTITY(1, min(1, 1))))))))), clamp(ivec4(1, 0, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(ivec4(int(8), 1, 0, 0))))), (_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(_GLF_IDENTITY(ivec4(int(8), 1, 0, 0), (ivec4(int(8), 1, 0, 0)) - ivec4(0, 0, 0, 0))))))) / 1)))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (~ (_GLF_IDENTITY(1, min(1, 1))))))))), ivec4(1, 0, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(ivec4(int(8), 1, 0, 0))))), (_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(_GLF_IDENTITY(ivec4(int(8), 1, 0, 0), (ivec4(int(8), 1, 0, 0)) - ivec4(0, 0, 0, 0))))))) / 1)))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (~ (_GLF_IDENTITY(1, min(1, 1))))))))), ivec4(1, 0, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(ivec4(int(8), 1, 0, 0))))), (_GLF_IDENTITY(int(ivec4(int(8), 1, 0, 0)), ~ (~ (int(_GLF_IDENTITY(ivec4(int(8), 1, 0, 0), (ivec4(int(8), 1, 0, 0)) - ivec4(0, 0, 0, 0))))))) / 1)))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (~ (_GLF_IDENTITY(1, min(1, 1))))))))))))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), _GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(5, (5) | (5)))), min(~ (int(5)), ~ (int(5))))))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0)))) : _GLF_IDENTITY(int(5), (int(5)) << 0)))), min(~ (int(5)), ~ (int(5)))))))) | 0), 1, 0)))) : _GLF_IDENTITY(_GLF_FUZZED(-23416), max(_GLF_FUZZED(-23416), _GLF_FUZZED(-23416)))))) << 0)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, 0 ^ (2))), 4, 64, 4);
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
