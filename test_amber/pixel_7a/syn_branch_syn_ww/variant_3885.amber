#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid;
 uvec4 GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 do
  {
   GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_size.x = subgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x = GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_size.x;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y = subgroup_size;
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_size.y = subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.x = GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_size.y;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_size.w = workgroup_size;
 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w = GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_size.w;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.w = GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z = GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))) - 0.0)))))))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_base = GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.w * GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.y = workgroup_base;
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint virtual_gid = GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.y + GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y + GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.x;
 GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_size.z = virtual_gid;
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.z = GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_size.z;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size)).y + GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y + ((GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.x + 1) % GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.x = next_virtual_gid;
  }
 else
  {
  }
 atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.z], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) ^ 0)) / 1), 4);
 if(GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.x + 1 < GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 0:
     case 60:
     case 37:
     case 3:
     case 24:
     case 7:
     case 71:
     case 36:
     case 46:
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))))
            {
             switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), int(4)))))
              {
               case 1:
               do
                {
                 GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.b;
                 ;
                }
               while((-3.8 < -83.77));
               case 81:
               mat2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
               case 0:
               case 38:
               case 70:
               case 97:
               case 56:
               case 15:
               case 34:
               case 76:
               case 29:
               case 85:
               switch(_GLF_SWITCH((1 ^ 1)))
                {
                 case 8:
                 vec4 _GLF_SWITCH_0_0v[65], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
                 case 0:
                 case 85:
                 int i = 0;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  barrier();
                 case 24:
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     for(int _injected_loop_counter = (0 | (1 | (1 ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.x], uint(2), 4, 64, 4);
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 break;
                 case 9:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(                 bvec3(true, false, true);
 true; (mat3x2(-3797.1250, 28.37, 71.40, -957.824, 3.3, _GLF_IDENTITY(-9.4, clamp(-9.4, _GLF_IDENTITY(-9.4, (true ? _GLF_IDENTITY(-9.4, mix(float(_GLF_FUZZED(2.7)), float(-9.4), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(50.01))), -9.4))) / mat3x2(-0.2, 3.6, -1.7, 404.507, 8.4, 99.09)))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))), injectionSwitch, injectionSwitch)).x))))
                      {
                       case 34:
                       _injected_loop_counter;
                       case 54:
                       vec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                       case 0:
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_IDENTITY(true, (true) || false))
                              {
                               switch(_GLF_SWITCH(0))
                                {
                                 case 62:
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   bvec4(true, true, false, true);
                                  }
                                 case 58:
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                  {
                                   mat4(-1283.6052, 4280.5727, -292.601, 8.1, -4.6, -8.2, 6.5, _GLF_IDENTITY(-1.3, clamp(-1.3, -1.3, -1.3)), _GLF_IDENTITY(-66.64, mix(float(_GLF_FUZZED(-5.2)), float(-66.64), bool(true))), -8.4, 298.322, 2.4, -218.165, 34.01, 2.9, 55.54);
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 case 0:
                                 mat2 _GLF_SWITCH_0_3v;
                                 case 7:
                                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
                                  {
                                   for(ivec4 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v; (ivec2(-13937, -71025) == ivec2(81206)); ivec3(-88855, -24750, -81519))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       switch(_GLF_SWITCH(_GLF_IDENTITY(0, ~ (~ (0)))))
                                        {
                                         case 0:
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             mat3x4(-57.90, 8.7, 2.6, 7.1, -2.4, -31.72, 23.80, -3146.1231, -722.339, -6530.3240, -2.1, 91.13);
                                            }
                                          }
                                         case 45:
                                         case 24:
                                         if(_GLF_DEAD(false))
                                          barrier();
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                            {
                                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                              {
                                               (vec3(-640.528, -7.8, 8.8) * mat2x3(7005.8468, -4582.8210, -1.2, 926.495, -470.331, -8.2));
                                              }
                                            }
                                           else
                                            {
                                            }
                                          }
                                         else
                                          {
                                          }
                                         do
                                          {
                                           do
                                            {
                                             bvec3(true, false, false);
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                         vec3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
                                         mat4x3 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
                                         -13.93;
                                         if(_GLF_DEAD(false))
                                          barrier();
                                         break;
                                         case 65:
                                         vec3 _GLF_SWITCH_4_0v[69], _GLF_SWITCH_4_1v;
                                         case 77:
                                         bvec3(false, true, false);
                                         default:
                                         1;
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   ;
                                  }
                                 else
                                  {
                                  }
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                      {
                                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(-52405) : int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (98143 & 0)); _injected_loop_counter --)
                                        {
                                         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                                          barrier();
                                         do
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             barrier();
                                            }
                                           else
                                            {
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                         if(_GLF_DEAD(false))
                                          {
                                           for(int _injected_loop_counter = (0 & 52423); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                            {
                                             barrier();
                                            }
                                          }
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 if((mat2x4(55.27, -51.23, 40.73, 0.0, -29.43, -9.5, -8929.1593, 563.742) != mat2x4(-30.98, -9.5, 16.33, 5.1, 4.6, -58.10, -9.7, 9.6)))
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 24:
                                     do
                                      {
                                       mat4(-652.054, -870.538, -1.4, -0.0, 8.0, 95.62, -2166.9497, 3001.9300, -43.03, 0.1, 20.56, 4.9, 8.1, -90.20, 87.60, -90.75);
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                     case 16:
                                     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         (step(-1783.0826, -443.728) + mat4x3(-9.1, -8.8, -582.083, -6861.0318, 3094.3480, 1.8, 150.667, -6.4, 0.8, 8041.5793, -68.04, 396.250))[_GLF_IDENTITY(3, (3) | (0 << _GLF_IDENTITY(int(1), int(1))))];
                                        }
                                       else
                                        {
                                        }
                                      }
                                     if(_GLF_DEAD(false))
                                      {
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       barrier();
                                      }
                                     case 0:
                                     case 1:
                                     uvec2(81076u, 34981u);
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                      {
                                       uvec4(189300u, 27542u, 26553u, 184185u).yy;
                                      }
                                     else
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                            barrier();
                                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                            barrier();
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                     case 94:
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     case 96:
                                     (_GLF_IDENTITY(mod(injectionSwitch, -392.207) + injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-4.0, -6.1, 774.778, 0.8).p), (mod(injectionSwitch, -392.207) + injectionSwitch)[1]), vec2((mod(injectionSwitch, -392.207) + injectionSwitch)[0], _GLF_FUZZED(vec4(1662.2856, 4830.8895, 4428.7997, 2867.1499).g)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))));
                                     mat3x2 _GLF_SWITCH_0_11v[27], _GLF_SWITCH_0_12v[40], _GLF_SWITCH_0_13v;
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     mat2x4 _GLF_SWITCH_0_14v[22], _GLF_SWITCH_0_15v[34];
                                     int _GLF_SWITCH_0_16v[48], _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v[79];
                                     break;
                                     case 9:
                                     uvec4 _GLF_SWITCH_2_0v;
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           do
                                            {
                                             if(_GLF_DEAD(false))
                                              barrier();
                                            }
                                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                          }
                                         else
                                          {
                                          }
                                         if(_GLF_DEAD(false))
                                          barrier();
                                        }
                                       else
                                        {
                                        }
                                      }
                                     case 25:
                                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
                                      {
                                       (bvec4(true, false, false, false));
                                      }
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     default:
                                     1;
                                    }
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 for(                                 mat4(-491.497, -487.844, 6076.9930, -6.9, -9739.9460, -1.6, 3.5, -6867.8344, 9.9, 8.9, 6004.7085, 45.82, -5392.3960, 9112.2912, 3483.7847, 41.84);
 true; (mat4x3(mat3x2(4.5, -8.6, 23.44, -3801.0962, 80.74, 7.5)) / mat4x3(-3662.1646, -5861.0751, _GLF_IDENTITY(80.49, max(80.49, _GLF_IDENTITY(80.49, min(80.49, 80.49)))), -619.301, 761.361, -309.925, _GLF_IDENTITY(-96.76, max(_GLF_IDENTITY(-96.76, mix(float(_GLF_FUZZED(4157.8669)), float(-96.76), bool(true))), _GLF_IDENTITY(-96.76, 1.0 * (-96.76)))), -4.8, -28.14, -9.0, -1788.2985, 6838.3077)))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 94:
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                        {
                                         bitfieldReverse(ivec2(-26154, 45347));
                                        }
                                      }
                                     else
                                      {
                                      }
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     case 0:
                                     case 10:
                                     case 30:
                                     for(int _injected_loop_counter = (0 & -8934); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                      {
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                      }
                                     vec2 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[58], _GLF_SWITCH_0_21v;
                                     case 50:
                                     case 48:
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                      {
                                       round(_GLF_SWITCH_0_21v);
                                      }
                                     case 70:
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                      {
                                       if(_GLF_DEAD(false))
                                        barrier();
                                      }
                                     else
                                      {
                                      }
                                     if(_GLF_DEAD(false))
                                      {
                                       for(int _injected_loop_counter = (58475 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           do
                                            {
                                             barrier();
                                             if(_GLF_DEAD(false))
                                              barrier();
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                        }
                                      }
                                     case 53:
                                     case 41:
                                     mat3 _GLF_SWITCH_0_22v[24], _GLF_SWITCH_0_23v;
                                     break;
                                     case 77:
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       normalize(-99.86);
                                      }
                                     else
                                      {
                                      }
                                     case 84:
                                     _GLF_IDENTITY(mat4(-489.765, 7.3, -22.21, 3219.5450, -66.25, -7.7, 5.2, -5790.9325, -788.751, -4.1, 8.8, -4143.1458, 22.83, 1.2, 9.4, -4.3), (mat4(-489.765, 7.3, -22.21, 3219.5450, -66.25, -7.7, 5.2, -5790.9325, -788.751, -4.1, 8.8, -4143.1458, 22.83, 1.2, 9.4, -4.3)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0));
                                     default:
                                     1;
                                    }
                                  }
                                 case 70:
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     mat3(-9499.2609, 3624.4623, 140.995, 4346.1345, -730.608, -9.2, 0.4, 4.3, -26.96);
                                    }
                                   else
                                    {
                                    }
                                  }
                                 case 90:
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                                  {
                                   ;
                                  }
                                 else
                                  {
                                  }
                                 do
                                  {
                                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     for(                                     _GLF_IDENTITY(ivec4(-2762, -83738, -12797, 96882), min(_GLF_IDENTITY(ivec4(-2762, _GLF_IDENTITY(-83738, (-83738) | (-83738)), -12797, 96882), (ivec4(-2762, -83738, -12797, 96882)) ^ ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) + 0))), ivec4(_GLF_IDENTITY(-2762, ~ (~ (_GLF_IDENTITY(-2762, (-2762) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(-83738, max(-83738, -83738)), -12797, 96882)));
 ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z, (GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z) ^ 0u) & uvec2(26819u, 51585u)) != uvec2(88392u, _GLF_IDENTITY(34395u, (34395u) / 1u))); mat3x2(-439.758, -431.423, -3050.6497, -8952.1644, _GLF_IDENTITY(-581.843, min(-581.843, -581.843)), -874.624))
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.x;
                                        }
                                       else
                                        {
                                        }
                                       do
                                        {
                                         if(_GLF_DEAD(false))
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                              {
                                               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7)))))); _injected_loop_counter ++)
                                                {
                                                 barrier();
                                                }
                                              }
                                             if(_GLF_DEAD(false))
                                              barrier();
                                            }
                                           else
                                            {
                                             barrier();
                                             if(_GLF_DEAD(false))
                                              barrier();
                                            }
                                           if(_GLF_DEAD(false))
                                            barrier();
                                          }
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                        {
                                         barrier();
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                        }
                                      }
                                    }
                                  }
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_injected_loop_counter)))))); _injected_loop_counter --)
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                    {
                                     bvec3(true, true, false);
                                    }
                                  }
                                 break;
                                 case 17:
                                 uvec2(155588u, 182755u);
                                 case 16:
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                                  {
                                   25510;
                                  }
                                 else
                                  {
                                  }
                                 default:
                                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                                  {
                                   do
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     switch(_GLF_SWITCH(0))
                                      {
                                       case 0:
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       case 75:
                                       case 90:
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                        {
                                         do
                                          {
                                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 & 1) & 1)); _injected_loop_counter ++)
                                            {
                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                              {
                                               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                                {
                                                 1;
                                                }
                                              }
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                        }
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       break;
                                       case 44:
                                       mat4x3 _GLF_SWITCH_7_0v[34];
                                       default:
                                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                        {
                                         1;
                                        }
                                      }
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                }
                              }
                             else
                              {
                               switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))))
                                {
                                 case 87:
                                 mat3x4(83.75, 2483.5907, 83.18, -26.54, -9663.0305, 818.280, 4.0, 107.928, -7390.7170, 1.7, 44.27, -6.1);
                                 case 0:
                                 case 47:
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 case 5:
                                 case 82:
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 43:
                                     mat4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
                                     case 0:
                                     case 64:
                                     {
                                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                       barrier();
                                      mat2x4 _GLF_SWITCH_0_24v;
                                      ;
                                      mat3x2 _GLF_SWITCH_0_25v[85];
                                      if(_GLF_WRAPPED_IF_FALSE(false))
                                       {
                                       }
                                      else
                                       {
                                        if(_GLF_DEAD(false))
                                         barrier();
                                        ivec4(-21779, 72334, -63999, 5252);
                                       }
                                     }
                                     do
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), false || (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bool(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), false || ((_GLF_WRAPPED_IF_FALSE(false))))))))))))
                                          {
                                          }
                                         else
                                          {
                                           switch(_GLF_SWITCH(0))
                                            {
                                             case 75:
                                             ivec2(-88691, 64562).grgr;
                                             case 0:
                                             case 72:
                                             case 20:
                                             case 65:
                                             case 64:
                                             case 42:
                                             if(_GLF_DEAD(false))
                                              barrier();
                                             greaterThanEqual(vec2(-1.4, -5.7), injectionSwitch);
                                             break;
                                             case 6:
                                             vec4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v;
                                             case 40:
                                             do
                                              {
                                               (mat3x2(-19.51, -0.2, -286.239, -5.8, -7820.6383, -9076.7506) * mat2x3(4.6, 911.091, 131.385, -0.6, 2.5, 45.12));
                                              }
                                             while(_GLF_WRAPPED_LOOP(false));
                                             default:
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               1;
                                              }
                                            }
                                          }
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     if(_GLF_DEAD(false))
                                      {
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                        {
                                         barrier();
                                        }
                                      }
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       if(_GLF_DEAD(false))
                                        barrier();
                                      }
                                     abs(i);
                                     for(mat2x4 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v[62]; false; mat4x2(4.2, 76.50, 8.5, 564.984, 99.17, 4660.7450, 1870.5762, 134.129))
                                      {
                                       float _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v[62], _GLF_SWITCH_0_30v;
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                          {
                                           if(_GLF_DEAD(false))
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                              {
                                               barrier();
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                       do
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           ;
                                          }
                                        }
                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                      }
                                     case 21:
                                     if(_GLF_DEAD(false))
                                      {
                                       do
                                        {
                                         switch(_GLF_SWITCH((0 & -41410)))
                                          {
                                           case 93:
                                           uvec3 _GLF_SWITCH_8_0v;
                                           case 0:
                                           case 63:
                                           case 69:
                                           barrier();
                                           break;
                                           case 54:
                                           mat2x4(90.91, 668.338, -7.6, 0.7, 9.7, -6.5, 9.3, -90.82);
                                           default:
                                           1;
                                          }
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                      }
                                     do
                                      {
                                       if(_GLF_DEAD(false))
                                        {
                                         do
                                          {
                                           barrier();
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     break;
                                     default:
                                     1;
                                    }
                                  }
                                 else
                                  {
                                  }
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                      {
                                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                        {
                                         barrier();
                                        }
                                      }
                                    }
                                  }
                                 break;
                                 case 17:
                                 uvec3(workgroup_base);
                                 case 51:
                                 ;
                                 default:
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   1;
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       break;
                       case 84:
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         _GLF_SWITCH_5_0v;
                        }
                       else
                        {
                        }
                       case 69:
                       mat2(mat3x4(8392.2454, -153.844, 373.014, -60.95, 7.2, 51.91, -4.9, 32.61, 9594.5740, 26.41, -89.72, -7.5));
                       default:
                       1;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   bvec3 _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
                   mat2x3 _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v[46];
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                        {
                         case 87:
                         ;
                         case 88:
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           mat4x2(-4141.2578, -3442.1922, 7671.9820, 9257.8561, -9183.0308, -3.0, 6.5, -2.0);
                          }
                         else
                          {
                          }
                         case 0:
                         case 23:
                         case 75:
                         case 5:
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                         case 8:
                         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                          {
                           ;
                          }
                         break;
                         case 93:
                         _GLF_SWITCH_0_33v;
                         default:
                         do
                          {
                           1;
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 case 70:
                 {
                  while((atomicExchange(i, i) , (false && true)))
                   {
                    for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | ((0 | 0) & 31835))); _injected_loop_counter --)
                     {
                      for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                       {
                        switch(_GLF_SWITCH(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x))))
                         {
                          case 0:
                          for(int _injected_loop_counter = (0 & -97270); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                                barrier();
                               }
                              if(_GLF_DEAD(false))
                               barrier();
                              barrier();
                             }
                           }
                          case 13:
                          case 70:
                          case 42:
                          do
                           {
                            for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
                             {
                              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                               }
                              else
                               {
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 barrier();
                                switch(_GLF_SWITCH(0))
                                 {
                                  case 0:
                                  case 73:
                                  case 46:
                                  case 16:
                                  case 58:
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   barrier();
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   barrier();
                                  case 1:
                                  case 45:
                                  case 19:
                                  case 2:
                                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                   {
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     barrier();
                                   }
                                  case 57:
                                  bvec2(true, true);
                                  if(_GLF_DEAD(false))
                                   barrier();
                                  break;
                                  default:
                                  1;
                                  if(_GLF_DEAD(false))
                                   barrier();
                                 }
                               }
                             }
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          case 10:
                          case 30:
                          case 28:
                          case 93:
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((_GLF_IDENTITY(3, (3) << 0)) ^ 0, 0 ^ ((_GLF_IDENTITY(3, (3) << 0)) ^ 0)))), int(3)))); _injected_loop_counter ++)
                             {
                              switch(_GLF_SWITCH(0))
                               {
                                case 45:
                                if(_GLF_DEAD(false))
                                 {
                                  if(_GLF_WRAPPED_IF_TRUE(true))
                                   {
                                    barrier();
                                   }
                                  else
                                   {
                                   }
                                 }
                                mat2x4 _GLF_SWITCH_7_0v[87], _GLF_SWITCH_7_1v[89];
                                if(_GLF_DEAD(false))
                                 barrier();
                                case 0:
                                case 88:
                                do
                                 {
                                  if(_GLF_WRAPPED_IF_FALSE(false))
                                   {
                                   }
                                  else
                                   {
                                    mat4x2(5.1, -7567.6507, -3.8, 43.01, -6024.2966, 9731.8748, -5.5, 44.80);
                                   }
                                 }
                                while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))));
                                break;
                                case 5:
                                if(_GLF_DEAD(false))
                                 barrier();
                                vec3 _GLF_SWITCH_7_2v[68], _GLF_SWITCH_7_3v[58], _GLF_SWITCH_7_4v;
                                default:
                                1;
                               }
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                           }
                          else
                           {
                           }
                          break;
                          case 66:
                          vec4 _GLF_SWITCH_5_0v[62], _GLF_SWITCH_5_1v;
                          case 87:
                          uvec3 _GLF_SWITCH_5_2v[77];
                          default:
                          if(_GLF_DEAD(false))
                           barrier();
                          1;
                         }
                       }
                     }
                   }
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                   }
                  else
                   {
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                   }
                  ivec3 _GLF_SWITCH_0_35v;
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                       }
                      else
                       {
                        if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
                         {
                          barrier();
                         }
                        else
                         {
                         }
                       }
                     }
                   }
                  else
                   {
                   }
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      while(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true))
                       {
                        do
                         {
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                        int _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v;
                        do
                         {
                          for(int _injected_loop_counter = (_GLF_IDENTITY((1 & 1) ^ 1, ((1 & 1) ^ 1) >> (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                           }
                          else
                           {
                            mat2(-650.609, -8.6, -8322.9818, -8825.3690);
                           }
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              barrier();
                             }
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                         }
                        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        do
                         {
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            ;
                           }
                          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                           {
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                               {
                                barrier();
                               }
                              else
                               {
                               }
                             }
                           }
                          else
                           {
                           }
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                        for(ivec4 _GLF_SWITCH_0_39v[75]; (mat3(-142.373, -5.6, 9752.3710, -9.3, 4735.9440, 11.50, -6218.0660, 7.7, 0.9) == (-561.472 / (-8553.7872 - mat3(7.8, 8121.3782, -55.58, -507.643, 0.6, 5.5, -2.5, 15.95, 704.257)))); uvec2(147537u, 89918u))
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          ivec4 GLF_merged2_0_1_17_1_3_17_GLF_SWITCH_0_44v_GLF_SWITCH_0_47v;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          ivec4 GLF_merged2_0_1_17_1_3_17_GLF_SWITCH_0_43v_GLF_SWITCH_0_46v;
                          ivec4 GLF_merged2_0_1_17_1_3_17_GLF_SWITCH_0_42v_GLF_SWITCH_0_47v;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          uint _GLF_SWITCH_0_40v[19], _GLF_SWITCH_0_41v;
                          3.9;
                          mat2(-6470.6880, 709.660, 4823.3904, 3.1);
                          if(_GLF_DEAD(false))
                           {
                            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                             {
                              barrier();
                             }
                           }
                          int _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v;
                          GLF_merged2_0_1_17_1_3_17_GLF_SWITCH_0_44v_GLF_SWITCH_0_47v.x = _GLF_SWITCH_0_44v;
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                           }
                          else
                           {
                            GLF_merged2_0_1_17_1_3_17_GLF_SWITCH_0_43v_GLF_SWITCH_0_46v.x = _GLF_SWITCH_0_43v;
                           }
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              switch(_GLF_SWITCH((0 | 0)))
                               {
                                case 56:
                                do
                                 {
                                  modf(_GLF_SWITCH_0_2v, _GLF_SWITCH_0_2v);
                                  if(_GLF_DEAD(false))
                                   barrier();
                                 }
                                while(_GLF_WRAPPED_LOOP(false));
                                case 0:
                                case 75:
                                if(_GLF_DEAD(false))
                                 barrier();
                                case 45:
                                case 29:
                                case 97:
                                for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                 {
                                  barrier();
                                 }
                                break;
                                default:
                                1;
                               }
                             }
                            barrier();
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          for(int _injected_loop_counter = (_GLF_IDENTITY(68337, (_GLF_IDENTITY(68337, max(68337, _GLF_IDENTITY(68337, 0 | (68337))))) << 0) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                           {
                            GLF_merged2_0_1_17_1_3_17_GLF_SWITCH_0_42v_GLF_SWITCH_0_47v.x = _GLF_SWITCH_0_42v;
                           }
                          do
                           {
                            do
                             {
                              (mat2x4(-0.3, -263.977, 6693.3525, -511.536, -89.77, _GLF_IDENTITY(87.19, (87.19) / 1.0), -7.7, -584.161) * injectionSwitch);
                             }
                            while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
                            do
                             {
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                                if(_GLF_WRAPPED_IF_TRUE(true))
                                 {
                                  if(_GLF_WRAPPED_IF_TRUE(true))
                                   {
                                    do
                                     {
                                      barrier();
                                     }
                                    while(_GLF_WRAPPED_LOOP(false));
                                   }
                                  else
                                   {
                                   }
                                 }
                                else
                                 {
                                 }
                               }
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                          do
                           {
                            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                             }
                            else
                             {
                              do
                               {
                                (bvec2(true, false));
                               }
                              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             }
                           }
                          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          bvec3 _GLF_SWITCH_0_45v;
                          ivec3 _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v;
                          if(_GLF_DEAD(false))
                           {
                            do
                             {
                              barrier();
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                           }
                          if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
                           barrier();
                          for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 1, 0))))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                           {
                            GLF_merged2_0_1_17_1_3_17_GLF_SWITCH_0_44v_GLF_SWITCH_0_47v.yzw = _GLF_SWITCH_0_47v;
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          GLF_merged2_0_1_17_1_3_17_GLF_SWITCH_0_43v_GLF_SWITCH_0_46v.yzw = _GLF_SWITCH_0_46v;
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
                           {
                           }
                          else
                           {
                            GLF_merged2_0_1_17_1_3_17_GLF_SWITCH_0_42v_GLF_SWITCH_0_47v.yzw = GLF_merged2_0_1_17_1_3_17_GLF_SWITCH_0_44v_GLF_SWITCH_0_47v.yzw;
                           }
                          mat2x4(803.241, 9674.7504, 4671.2198, -2496.1593, 4.3, 9307.5949, 2072.4439, -0.1);
                         }
                        (++ _GLF_SWITCH_0_35v);
                        ivec2(23888, -78589);
                       }
                     }
                   }
                  (mat4(0.4, -1.0, -8.4, 836.770, -883.341, -790.394, -10.01, -1866.6494, _GLF_IDENTITY(-967.351, (-967.351) / 1.0), 4.2, -0.1, 974.406, -600.348, -7.9, -46.01, -7333.2809) / mat4(-719.665, 69.30, 7643.2206, -309.087, -0.6, -0.6, -693.170, 6700.6630, 2.8, 458.878, 3.4, 8.3, -32.81, -134.077, 8.3, -36.49));
                  mat4(-8.7, 3.8, -65.28, 3.0, -2.3, 3584.7028, 247.109, _GLF_IDENTITY(-39.22, clamp(-39.22, -39.22, -39.22)), 3.3, 9.1, -8.3, -271.710, 8622.0710, 6.1, 375.325, 695.170);
                  if(_GLF_DEAD(false))
                   {
                    for(int _injected_loop_counter = _GLF_IDENTITY(1, (0 | 0) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                     {
                      barrier();
                     }
                   }
                  mat3 _GLF_SWITCH_0_48v;
                  do
                   {
                    for(int _injected_loop_counter = (0 & 33099); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                     {
                      do
                       {
                        do
                         {
                          mat3x2(477.581, -65.09, 3.5, -61.52, -999.582, 28.89);
                         }
                        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 }
                 default:
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                  {
                   1;
                  }
                 else
                  {
                  }
                }
               break;
               default:
               if(_GLF_DEAD(false))
                barrier();
               1;
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     break;
     default:
     1;
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 50:
       if(_GLF_DEAD(false))
        barrier();
       while((! true))
        {
         bitfieldInsert(64052, (93924 * 4623), 17238, 69214);
         for(         ivec3(-16174, -38276, -53122);
 (mat3x2(mat2(-4.5, -26.19, 1.6, _GLF_IDENTITY(7217.4451, min(_GLF_IDENTITY(7217.4451, min(7217.4451, _GLF_IDENTITY(7217.4451, float(vec3(7217.4451, 0.0, 0.0))))), 7217.4451)))) != mat3x2(-946.654, 647.853, 1.7, -4.5, -8.9, 7467.4659)); _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(vec2(502.982, -6.7), vec2(-41.18, -159.369))) : injectionSwitch)))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if((bvec2(false, true) , bvec4(true, false, true, true)[0]))
              {
               do
                {
                 uvec4(99719u, 100296u, 14431u, 1675u);
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               int _GLF_SWITCH_6_0v;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 clamp(floatBitsToInt(injectionSwitch), -40868, -63445);
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) + 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   mat2x4(vec4(-280.807, 306.900, -418.342, -2040.6039), smoothstep(round(-1604.4618), 307.284, vec4(2.8, 1.0, 353.617, 1377.0095)));
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid;
              }
             else
              {
               -24069;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 ;
                }
               else
                {
                }
               737.795;
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(((-0.8 == 4.9)))
          {
           ivec3(-23756, 55889, 42643);
           bool _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v[12], _GLF_SWITCH_6_3v[91];
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             while((mat4x2(17.79, 6.7, -24.11, 7327.0732, -3.0, -5.4, -7.9, -74.85) != mat4x2(5.7, -928.598, 5.3, 484.712, -49.08, -257.230, -699.609, 9.5)))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1))); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   65346;
                  }
                }
               bvec3 _GLF_SWITCH_6_4v[84], _GLF_SWITCH_6_5v[12];
               ivec2 _GLF_SWITCH_6_6v;
               ivec2 _GLF_SWITCH_6_7v, _GLF_SWITCH_6_8v, _GLF_SWITCH_6_9v;
               bool _GLF_SWITCH_6_10v, _GLF_SWITCH_6_11v[76];
               uvec4 _GLF_SWITCH_6_12v[19];
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(int(int(3))), (int(int(int(3)))) << 0)))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (1 ^ 1) ^ (int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             notEqual(bvec3(false, false, true), bvec3(true, false, true)).stp;
            }
           GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size;
           (GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_size.z * uvec2(67513u, 82029u));
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           while((ivec4(-98213, 11067, -15942, 83721).b > -68871))
            {
             if(_GLF_DEAD(false))
              barrier();
             int _GLF_SWITCH_6_13v[80];
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             ivec2(-54007, -70806);
             mat2x3 _GLF_SWITCH_6_14v[8], _GLF_SWITCH_6_15v;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           for(vec3 _GLF_SWITCH_6_16v; (uvec2(uvec3(159466u, 199088u, 73255u)) == (uvec2(50977u, 88156u) ^ uvec2(159281u, 89771u))); subgroup_size)
            {
             mat4x2(5.8, -8.8, -6.3, 13.82, 4.6, 853.495, 2.9, 505.126);
             subgroup_size;
             mat2x3 _GLF_SWITCH_6_17v;
             mat4x3 _GLF_SWITCH_6_18v, _GLF_SWITCH_6_19v;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               ;
              }
             do
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   (_GLF_IDENTITY(mat2(mat4(-1.1, 4.9, -5.4, 7991.4888, -7.0, -7469.7991, 0.0, -3.9, 3.8, -833.981, 4.1, -432.869, _GLF_IDENTITY(-1.1, (-1.1) + 0.0), 8.0, -276.074, _GLF_IDENTITY(43.97, mix(float(43.97), float(_GLF_FUZZED((7.4 - -5895.0012))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), transpose(transpose(mat2(mat4(-1.1, 4.9, -5.4, 7991.4888, -7.0, -7469.7991, 0.0, -3.9, 3.8, -833.981, 4.1, -432.869, _GLF_IDENTITY(-1.1, (-1.1) + 0.0), 8.0, -276.074, _GLF_IDENTITY(43.97, mix(float(43.97), float(_GLF_FUZZED((7.4 - -5895.0012))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) * mat3x2(-36.63, 4.9, -3206.5735, 64.46, 737.872, -8.5));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               ;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         for(         mat4x2(1.7, 21.93, 3467.9006, 5.1, 1261.3770, -7.4, -1.4, 2664.4486);
 bool(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_size.x); true)
          {
          }
         for(         ivec3(54350, -66350, 499);
 false; ivec2(55019, 99277))
          {
           if(true)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 (mat2(0.2, -321.509, 419.550, 8921.2889) - mat2(8.3, -263.938, 6.0, 3.5));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             mat2 _GLF_SWITCH_6_20v;
             if(_GLF_DEAD(false))
              {
               do
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 87:
                   int _GLF_SWITCH_8_0v, _GLF_SWITCH_8_1v;
                   case 50:
                   ivec3 _GLF_SWITCH_8_2v, _GLF_SWITCH_8_3v;
                   case 0:
                   case 16:
                   case 41:
                   case 11:
                   case 39:
                   case 73:
                   case 35:
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   break;
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
              }
             bool _GLF_SWITCH_6_21v, _GLF_SWITCH_6_22v[41];
             mat2x3(-40.79, 4.4, -242.902, 9105.2418, 68.86, 346.752);
             uvec4 _GLF_SWITCH_6_23v;
             (GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size << GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_size.y);
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           (uvec2(152444u, 196924u) & uvec2(151765u, _GLF_IDENTITY(86930u, uint(uvec2(86930u, 1u)))));
           if((ivec4(_GLF_IDENTITY(-36734, (false ? _GLF_FUZZED(-75209) : _GLF_IDENTITY(-36734, (-36734) | 0))), 92493, -13808, 89920).x < 51598))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               vec4(-3.6, 99.84, 2118.8568, -92.50);
              }
             (_GLF_IDENTITY((ivec3(54573, 2974, -9525) , bvec3(true, false, false)), _GLF_IDENTITY(bvec3(bvec3((ivec3(54573, 2974, -9525) , bvec3(true, false, false)))), bvec3(bvec4(bvec3(bvec3((ivec3(54573, 2974, -9525) , bvec3(true, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))));
             mat3x2(560.744, -606.910, 226.722, 4887.6171, 494.324, -41.13);
             bvec4 _GLF_SWITCH_6_24v;
             bvec3(true, true, false);
            }
           if(_GLF_DEAD(false))
            barrier();
           mat2x4(8.5, -957.275, 12.30, 6.7, 5.9, -21.52, 23.29, -3500.5647);
          }
         do
          {
           do
            {
             for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1)); _injected_loop_counter --)
              {
               if((false || true))
                {
                 do
                  {
                   if(false)
                    {
                     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       bvec2(false, false);
                      }
                    }
                   else
                    {
                     ;
                     GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_size.x;
                     mat3(-79.30, 1358.1969, -8271.4035, -9711.6574, 23.53, 66.61, 5.9, 0.2, 7.0);
                     bool _GLF_SWITCH_6_25v[32];
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     step(vec3(-505.922, -3486.7422, 330.532), vec3(467.561, 39.78, 8.2));
                     if(_GLF_DEAD(false))
                      barrier();
                     bvec2(false, true);
                     mat4x3 _GLF_SWITCH_6_26v[25], _GLF_SWITCH_6_27v, _GLF_SWITCH_6_28v;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 for(int _GLF_SWITCH_6_29v, _GLF_SWITCH_6_30v[35], _GLF_SWITCH_6_31v[55]; false; ivec2(15640))
                  {
                  }
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 78:
                     mat3x2(mat2x4(mat4x2(-5.5, 8.2, 8184.4112, -0.0, -8366.7830, 9085.2043, -547.540, 8.7)));
                     case 0:
                     case 65:
                     case 87:
                     case 30:
                     case 68:
                     case 41:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 35:
                     case 89:
                     if(true)
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 58:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           mat3x2(-973.306, -24.40, 1605.9806, 30.83, -9376.0785, -8126.2089);
                          }
                         case 17:
                         refract(vec4(-6.5, -9.9, -92.36, 2554.9564), vec4(-598.429, -8922.5351, -859.248, -679.059), 847.888);
                         case 0:
                         mat2x4(mat4x2(-5.2, -4.9, 42.61, -6.6, 78.17, -5315.7646, -5.8, _GLF_IDENTITY(8.8, float(_GLF_IDENTITY(vec2(8.8, sqrt(0.0)), clamp(vec2(8.8, sqrt(0.0)), vec2(8.8, sqrt(0.0)), vec2(8.8, sqrt(0.0))))))));
                         bool _GLF_SWITCH_6_32v;
                         int _GLF_SWITCH_6_33v, _GLF_SWITCH_6_34v, _GLF_SWITCH_6_35v;
                         case 89:
                         ivec4(_GLF_IDENTITY(-89211, 0 ^ (_GLF_IDENTITY(-89211, 0 | (-89211)))), -79417, 22525, -19363);
                         vec3(-688.529, -499.907, 57.46);
                         if(_GLF_DEAD(false))
                          barrier();
                         ;
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           ;
                          }
                         else
                          {
                          }
                         bvec4(true, bvec2(false, false), (true != _GLF_SWITCH_6_32v));
                         break;
                         case 49:
                         bvec4(false, false, false, false);
                         default:
                         1;
                        }
                      }
                     break;
                     case 76:
                     (max(873.202, 388.526) / mat3(-41.23, -3.6, -4044.3424, -587.843, 61.87, 3.8, 1204.5210, -23.26, 77.58));
                     case 9:
                     (_injected_loop_counter / _injected_loop_counter);
                     default:
                     1;
                    }
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                        }
                      }
                     else
                      {
                      }
                     (true ? mat4(_GLF_IDENTITY(-10.25, float(mat3(-10.25, exp(0.0), tan(tan(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0))), -3164.9625, 19.58, 3.0, -969.303, 77.39, 82.56, -3543.4559, 364.446, -7943.8296, -7643.3500, 2.4, -9.7, -6979.4680, 1549.0977, -1.3) : mat4(-5.5, -799.958, -205.969, 254.875, -5.2, 9.9, -2.8, 534.493, 5294.7863, 738.491, -3621.0704, -950.394, -2.7, -522.278, -2404.2711, -953.574));
                     mat2x3 _GLF_SWITCH_6_36v, _GLF_SWITCH_6_37v;
                     mat2 _GLF_SWITCH_6_38v[47], _GLF_SWITCH_6_39v, _GLF_SWITCH_6_40v;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 mat4(154.998, -2.8, -69.75, -2.3, -3.5, 3941.5539, 9.6, -4932.0808, -8.4, -568.947, 5.3, 499.742, -791.866, 6495.4174, 591.014, -8.6);
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       case 92:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         switch(_GLF_SWITCH((0 & 66909)))
          {
           case 77:
           mat2x4(-35.97, 3.9, 9.3, -547.100, -7.2, -0.9, 3.8, -98.19);
           case 0:
           case 75:
           for(vec4 _GLF_SWITCH_6_41v; bool(-850.202); bvec4(false, true, true, false))
            {
             while(true)
              {
               if(true)
                {
                 bvec3(false, true, true);
                 int _GLF_SWITCH_6_42v;
                 GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_14subgroup_idsubgroup_local_idvirtual_gidworkgroup_size.w;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 22:
                     if(_GLF_DEAD(false))
                      barrier();
                     uvec2(187653u, 125918u);
                     case 0:
                     bvec4(true, false, bvec2(false, true));
                     break;
                     case 57:
                     vec2 _GLF_SWITCH_8_0v[7];
                     default:
                     1;
                    }
                  }
                 else
                  {
                  }
                 bvec2 _GLF_SWITCH_6_43v[3], _GLF_SWITCH_6_44v, _GLF_SWITCH_6_45v;
                 do
                  {
                   ivec2(25661, -41662);
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                 mat2(-834.445, -6622.7341, 5.0, -6946.7444);
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   mat2(-4446.4223, 3867.7114, -620.007, 962.432);
                  }
                 uint _GLF_SWITCH_6_46v, _GLF_SWITCH_6_47v;
                 vec3(9.9, 29.82, -9577.5226).zz;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   (uvec4(102385u, _GLF_IDENTITY(151225u, max(151225u, 151225u)), 54320u, 15507u)[0] * GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size);
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
               mat4 _GLF_SWITCH_6_48v;
               _GLF_SWITCH_6_41v;
               do
                {
                 _GLF_SWITCH_6_48v;
                }
               while(_GLF_WRAPPED_LOOP(false));
               mat3x2 _GLF_SWITCH_6_49v, _GLF_SWITCH_6_50v, _GLF_SWITCH_6_51v;
               do
                {
                 ;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))));
               while(true)
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   (mat4x3(34.66, 778.014, -227.973, 76.53, -3.3, -7357.1570, -9450.8042, -8190.9981, 53.97, -9269.1332, -9589.7067, -5449.0430) * mat3x4(869.155, 9.5, -7669.1953, 3.3, 0.1, 6014.8811, 8.4, -2406.8884, 96.12, -7.7, -4745.8651, -85.38));
                  }
                 do
                  {
                   uvec2(85600u, 22361u);
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               mat2 _GLF_SWITCH_6_52v, _GLF_SWITCH_6_53v;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           break;
           case 42:
           mat4x3 _GLF_SWITCH_8_0v;
           if(_GLF_DEAD(false))
            barrier();
           case 2:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             -6563;
            }
           default:
           1;
          }
        }
       else
        {
        }
       case 0:
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       case 95:
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         switch(_GLF_IDENTITY(_GLF_SWITCH((0 | 0)), (1 | 0) * (_GLF_SWITCH((0 | 0)))))
          {
           case 27:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) * 1)), clamp(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) * 1)), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) * 1)), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) * 1))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
              {
               mat4(-1651.6226, -422.418, 2.7, -493.045, -5.7, 9.4, -5.4, 5112.9218, 9.0, _GLF_IDENTITY(-8003.2956, max(-8003.2956, _GLF_IDENTITY(-8003.2956, min(-8003.2956, _GLF_IDENTITY(-8003.2956, mix(float(-8003.2956), float(_GLF_FUZZED(7.2)), bool(false))))))), 8043.9068, -70.54, 6.2, -27.04, 406.033, -619.555);
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           case 50:
           do
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               for(               mat2x4(-2.0, 6.7, -3.3, -962.157, 3153.2844, -7880.4008, -894.196, -2.0);
 (uvec2(184844u, 187919u) == uvec2(175540u, 108849u)); uvec4(4500u, 182511u, 117392u, 68578u))
                {
                 switch(_GLF_SWITCH((0 ^ 0)))
                  {
                   case 19:
                   vec2(5731.4046, _GLF_IDENTITY(-84.44, _GLF_IDENTITY(float(mat4(-84.44, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, sqrt(round(length(normalize(1.0)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0, sqrt(round(length(normalize(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(-3.7, 9.1, 87.44, -5.8, 9.6, -228.327, -3.6, 6.7, 8313.5263, 1.3, -837.200, -4.2, -1978.4284, 837.467, 2.3, 940.870)) : mat4(1.0, sqrt(round(length(normalize(1.0)))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))))))), 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0)), exp(0.0), 1.0, 0.0, cos(0.0))), (false ? _GLF_FUZZED(775.213) : float(mat4(-84.44, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), 1.0, 0.0, cos(0.0)))))));
                   case 20:
                   vec3(-347.650, 4865.8283, -26.06);
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 0:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 90:
                   case 15:
                   case 43:
                   case 74:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   uvec3 _GLF_SWITCH_1_0v[90], _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                   default:
                   1;
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           case 0:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           case 68:
           case 41:
           case 48:
           case 91:
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.x], uint(2), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
            }
           else
            {
            }
           break;
           case 89:
           do
            {
             (true ? greaterThan(uvec4(47291u, _GLF_IDENTITY(71726u, (_GLF_IDENTITY(71726u, 0u + (71726u))) * 1u), 20876u, 4591u), uvec4(114960u, 139110u, 73541u, 102480u)) : bvec4(false, false, true, false));
            }
           while(_GLF_WRAPPED_LOOP(false));
           default:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             switch(_GLF_SWITCH(0))
              {
               case 31:
               ivec2 _GLF_SWITCH_8_0v;
               case 0:
               case 23:
               case 49:
               case 7:
               case 94:
               case 69:
               case 44:
               case 65:
               for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1)))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (0 | (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))) | 0)) + (_injected_loop_counter ++)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(-66085) : _injected_loop_counter ++)) : _GLF_FUZZED(abs(-22521)), 0 + (true ? _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(-66085) : _injected_loop_counter ++)) : _GLF_FUZZED(abs(-22521)))))))
                {
                 1;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               break;
               default:
               1;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       break;
       default:
       1;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
