#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(_GLF_DEAD(false), false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), false))))))), ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), false))))))))))) || false), bool(bvec2(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), determinant(mat4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), mix(float(float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), determinant(mat4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), float(_GLF_FUZZED((-47.07 + 8.3))), bool(false))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(-5.4, 71.45, -56.64).y)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (float(0.0)) / 1.0)))), bool(true)))), sqrt(0.0))), 0.0, length(0.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-199.504))), 0.0, 1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-199.504))), 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(3.1, -65.25, -1276.5000, 223.956, 3277.1380, -4.6)) : mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-199.504), (_GLF_FUZZED(-199.504)) * 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0)))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false)))), bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false)))), false, true, false)))))))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.1)), bool(false))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0)))))), 1.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(1.0, abs(0.0) + (1.0)), 0.0), (false ? _GLF_FUZZED(transpose(mat2(5.2, -2070.9943, 271.277, -3.9))) : mat2(injectionSwitch, 1.0, 0.0))) : _GLF_FUZZED((-4.0 + (- mat2(28.15, 3.6, _GLF_IDENTITY(222.037, max(222.037, 222.037)), -0.3)))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(-6094.1944)), bool(false))), 0.0))).y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(1.7)))))).y, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(47.56)), float(injectionSwitch.y), bool(true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), bool(bvec4(bool(bvec4(true, false, false, true)), true, true, false)))), false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, cos(0.0), sqrt(1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - abs(0.0)))), 0.0, 0.0, 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), true)))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_DEAD(false)))))) && true))))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false))) && true)))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupSize), (true ? (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(21905u, 15339u, 101694u)))))))), ~ (~ (~ (~ (_GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupSize), (true ? (gl_WorkGroupSize) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(21905u, 15339u, 101694u), (uvec3(21905u, 15339u, 101694u)) ^ uvec3(0u, 0u, 0u))))))))))))) | (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) << uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))), gl_WorkGroupSize)))), _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))) + uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize[2], 0u, 0u, 0u), (uvec4(gl_WorkGroupSize[2], 0u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) >> 0u)) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[_GLF_IDENTITY(2, max(2, 2))])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), clamp(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))[2], gl_WorkGroupSize[2]))), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) + 0u))))))))), gl_WorkGroupSize[_GLF_IDENTITY(2, 0 + (2))], gl_WorkGroupSize[2])))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) / 1u)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (1))], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (false ? _GLF_FUZZED(findLSB(-94775)) : ~ (2))))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) - 0)]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) | _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (gl_WorkGroupSize[2])), (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, (2) << 0), 0, 0, 0)))) << 0), _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(68500u, 73625u, 166855u))))) | uvec3(0u, 0u, 0u))[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) >> 0)], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))])))))) / (0u ^ (1u & 1u))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], min(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (~ (gl_WorkGroupSize[0]))), gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, int(ivec2(2, int(_GLF_ONE(1.0, injectionSwitch.y)))))]))[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u))), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, _GLF_IDENTITY((2) | (2), min((2) | (2), (2) | (2))))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) / 1u))) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u))))) | 0u)))))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589), max((_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589), (_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589)))), min(2, _GLF_IDENTITY(2, ~ (~ (2))))), _GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) / 1)])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) / 1u)), (true ? ~ (_GLF_IDENTITY(1u, (1u) / 1u)) : _GLF_FUZZED(subgroup_size))))), 1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(99257u, 89545u, 92683u), (_GLF_IDENTITY(uvec3(99257u, 89545u, 92683u), (uvec3(99257u, 89545u, 92683u)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED((-49356 + 81667))))]) / 1u), gl_WorkGroupSize[_GLF_IDENTITY(2, max(2, 2))], gl_WorkGroupSize[2])), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) >> 0)]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_local_id)), clamp((true ? 1u : _GLF_FUZZED(subgroup_local_id)), (true ? 1u : _GLF_FUZZED(subgroup_local_id)), (true ? 1u : _GLF_FUZZED(subgroup_local_id))))), 1u))))) >> 0u)), clamp(_GLF_IDENTITY(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), clamp(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))[2], gl_WorkGroupSize[2]))), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) + 0u))))))))), gl_WorkGroupSize[_GLF_IDENTITY(2, 0 + (2))], gl_WorkGroupSize[2])))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) / 1u)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (1))], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (false ? _GLF_FUZZED(findLSB(-94775)) : ~ (2))))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) - 0)]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) | _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (gl_WorkGroupSize[2])), (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, (2) << 0), 0, 0, 0)))) << 0), _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(68500u, 73625u, 166855u))))) | uvec3(0u, 0u, 0u))[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) >> 0)], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))])))))) / (0u ^ (1u & 1u))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], min(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (~ (gl_WorkGroupSize[0]))), gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, int(ivec2(2, int(_GLF_ONE(1.0, injectionSwitch.y)))))]))[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u))), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, _GLF_IDENTITY((2) | (2), min((2) | (2), (2) | (2))))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) / 1u))) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u))))) | 0u)))))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589), max((_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589), (_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589)))), min(2, _GLF_IDENTITY(2, ~ (~ (2))))), _GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) / 1)])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) / 1u)), (true ? ~ (_GLF_IDENTITY(1u, (1u) / 1u)) : _GLF_FUZZED(subgroup_size))))), 1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(99257u, 89545u, 92683u), (_GLF_IDENTITY(uvec3(99257u, 89545u, 92683u), (uvec3(99257u, 89545u, 92683u)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED((-49356 + 81667))))]) / 1u), gl_WorkGroupSize[_GLF_IDENTITY(2, max(2, 2))], gl_WorkGroupSize[2])), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) >> 0)]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_local_id)), clamp((true ? 1u : _GLF_FUZZED(subgroup_local_id)), (true ? 1u : _GLF_FUZZED(subgroup_local_id)), (true ? 1u : _GLF_FUZZED(subgroup_local_id))))), 1u))))) >> 0u)), _GLF_IDENTITY(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), clamp(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))[2], gl_WorkGroupSize[2]))), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) + 0u))))))))), gl_WorkGroupSize[_GLF_IDENTITY(2, 0 + (2))], gl_WorkGroupSize[2])))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) / 1u)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (1))], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (false ? _GLF_FUZZED(findLSB(-94775)) : ~ (2))))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) - 0)]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) | _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (gl_WorkGroupSize[2])), (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, (2) << 0), 0, 0, 0)))) << 0), _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(68500u, 73625u, 166855u))))) | uvec3(0u, 0u, 0u))[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) >> 0)], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))])))))) / (0u ^ (1u & 1u))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], min(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (~ (gl_WorkGroupSize[0]))), gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, int(ivec2(2, int(_GLF_ONE(1.0, injectionSwitch.y)))))]))[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u))), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, _GLF_IDENTITY((2) | (2), min((2) | (2), (2) | (2))))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) / 1u))) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u))))) | 0u)))))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589), max((_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589), (_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589)))), min(2, _GLF_IDENTITY(2, ~ (~ (2))))), _GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) / 1)])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) / 1u)), (true ? ~ (_GLF_IDENTITY(1u, (1u) / 1u)) : _GLF_FUZZED(subgroup_size))))), 1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(99257u, 89545u, 92683u), (_GLF_IDENTITY(uvec3(99257u, 89545u, 92683u), (uvec3(99257u, 89545u, 92683u)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED((-49356 + 81667))))]) / 1u), gl_WorkGroupSize[_GLF_IDENTITY(2, max(2, 2))], gl_WorkGroupSize[2])), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) >> 0)]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_local_id)), clamp((true ? 1u : _GLF_FUZZED(subgroup_local_id)), (true ? 1u : _GLF_FUZZED(subgroup_local_id)), (true ? 1u : _GLF_FUZZED(subgroup_local_id))))), 1u))))) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), clamp(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))[2], gl_WorkGroupSize[2]))), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) + 0u))))))))), gl_WorkGroupSize[_GLF_IDENTITY(2, 0 + (2))], gl_WorkGroupSize[2])))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) / 1u)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (1))], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (false ? _GLF_FUZZED(findLSB(-94775)) : ~ (2))))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) - 0)]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) | _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (gl_WorkGroupSize[2])), (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, (2) << 0), 0, 0, 0)))) << 0), _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(68500u, 73625u, 166855u))))) | uvec3(0u, 0u, 0u))[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) >> 0)], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))])))))) / (0u ^ (1u & 1u))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], min(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (~ (gl_WorkGroupSize[0]))), gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, int(ivec2(2, int(_GLF_ONE(1.0, injectionSwitch.y)))))]))[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u))), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, _GLF_IDENTITY((2) | (2), min((2) | (2), (2) | (2))))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) / 1u))) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u))))) | 0u)))))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589), max((_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589), (_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589)))), min(2, _GLF_IDENTITY(2, ~ (~ (2))))), _GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) / 1)])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) / 1u)), (true ? ~ (_GLF_IDENTITY(1u, (1u) / 1u)) : _GLF_FUZZED(subgroup_size))))), 1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(99257u, 89545u, 92683u), (_GLF_IDENTITY(uvec3(99257u, 89545u, 92683u), (uvec3(99257u, 89545u, 92683u)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED((-49356 + 81667))))]) / 1u), gl_WorkGroupSize[_GLF_IDENTITY(2, max(2, 2))], gl_WorkGroupSize[2])), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) >> 0)]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_local_id)), clamp((true ? 1u : _GLF_FUZZED(subgroup_local_id)), (true ? 1u : _GLF_FUZZED(subgroup_local_id)), (true ? 1u : _GLF_FUZZED(subgroup_local_id))))), 1u))))) >> 0u)), 0u | (_GLF_IDENTITY(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), clamp(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))[2], gl_WorkGroupSize[2]))), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (0)))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[2], 0u + (gl_WorkGroupSize[2]))) / 1u, ~ (~ ((gl_WorkGroupSize[2]) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) + 0u))))))))), gl_WorkGroupSize[_GLF_IDENTITY(2, 0 + (2))], gl_WorkGroupSize[2])))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) / 1u)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (1))], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (false ? _GLF_FUZZED(findLSB(-94775)) : ~ (2))))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) - 0)]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) | _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], 0u | (gl_WorkGroupSize[2])), (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | 0u), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, (2) << 0), 0, 0, 0)))) << 0), _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(68500u, 73625u, 166855u))))) | uvec3(0u, 0u, 0u))[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) >> 0)], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))])))))) / (0u ^ (1u & 1u))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], min(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (~ (gl_WorkGroupSize[0]))), gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, int(ivec2(2, int(_GLF_ONE(1.0, injectionSwitch.y)))))]))[2], clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u))), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2))))), 2, _GLF_IDENTITY(2, _GLF_IDENTITY((2) | (2), min((2) | (2), (2) | (2))))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) / 1u))) / 1u)) ^ 0u))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(99257u, _GLF_IDENTITY(89545u, max(89545u, 89545u)), 92683u)) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))], uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95878) : 2))]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), 1u, 1u))))) | 0u)))))), (uint(_GLF_IDENTITY(uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589), max((_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589), (_GLF_IDENTITY(2, clamp(2, 2, 2))) >> (0 & 23589)))), min(2, _GLF_IDENTITY(2, ~ (~ (2))))), _GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(2, (2) | (2))))]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) / 1)])))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) / 1u)), (true ? ~ (_GLF_IDENTITY(1u, (1u) / 1u)) : _GLF_FUZZED(subgroup_size))))), 1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(99257u, 89545u, 92683u), (_GLF_IDENTITY(uvec3(99257u, 89545u, 92683u), (uvec3(99257u, 89545u, 92683u)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))) : uvec3(uint(1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[2])), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED((-49356 + 81667))))]) / 1u), gl_WorkGroupSize[_GLF_IDENTITY(2, max(2, 2))], gl_WorkGroupSize[2])), (_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u), gl_WorkGroupSize[2], gl_WorkGroupSize[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) >> 0)]))) + 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)) ^ 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_local_id)), clamp((true ? 1u : _GLF_FUZZED(subgroup_local_id)), (true ? 1u : _GLF_FUZZED(subgroup_local_id)), (true ? 1u : _GLF_FUZZED(subgroup_local_id))))), 1u))))) >> 0u)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))) && true)), _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ((false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.7)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-13.59), _GLF_FUZZED(-5482.9079)), bvec2(false, false))))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-13.59), _GLF_FUZZED(-5482.9079)), bvec2(false, false))))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), _GLF_IDENTITY(false, (false) || false), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-13.59), _GLF_FUZZED(-5482.9079)), bvec2(false, false))))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-13.59), _GLF_FUZZED(-5482.9079)), bvec2(false, false))))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), _GLF_IDENTITY(false, (false) || false), true, false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-13.59), _GLF_FUZZED(-5482.9079)), bvec2(false, false))))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), max(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))) + vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-13.59), _GLF_FUZZED(-5482.9079)), bvec2(false, false))))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), _GLF_IDENTITY(false, (false) || false), true, false)))))) && true)) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)))) / 1.0)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)))) / 1.0)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)))) / 1.0)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), uint(uvec2((workgroup_id), 1u))), (~ (workgroup_id)) - 0u))), workgroup_id)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) - 0u, uint(uint((workgroup_size) - 0u)))) * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))))))) * workgroup_id)))) / _GLF_IDENTITY(1u, (1u) - 0u)), workgroup_size * workgroup_id), (max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) - 0u, uint(uint((workgroup_size) - 0u)))) * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))))))) * workgroup_id)))) / _GLF_IDENTITY(1u, (1u) - 0u)), workgroup_size * workgroup_id)) >> 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), true))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))), false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id)))))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (subgroup_id)))) * subgroup_size, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)) * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7865, _GLF_IDENTITY((7865), ((7865)) << 0) | (7865)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(7865, _GLF_IDENTITY((7865) | (7865), ((7865) | (7865)) >> 0)))), 0 + ((~ (_GLF_IDENTITY(7865, (7865) | (7865)))))))) : 1, min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7865, (7865) | _GLF_IDENTITY((7865), max((7865), (7865)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7865, 0 ^ (7865)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-64918) : 7865)), (7865) | (7865)))))) : 1, int(ivec3(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7865, _GLF_IDENTITY((7865), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((7865), clamp((7865), (7865), (7865))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(59430) : int(ivec3(_GLF_IDENTITY((7865), clamp((7865), (7865), (7865))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (7865)), ~ (~ (_GLF_IDENTITY(7865, (7865) | (7865)))))) : 1, 1, 1))), false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7865, (7865) | (7865)), ~ (~ (_GLF_IDENTITY(7865, (_GLF_IDENTITY(7865, (_GLF_IDENTITY(_GLF_IDENTITY(7865, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(7865, (7865) + 0), (_GLF_IDENTITY(7865, (7865) + 0)) * 1))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(7865, 0 ^ (_GLF_IDENTITY(7865, _GLF_IDENTITY((7865) + 0, (_GLF_IDENTITY((7865) + 0, (true ? (7865) + 0 : _GLF_FUZZED(81030)))) | ((7865) + 0))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(7865, 0 ^ (_GLF_IDENTITY(7865, (7865) + 0))), min(_GLF_IDENTITY(7865, 0 ^ (_GLF_IDENTITY(7865, (7865) + 0))), _GLF_IDENTITY(7865, 0 ^ (_GLF_IDENTITY(7865, (7865) + 0))))), 0, 0)))))) / 1)) | (7865)))))) : 1))))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), (0u | (subgroup_size)) / ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ 1u))), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))), ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(7865) : 1))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(subgroup_local_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) | 0u)), _GLF_IDENTITY(min(uint(uint(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (min(uint(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), uint(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) ^ 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) | 0u)), _GLF_IDENTITY(min(uint(uint(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (min(uint(uint(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))), ((~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))) | ((~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))))))), uint(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) ^ 0u))) + 0u)), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) | ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(7865), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(7865, (7865) | (7865))), int(int(_GLF_IDENTITY(_GLF_FUZZED(7865), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_FUZZED(7865)))))), _GLF_FUZZED(7865), _GLF_FUZZED(7865))) : _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(7865, 0 | (_GLF_IDENTITY(7865, min(7865, 7865))))) : 1), max(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(7865, 0 | (_GLF_IDENTITY(7865, min(7865, 7865))))) : 1), ((false ? _GLF_FUZZED(_GLF_IDENTITY(7865, 0 | (_GLF_IDENTITY(7865, min(7865, 7865))))) : 1)) << 0), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(7865, 0 | (_GLF_IDENTITY(7865, min(7865, 7865))))) : 1), ((false ? _GLF_FUZZED(_GLF_IDENTITY(7865, 0 | (_GLF_IDENTITY(7865, min(7865, 7865))))) : 1)) ^ 0))) | 0)), clamp((false ? _GLF_FUZZED(7865) : 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(7865), (_GLF_FUZZED(7865)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))), max(_GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))), _GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))))), _GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))), max(_GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))), _GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865)))))) | (_GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))))))))) : 1), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(7865) : 1), ((false ? _GLF_FUZZED(7865) : 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(7865) : 1), ((false ? _GLF_FUZZED(7865) : 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(7865), clamp(_GLF_IDENTITY(_GLF_FUZZED(7865), int(_GLF_IDENTITY(int(_GLF_FUZZED(7865)), max(int(_GLF_FUZZED(7865)), int(_GLF_FUZZED(7865)))))), _GLF_FUZZED(7865), _GLF_FUZZED(7865))) : _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(7865, 0 | (_GLF_IDENTITY(7865, min(7865, 7865))))) : 1), max(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(7865, 0 | (_GLF_IDENTITY(7865, min(7865, 7865))))) : 1), ((false ? _GLF_FUZZED(_GLF_IDENTITY(7865, 0 | (_GLF_IDENTITY(7865, min(7865, 7865))))) : 1)) << 0), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(7865, 0 | (_GLF_IDENTITY(7865, min(7865, 7865))))) : 1), ((false ? _GLF_FUZZED(_GLF_IDENTITY(7865, 0 | (_GLF_IDENTITY(7865, min(7865, 7865))))) : 1)) ^ 0))) | 0)), clamp((false ? _GLF_FUZZED(7865) : 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(7865), (_GLF_FUZZED(7865)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_IDENTITY(_GLF_FUZZED(7865), (_GLF_FUZZED(7865)) >> (0 >> _GLF_IDENTITY(int(5), int(5)))))), max(_GLF_FUZZED(7865), _GLF_FUZZED(_GLF_IDENTITY(7865, max(7865, _GLF_IDENTITY(7865, 0 ^ (7865))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))), max(_GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))), _GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))))), _GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_IDENTITY(_GLF_FUZZED(7865), min(_GLF_FUZZED(7865), _GLF_FUZZED(7865))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))), max(_GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))), _GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865)))))) | (_GLF_IDENTITY(_GLF_FUZZED(7865), max(_GLF_FUZZED(7865), _GLF_FUZZED(7865))))))))) : 1), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(7865) : 1), ((false ? _GLF_FUZZED(7865) : 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(7865) : 1), ((false ? _GLF_FUZZED(7865) : 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | 0)) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), subgroup_size)), _GLF_IDENTITY((subgroup_size) | 0u, ((1u ^ 1u) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(workgroup_id))))) | ((subgroup_size) | 0u)))), ~ (~ (clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), subgroup_size)), _GLF_IDENTITY((subgroup_size) | 0u, ((1u ^ 1u) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(workgroup_id))))) | ((subgroup_size) | 0u)))))))), subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.4) : 1.0))), 0.0, 0.0, 1.0, 0.0)), clamp(determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), _GLF_IDENTITY(float(vec2(log(1.0), 0.0)), (float(vec2(log(1.0), 0.0))) - 0.0)), 0.0, 0.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || false))))))
      return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, ~ (~ (0))))) ^ 0) < subgroup_size, false || (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, ~ (~ (0))))) ^ 0) < subgroup_size)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))) || false), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false)))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), (_GLF_IDENTITY(false, true && (false))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false || (_GLF_DEAD(false)))) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true)), false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u))))], uint(2), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), min(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(injectionSwitch.y, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))) ? injectionSwitch.x : _GLF_FUZZED(3.7))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4935.1577) : injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, 0 ^ (2))), 4, 64, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) * 1))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), false || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-3.7 + 491.568))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-105.673)), bool(false))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
