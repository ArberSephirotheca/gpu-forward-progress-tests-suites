#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED((-397.784)), min(_GLF_FUZZED((-397.784)), _GLF_FUZZED((-397.784)))), _GLF_FUZZED(-7.0)), bvec2(false, false))).y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(0.5))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(38.38)), float(injectionSwitch.y), bool(true))), ! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), min(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))))))) > injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(0.5))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(38.38)), float(injectionSwitch.y), bool(true))), ! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), min(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))))))) > injectionSwitch.y))))))))) || false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))), ! (! (bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))) || false)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))), ! (! (bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))) || false))))))), ((_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))), ! (! (bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, false || (true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))), ! (! (bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), true), true, false)))))))))), false || (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (true) || false))), (bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))) || false))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (true) || false))), (bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))) || false)))), (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (true) || false))), (bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))) || false)))), false || (! ((! (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (true) || false))), (bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))) || false))))))) && true)))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))))))))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, 1.0, 1.0, 1.0))).x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.4, -7.4)) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.4, -7.4)) : injectionSwitch)).y) - 0.0)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (_GLF_IDENTITY(false, ! (! (false)))))) && true), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false))))), false, true, true)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-7.5), min(_GLF_FUZZED(-7.5), _GLF_FUZZED(-7.5))))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))) / vec2(1.0, 1.0)).y : _GLF_FUZZED(-7.5))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch.x : _GLF_FUZZED(-33.52))) > injectionSwitch.y, true, true, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, false)))))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7)), min(true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7)), true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((-787.595 * injectionSwitch)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((-787.595 * injectionSwitch)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((-787.595 * injectionSwitch)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7)), (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7)), (true ? true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7)) : _GLF_FUZZED(vec2(-7.3, 35.97))))) - vec2(0.0, 0.0))))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))) / vec2(1.0, 1.0)).y : _GLF_FUZZED(-7.5))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch.x : _GLF_FUZZED(-33.52))) > injectionSwitch.y, true, true, false)), ! _GLF_IDENTITY((! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, false)))), ((! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, false))))) || false)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))[0], _GLF_FUZZED((-3.3))), vec2(_GLF_FUZZED(5.6), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))[1]), bvec2(false, true))) / _GLF_IDENTITY(vec2(1.0, 1.0), sqrt(vec2(1.0, 1.0)) * (vec2(1.0, 1.0)))).y : _GLF_FUZZED(-7.5))), (false ? _GLF_FUZZED(float(packUnorm2x16(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true)))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7)), min(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7)), clamp(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7)), min(true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7)), true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(7620.2738, -7.7)), (_GLF_FUZZED(vec2(7620.2738, -7.7))) - vec2(0.0, 0.0)))), true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7)), true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(7620.2738, clamp(7620.2738, 7620.2738, _GLF_IDENTITY(7620.2738, float(mat4x2(7620.2738, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))))), -7.7)))), true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))))[0], _GLF_FUZZED((-3.3))), vec2(_GLF_FUZZED(5.6), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(889.661, 110.574)))) : _GLF_FUZZED(vec2(7620.2738, -7.7)))), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(889.661, 110.574)))) : _GLF_FUZZED(vec2(7620.2738, -7.7)))), 0.0, 0.0, 0.0, 0.0)))))))[1]), bvec2(false, true))) / _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0)))), sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))))) * (vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.7))))))).y : _GLF_FUZZED(-7.5))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.6)), bool(false))), true, true, false)), ! (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(845.080) : injectionSwitch.y)) : _GLF_FUZZED(-3.6))), true, true, false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), true, true, false)), ! (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(845.080) : injectionSwitch.y)) : _GLF_FUZZED(-3.6))), true, true, false))))), bool(bool(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), ! (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(845.080), min(_GLF_FUZZED(845.080), _GLF_FUZZED(845.080))) : injectionSwitch.y)) : _GLF_IDENTITY(_GLF_FUZZED(-3.6), (_GLF_FUZZED(-3.6)) / 1.0))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), false, false, false)))), false)))))))), true, _GLF_IDENTITY(false, (false) || false))))))), (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, false))) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0)).y : _GLF_FUZZED(-7.5))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), ! (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(47.08), _GLF_FUZZED(6.5)), bvec2(false, false))).y, true, _GLF_IDENTITY(true, ! (! (true))), false))))))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))[0], _GLF_FUZZED((-3.3))), vec2(_GLF_FUZZED(5.6), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))[1]), bvec2(false, true))) / _GLF_IDENTITY(vec2(1.0, 1.0), sqrt(vec2(1.0, 1.0)) * (vec2(1.0, 1.0)))).y : _GLF_FUZZED(-7.5))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))[0], _GLF_FUZZED((-3.3))), vec2(_GLF_FUZZED(5.6), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))[1]), bvec2(false, true))) / _GLF_IDENTITY(vec2(1.0, 1.0), sqrt(vec2(1.0, 1.0)) * (vec2(1.0, 1.0)))).y : _GLF_FUZZED(-7.5))), false, true, true))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), ! (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(845.080) : injectionSwitch.y)) : _GLF_FUZZED(-3.6))), mix(float(_GLF_FUZZED(-43.11)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(845.080) : injectionSwitch.y)) : _GLF_FUZZED(-3.6)))), bool(true))), true, true, false)))))))), (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), vec2(mat3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))).y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), vec2(mat3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), vec2(mat3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), vec2(mat3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))).y))))) : _GLF_FUZZED(-7.5))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), ! (! _GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))), true && (_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))), ! (! ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))))))))) || false), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))[0], _GLF_FUZZED((-3.3))), vec2(_GLF_FUZZED(5.6), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))[1]), bvec2(false, true))) / _GLF_IDENTITY(vec2(1.0, 1.0), sqrt(vec2(1.0, 1.0)) * (vec2(1.0, 1.0)))).y : _GLF_FUZZED(-7.5))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))[0], _GLF_FUZZED((-3.3))), vec2(_GLF_FUZZED(5.6), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))))[1]), bvec2(false, true))) / _GLF_IDENTITY(vec2(1.0, 1.0), sqrt(vec2(1.0, 1.0)) * (vec2(1.0, 1.0)))).y : _GLF_FUZZED(-7.5))), false, true, true))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), ! (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(845.080) : injectionSwitch.y)) : _GLF_FUZZED(-3.6))), mix(float(_GLF_FUZZED(-43.11)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(845.080) : injectionSwitch.y)) : _GLF_FUZZED(-3.6)))), bool(true))), true, true, false)))))))), (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), vec2(mat3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))).y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), vec2(mat3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), vec2(mat3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), vec2(mat3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7620.2738, -7.7))))))) / vec2(1.0, 1.0), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))).y))))) : _GLF_FUZZED(-7.5))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), ! (! _GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))), true && (_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))), ! (! ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))))))))) || false), true))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(tan(vec2(0.0, 0.0)))).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec2(bool(bvec4(false, true, false, false)), true))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY((gl_WorkGroupID) >> uvec3(0u, 0u, 0u), clamp((gl_WorkGroupID) >> uvec3(0u, 0u, 0u), _GLF_IDENTITY((gl_WorkGroupID) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupID) >> uvec3(0u, 0u, 0u)) | ((gl_WorkGroupID) >> uvec3(0u, 0u, 0u))), (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))) << _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)), max(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(8u, (8u) / 1u)), uvec3(8u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) - uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, ~ (~ (0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), min((uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), (_GLF_IDENTITY(uvec3(8u), uvec3(8u))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u))))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ((uvec3(0u, _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)), 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) ^ uvec3(0u, 0u, 0u)))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(_GLF_IDENTITY(8u, max(_GLF_IDENTITY(8u, (8u) | 0u), 8u))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))))), ~ (~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), min((uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, min(0u, 0u)))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), clamp(uint(uvec2(0u, 0u)), _GLF_IDENTITY(uint(uvec2(0u, 0u)), ~ (~ (uint(uvec2(0u, 0u))))), uint(uvec2(0u, 0u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), clamp((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), min((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))))) | 0u)), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), (_GLF_IDENTITY(uvec3(8u), uvec3(8u))) << uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u))))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ((uvec3(0u, _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)), 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) ^ uvec3(0u, 0u, 0u)))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(8u, max(_GLF_IDENTITY(8u, (8u) | 0u), 8u))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), _GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), clamp(_GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), max(((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), uint(uvec3(~ (~ (1u)), 1u, 1u))))))))))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), min((uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), (_GLF_IDENTITY(uvec3(8u), uvec3(8u))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u))))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ((uvec3(0u, _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)), 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) ^ uvec3(0u, 0u, 0u)))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(_GLF_IDENTITY(8u, max(_GLF_IDENTITY(8u, (8u) | 0u), 8u))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))))), ~ (~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), min((uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, min(0u, 0u)))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), clamp(uint(uvec2(0u, 0u)), _GLF_IDENTITY(uint(uvec2(0u, 0u)), ~ (~ (uint(uvec2(0u, 0u))))), uint(uvec2(0u, 0u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), clamp((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), min((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))))) | 0u)), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), (_GLF_IDENTITY(uvec3(8u), uvec3(8u))) << uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u))))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ((uvec3(0u, _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)), 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) ^ uvec3(0u, 0u, 0u)))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(8u, max(_GLF_IDENTITY(8u, (8u) | 0u), 8u))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), _GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), clamp(_GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), max(((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), uint(uvec3(~ (~ (1u)), 1u, 1u))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), min((uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), (_GLF_IDENTITY(uvec3(8u), uvec3(8u))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u))))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ((uvec3(0u, _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)), 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) ^ uvec3(0u, 0u, 0u)))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(_GLF_IDENTITY(8u, max(_GLF_IDENTITY(8u, (8u) | 0u), 8u))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))))), ~ (~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), min((uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, min(0u, 0u)))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), clamp(uint(uvec2(0u, 0u)), _GLF_IDENTITY(uint(uvec2(0u, 0u)), ~ (~ (uint(uvec2(0u, 0u))))), uint(uvec2(0u, 0u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), clamp((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), min((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))))) | 0u)), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), (_GLF_IDENTITY(uvec3(8u), uvec3(8u))) << uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u))))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ((uvec3(0u, _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)), 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) ^ uvec3(0u, 0u, 0u)))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(8u, max(_GLF_IDENTITY(8u, (8u) | 0u), 8u))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), _GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), clamp(_GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), max(((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), uint(uvec3(~ (~ (1u)), 1u, 1u))))))))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), min((uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), (_GLF_IDENTITY(uvec3(8u), uvec3(8u))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u))))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ((uvec3(0u, _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)), 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) ^ uvec3(0u, 0u, 0u)))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(_GLF_IDENTITY(8u, max(_GLF_IDENTITY(8u, (8u) | 0u), 8u))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))))), ~ (~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), min((uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, min(0u, 0u)))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), clamp(uint(uvec2(0u, 0u)), _GLF_IDENTITY(uint(uvec2(0u, 0u)), ~ (~ (uint(uvec2(0u, 0u))))), uint(uvec2(0u, 0u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), clamp((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), min((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))))) | 0u)), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), uvec3(8u)), (_GLF_IDENTITY(uvec3(8u), uvec3(8u))) << uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u)), _GLF_IDENTITY(uvec3(8u), uvec3(8u))))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ((uvec3(0u, _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)), 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) ^ uvec3(0u, 0u, 0u)))), max((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(8u, max(_GLF_IDENTITY(8u, (8u) | 0u), 8u))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), _GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), clamp(_GLF_IDENTITY(((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), max(((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), ((uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), uint(uvec3(~ (~ (1u)), 1u, 1u)))))))))))))) / uvec3(1u, 1u, 1u))))))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(164669u, 150195u, 74311u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(164669u, 150195u, 74311u)), _GLF_IDENTITY(min(_GLF_FUZZED(uvec3(164669u, 150195u, 74311u)), _GLF_FUZZED(uvec3(164669u, 150195u, 74311u))), (min(_GLF_FUZZED(uvec3(164669u, 150195u, 74311u)), _GLF_FUZZED(uvec3(164669u, 150195u, 74311u)))) >> uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u)) : ~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u, 0u)), 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) + 0u, ~ (~ ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) + 0u)))), 0u), 0u), (_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) + 0u, ~ (~ ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) + 0u)))), 0u), 0u), (uvec4(uvec3(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) + 0u, ~ (~ ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) + 0u)))), 0u), 0u)) | (_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) + 0u, ~ (~ ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) + 0u)))), 0u), 0u), (uvec4(uvec3(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) + 0u, ~ (~ ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) + 0u)))), 0u), 0u)) / uvec4(1u, 1u, 1u, 1u))))) >> uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4(uvec3(0u, 0u, 0u), 0u)))))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(164669u, 150195u, 74311u)), _GLF_IDENTITY((_GLF_FUZZED(uvec3(164669u, 150195u, 74311u))), min((_GLF_FUZZED(uvec3(164669u, 150195u, 74311u))), (_GLF_FUZZED(uvec3(164669u, 150195u, 74311u))))) / uvec3(1u, 1u, 1u)) : ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) << (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 0u)), ~ (~ (uvec3(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false, false, false)))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, min(0u, 0u))))), 0u)))))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), min((gl_WorkGroupID) << (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 0u)), ~ (~ _GLF_IDENTITY((uvec3(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uint(0u)))))) - 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uint(0u)))))) - 0u)))))), 0u))), (false ? _GLF_FUZZED(uvec3(116838u, 181067u, 113526u)) : (uvec3(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uint(0u)))))) - 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uint(0u)))))) - 0u)))))), 0u)))))))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), (gl_WorkGroupID) << (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 0u)), ~ (~ (uvec3(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, min(0u, 0u))))) ^ 0u)), 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(8u, clamp(8u, 8u, 8u))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(8u, clamp(8u, 8u, 8u))), (uvec3(_GLF_IDENTITY(8u, clamp(8u, 8u, 8u)))) / uvec3(1u, 1u, 1u))))), uvec3(8u))))))), false ? _GLF_FUZZED(uvec3(164669u, 150195u, _GLF_IDENTITY(74311u, (_GLF_IDENTITY(74311u, _GLF_IDENTITY(max(74311u, 74311u), (max(74311u, 74311u)) << 0u))) | (74311u)))) : ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))))) << (_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 0u)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec3(uvec4(uvec3(0u, 0u, 0u), 0u))), ~ (~ ((uvec3(uvec4(uvec3(0u, 0u, 0u), 0u))))))), ((~ _GLF_IDENTITY((uvec3(uvec4(uvec3(0u, 0u, 0u), 0u))), ~ (~ ((uvec3(uvec4(uvec3(0u, 0u, 0u), 0u)))))))) - uvec3(0u, 0u, 0u)))) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))))), false ? _GLF_FUZZED(uvec3(164669u, 150195u, 74311u)) : ~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << (_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 0u)), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 1u, 1u), ~ (_GLF_IDENTITY(~ (uvec4(0u, 1u, 1u, 1u)), (~ (uvec4(0u, 1u, 1u, 1u))) / uvec4(1u, 1u, 1u, 1u)))))), 0u, 0u), 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), ~ (~ (uvec3(8u)))), uvec3(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(num_workgroup) : 8u))))))))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false), true, true))))))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(true && ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true))))))) || false))) || false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(15.20))), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), true, true)))))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || (_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), true, false, false))) && true))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y) && true)) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))), _GLF_IDENTITY(true, (true) && true) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), true, false, true))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) && true) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(6.4))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), vec3(0.0, 1.0, 0.0))), 0.0, 1.0))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), vec3(0.0, 1.0, 0.0))), 0.0, 1.0))) > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && true)))))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), true, false, true))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) && true) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(6.4))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), vec3(0.0, 1.0, 0.0))), 0.0, 1.0))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), vec3(0.0, 1.0, 0.0))), 0.0, 1.0))) > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && true)))))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), true, false, true))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) && true) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(6.4))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), vec3(0.0, 1.0, 0.0))), 0.0, 1.0))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), vec3(0.0, 1.0, 0.0))), 0.0, 1.0))) > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && true)))))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atanh(vec2(-67.55, 25.36))) : injectionSwitch)).x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat2x4((injectionSwitch.x), round(length(normalize(1.0))), 0.0, sqrt(0.0), tan(0.0), 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-4711.6127, 4.7, 3.7, 591.324, 6375.9927, 777.902, 634.761, -0.8)) : mat2x4((injectionSwitch.x), round(length(normalize(1.0))), 0.0, sqrt(0.0), tan(0.0), 1.0, 0.0, 0.0))))))) * 1.0)) - 0.0) > injectionSwitch.y) && true)) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bool((false))))), ! (! (! (! _GLF_IDENTITY((false), bool(bool((false)))))))))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))) && true)), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, true, true)), false || (bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, true, true))))), (true) && true)))) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.7)), bool(false)))) * 1.0) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (! ((true)))))) && true) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y)), false, false, false))))) && true)) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false)))))))))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) && true, ((true) && true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((true) && true, ((true) && true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true, true))))) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y)), false, false, false))))) && true)) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false)))))))))), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) && true, ((true) && true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((true) && true, ((true) && true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true, true))))) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(55.57))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), sin(0.0), length(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-927.594)), float(0.0), bool(true))), 0.0)), 0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 1.0, 0.0, 0.0), (mat2x3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, (1.0) / cos(0.0)), 0.0, 0.0)) * mat2(1.0))))), transpose(transpose(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, determinant(_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, sqrt(1.0), 0.0, 0.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0), (false ? _GLF_FUZZED(mat4(-2530.3893, 8.6, -965.039, -3692.2959, -7.4, 2.4, 1.7, 83.17, -2.3, -353.906, -993.563, 627.589, 4.0, 999.038, -8.8, -80.98)) : _GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, sqrt(1.0), 0.0, 0.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0), (mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, sqrt(1.0), 0.0, 0.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(abs(-79.41)) : float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.3)), float(0.0), bool(true))), 0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), length(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), 0.0, 0.0)), mix(float(determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.3)), float(0.0), bool(true))), 0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), length(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), 0.0, 0.0))), float(_GLF_FUZZED(4.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(1.0, 0.0, 0.0) : _GLF_FUZZED(vec3(-8592.3685, -9.5, 7100.6700)))), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(1.0, 0.0, 0.0) : _GLF_FUZZED(vec3(-8592.3685, -9.5, 7100.6700)))), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.1))))), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(1.0, 0.0, 0.0) : _GLF_FUZZED(vec3(-8592.3685, -9.5, 7100.6700)))), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))))))), 0.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))))))), 0.0, 1.0)), mix(float(float(mat3x2(0.0, 1.0, 1.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))))))), 0.0, 1.0))), float(_GLF_FUZZED(7.3)), bool(false)))), 1.0, 0.0, 0.0)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(true, (true) && true), false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(false, ! (! (false))), true, false)), true, false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || false))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), true, true), bvec3(bvec4(bvec3(true && (false), true, true), true))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9544.7029)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(determinant(mat2(-914.023, -156.165, -9361.9554, 4597.2874))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9544.7029)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(determinant(mat2(-914.023, -156.165, -9361.9554, 4597.2874))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9544.7029)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(determinant(mat2(-914.023, -156.165, -9361.9554, 4597.2874)))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), false, true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size))), workgroup_base + subgroup_id * subgroup_size), min(clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size))), workgroup_base + subgroup_id * subgroup_size), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size))), workgroup_base + subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size) - 0u) + _GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) + 0), (subgroup_local_id + 1) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9874.9732, 4833.6469)))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || false)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), bool(bvec2(_GLF_IDENTITY(true, (true) && true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), bool(bvec2((true), false))), true))) && true), false)))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bvec3(bvec3(bvec3(false, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), true)), true)))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bvec3(bvec3(bvec3(false, false, false))))), (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bvec3(bvec3(bvec3(false, false, false)))))) && true), false || (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)), true))))))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), true)), true)))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, true && (false)))), true, true, true)))))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bvec3(bvec3(bvec3(false, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), true)), true)))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bvec3(bvec3(bvec3(false, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), true)), true)))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))))))))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bvec3(bvec3(bvec3(false, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec3(! (_GLF_IDENTITY(true, true && (true))), true, false)))))))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec3(! (_GLF_IDENTITY(true, true && (true))), true, false)))))))))))), true)), false))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), true, true))))))), true)), true))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec3(! (_GLF_IDENTITY(true, true && (true))), true, false)))))))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec3(! (_GLF_IDENTITY(true, true && (true))), true, false)))))))))))), true)), false))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), true, true))))))), true)), true)))))) || false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bvec3(bvec3(bvec3(false, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), true)), true)))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bvec3(bvec3(bvec3(false, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true)))), false)))))), true, true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), true, true))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))), true)), true)))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))))))), true))), false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(_GLF_ONE(1.0, injectionSwitch.y))) < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)), false)))))
        return;
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0))), injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))), _GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bool(bvec4(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bool(bvec4(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, true)))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, true))))))))) && true))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)) && true)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-82.01, 0.8)))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-82.01, 0.8))))) - abs(vec2(0.0, 0.0))).y)) * (1), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) * (1), clamp(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1]))) - vec2(0.0, 0.0)).y)) * (1), int(_GLF_ONE(1.0, injectionSwitch.y)) * (1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9079.0300)), bool(false)))), float(_GLF_FUZZED(171.491)), bool(false))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(171.491)), bool(false)))))) | (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(171.491)), bool(false))))))) * (1), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(895.768)), bool(false))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(171.491)), bool(false))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(171.491)), bool(false))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(171.491)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(171.491)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(171.491)), bool(false))))), 0.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), determinant(mat4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))))))))) | (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(171.491)), bool(false))))))) * (1)) ^ 0), int(int(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), ((1)) << 0))), clamp(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) * (1), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) * (1), int(_GLF_ONE(1.0, injectionSwitch.y)) * (1))))))))) * 1)) < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) ^ 0u))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), false || (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) ^ 0u)))], _GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(52512u) : uint(2))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(0.0)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(0.0))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(0.0)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(0.0))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2866.7281)), vec2(_GLF_FUZZED(-7.4), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)) && (false)))) || false))), true, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) && (false))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-654.357) : injectionSwitch.x)) > injectionSwitch.y))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))) && true))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), ((2)) - (0 << _GLF_IDENTITY(int(4), int(4)))))) * 1), _GLF_IDENTITY(min(_GLF_IDENTITY(2, (2) - 0), 2), ~ (~ (min(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (2))), clamp((2), _GLF_IDENTITY((2), max((2), (2))), (2))), max(_GLF_IDENTITY((2), max((2), (2))), _GLF_IDENTITY((2), (_GLF_IDENTITY((2), (_GLF_IDENTITY((2), ((2)) << 0)) - 0)) | 0))) - 0), 2)))))) - 0)), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) - 0.0)))) * abs(1.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))).y))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y)))), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), mix(vec3((vec3(injectionSwitch, 0.0))[0], (_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), mix(vec3(_GLF_FUZZED(2107.7402), (vec3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))[1], (vec3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))[2]), vec3((vec3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))[0], _GLF_FUZZED(-37.50), _GLF_FUZZED(36.40)), bvec3(true, false, false))))[1], (vec3(injectionSwitch, 0.0))[2]), vec3(_GLF_FUZZED(-30.63), _GLF_FUZZED((-2.2 + 0.8)), _GLF_FUZZED(-35.77)), bvec3(false, _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y))))))), ((_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y)))), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), mix(vec3((vec3(injectionSwitch, 0.0))[0], (_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), mix(vec3(_GLF_FUZZED(2107.7402), (vec3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))[1], (vec3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))[2]), vec3((vec3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))[0], _GLF_FUZZED(-37.50), _GLF_FUZZED(36.40)), bvec3(true, false, false))))[1], (vec3(injectionSwitch, 0.0))[2]), vec3(_GLF_FUZZED(-30.63), _GLF_FUZZED((-2.2 + 0.8)), _GLF_FUZZED(-35.77)), bvec3(false, _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y)))))))) && true), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y)))), false || (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), mix(vec3((vec3(injectionSwitch, 0.0))[_GLF_IDENTITY(0, (0) | 0)], (vec3(injectionSwitch, 0.0))[1], (vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0))[2]), vec3(_GLF_FUZZED(-30.63), _GLF_FUZZED((-2.2 + 0.8)), _GLF_FUZZED(-35.77)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y)))), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), mix(vec3((vec3(injectionSwitch, 0.0))[0], (vec3(injectionSwitch, 0.0))[1], (vec3(injectionSwitch, 0.0))[2]), vec3(_GLF_FUZZED(-30.63), _GLF_FUZZED((-2.2 + 0.8)), _GLF_FUZZED(-35.77)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y)))))))), bool(bool(! (! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y)))), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), mix(vec3((vec3(injectionSwitch, 0.0))[0], (vec3(injectionSwitch, 0.0))[1], (vec3(injectionSwitch, 0.0))[2]), vec3(_GLF_FUZZED(-30.63), _GLF_FUZZED((-2.2 + 0.8)), _GLF_FUZZED(-35.77)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y))))))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y)))), false || (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), mix(vec3((vec3(injectionSwitch, 0.0))[0], (vec3(injectionSwitch, 0.0))[1], (vec3(injectionSwitch, 0.0))[2]), vec3(_GLF_FUZZED(-30.63), _GLF_FUZZED((-2.2 + 0.8)), _GLF_FUZZED(-35.77)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(95.57)), bool(false))))))), 0.0))[_GLF_IDENTITY(0, int(int(0)))], (vec3(injectionSwitch, 0.0))[1], (vec3(injectionSwitch, 0.0))[2]), vec3(_GLF_FUZZED(-30.63), _GLF_FUZZED((-2.2 + 0.8)), _GLF_FUZZED(-35.77)), bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-463.540), _GLF_FUZZED(-7139.8795)), bvec2(false, false))).x > injectionSwitch.y))))))).y) && true))))))))), bool(bool(! (! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y)))), false || (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.1))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), mix(vec3((vec3(injectionSwitch, 0.0))[0], (vec3(injectionSwitch, 0.0))[1], (vec3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(459.753)), bool(false)))))[2]), vec3(_GLF_FUZZED(-30.63), _GLF_FUZZED((-2.2 + 0.8)), _GLF_IDENTITY(_GLF_FUZZED(-35.77), mix(float(_GLF_FUZZED(-35.77)), float(_GLF_FUZZED(1.4)), bool(false)))), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), ! (! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
