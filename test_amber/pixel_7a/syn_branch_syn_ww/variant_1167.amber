#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false, true))))), false || (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((injectionSwitch * vec4(-1881.4629, 0.6, 2.5, 6.1)[0])) : (injectionSwitch)))[0], _GLF_FUZZED(-6.9)), vec2(_GLF_FUZZED(340.133), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.9)), vec2(_GLF_FUZZED(340.133), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), false, _GLF_IDENTITY(true, false || (true))))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), true)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY(true && (false), false || (true && (false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7607.0347), _GLF_FUZZED(2.0)), bvec2(false, false))))).y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(41.37, -9.5)) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7607.0347), _GLF_FUZZED(2.0)), bvec2(false, false))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), vec2(_GLF_FUZZED(-7607.0347), _GLF_FUZZED(2.0)), bvec2(false, false))), (false ? _GLF_FUZZED(vec2(0.6, -2.5)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-7607.0347), float(mat4(_GLF_FUZZED(-7607.0347), 0.0, 0.0, 1.0, sqrt(1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, determinant(mat4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))), _GLF_FUZZED(2.0)), max(vec2(_GLF_IDENTITY(_GLF_FUZZED(-7607.0347), float(mat4(_GLF_FUZZED(-7607.0347), 0.0, 0.0, 1.0, sqrt(1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, determinant(mat4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))), _GLF_FUZZED(2.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-7607.0347), float(mat4(_GLF_FUZZED(-7607.0347), 0.0, 0.0, 1.0, sqrt(1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, determinant(mat4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))), _GLF_FUZZED(2.0)))), bvec2(false, false))))))).y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch[1])))))[1], mix(float(_GLF_FUZZED(-19.39)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED(-7607.0347), _GLF_FUZZED(2.0)), bvec2(false, false))))).y : _GLF_FUZZED(2.6)), mix(float((true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch[1])))))[1], mix(float(_GLF_FUZZED(-19.39)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED(-7607.0347), _GLF_FUZZED(2.0)), bvec2(false, false))))).y : _GLF_FUZZED(2.6))), float(_GLF_FUZZED(294.176)), bool(false)))))), ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-282.233, 7.5, 32.58).t), _GLF_FUZZED(-2.0)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch)).x > injectionSwitch.y)), false))).y))))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-282.233, 7.5, 32.58).t), _GLF_FUZZED(-2.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))), false)))) || false))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 | (0))], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-34.07, -2650.4825)))))[1]), vec2(_GLF_FUZZED(vec3(-282.233, 7.5, 32.58).t), _GLF_FUZZED(-2.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-282.233, 7.5, 32.58).t), _GLF_FUZZED(-2.0)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.0), _GLF_FUZZED(-6.1)), bvec2(false, false))).x > injectionSwitch.y)), false))).y))))), false)))) || false)))))) && true), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-624.166)), mix(float(_GLF_FUZZED(-48.45)), _GLF_IDENTITY(float(float(_GLF_FUZZED(-624.166))), (float(float(_GLF_FUZZED(-624.166)))) - _GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), bool(false))) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-624.166)), mix(float(_GLF_FUZZED(-48.45)), _GLF_IDENTITY(float(float(_GLF_FUZZED(-624.166))), (float(float(_GLF_FUZZED(-624.166)))) - _GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), bool(false))) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-624.166)), mix(float(_GLF_FUZZED(-48.45)), _GLF_IDENTITY(float(float(_GLF_FUZZED(-624.166))), (float(float(_GLF_FUZZED(-624.166)))) - _GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), bool(false))) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-33.61), (injectionSwitch)[1]), vec2(mat3x2(_GLF_IDENTITY(vec2(_GLF_FUZZED(-33.61), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-33.61), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))[1])) - vec2(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, sqrt(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0))), 0.0))), bvec2(false, true))).y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) + vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), (0.0) / _GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), (cos(0.0)) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), cos(0.0)))))), injectionSwitch)).x > injectionSwitch.y))))), true && (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(66.09) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(9.4)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(66.09) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(66.09) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) && true)) || _GLF_IDENTITY(false, ! (! (false))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))) && true), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)), false, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))) && true), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, cos(0.0), 1.0, 1.0))), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))) && true), true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) || false), true, false, true))), true, false, true)))) && _GLF_IDENTITY(true, (true) || false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))) && true), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(21.82) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))) && true), false), true)), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(float(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))) && true), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(true && (false), true && (true && (false)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1497.0560)) : injectionSwitch)).y)))))), bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || false))) && true), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5700.3415) : injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))), true)))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - tan(sin(0.0))))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))) && true))), false), true)), false)))))))))))), bool(bvec4(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), false || (bool((! (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), false || (bool((! (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))))))) || false))) && true), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y))))))))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), false || (bool((! (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))) || false))) && true), false)))))))), false || (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), false || (bool((! (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), false || (bool((! (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))))))) || false))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), false || (bool((! (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), false || (bool((! (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))))))) || false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))) && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5363.8269) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y))))))))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (injectionSwitch.x > injectionSwitch.y))), false || (bool((! (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))) || false))) && true), false)))))))))), true, false, true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))) && true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(857.730)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y))), bool(true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, sin(0.0), length(tan(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0))) < injectionSwitch.y))), false))))), bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true)))) && true)))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), true && (bool(bvec4(_GLF_DEAD(false), false, true, false))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size))) << 0u)) | (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size))) << 0u)) | (workgroup_base + subgroup_id * subgroup_size), min((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size))) << 0u)) | (workgroup_base + subgroup_id * subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size))) << 0u)) | (workgroup_base + subgroup_id * subgroup_size))))) + 0u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (0u), (0u))))), (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(84074u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(84074u, uint(uvec4(84074u, 1u, 0u, 1u)))), (uint(_GLF_IDENTITY(84074u, uint(uvec4(84074u, 1u, _GLF_IDENTITY(0u, (0u) - 0u), 1u))))) << 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(84074u, uint(uvec4(84074u, 1u, 0u, 1u)))), (uint(_GLF_IDENTITY(84074u, uint(uvec4(84074u, 1u, 0u, 1u))))) << 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(84074u, uint(uvec4(84074u, 1u, 0u, 1u)))), (uint(_GLF_IDENTITY(84074u, uint(uvec4(84074u, 1u, 0u, 1u))))) << 0u)))))), uint(uvec3(_GLF_FUZZED(84074u), _GLF_IDENTITY(((_GLF_IDENTITY((1u | 1u) << _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ ((1u | 1u) << _GLF_IDENTITY(uint(7u), uint(7u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) - 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY((((1u | 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY((uint(7u)) ^ 0u, ~ (~ ((uint(7u)) ^ 0u)))), _GLF_IDENTITY(uint(7u), min(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) << _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))), (min(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY(uint(uint(min(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))), max(uint(uint(min(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))), uint(uint(min(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))))))))))))), ~ (~ ((_GLF_IDENTITY(((_GLF_IDENTITY(1u | 1u, ~ (~ (1u | 1u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u), _GLF_IDENTITY(uint(7u), min(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))))), (_GLF_IDENTITY(true ? ((_GLF_IDENTITY(1u | 1u, ~ (~ (1u | 1u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u), _GLF_IDENTITY(uint(7u), min(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))))) : _GLF_FUZZED(packUnorm2x16(vec2(69.01, 14.64))), min(_GLF_IDENTITY(true ? ((_GLF_IDENTITY(1u | 1u, ~ (~ (1u | 1u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u), _GLF_IDENTITY(uint(7u), min(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))))) : _GLF_FUZZED(packUnorm2x16(vec2(69.01, 14.64))), (true ? ((_GLF_IDENTITY(1u | 1u, ~ (~ (1u | 1u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u), _GLF_IDENTITY(uint(7u), min(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))))) : _GLF_FUZZED(packUnorm2x16(vec2(69.01, 14.64)))) | (true ? ((_GLF_IDENTITY(1u | 1u, ~ (~ (1u | 1u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u), _GLF_IDENTITY(uint(7u), min(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))))) : _GLF_FUZZED(packUnorm2x16(vec2(69.01, 14.64))))), true ? ((_GLF_IDENTITY(1u | 1u, ~ (~ (1u | 1u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u), _GLF_IDENTITY(uint(7u), min(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))))) : _GLF_FUZZED(packUnorm2x16(vec2(69.01, 14.64))))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), (uint(7u)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) * 1u))), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))))))))), clamp((_GLF_IDENTITY(((1u | 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << 0u)), uint(7u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ~ (~ (_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u)))), uint(_GLF_IDENTITY(7u, (7u) + 0u))), (((1u | 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << 0u)), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) + 0u)))) | ((_GLF_IDENTITY((1u | 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << 0u)), uint(7u)), ((1u | 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << 0u)), uint(7u))) | 0u)) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) + 0u)))))), (((_GLF_IDENTITY(1u | 1u, ~ (_GLF_IDENTITY(~ (1u | 1u), (~ _GLF_IDENTITY(_GLF_IDENTITY((1u | 1u), max((1u | 1u), (1u | 1u))), ~ (~ ((1u | 1u))))) - 0u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (true ? uint(7u) : _GLF_FUZZED(subgroup_local_id))), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), (((1u | 1u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 1u * (_GLF_IDENTITY(uint(7u), clamp(uint(_GLF_IDENTITY(7u, (7u) | (7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u), uint(7u))))), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(7u), 0u, (_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))))) ^ 0u)), min(uvec3(uint(7u), 0u, (_GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)))), uvec3(uint(7u), 0u, (0u ^ 0u))))), (uint(_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(7u, clamp(7u, _GLF_IDENTITY(7u, (7u) * 1u), 7u)), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(7u, clamp(7u, _GLF_IDENTITY(7u, (7u) * 1u), 7u)), (_GLF_IDENTITY(7u, clamp(7u, _GLF_IDENTITY(7u, (7u) * 1u), 7u))) << 0u), 0u)))))), 0u, (0u ^ 0u)), min(uvec3(_GLF_IDENTITY(uint(7u), (uint(7u)) - 0u), 0u, (_GLF_IDENTITY(0u, (0u) - 0u) ^ 0u)), uvec3(_GLF_IDENTITY(uint(7u), (uint(7u)) / 1u), 0u, (0u ^ 0u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY((((_GLF_IDENTITY(1u | _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) << 0u)) << 0u, 0u ^ ((_GLF_IDENTITY(1u, (1u) << 0u)) << 0u))), ~ (~ (1u | _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << 0u, (_GLF_IDENTITY((1u) << 0u, max((1u) << 0u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) * 1u)) << 0u))) >> 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), (true ? uint(7u) : _GLF_FUZZED(102527u)))) | (uint(7u))), (true ? uint(7u) : _GLF_FUZZED(workgroup_base))), uint(_GLF_IDENTITY(7u, uint(uint(7u)))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), ~ (~ ((((1u | 1u) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), 1u))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, (true) && true) ? subgroup_local_id : _GLF_FUZZED(clamp(workgroup_size, 66933u, workgroup_id)))), subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-49.11)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), workgroup_base + subgroup_id * subgroup_size)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(workgroup_id) : subgroup_size)), clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_size)))), clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) ? _GLF_FUZZED(workgroup_id) : subgroup_size)), clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(143215u))) * subgroup_size, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u, max((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u))))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_size)), clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_size), max((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_size)))), clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), (1u ^ 1u) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_size), max((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_size)))), clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))))) - _GLF_IDENTITY(0u, (0u) | (0u))), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(uvec4(24047u, 130203u, 133350u, 35051u)[3]))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, (0u) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))) | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id, (subgroup_id) | (196680u & 0u))))) * 1u) * subgroup_size)))), _GLF_IDENTITY(0u, (0u | 0u) | (0u)) | (max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) : _GLF_FUZZED(workgroup_base)))) | (subgroup_id), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) : _GLF_FUZZED(workgroup_base)))) | (subgroup_id), 0u ^ ((_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) : _GLF_FUZZED(workgroup_base)))) | (subgroup_id))))))) * subgroup_size)), clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 0u)), (~ (uvec2(subgroup_id * subgroup_size, 0u))) ^ uvec2(0u, 0u))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 0u)), (~ (uvec2(subgroup_id * subgroup_size, 0u))) ^ uvec2(0u, 0u)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 0u)), (~ (uvec2(subgroup_id * subgroup_size, 0u))) ^ uvec2(0u, 0u))))), (uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 0u)), (~ (uvec2(subgroup_id * subgroup_size, 0u))) ^ uvec2(0u, 0u)))))) | 0u)), uint(uvec4((uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 0u)), (~ (uvec2(subgroup_id * subgroup_size, 0u))) ^ uvec2(0u, 0u)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 0u)), (~ (uvec2(subgroup_id * subgroup_size, 0u))) ^ uvec2(0u, 0u))))), (uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_id * subgroup_size, 0u)), (~ (uvec2(subgroup_id * subgroup_size, 0u))) ^ uvec2(0u, 0u)))))) | 0u)), 1u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), (uint(uvec2(subgroup_id * subgroup_size, 0u))) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / (1u & 1u)) * subgroup_size) * 1u), (workgroup_base + subgroup_id * subgroup_size) * 1u), clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))))))) + ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), true, false), bvec3(bvec4(bvec3(! (! (false)), true, false), false))))))), (! (false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), true, false), bvec3(bvec4(bvec3(! (! (false)), true, false), false))))))), (! (false)) && true), true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), true, false), bvec3(bvec4(bvec3(! (! (false)), true, false), false))))))), (! (false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), true, false), bvec3(bvec4(bvec3(! (! (false)), true, false), false))))))), (! (false)) && true), true))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), true, false), bvec3(bvec4(bvec3(! (! (false)), true, false), false))))))), (! (false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), true, false), bvec3(bvec4(bvec3(! (! (false)), true, false), false))))))), (! (false)) && true), true))), false))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fract(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-87.63) : injectionSwitch.y, (false ? _GLF_FUZZED(-87.63) : injectionSwitch.y) + sin(0.0)))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-87.63) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-87.63) : injectionSwitch.y, clamp(false ? _GLF_FUZZED(-87.63) : injectionSwitch.y, false ? _GLF_FUZZED(-87.63) : injectionSwitch.y, false ? _GLF_FUZZED(_GLF_IDENTITY(-87.63, clamp(_GLF_IDENTITY(-87.63, (-87.63) / 1.0), -87.63, -87.63))) : injectionSwitch.y)))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(79.16)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-47275), (_GLF_IDENTITY(_GLF_FUZZED(-47275), max(_GLF_FUZZED(-47275), _GLF_FUZZED(-47275)))) | 0)), max((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-47275), (_GLF_IDENTITY(_GLF_FUZZED(-47275), max(_GLF_FUZZED(-47275), _GLF_FUZZED(_GLF_IDENTITY(-47275, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(-47275, (-47275) ^ 0)), min(~ _GLF_IDENTITY((_GLF_IDENTITY(-47275, (-47275) ^ 0)), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(-47275, (-47275) ^ 0)), 0, 1)), (int(ivec3((_GLF_IDENTITY(-47275, (-47275) ^ 0)), 0, 1))) - 0)), ~ (_GLF_IDENTITY(-47275, (-47275) ^ 0)))))))))) | 0)), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? 4 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-47275, min(-47275, -47275))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-47275), (true ? _GLF_FUZZED(-47275) : _GLF_FUZZED(-76773))), max(_GLF_FUZZED(-47275), _GLF_FUZZED(-47275)))) | 0)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, clamp(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(25479) : 5)), 5, _GLF_IDENTITY(5, 0 | (5))))))) >> _GLF_IDENTITY(int(5), int(5))) * (4)) : _GLF_IDENTITY(_GLF_FUZZED(-47275), (_GLF_IDENTITY(_GLF_FUZZED(-47275), max(_GLF_FUZZED(-47275), _GLF_FUZZED(-47275)))) | 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-47275), (_GLF_IDENTITY(_GLF_FUZZED(-47275), max(_GLF_FUZZED(-47275), _GLF_IDENTITY(_GLF_FUZZED(-47275), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-47275), 0 | (_GLF_FUZZED(-47275)))) / 1, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_FUZZED(-47275), 0 | (_GLF_FUZZED(-47275)))) / 1), clamp(~ ((_GLF_IDENTITY(_GLF_FUZZED(-47275), 0 | (_GLF_FUZZED(-47275)))) / 1), ~ ((_GLF_IDENTITY(_GLF_FUZZED(-47275), 0 | (_GLF_FUZZED(-47275)))) / 1), ~ ((_GLF_IDENTITY(_GLF_FUZZED(-47275), 0 | (_GLF_FUZZED(-47275)))) / 1))))))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-47275), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-47275), max(_GLF_FUZZED(-47275), _GLF_IDENTITY(_GLF_FUZZED(-47275), (_GLF_IDENTITY(_GLF_FUZZED(-47275), 0 | (_GLF_FUZZED(-47275)))) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-47275), max(_GLF_FUZZED(-47275), _GLF_IDENTITY(_GLF_FUZZED(-47275), (_GLF_IDENTITY(_GLF_FUZZED(-47275), 0 | (_GLF_FUZZED(-47275)))) / 1))), (_GLF_IDENTITY(_GLF_FUZZED(-47275), max(_GLF_FUZZED(-47275), _GLF_IDENTITY(_GLF_FUZZED(-47275), (_GLF_IDENTITY(_GLF_FUZZED(-47275), 0 | (_GLF_FUZZED(-47275)))) / 1)))) / 1)) | 0)) | 0), (_GLF_IDENTITY(_GLF_FUZZED(-47275), (_GLF_IDENTITY(_GLF_FUZZED(-47275), max(_GLF_FUZZED(-47275), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-47275), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-47275, max(-47275, -47275))), 0 | (_GLF_FUZZED(-47275)))) / 1), (_GLF_IDENTITY(_GLF_FUZZED(-47275), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-47275, max(-47275, -47275))), 0 | (_GLF_FUZZED(-47275)))) / 1)) | (_GLF_IDENTITY(_GLF_FUZZED(-47275), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-47275, max(-47275, -47275))), 0 | (_GLF_FUZZED(-47275)))) / 1)))))) | 0)) >> 0)) / 1)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(894.607)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0)))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.2))))), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), false || ((bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(894.607)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0)))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.2))))), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), bool(bvec3(_GLF_IDENTITY(false, true && (false)) || (bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.2))))), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), false, false)))))) ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-47275), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-47275), max(_GLF_FUZZED(-47275), _GLF_FUZZED(-47275)))), ((_GLF_IDENTITY(_GLF_FUZZED(-47275), max(_GLF_FUZZED(-47275), _GLF_FUZZED(-47275))))) / 1) | 0))))))))), 64, 4);
 if(subgroup_local_id + _GLF_IDENTITY(1, int(int(1))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (bool(bool(false))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (bool(bool(false)))))))))))))), (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u + _GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid))), (_GLF_IDENTITY(0u + (next_virtual_gid), _GLF_IDENTITY((0u + (next_virtual_gid)) << 0u, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y)) ? (0u + (next_virtual_gid)) << 0u : _GLF_FUZZED(workgroup_base))))) / 1u))], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0))) : _GLF_FUZZED(i))), ~ (~ (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(i))))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bool(_GLF_IDENTITY((false), ((false)) || false))))), _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), (bool(! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)), (bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))) && true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-7.7, 315.122), max(vec2(-7.7, 315.122), vec2(-7.7, 315.122)))) : injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch, injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))) || false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(bool((injectionSwitch.x > injectionSwitch.y))), false)))))))))), false, false)), true && (bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))))), true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, false)))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
