#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), ! (! (false))))), _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), (injectionSwitch.x > injectionSwitch.y)), false))))))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(68.68)), bvec2(false, false))), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), false, true)))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(76151u, 14247u, 66920u)))))).x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, false, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u), workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u, ((subgroup_id * subgroup_size) * 1u) + 0u)), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u, ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) * 1u) + 0u)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u, (_GLF_IDENTITY((subgroup_id) >> 0u, ((subgroup_id) >> 0u) >> 0u)) ^ 0u), (_GLF_IDENTITY((subgroup_id) >> 0u, ((subgroup_id) >> 0u) / 1u)) | (_GLF_IDENTITY((subgroup_id) >> 0u, uint(uint((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) >> 0u)))))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_id * subgroup_size), (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u, ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))) * subgroup_size))) * 1u) + 0u)), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), min(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) >> 0u)))), subgroup_id * subgroup_size)) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u, (_GLF_IDENTITY((subgroup_id * subgroup_size), 0u + ((subgroup_id * subgroup_size))) * 1u) + 0u)), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) * 1u, (_GLF_IDENTITY((subgroup_id * subgroup_size), 0u + ((subgroup_id * subgroup_size))) * 1u) + 0u)), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, subgroup_id * subgroup_size))) << 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-6430.3319), max(_GLF_FUZZED(-6430.3319), _GLF_FUZZED(-6430.3319))), _GLF_FUZZED(-590.193)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2))))), (true ? _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2))))) : _GLF_FUZZED(-144.470))), _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2))))), clamp(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2))))), _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2))))), _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2)))))))))), float(_GLF_FUZZED(-76.50)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0) : _GLF_FUZZED(866.567))))) : _GLF_FUZZED(asinh(distance(8649.5120, 5.2))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2))))), (true ? _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(_GLF_IDENTITY(8649.5120, min(8649.5120, 8649.5120)), 5.2))))) : _GLF_FUZZED(-144.470))), _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(float(195465u))), bool(false)))) * _GLF_ONE(1.0, injectionSwitch.y)), (true ? (injectionSwitch)[0] : _GLF_IDENTITY(_GLF_FUZZED(asinh(distance(8649.5120, 5.2))), (_GLF_FUZZED(asinh(distance(8649.5120, 5.2)))) / 1.0))), _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2))))), _GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(asinh(distance(8649.5120, 5.2)))))))))), float(_GLF_FUZZED(-76.50)), bool(false)))) / 1.0), (injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-4.9)), float(injectionSwitch[1]), bool(true))))).y)), true))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), true && (! (! (bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY((bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(false)), bool(bool((bool(false)))))), false || (! ((bool(false))))))))) && true, (_GLF_IDENTITY((bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, false, false))), true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), true))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), true))), true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), true))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true), true))), true)))))))))) || (_GLF_IDENTITY((bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(false)), bool(bool((bool(false)))))), false || _GLF_IDENTITY((! ((bool(false)))), bool(bvec3((! ((bool(false)))), false, true)))))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, (true) && true), false), true))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(false || ((bool(false))), bool(bvec3(false || ((bool(false))), false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || ((bool(false))), bool(bvec3(false || ((bool(false))), false, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false || ((bool(false))), bool(bvec3(false || ((bool(false))), false, true))), (_GLF_IDENTITY(false || ((bool(false))), _GLF_IDENTITY(bool(bvec3(false || ((bool(false))), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(false || ((bool(false))), false, true)))))) && true)))))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false || (false || ((_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) && _GLF_IDENTITY(true, true && (true)))), false || ((bool(false)))) && true), bool(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), ! (! (_GLF_IDENTITY(true, false || (true))))))), false || ((bool(false)))) && true), true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y)), true, false)), _GLF_IDENTITY(false, bool(bool(false))) || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, true, false)))) && true)), false || ((bool(false)))) && true), bool(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), false || ((bool(false)))) && true), true))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))) || false), _GLF_IDENTITY((bool(false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), _GLF_IDENTITY((_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false, false, true)), (bool(bvec3((_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false, false, true))) && true))), ! (! (! _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (! (bool(false))))), ! (_GLF_IDENTITY(! ((! (! (! (bool(false)))))), true && (_GLF_IDENTITY(! ((! (! (! (bool(false)))))), true && (! ((! (! (! _GLF_IDENTITY((bool(false)), bool(bool((bool(false))))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (! (! (bool(false))))), ! (! ((! (! (! (bool(false)))))))), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))))), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), false)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))))), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), true, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(! (! (! (! (bool(false))))), true, false), bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))))), ((bool(_GLF_IDENTITY(bvec3(! (! (! (! (bool(false))))), true, false), bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true)))))) && true))))))))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, false || (true)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), false)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), false)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), false)))))), true)))))))))), bvec3(bvec4(bvec3(false, true, false), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, false || (true)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), false)))))))))), bvec3(bvec4(bvec3(false, true, false), true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, false || (true)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), false)))))))))), bvec3(bvec4(bvec3(false, true, false), true))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, false || (true)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), false)))))))))), bvec3(bvec4(bvec3(false, true, false), true)))))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), ! (! (bool(false))))) && true)), false || ((_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true))))))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))), (_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true)))) && true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))), (_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true)))) && true))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))), (_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true)))) && true))))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true)), true && (bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true)))))) && true))))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), false || (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))), ! (! _GLF_IDENTITY((bool(false)), ((bool(false))) && _GLF_IDENTITY(true, ! (! (true))))))))) && _GLF_IDENTITY(true, true && (true)))), false || ((bool(false)))) && true), bool(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), false || ((bool(false)))) && true), true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), false || ((bool(false)))) && true), bool(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), _GLF_IDENTITY(false, true && (false)) || ((bool(false)))) && true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))) || false), _GLF_IDENTITY((bool(false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec3(_GLF_IDENTITY(! (bool(false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true))))), (! (! (bool(false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false)), _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (! (! (bool(false))))), ((! (! (! (bool(false)))))) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (! (! (bool(false)))))), true && (_GLF_IDENTITY(! ((! (! (! (bool(false)))))), true && (! ((! (! (! (bool(false))))))))))), true && (! (_GLF_IDENTITY(! ((! (! (! (bool(false)))))), true && (_GLF_IDENTITY(! ((! (! (! (bool(false)))))), true && (! ((! (! (! (bool(false)))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (! (! (bool(false))))), ! (_GLF_IDENTITY(! ((! (! (! (bool(false)))))), ! (! (! ((! (! (! (bool(false))))))))))), _GLF_IDENTITY(true, bool(bool(true))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, (false) || false)), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, (false) || false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true))))), false))), bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (! (! (bool(false)))), bool(bvec3(! (! (! (bool(_GLF_IDENTITY(false, (false) && true))))), true, false)))), true, false), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3(! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(! (bool(false))), ! (! (bool(! (bool(false))))))))))), true, false), bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))))))))))))) && true))))), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), ! (! (_GLF_IDENTITY((bool(false)), ((bool(false))) && true))))))) && true)), false || ((bool(false)))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), bool(bvec2(! ((_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true)))))) || false), false || ((_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && _GLF_IDENTITY(true, true && (true)))), false || ((bool(false)))) && true), bool(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (bool(false))))) && true)), false || ((bool(false)))) && true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), false || ((bool(false)))) && true), bool(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), false || ((bool(false)))) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), false || ((bool(false)))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), false || ((bool(false)))) && true)))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))) || false), _GLF_IDENTITY((bool(false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false), (_GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false)) || false)), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (! (bool(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (! (! (bool(false)))))), (! ((! (! (! (bool(false))))))) || false), true && (_GLF_IDENTITY(! ((! (! (! (bool(false)))))), true && (! ((! (_GLF_IDENTITY(! (! (bool(false))), true && (! (! (bool(false)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (! (! (bool(false))))), ! (! ((! (! (! (bool(false)))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (! (! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true)))) && true))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3(! (! (! (! (bool(false))))), true, false), bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! (! (! (bool(false))))), ! (! ((! (! (! (bool(false)))))))), (! _GLF_IDENTITY((! (! (! (bool(false))))), ! (! ((! (! (! (bool(false))))))))) && true), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true)))) && true))))), bool(bvec2((! (! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true)))) && true))))), false))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3(! (! (! (! (bool(false))))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), false || ((bool(false)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ((_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false), false || ((_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && _GLF_IDENTITY(true, true && (true)))), false || ((bool(false)))) && true), bool(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), false || ((bool(false)))) && true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), false || ((bool(false)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), false || ((bool(false)))) && true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))) || false), _GLF_IDENTITY((bool(false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false)), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (! (bool(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (! (! _GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, true))))))), (! ((_GLF_IDENTITY(! (! (! (bool(false)))), true && (! (! (! (bool(false))))))))) || false), true && (_GLF_IDENTITY(! ((! (! (! (bool(false)))))), true && (! ((! (! (! (bool(false)))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (! (! (bool(false))))), ! (! ((! (! (! (bool(false)))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (! (! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true)))) && true))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3(! (! (! (! (bool(false))))), true, false), bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true))))))))))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true && (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), false || (bool(false))))))))))) && true)), false || ((bool(false)))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ((_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (bool(false))))), bool(bvec4((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (bool(false))))), false, true, true))))) && _GLF_IDENTITY(true, true && (true)))), false || ((bool(false)))) && true), bool(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), false || _GLF_IDENTITY((_GLF_IDENTITY((bool(false)), ((bool(false))) && true)), ((_GLF_IDENTITY((bool(false)), ((bool(false))) && true))) && true)) && true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), false || ((bool(false)))) && _GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false, true)), ! (! (bool(bvec2((_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false, true)))))))) && true)), false || ((bool(false)))) && true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))) || false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), bool(bool(bool(false))))) || false, true && ((_GLF_IDENTITY(bool(false), bool(bool(bool(false))))) || false)))))), _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false)), _GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3((! _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false)), false, false))), (! (bool(bvec3((! _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false)), false, false)))) || false)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (! (bool(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (! (! (bool(false)))))), (! (_GLF_IDENTITY((! (! (! (bool(false))))), ((! (! (! (bool(false)))))) && true))) || false), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (! (bool(false)))), ! (! (_GLF_IDENTITY(! (! (! (bool(false)))), (! (! (! (bool(false))))) && true)))))), true && (! ((! (! (! (bool(false)))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (! (! (bool(false))))), ! (! ((! (! (! (bool(false)))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (! (! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))), (bool(_GLF_IDENTITY(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))) && true)))), bool(bvec4(bool(false), false, false, true)))) && true))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(! (! (! _GLF_IDENTITY((! (bool(false))), ! (! ((! (bool(false)))))))), true, false), true))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(! (! _GLF_IDENTITY((! (! (bool(false)))), ! (_GLF_IDENTITY(! ((! (! (bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((! (! (bool(false)))))))))), true, false), bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true)))))), false || (! (! (bool(_GLF_IDENTITY(bvec3(! (! (! (! (bool(false))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), false), bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, _GLF_IDENTITY(false, ! (! (false)))), true)))))))))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false)), _GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3((! _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false)), false, false))), (! (bool(bvec3((! _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ((bool(false))) && true)) || false)), false, false)))) || false)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (! (bool(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (! (! (bool(false)))))), (! (_GLF_IDENTITY((! (! (! (bool(false))))), ((! (! (! (bool(false)))))) && true))) || false), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (! (bool(false)))), ! (! (_GLF_IDENTITY(! (! (! (bool(false)))), (! (! (! (bool(false))))) && true)))))), true && (! ((! (! (! (bool(false)))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (! (! (bool(false))))), ! (! ((! (! (! (bool(false)))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (! (! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))), (bool(_GLF_IDENTITY(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))) && true)))), bool(bvec4(bool(false), false, false, true)))) && true))))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(! (! (! _GLF_IDENTITY((! (bool(false))), ! (! ((! (bool(false)))))))), true, false), true))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(! (! _GLF_IDENTITY((! (! (bool(false)))), ! (_GLF_IDENTITY(! ((! (! (bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((! (! (bool(false)))))))))), true, false), bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, false), true)))))), false || (! (! (bool(_GLF_IDENTITY(bvec3(! (! (! (! (bool(false))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), false), bvec3(bvec4(bvec3(! (! (! (! (bool(false))))), true, _GLF_IDENTITY(false, ! (! (false)))), true)))))))))))))))))) && true)))) || false)))))) && true))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))).y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(false, ! (! (false))))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || (bool(bvec4(false, false, true, false))))) || false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true, false)), false || (bool(bvec4(false, false, true, false))))) || false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))) || false))), true)), false)))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(true, false || (true))))))), false), true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(false, true, false), true))))), false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) && true))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(uint(1), (uint(1)) | 0u)))), (clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1))))) << 0u)), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), min(uint(1), uint(1)))), (clamp(uint(1), uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1))), min(_GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1))), _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1))))))) << 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), _GLF_IDENTITY(clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), min(uint(1), uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-11175, int(int(-11175)))) : 1)), _GLF_IDENTITY(1, ~ (~ (1))), 1)))))), (clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1))))) << 0u)), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), min(uint(1), uint(1)))), _GLF_IDENTITY((clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1))))) << 0u, min((clamp(uint(1), uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1))))))) << 0u, _GLF_IDENTITY((clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-63922))))), uint(1))))) << 0u, clamp((_GLF_IDENTITY(clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1)))), clamp(clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1)))), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1)))), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1))))))) << 0u, (clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1))))) << 0u, (clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1))))) << 0u))))))) ^ 0u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 0, _GLF_IDENTITY(1, (1) | (1)), 1), (ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, max((1) * 1, (1) * 1))), 0, 1, 1)) / ivec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(ivec4(1, _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) ^ 0), 0))), 1, 1), ivec4(1, 0, 1, 1)), (max(ivec4(1, _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) ^ 0), 0))), 1, 1), ivec4(1, 0, 1, 1))) / (ivec4(1, 1, 1, 1) & ivec4(1, 1, 1, 1))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(0, clamp(0, 0, 0));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) | 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), next_virtual_gid)), uint(uvec2(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), 1u)))) | 0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))))) - 0u)))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)) << uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)), uvec2(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))))) - 0u)))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)) << uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 1u))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u)), (max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))) | (max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u) ^ 0u)) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))))) - 0u)))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)) << uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, 0u + (0u))), max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, (true ? _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) | 0u) : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0u, 1u * (0u)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))))) - 0u)))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, 0u + (0u))), max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, (true ? _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) | 0u) : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0u, 1u * (0u)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))))) - 0u)))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, 0u + (0u))), max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, (true ? _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) | 0u) : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0u, 1u * (0u)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))))) - 0u)))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))) | uvec2(0u, 0u))) | uvec2(0u, 0u)), (uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)) << uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))))), 0u | (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u))))) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u, (0u) ^ 0u)))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(8.1)), bool(false))))) * (0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))))) - 0u)))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)) << uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))))))))) | 0u)], uint(2), 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(25711) : _GLF_IDENTITY(4, min(4, 4)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y) + 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))) && true)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), false))))), (bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), false)))))) || false))) && true), (bool(bvec4(false, false, false, false))) && true))))) || false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))) && true)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true))))) || false), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false))) && true)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true))))) || false), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))))), (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-6.7)), float(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (injectionSwitch)).y)), bool(true))))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-24.46)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-460.203)), bool(false)))) - abs(0.0)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(430.331)))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - _GLF_IDENTITY(_GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.8)), _GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), clamp(_GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), max(1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8))))), 1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8)))))), float(length(vec2(0.0, 0.0))), bool(true))), min(_GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.8)), _GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), clamp(_GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), max(1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8))))), 1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8)))))), float(length(vec2(0.0, 0.0))), bool(true))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.8)), _GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), clamp(_GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), max(1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8))))), 1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8)))))), float(length(vec2(0.0, 0.0))), bool(true))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), max((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec2(664.556, -28.53) + vec2(-6858.4137, 0.5)).s)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), max(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0))).y))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-713.331) : 1.0)), 0.0 + (1.0)), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0))))), float(vec3(clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-187.332))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), clamp(((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-187.332))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-187.332))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-187.332))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))))) - length(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0))))), 1.0, 1.0)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4455.2998), _GLF_FUZZED(-850.647)), bvec2(false, false))).y)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-6.7)), float(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (injectionSwitch)).y)), bool(true))))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-24.46)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-460.203)), bool(false)))) - abs(0.0)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(430.331)))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - _GLF_IDENTITY(_GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.8)), _GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), clamp(_GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), max(1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8))))), 1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8)))))), float(length(vec2(0.0, 0.0))), bool(true))), min(_GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.8)), _GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), clamp(_GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), max(1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8))))), 1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8)))))), float(length(vec2(0.0, 0.0))), bool(true))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.8)), _GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), clamp(_GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), max(1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8))))), 1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8)))))), float(length(vec2(0.0, 0.0))), bool(true))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), max((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec2(664.556, -28.53) + vec2(-6858.4137, 0.5)).s)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), max(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0))).y))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-713.331) : 1.0)), 0.0 + (1.0)), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0))))), float(vec3(clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-187.332))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), clamp(((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-187.332))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-187.332))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-187.332))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))))) - length(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0))))), 1.0, 1.0)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4455.2998), _GLF_FUZZED(-850.647)), bvec2(false, false))).y)))))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-6.7)), float(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (injectionSwitch)).y)), bool(true))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-6.7)), float(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (injectionSwitch)).y)), bool(true))), (_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-6.7)), float(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (injectionSwitch)).y)), bool(true)))) / 1.0)), float(_GLF_FUZZED((-2882.4213))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-24.46)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-460.203)), bool(false)))) - abs(0.0)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(430.331)))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - _GLF_IDENTITY(_GLF_IDENTITY(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.8)), _GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), clamp(_GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), max(1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8))))), 1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8)))))), float(length(vec2(0.0, 0.0))), bool(true))), min(_GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.8)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))) * (float(_GLF_FUZZED(3.8))), clamp(_GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), max(1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8))))), 1.0 * (float(_GLF_FUZZED(3.8))), _GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), clamp(1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8)))))))), float(length(vec2(0.0, 0.0))), bool(true))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.8)), _GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), clamp(_GLF_IDENTITY(1.0 * (float(_GLF_FUZZED(3.8))), max(1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8))))), 1.0 * (float(_GLF_FUZZED(3.8))), 1.0 * (float(_GLF_FUZZED(3.8)))))), float(length(vec2(0.0, 0.0))), bool(true))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), max((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec2(664.556, -28.53) + vec2(-6858.4137, 0.5)).s)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(7.0), (injectionSwitch)[1]), bvec2(false, true))).y))), bool(bvec2(bool(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(7.0), (injectionSwitch)[1]), bvec2(false, true))).y))), true))))), injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), max(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0))).y))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-713.331) : 1.0)), 0.0 + (1.0)), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0))))), float(vec3(clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (_GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) * 1.0)) / 1.0)) : _GLF_FUZZED(-187.332))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), clamp(((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(-7409.6239)), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-187.332))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-187.332))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-187.332))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))))) - length(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), max(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), max(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0)), ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y), mix(float(_GLF_FUZZED((+ 9.3))), float(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)), bool(true))))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(vec2(0.0, 0.0))))), 1.0, 1.0)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4455.2998), _GLF_FUZZED(-850.647)), bvec2(false, false))).y), false || (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4455.2998), _GLF_FUZZED(-850.647)), bvec2(false, false))).y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4455.2998), _GLF_FUZZED(-850.647)), bvec2(false, false))).y)))))))))) && true))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.0)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))) || false), true, false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(131185u))))))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
