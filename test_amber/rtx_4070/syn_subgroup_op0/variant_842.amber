#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1241.9760, 9088.9722)))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id;
 uvec4 GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cosh(64.51)))) > injectionSwitch.y))) || false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false, false, false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz = GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))
    barrier();
   return;
  }
 uvec2 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
 GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.xy = GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(378.242)), min((true ? injectionSwitch.x : _GLF_FUZZED(378.242)), (true ? injectionSwitch.x : _GLF_FUZZED(378.242))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true)), (bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)) > injectionSwitch.y))))) || false)))))), true)))), false, true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy = GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.xy;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7.7 / -698.058)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(95.17, (_GLF_IDENTITY(95.17, 1.0 * (95.17))) - 0.0))), bvec2(true, false))))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7.7 / -698.058)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(95.17)), bvec2(true, false)))), min(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7.7 / -698.058)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(95.17)), bvec2(true, false)))), vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7.7 / -698.058)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(95.17)), bvec2(true, false)))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true && (false)), false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))
    return;
   barrier();
  }
 GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w = GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) || false), false, false, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, log(1.0), 1.0), (true ? mat3x4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, log(1.0), 1.0) : _GLF_FUZZED(mat3x4(8.2, -727.335, 71.58, 9552.7693, -4.8, -6486.1622, -541.566, 3.2, -5.8, -23.71, -7.9, 5781.7633)))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))), false || (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), false, false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             return;
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))).y)), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) || false))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(-79.56, max(-79.56, -79.56)) - 8971.9385)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_FUZZED(-4.2)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.6, 4.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.9)), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.2)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.7)), bool(false)))) / 1.0)), (true ? clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.2)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-3.7, max(-3.7, -3.7)))), bool(false)))) / 1.0)) : _GLF_FUZZED(float(true)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), false, true), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
  }
 GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.w = subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.z = GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.w, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.z = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id, min(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id, GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id)).w, (_GLF_IDENTITY(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id, min(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id, GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id)).w) - 0u), (GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.z = GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.w) << (1u ^ 1u)), (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.z = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id, min(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id, GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id)).w, (_GLF_IDENTITY(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id, min(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id, GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id)).w) - 0u), (GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.z = GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.w) << (1u ^ 1u))) + 0u)));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.x = num_workgroup;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / cos(vec2(0.0, 0.0))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) && true, true && (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, length(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0))), mix(float(_GLF_FUZZED(-7084.1005)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, length(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0)))), bool(true)))))))) && true, bool(bool((! ((injectionSwitch.x > injectionSwitch.y))) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u, min(false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u, false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u))), (uint(_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u, min(false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u, false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : _GLF_IDENTITY(0u, uint(uint(0u))))))) / 1u))))), 0u, 0u), max((gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u)), 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY((gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u)), 0u, 0u), clamp((gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u)), 0u, 0u), _GLF_IDENTITY((gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u)), 0u, 0u), clamp((gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u), max((false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u), ((false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u)) | ((false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u)))))), 0u, 0u), (gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u)), 0u, 0u), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))))) >> uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : _GLF_IDENTITY(0u, uint(uint(0u))))), 0u, 0u))), (gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size[3]) : 0u)), 0u, 0u)))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8205.3111), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.9)), bvec2(true, false))))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, ~ (~ (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))).x, ~ (~ (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y, ~ (~ (GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y))) * _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w, 0u + (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w, uint(uvec3(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w, 1u, 0u))))) + GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.z = GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz, ~ (~ (GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz))).xy.y, min(_GLF_IDENTITY(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y, clamp(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y, GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y, GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y)), GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y)) * GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w, ~ (~ (GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y * GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w))), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y, min(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y, _GLF_IDENTITY(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y, (1u ^ 1u) ^ (_GLF_IDENTITY(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y, (GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y, min(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y, _GLF_IDENTITY(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y, (1u ^ 1u) ^ (_GLF_IDENTITY(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y, (GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u) * GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w, ~ _GLF_IDENTITY((~ (GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y * GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((~ (GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y * GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w)), ((~ (GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y * GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w))) / 1u)))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y, min(GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y, GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y)) * _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, max(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, clamp(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size)))), min(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, max(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, clamp(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, max(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, clamp(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size, GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size)))))))).w, _GLF_IDENTITY(~ (~ (GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y * GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w)), (true ? _GLF_IDENTITY(~ (~ (GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y * GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w)), ~ (~ (~ (~ (GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.y * GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w))))) : _GLF_FUZZED((workgroup_id << (-- subgroup_id)))))))) + ((GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.z + _GLF_IDENTITY(1, (1) + 0)) % GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.x = next_virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5458.7931)), bool(false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5458.7931)), bool(false)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5458.7931)), bool(false)))))))), true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0) : _GLF_FUZZED(mat4(-3.9, -6.9, -735.117, -7172.2877, -739.267, 7.5, -5.9, -39.72, 49.40, -648.020, -9340.9023, -62.22, -4.9, 182.211, -65.02, 0.2)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false, true, true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.6))), 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 buf[GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.z] = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) + _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 1), (ivec4(0, 0, 1, 1)) ^ ivec4(0, 0, 0, 0))))))), (0 >> _GLF_IDENTITY(int(7), int(7))) | (~ (0))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-91.27, -2533.7823)))).x, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-91.27, _GLF_IDENTITY(-2533.7823, min(-2533.7823, -2533.7823)))))).x) / 1.0), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))), clamp(_GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))), clamp(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.5), _GLF_FUZZED(88.22)), bvec2(false, false))), injectionSwitch)).x)))))), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))), max(_GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))), min(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, true && (true)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.z + 1 < GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w, ! (_GLF_IDENTITY(! (GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.z + 1 < GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w), ! (! (! (GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.z + 1 < GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w)))))), ! (_GLF_IDENTITY(! (GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.z + 1 < GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w), true && (! (GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.z + 1 < GLF_merged3_0_2_52_2_1_17_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   buf[GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.x] = _GLF_IDENTITY(2, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((2), 0 ^ ((2))))), ~ (~ (_GLF_IDENTITY(2, ~ (~ (2)))))) : _GLF_FUZZED(-13861)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((2), 0 ^ ((2))))), ~ (~ (_GLF_IDENTITY(2, ~ (~ (2)))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((2), 0 ^ _GLF_IDENTITY(((2)), max(((2)), _GLF_IDENTITY(((2)), (false ? _GLF_FUZZED(73023) : ((2))))))))), ~ (~ (_GLF_IDENTITY(2, ~ (~ (2)))))))) : _GLF_FUZZED(-13861))) * (1 ^ (0 ^ 0))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && ((injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, ! (! (false)))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   buf[GLF_merged2_0_3_88_3_1_17GLF_merged2_0_2_52_2_1_11GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idvirtual_gidsubgroup_local_id.xyz.xy.x] = 2;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
