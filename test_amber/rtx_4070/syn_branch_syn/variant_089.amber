#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ! (! ((false)))))))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(false, ! (! (false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), 1.0, 1.0, 1.0, 1.0, sin(0.0))), (float(mat4x2(injectionSwitch.x, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x2(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.8)), float(1.0), bool(true))), 1.0)), 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)))))) + 0.0)) < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(vec2((injectionSwitch)), clamp(vec2((injectionSwitch)), vec2((injectionSwitch)), vec2((injectionSwitch)))))))) - vec2(0.0, 0.0)), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(abs(1.0), 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, exp(abs(0.0)), 0.0)))), max((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 0.0)))), injectionSwitch)).x)) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), false || (! (! (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-3.4), _GLF_IDENTITY(float(mat3x4(_GLF_FUZZED(-3.4), _GLF_IDENTITY(round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), mat4x2(mat4(_GLF_IDENTITY(mat4x2(round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), mix(float(float(_GLF_IDENTITY(mat4x2(round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), mat4x2(mat4(_GLF_IDENTITY(mat4x2(round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), float(_GLF_FUZZED(84.16)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), min(float(mat3x4(_GLF_FUZZED(_GLF_IDENTITY(-3.4, (_GLF_IDENTITY(-3.4, mix(float(-3.4), float(_GLF_FUZZED(-853.018)), bool(false)))) + sqrt(0.0))), round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat3(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-693.766)), float(0.0), bool(true))), 0.0, exp(0.0), 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), float(mat3x4(_GLF_FUZZED(-3.4), round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_FUZZED(-538.906), min(_GLF_FUZZED(-538.906), _GLF_FUZZED(-538.906)))), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))))[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(98.78)), bool(false))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(unpackHalf2x16(subgroup_local_id).t) : clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(98.78)), bool(false))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) + abs(0.0)), max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), _GLF_IDENTITY(false || (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))), _GLF_IDENTITY(bool(bvec3(false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.2)), float(injectionSwitch.y), bool(true))))), true)), (_GLF_IDENTITY(bool(bvec3(false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(40.22, 7.6, 44.33).r)), bool(false))) < injectionSwitch.y)), true)), ! (! (bool(bvec3(false || (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), true)), (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (false)), bool(bool(bool(! (false))))))))), true))) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(bvec2(_GLF_IDENTITY(! (false), bool(bool(! (false)))), false)))) && true))), true)), (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), _GLF_IDENTITY(true, ! (! (true)))))) && true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true))))), true)), (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), true))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-47.91), min(_GLF_FUZZED(-47.91), _GLF_FUZZED(-47.91))), max(true ? injectionSwitch.x : _GLF_FUZZED(-47.91), true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-47.91, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(-47.91, 1.0, determinant(mat4(abs(0.0), 0.0, log(1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) * 1.0)))), _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0 * (clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-77.35)))))), float(_GLF_FUZZED(-8.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(14.27)), bool(false))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED((471.431 / -442.016)), (vec2(1.0, 0.0))[1]), vec2((_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY((vec2(1.0, 0.0)), vec2(vec4(_GLF_IDENTITY((vec2(1.0, 0.0)), min((vec2(1.0, 0.0)), (vec2(1.0, 0.0)))), 0.0, 1.0))) - sqrt(vec2(0.0, 0.0))))[0], _GLF_FUZZED(-4.0)), bvec2(true, false)))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3605.2129)), float(0.0), bool(true)))), 0.0)), 0.0, 1.0, 0.0, cos(0.0), 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(-47.91, 1.0, determinant(mat4(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(_GLF_IDENTITY(278.877, (278.877) - abs(0.0))))), 0.0, log(1.0), 0.0, 1.0, determinant(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - determinant(mat4(tan(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.8)))), float(_GLF_FUZZED(8969.0999)), bool(false)))) / 1.0), injectionSwitch.y), mix(float(_GLF_FUZZED(-3204.6361)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, length(vec3(0.0, 0.0, 0.0)), abs(0.0), 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.7)), float(1.0), bool(true))), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), exp(0.0), 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(-47.91, 1.0, determinant(mat4(_GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), 0.0, log(1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-92.53) : 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), exp(0.0), 0.0)), 0.0, 1.0, 0.0, cos(0.0), 0.0), mat4x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0) + (mat4x2(-47.91, 1.0, determinant(mat4(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (abs(0.0)) / cos(0.0)), 0.0 + (abs(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0)))), 0.0, log(1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), exp(0.0), 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-78.58)), float(0.0), bool(true))), 1.0, 0.0, cos(0.0), 0.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(-2286.1958, max(_GLF_IDENTITY(-2286.1958, clamp(-2286.1958, -2286.1958, -2286.1958)), -2286.1958)))), bool(false))))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.4), _GLF_FUZZED(359.310)), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true)))))), injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.4), _GLF_FUZZED(359.310)), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true)))))), injectionSwitch)).y, 1.0, 0.0, 0.0)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-47.91))) > injectionSwitch.y), true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false)))) || false))))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(atomicAdd(workgroup_size, workgroup_base)) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u))), workgroup_base + subgroup_id * subgroup_size)))) + subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) + 0u)) << 0u), 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (1u)), 1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / _GLF_IDENTITY(1u, ~ (~ (1u)))), 0u, 1u)) * uvec3(1u, 1u, 1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(0u, (0u) - (0u | 0u)), 1u)) * uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u)) * uvec3(1u, 1u, 1u))))))), uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), 0u)))), ~ (~ (~ (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u), 0u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) ^ 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u)) * uvec3(1u, 1u, 1u))), ~ (~ (~ (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u))))))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u), 0u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) ^ 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u)) * uvec3(1u, 1u, 1u))), ~ (~ (~ (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u), 0u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) ^ 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u)) * uvec3(1u, 1u, 1u))), ~ (~ (~ (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u))))))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u), 0u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) ^ 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u)) * uvec3(1u, 1u, 1u))), ~ (~ (~ (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u), 0u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) ^ 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u)) * uvec3(1u, 1u, 1u))), ~ (~ (~ (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u))))))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))), 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / _GLF_IDENTITY(1u, (1u) | 0u)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u)) * uvec3(1u, 1u, 1u))), ~ (~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u)), min(~ (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u)), _GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u)), max(~ (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u)), ~ (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u)))))))))))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) << 0u)), ((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) << 0u))) | 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, _GLF_IDENTITY(1u, (1u) ^ 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(0u, (0u) << ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u)))), 1u)) * uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u))), ~ (~ (~ (uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, (false ? _GLF_FUZZED(max(subgroup_id, 104416u)) : _GLF_IDENTITY((subgroup_id) / 1u, uint(uvec4((subgroup_id) / 1u, 0u, 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), 0u, 1u))))))))), _GLF_IDENTITY(0u, (0u) >> 0u)))))) * subgroup_size + subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) / (1u | 1u))) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)) - 0u)))))), (workgroup_base + subgroup_id * subgroup_size) | 0u) + subgroup_local_id)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) << 0u) + subgroup_local_id), (max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u)), (subgroup_id) / _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) | (_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) - 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u)), (subgroup_id) / _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) | (_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u)), (subgroup_id) / _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) | (_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) - 0u))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u)), (subgroup_id) / _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) | (_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u)), (subgroup_id) / _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) | (_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) - 0u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u)), (subgroup_id) / _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) | (_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) - 0u))))))))), 0u, 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, _GLF_IDENTITY(1u, uint(uint(1u)))), 0u)))), 0u | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u)), (subgroup_id) / _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) | (_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) - 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u)), (subgroup_id) / _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) | (_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u)), (subgroup_id) / _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) | (_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) - 0u))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u)), (subgroup_id) / _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) | (_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u)), (subgroup_id) / _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) | (_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) - 0u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u)), (subgroup_id) / _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) | (_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) - 0u))))))))), 0u, 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, _GLF_IDENTITY(1u, uint(uint(1u)))), 0u))))))) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u)), (subgroup_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))), 0u ^ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))) | (_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) - 0u)))), 0u, 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, _GLF_IDENTITY(1u, uint(uint(1u)))), 0u))))) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u)), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) | (subgroup_id))) >> 0u)) / _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) | (_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) - 0u)))), 0u, 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u, _GLF_IDENTITY(1u, uint(uint(1u)))), 0u))))) * subgroup_size)) + subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) * 1u)) * 1u) + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) * 1u)) * 1u) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) * 1u)) * 1u) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) * 1u)) * 1u) + subgroup_local_id) / 1u)))), ((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) * 1u)) * 1u) + subgroup_local_id)) + 0u)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) << _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) + 0u) | (0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u * (subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) && true)), bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-38.79)), bool(false)))))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0)))).x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.8)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, abs(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))).y))))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) / 1u) < subgroup_size)
  {
   int i = 0;
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0, exp(0.0) * (1.0)) * (injectionSwitch.y), (true ? 1.0 * (injectionSwitch.y) : _GLF_FUZZED(-8958.9278))))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) * (injectionSwitch.y) : _GLF_FUZZED(-8958.9278))))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(255.975, -2300.2392)) : injectionSwitch)))).y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool((false)))))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(-82.92)), _GLF_IDENTITY(max((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(-82.92)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(-82.92))), min(max((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(-82.92)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(-82.92))), max((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(-82.92)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(-82.92))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
