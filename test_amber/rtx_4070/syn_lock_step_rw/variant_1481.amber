#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 vec3 _f0;
 mat3 _f1;
 uvec3 _f2;
 mat2x4 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 mat4x3 _f1;
 _GLF_struct_5 _f2;
 uvec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 mat2x3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 vec2 _f1;
 uint _f2;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
} ;

struct _GLF_struct_3 {
 uint num_workgroup;
 _GLF_struct_0 _f0;
 vec4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 bvec3 _f2;
 uint _f3;
 mat2x4 _f4;
 _GLF_struct_6 _f5;
 bvec2 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, cos(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0))), clamp(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, cos(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, cos(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0))), max(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, cos(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0))), vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, cos(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0))))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, cos(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0))), (vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, cos(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0)))) / vec2(1.0, 1.0))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), min(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), max(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))))))), (false ? _GLF_FUZZED((ivec3(13652, 15549, -92900) >> ivec3(93844, 23683, 66659))[2]) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), min(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), max(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), min(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), max(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), min(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), max(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (~ (0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, ~ (~ (0)))), (clamp(0, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, ~ (~ (0))))) >> 0)), true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) * (1 | 1)), _injected_loop_counter, _injected_loop_counter)) > _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 0)), min(int(ivec3(0, 0, 0)), int(ivec3(0, 0, 0)))))), ((0)) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), 0 ^ (~ ((0)))))), ~ (~ (_GLF_IDENTITY((0), max((0), (0)))))))))))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(-93587)) : 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))), 1 * (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))))) >> 0))))))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) * (1 | 1)), _injected_loop_counter, _injected_loop_counter)) > _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 0)), min(int(ivec3(0, 0, 0)), int(ivec3(0, 0, 0)))))), ((0)) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), 0 ^ (~ ((0)))))), ~ (~ (_GLF_IDENTITY((0), max((0), (0)))))))))))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(-93587)) : 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))), 1 * (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))))) >> 0))))))), bool(bool(true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) * (1 | 1)), _injected_loop_counter, _injected_loop_counter)) > _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 0)), min(int(ivec3(0, 0, 0)), int(ivec3(0, 0, 0)))))), ((0)) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), 0 ^ (~ ((0)))))), ~ (~ (_GLF_IDENTITY((0), max((0), (0)))))))))))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(-93587)) : 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))), 1 * (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))))) >> 0)))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), min(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, ~ (~ (0))))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ((0) - 0) + 0)), _GLF_IDENTITY(0, ~ (~ (0))))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) * (1 | 1)), _injected_loop_counter, _injected_loop_counter)) > _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), (0 | (0)) * int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(0, 0, 0)), clamp(int(ivec3(0, 0, 0)), int(ivec3(0, 0, 0)), _GLF_IDENTITY(int(ivec3(0, 0, 0)), max(int(ivec3(0, 0, 0)), int(ivec3(0, 0, 0)))))), min(_GLF_IDENTITY(int(ivec3(0, 0, 0)), (int(ivec3(0, 0, 0))) ^ (0 | 0)), int(ivec3(0, 0, 0)))))), ((0)) | (_GLF_IDENTITY(_GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), 0 ^ (~ ((0)))))), ~ (~ (_GLF_IDENTITY((0), max((0), (0)))))))))))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(-93587)) : 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ _GLF_IDENTITY((0), clamp((0), (0), (0)))), (~ (0)), (~ (_GLF_IDENTITY(0, (0) >> 0)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))), 1 * (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))), 1 * (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))), 1 * (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))))))) >> 0)))))))), false)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)), true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_3(gl_NumWorkGroups.x, _GLF_struct_0(bvec3(_GLF_IDENTITY(true, (true) || false))), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5716.0098)), float(1.0), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY(! (bool(true)), (! (bool(_GLF_IDENTITY(true, ! (! (true)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_struct_1(mat4x2(1.0)), _GLF_struct_2(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)) : _GLF_FUZZED(447.382)))), float(_GLF_FUZZED(360.275)), bool(false)))), vec2(1.0), 1u)), _GLF_struct_4(uvec3(1u), mat2x3(1.0), mat2(1.0)), bvec3(true), 1u, mat2x4(1.0), _GLF_struct_6(mat4x2(1.0), mat4x3(1.0), _GLF_struct_5(vec3(1.0), mat3(1.0), uvec3(1u), mat2x4(1.0), mat3x2(1.0)), uvec4(1u), ivec2(1)), bvec2(true));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(196.404), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-0.7)), bool(false)))), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[0], _GLF_FUZZED(8.6)), bvec2(true, false))).x > injectionSwitch.y)))))))))) && true))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), float(mat2x4(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))), false))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), bool(bool(! (_GLF_WRAPPED_IF_TRUE(true))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true)))))), false, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))), true))) || false)))), false, false, false)), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))), _GLF_IDENTITY(true, (true) && true)))), false, false, false)))), ! (_GLF_IDENTITY(! ((! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))), _GLF_IDENTITY(true, (true) && true)))), false, false, false))))), bool(bvec4(! ((! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))), _GLF_IDENTITY(true, (true) && true)))), false, false, false))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))) && true, ! (! ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false)), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false)), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false)), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))) || false))))))))) && true)))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), false || _GLF_IDENTITY((bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec3(bool(bvec4(false, true, false, true)), false, true))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, true))) && true)))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))))), false)))) && true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))) && true), true, true, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), true && (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))) && true))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), (! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ((bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true))) && true))))))
          barrier();
        }
      }
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id))) ^ 0u), 0u | (workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id))) ^ 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))) && true))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) - 0u) + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), (uint(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))) ^ 0u))), min(_GLF_IDENTITY((true ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), (uint(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))) ^ 0u))), ((true ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), (uint(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))) ^ 0u)))) << 0u), _GLF_IDENTITY((true ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), (uint(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))) ^ 0u))), ~ (~ ((true ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), (uint(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))) ^ 0u)))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id)))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id)))), max(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(subgroup_local_id)), max((true ? workgroup_base : _GLF_FUZZED(subgroup_local_id)), (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id)))))), ~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id)))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))) << 0u))) + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), ~ (~ (((workgroup_base + subgroup_base))))) | (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(((workgroup_base + subgroup_base)), min(((workgroup_base + subgroup_base)), ((workgroup_base + subgroup_base)))) << 0u)))) + subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u), (_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u)) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u), (_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u), (_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u), (_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u), (_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u)) ^ 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u), (_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u)) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u), (_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u), (_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u), (_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u), (_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id), ((workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id)) << 0u)) ^ 0u))))))) ^ 0u))) + 0u))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size)), ((subgroup_local_id + 1) % subgroup_size) << 0u)), max(_GLF_IDENTITY((0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size)), ((subgroup_local_id + 1) % subgroup_size) << 0u)), 0u + ((0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size)), ((subgroup_local_id + 1) % subgroup_size) << 0u)))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size)), ((subgroup_local_id + 1) % subgroup_size) << 0u)))), ~ (_GLF_IDENTITY(~ ((0u | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u))))) ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) << 0u, (((subgroup_local_id + 1) % subgroup_size) << 0u) ^ 0u)))), (_GLF_IDENTITY(~ ((0u | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u))))) ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size) << 0u, (((subgroup_local_id + 1) % subgroup_size) << 0u) ^ 0u)))), (~ ((0u | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) << 0u), 0u))))) ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) << 0u, (((subgroup_local_id + 1) % subgroup_size) << 0u) ^ _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u + (0u)))))))))) ^ 0u)) >> 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)), (_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)), (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(-90.43, 9.3))))) + vec2(0.0, 0.0))) * vec2(1.0, 1.0)), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), clamp((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mix(vec2(_GLF_FUZZED(float(28496)), (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), vec2((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(-8.3)), bvec2(true, false)))), (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))))), vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(70.17, 5.7)) : _GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))))), vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))))))), cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))))), vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))))))), ((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))))), vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), min(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0), vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0))))))))) * vec2(1.0, 1.0)))))) + vec2(0.0, 0.0)), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)), true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-2.5) : (injectionSwitch)[0])) : _GLF_FUZZED(4.2))), _GLF_FUZZED(99.57)), vec2(_GLF_FUZZED(-66.14), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), clamp((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, length(abs(vec3(0.0, 0.0, 0.0)))))))))), (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)))), 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))))))).x > injectionSwitch.y, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), true, _GLF_IDENTITY(false, ! (! (false))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), false || (! _GLF_IDENTITY(((! (false))), ! (! (((! (false))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(true, (true) && true))), true), false))))))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), (bool(true)) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, true), true))))))))))))))))) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), true, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true)))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, true), true))))))))))), true && (_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, true), true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), (bool(_GLF_IDENTITY(true, bool(bool(true))))) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) && true), (bool(true)) || false), true, true), true))))))))))))))))))))) && true), true)))))), true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true, true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false)))), true, true))), bool(bvec3(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), true, true)))))), (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))) && _GLF_IDENTITY(true, (true) || false)), true, false))))), bool(bvec3((! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false)))), true, true))), bool(bvec3(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), true, true)))))), (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))) && _GLF_IDENTITY(true, (true) || false)), true, false))))), false, true))) || false)), true, false, true))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false)))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), true && ((! (false)))))))) && true)) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))) || false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.8)), bool(false)))))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 1.0)), (float(vec2(0.0, 1.0))) / 1.0))))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(17.52)), bool(false))), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED((_GLF_IDENTITY(-5.0 - 7.9, (-5.0 - 7.9) - 0.0)))), vec2(_GLF_FUZZED(3.7), (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 1.0)), 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED((-5.0 - 7.9))), vec2(_GLF_FUZZED(3.7), (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED((-5.0 - 7.9))), vec2(_GLF_FUZZED(3.7), (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED((-5.0 - 7.9))), vec2(_GLF_FUZZED(3.7), (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) - vec2(0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))))), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-59.79)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), float(mat2(float(0.0), 0.0, 0.0, 0.0)))))), bool(true)))))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-996.391) : 0.0))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(-89.47))), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), min(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), ~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))], _GLF_FUZZED((-5.0 - 7.9))), vec2(_GLF_FUZZED(3.7), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), clamp(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))))))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))) / 1.0)))))[1], ((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), clamp(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))))))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))) / 1.0)))))[1]) / 1.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - 0.0), 0.0))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(exp2(-2396.7482)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.8)), bool(false))), 0.0, 1.0, sin(0.0), 0.0, determinant(mat3(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED((-5.0 - 7.9))), vec2(_GLF_FUZZED(3.7), (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 0.0, 0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x3(vec2(1.0, 1.0), 1.0, 1.0, 1.0, 0.0))), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED((-5.0 - 7.9))), vec2(_GLF_FUZZED(3.7), (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), _GLF_IDENTITY((vec3(injectionSwitch, 1.0)) * mat3(1.0), vec3(1.0, 1.0, 1.0) * ((vec3(injectionSwitch, 1.0)) * mat3(1.0))))), min(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), _GLF_IDENTITY((vec3(injectionSwitch, 1.0)) * mat3(1.0), vec3(1.0, 1.0, 1.0) * ((vec3(injectionSwitch, 1.0)) * mat3(1.0))))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), _GLF_IDENTITY((vec3(injectionSwitch, 1.0)) * mat3(1.0), vec3(1.0, 1.0, 1.0) * ((vec3(injectionSwitch, 1.0)) * mat3(1.0)))))))), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true)))) - vec2(0.0, 0.0)), length(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-952.527, -6.2)) : vec2(0.0, 0.0)))), 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((-3.7)) : 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.4) : 0.0)))), 0.0)), 0.0))))[0], _GLF_FUZZED((-5.0 - 7.9))), vec2(_GLF_FUZZED(3.7), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), ((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), injectionSwitch.y), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - sqrt(vec2(0.0, 0.0)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)], uint(1), _GLF_IDENTITY(4, (4) >> 0), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.2)))))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))[1])).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), mix(float(_GLF_FUZZED(6.2)), float(float(_GLF_FUZZED(-3.3))), bool(true))), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
