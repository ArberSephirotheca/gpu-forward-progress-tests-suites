#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uint subgroup_base;
 bvec3 _f0;
 uint _f1;
 bvec4 _f2;
 vec2 _f3;
 vec3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           return;
          }
        }
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), exp(0.0)), clamp(vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), exp(0.0)), vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), exp(0.0)), vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), exp(0.0)))))) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))) || false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-305.540)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))) && true)) && true)))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true, false))))))));
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(~ (~ (int(7))), (_GLF_IDENTITY(~ (~ (int(7))), (~ (~ (int(7)))) ^ 0)) - 0)))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
         break;
        }
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(false)))), false || (! (bool(bool(_GLF_DEAD(false))))))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), false || ((bool(bool(_GLF_DEAD(false)))))), _GLF_IDENTITY(false, false || (false)) || (! (bool(bool(_GLF_DEAD(false))))))))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        break;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))
        {
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
          {
           return;
           if(_GLF_DEAD(false))
            break;
          }
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
        continue;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true)))) || false), (! _GLF_IDENTITY(((true) || false), bool(_GLF_IDENTITY(bvec2(((true) || false), false), bvec2(bvec4(bvec2(((true) || false), false), true, false)))))) || false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY((! ((true) || false)), ! (! ((! ((true) || false))))) || false))))))))))))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true)))) || false), (! _GLF_IDENTITY(((true) || false), bool(_GLF_IDENTITY(bvec2(((true) || false), false), bvec2(bvec4(bvec2(((true) || false), false), true, false)))))) || false)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true)))) || false), (! _GLF_IDENTITY(((true) || false), bool(_GLF_IDENTITY(bvec2(((true) || false), false), bvec2(bvec4(bvec2(((true) || false), false), true, false)))))) || false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY((! ((true) || false)), ! (! ((! (_GLF_IDENTITY((true) || false, ((true) || false) || false)))))) || false))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true)))) || false), (! _GLF_IDENTITY(((true) || false), bool(_GLF_IDENTITY(bvec2(((true) || false), false), bvec2(bvec4(bvec2(((true) || false), false), true, false)))))) || false)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true)))) || false), (! _GLF_IDENTITY(((true) || false), bool(_GLF_IDENTITY(bvec2(((true) || false), false), bvec2(bvec4(bvec2(((true) || false), false), true, false)))))) || false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY((! ((true) || false)), ! (! ((! (_GLF_IDENTITY((true) || false, ((true) || false) || false)))))) || false))))))))))))), false || ((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true)))) || false), (! _GLF_IDENTITY(((true) || false), bool(_GLF_IDENTITY(bvec2(((true) || false), false), bvec2(bvec4(bvec2(((true) || false), false), true, false)))))) || false)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true)))) || false), (! _GLF_IDENTITY(((true) || false), bool(_GLF_IDENTITY(bvec2(((true) || false), false), bvec2(bvec4(bvec2(((true) || false), false), true, false)))))) || false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY((! ((true) || false)), ! (! ((! (_GLF_IDENTITY((true) || false, ((true) || false) || false)))))) || false)))))))))))))))))) && true))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))) || false, false || (_GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))) || false, bool(bvec4(_GLF_IDENTITY((true), ! (! ((true)))) || false, false, true, true)))))), (! _GLF_IDENTITY(((true) || false), bool(_GLF_IDENTITY(bvec2(((true) || false), false), bvec2(bvec4(bvec2(((_GLF_IDENTITY(true, ! (! (true)))) || false), false), true, false)))))) || false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY((! ((true) || false)), ! (! ((! ((true) || false))))) || false))))))))))))) && true)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec2((true), true)))) || false) || false, ! (_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))).y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY((true), _GLF_IDENTITY(! (! ((true))), bool(bvec4(! (! ((true))), true, false, false)))) || false), (! _GLF_IDENTITY(((true) || false), bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(true, true && (true))) || false), false), bvec2(bvec4(bvec2(((true) || false), false), true, false)))))) || false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY((! ((true) || false)), ! (! ((! ((true) || false))))) || false), (_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY((! ((true) || false)), ! (! ((! (_GLF_IDENTITY((true) || false, bool(bvec2((true) || false, true)))))))) || false)) || false)))))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec2((true), true)))) || false) || false, ! (_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))).y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY((true), _GLF_IDENTITY(! (! ((true))), bool(bvec4(! (! ((true))), true, false, false)))) || false), (! _GLF_IDENTITY(((true) || false), bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(true, true && (true))) || false), false), bvec2(bvec4(bvec2(((true) || false), false), true, false)))))) || false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY((! ((true) || false)), ! (! ((! ((true) || false))))) || false), (_GLF_IDENTITY(! ((true) || false), _GLF_IDENTITY((! ((true) || false)), ! (! ((! (_GLF_IDENTITY((true) || false, bool(bvec2((true) || false, true)))))))) || false)) || false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true)), true, true))))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (19682 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (4) / 1), 0, 0, 1))), 1, 1), clamp(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1), ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, ~ (~ (0))), 0, 1))), 1, 1), ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), clamp((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(512.956)), bool(false))), 1.0, 0.0, cos(abs(0.0)), abs(1.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7318.2355) : 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, sin(0.0), 0.0))), injectionSwitch[1])).y)))), clamp(int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max(min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(-905.062) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? 3.9 : 5644.0260))), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true)))), _GLF_ONE(1.0, injectionSwitch.y)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(39.97)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))), float(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1421.0899) : 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))))) ^ _GLF_IDENTITY(0, ~ (~ (0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? 3.9 : 5644.0260))), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true)))), _GLF_ONE(1.0, injectionSwitch.y)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(39.97)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))), float(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1421.0899) : 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y))))) ^ _GLF_IDENTITY(0, ~ (~ (0))))) << 0))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0 : _GLF_FUZZED(-11845))), 1))))), _GLF_IDENTITY(int(4), (int(4)) - 0))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9580.7226)))), float(_GLF_FUZZED(vec3(1416.0539, -24.49, 7401.2545).z)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, _GLF_IDENTITY(1, (1) ^ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))) >> _GLF_IDENTITY(int(0), int(0)))))))))) ^ 0)), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) - 0, clamp((int(4)) - 0, (int(4)) - 0, (int(4)) - 0))))), 1 * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, _GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), clamp(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), ~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), ~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))))), 1)))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * 1), int(4))), (int(4)) - 0))))))), 1), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (true ? int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(-20986))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0, 1))), 1, 1)), (int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0, 1))), 1, 1))) | (int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0, 1))), 1, 1)))))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), clamp((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-68315) : _GLF_IDENTITY(4, max(4, 4)))), int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0), (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0)) / 1))) : 1)))))), ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0), (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0)) / 1))) : 1))))))) >> (0 << _GLF_IDENTITY(int(0), int(0)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), ((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_injected_loop_counter --)) : 1)))))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_injected_loop_counter --)) : 1)))))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_injected_loop_counter --)) : 1)))))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - _GLF_IDENTITY(0, clamp(0, 0, 0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_injected_loop_counter --)) : 1)))))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))) << 0)))) << 0))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0), 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0)))) << 0), 1 * _GLF_IDENTITY(((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-8708.6615)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), _GLF_ONE(1.0, injectionSwitch.y)))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(4, 0, 0, 1), (true ? ivec4(4, 0, 0, 1) : _GLF_FUZZED(ivec4(878, 50267, -30701, -65124)))))))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(4, 0, 0, 1), (true ? ivec4(4, 0, 0, 1) : _GLF_FUZZED(ivec4(878, 50267, -30701, -65124)))))))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(4, 0, 0, 1), (true ? ivec4(4, 0, 0, 1) : _GLF_FUZZED(ivec4(878, 50267, -30701, -65124)))))))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0)))))), (((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-8708.6615)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), _GLF_ONE(1.0, injectionSwitch.y)))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(4, 0, 0, 1), (true ? ivec4(4, 0, 0, 1) : _GLF_FUZZED(ivec4(878, 50267, -30701, -65124)))))))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(4, 0, 0, 1), (true ? ivec4(4, 0, 0, 1) : _GLF_FUZZED(ivec4(878, 50267, -30701, -65124)))))))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(4, 0, 0, 1), (true ? ivec4(4, 0, 0, 1) : _GLF_FUZZED(ivec4(878, 50267, -30701, -65124)))))))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))))))) / 1)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (int(4))), (int(4)) - 0))), clamp((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-45709)))))), (int(4)) - 0))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, max(4, 4))))), (int(4)) - 0))), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)), int(int(int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1))))))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) - 0, ~ (_GLF_IDENTITY(~ ((int(4)) - 0), clamp(~ ((int(4)) - 0), ~ ((int(4)) - 0), ~ ((int(4)) - 0)))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) - 0, ~ (_GLF_IDENTITY(~ ((int(4)) - 0), clamp(~ ((int(4)) - 0), ~ ((int(4)) - 0), ~ ((int(4)) - 0)))))), ~ (~ (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) - 0, ~ (_GLF_IDENTITY(~ ((int(4)) - 0), clamp(~ ((int(4)) - 0), ~ ((int(4)) - 0), ~ ((int(4)) - 0))))))))))))), max((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (ivec4(4, 0, 0, 1)) << ivec4(0, 0, 0, 0)))), 1, 1), (ivec3(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (ivec4(4, 0, 0, 1)) << ivec4(0, 0, 0, 0)))), 1, 1)) << ivec3(0, 0, 0))))) ^ 0)), _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY((int(4)) - 0, ~ (_GLF_IDENTITY(~ ((int(4)) - 0), clamp(~ ((int(4)) - 0), ~ ((int(4)) - 0), ~ ((int(4)) - 0))))), max(_GLF_IDENTITY((int(4)) - 0, ~ (_GLF_IDENTITY(~ ((int(4)) - 0), clamp(~ ((int(4)) - 0), ~ ((int(4)) - 0), ~ ((int(4)) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY((int(4)) - 0, ~ (_GLF_IDENTITY(~ ((int(4)) - 0), clamp(~ ((int(4)) - 0), ~ ((int(4)) - 0), ~ ((int(4)) - 0))))), (true ? _GLF_IDENTITY((int(4)) - 0, ~ (_GLF_IDENTITY(~ ((int(4)) - 0), clamp(~ ((int(4)) - 0), ~ ((int(4)) - 0), ~ ((int(4)) - 0))))) : _GLF_FUZZED(54816)))))))), (int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true))) ? 1.0 : _GLF_FUZZED(53.75))), injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(109.802) : _GLF_ONE(1.0, injectionSwitch.y), min(false ? _GLF_FUZZED(109.802) : _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(109.802) : _GLF_ONE(1.0, injectionSwitch.y)))), min((_GLF_IDENTITY(false ? _GLF_FUZZED(109.802) : _GLF_ONE(1.0, injectionSwitch.y), min(false ? _GLF_FUZZED(109.802) : _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(109.802) : _GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(109.802) : _GLF_ONE(1.0, injectionSwitch.y), min(false ? _GLF_FUZZED(109.802) : _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(109.802) : _GLF_ONE(1.0, injectionSwitch.y)))))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))), ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1))))) / 1) ^ 0)), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) - 0, ~ (_GLF_IDENTITY(~ ((int(4)) - 0), clamp(~ ((int(4)) - 0), ~ ((int(4)) - 0), ~ ((int(4)) - 0)))))))))), 1 * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1), (ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)) | (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 0 ^ (_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))))), _GLF_IDENTITY(1, (1) / 1), 1)))))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))))))))), 1)))), min(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), 0 + ((int(4)))) - 0))), clamp((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-934.872, -8269.9290)))).y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))), ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1))))) << 0) ^ 0)), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) ^ 0)) - _GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0 + (_GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(20.17)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))) + (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / determinant(mat4(1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), bool(true))))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(vec3(7.1, 905.836, -18.25)[0]) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1), max(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1), ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 ^ (0))))), (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1))))), int(ivec4(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(4099) : 0), max((false ? _GLF_FUZZED(4099) : 0), (false ? _GLF_FUZZED(4099) : 0)))), 0, 1))), 1, 1), max(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1), ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, (1 ^ (32591 & 0)))))) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(4099), (_GLF_FUZZED(4099)) * ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)))) : 0)), 0, 1))), 1, 1)))) ^ 0, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(4099), (_GLF_FUZZED(4099)) * ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)))) : 0)), 0, 1))), 1, 1)))) ^ 0, ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(4099), (_GLF_FUZZED(4099)) * ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)))) : 0)), 0, 1))), 1, 1)))) ^ 0) * 1)))))), (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, max(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), min((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << 0))))), max(_GLF_IDENTITY(ivec4(0, 0, (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), int(ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ~ (~ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), 1, 0, 1))), min((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << 0))))), ivec4(0, 0, 0, 0) | (ivec4(0, 0, (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0) | 0), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), min((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << 0))))))), ivec4(0, 0, (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (true ? (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 | (3))), int(3))) >> _GLF_IDENTITY(int(3), int(3)) : _GLF_FUZZED(_injected_loop_counter))), min((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << 0))))))))))), 0, 1))), 1, 1)))) ^ 0))) | (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(48209) : _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), (true ? _GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))) : _GLF_FUZZED(-96392)))))))), (_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1)))) - 0), 1, 1)))) ^ 0))))), 0 ^ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)))))) ^ 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), _GLF_IDENTITY(1, max(1, 1)), 1)))) ^ 0, ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), _GLF_IDENTITY(1, max(1, 1)), 1)))) ^ 0) * 1)))) | (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 0 | (4))))), int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1)))) ^ 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 0)))) * 1))))), _GLF_IDENTITY((false ? _GLF_FUZZED(4099) : 0), 0 ^ ((false ? _GLF_FUZZED(4099) : 0)))), _GLF_IDENTITY(0, (0) >> 0), 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(0, 0, 1, 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(ivec4(0, 0, 1, 0)) : _GLF_FUZZED(_injected_loop_counter))), max(int(ivec4(0, 0, 1, 0)), int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) >> ivec4(0, 0, 0, 0)))))), (false ? _GLF_FUZZED(4099) : 0)), 0, _GLF_IDENTITY(1, min(1, 1))))), 1, 1)))) ^ 0)), min(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(0, 0, 1, 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(ivec4(0, 0, 1, 0)) : _GLF_FUZZED(_injected_loop_counter))), max(int(ivec4(0, 0, 1, 0)), int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) >> ivec4(0, 0, 0, 0)))))), (false ? _GLF_FUZZED(4099) : 0)), 0, _GLF_IDENTITY(1, min(1, 1))))), 1, 1)))) ^ 0)), int(_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(0, 0, 1, 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(ivec4(0, 0, 1, 0)) : _GLF_FUZZED(_injected_loop_counter))), max(int(ivec4(0, 0, 1, 0)), int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) >> ivec4(0, 0, 0, 0)))))), (false ? _GLF_FUZZED(4099) : 0)), 0, _GLF_IDENTITY(1, min(1, 1))))), 1, 1)))) ^ 0))), ~ (~ (int(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(0, 0, 1, 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(ivec4(0, 0, 1, 0)) : _GLF_FUZZED(_injected_loop_counter))), max(int(ivec4(0, 0, 1, 0)), int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) >> ivec4(0, 0, 0, 0)))))), (false ? _GLF_FUZZED(4099) : 0)), 0, _GLF_IDENTITY(1, min(1, 1))))), 1, 1)))) ^ 0)))))))), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(0, 0, 1, 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(ivec4(0, 0, 1, 0)) : _GLF_FUZZED(_injected_loop_counter))), max(int(ivec4(0, 0, 1, 0)), int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) >> ivec4(0, 0, 0, 0)))))), (false ? _GLF_FUZZED(4099) : 0)), 0, _GLF_IDENTITY(1, min(1, 1))))), 1, 1)))) ^ 0))))) | (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1)))) ^ 0))), ((int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(0, 0, 1, 0)), max(int(ivec4(0, 0, 1, 0)), int(ivec4(0, 0, 1, 0)))), (_GLF_IDENTITY(int(ivec4(0, 0, 1, 0)), max(int(ivec4(0, 0, 1, 0)), int(ivec4(0, 0, 1, 0))))) << 0)), (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1)))) ^ 0))) | (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1)))) ^ 0)))) | ((int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 1, 0)), max(int(ivec4(0, 0, 1, 0)), int(ivec4(0, 0, 1, 0))))), (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, _GLF_IDENTITY(1, (1) - 0))))) ^ 0))) | (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1)))) ^ 0))))))), 0 ^ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1), (_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1), (ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1)) | (ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1)))) | ivec4(0, 0, 0, 0)))), 1, 1)))) ^ _GLF_IDENTITY(0, max(0, 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (0 ^ 0) ^ _GLF_IDENTITY((4), 0 ^ ((4)))), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 1, 1, (0 << _GLF_IDENTITY(int(5), int(5)))), min(ivec4(_GLF_IDENTITY(0, (0) | (0)), 1, 1, (0 << _GLF_IDENTITY(int(5), int(5)))), ivec4(_GLF_IDENTITY(0, (0) | (0)), 1, 1, (0 << _GLF_IDENTITY(int(5), int(5)))))))) + (4)))), (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1)), min(int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1)), int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))))), 1, 1)))) ^ 0))) | (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), _GLF_IDENTITY(1, (1) << 0), 1)))) ^ 0))))))))), (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1)))) ^ 0)), (int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1)))) ^ 0, ~ (~ ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1)))) ^ 0)))))) | (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1)))) ^ 0))))), 0 ^ (int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0))))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)))), 0, 1))), 1, 1)))) ^ 0)), (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1)))) ^ 0))) | (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1)), (int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))) | (_GLF_IDENTITY(int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1)), clamp(int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1)), int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)))), 0, 1)), int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : _GLF_IDENTITY(0, 0 | (0)))), 0, 1))))))), 1, 1)))) ^ 0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0))))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)))), 0, 1))), _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 0, 0))), 1)))) ^ 0)), (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))), 1, 1)))) ^ 0))) | (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1)), (int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))) | (_GLF_IDENTITY(int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1)), clamp(int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(4099), (_GLF_FUZZED(4099)) | 0) : 0)), 0, 1)), int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)))), 0, 1)), int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : _GLF_IDENTITY(0, 0 | (0)))), 0, 1))))))), 1, 1)), 0 ^ (int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1)), (int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1))) | (_GLF_IDENTITY(int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), 0, 1)), clamp(int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(4099), (_GLF_FUZZED(4099)) | 0) : 0)), 0, 1)), int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : 0)))), 0, 1)), int(ivec4(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4099) : _GLF_IDENTITY(0, 0 | (0)))), 0, 1))))))), 1, 1)))))) ^ 0))))) * 1))))))) | 0)))), _GLF_IDENTITY(int(4), (int(4)) - 0))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), (int(ivec4(4, 0, 0, 1))) ^ 0)), 1, 1))), (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), (int(ivec4(_GLF_IDENTITY(4, (4) << 0), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0))))) / (0 ^ 1)), 1))) ^ 0)), 1, 1)))) + 0)) ^ _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : 0)))), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(4, min(4, 4)))))), ((int(4))) | (_GLF_IDENTITY((int(4)), ((_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * 1), int(4))))) >> 0))) - 0))), 1 * ((int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))))))) - 0))))))), 1), _GLF_IDENTITY(ivec2(1, 1), (true ? ivec2(1, 1) : _GLF_FUZZED(min(ivec2(71632, -44917), int(true))))) * (ivec2(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(clamp(-82095, -68357, _injected_loop_counter)))), int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), clamp((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))))) : injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))))).y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), clamp(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-94737) : 4)), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4)))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), max(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), _GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))))), 1, 1))), (1 & 1) * (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ (1), (~ (1)) / 1), _GLF_IDENTITY(~ (1), (~ (1)) | 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : ~ (1)))))) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), 1 * (int(1)))))))))), 1, 1)))))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) - 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0)))), exp(0.0), 1.0, 1.0, 0.0)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-50474) : _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_injected_loop_counter))))), 0, 0, 1))), 1, 1)))), ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-50474) : _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_injected_loop_counter))))), 0, 0, 1))), 1, 1))))) << 0) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), _GLF_IDENTITY(int(4), min(int(4), int(4))))), (int(4)) - 0))), 1 * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << 0))), (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - _GLF_IDENTITY(0, 0 | (0))))))))), 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (ivec4(4, 0, 0, 1)) - ivec4(0, 0, 0, 0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (ivec4(4, 0, 0, 1)) - ivec4(0, 0, 0, 0)))))), 1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))))), max(int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (ivec4(4, 0, 0, 1)) - ivec4(0, 0, 0, 0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (ivec4(4, 0, 0, 1)) - ivec4(0, 0, 0, 0)))))), 1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))))), int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (ivec4(4, 0, 0, 1)) - ivec4(0, 0, 0, 0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (ivec4(4, 0, 0, 1)) - ivec4(0, 0, 0, 0)))))), 1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))))))))) ^ 0)), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) - 0, ((int(4)) - 0) << (0 << _GLF_IDENTITY(int(1), int(1))))))), clamp((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, _GLF_IDENTITY(0, int(ivec3(0, 1, 0))), 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), min(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (ivec4(4, 0, 0, 1)) >> ivec4(0, 0, 0, 0)), ivec4(4, 0, 0, 1))))), 1, 1)))) ^ 0, ((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1))), max(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1))), _GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1)))))) ^ 0) | ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) << (0 << _GLF_IDENTITY(int(7), int(7)))))), int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)))), _GLF_IDENTITY(int(4), (int(4)) - 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1)))) ^ 0) | ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)))), _GLF_IDENTITY(int(4), (int(4)) - 0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1)))) ^ 0) | ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)))), _GLF_IDENTITY(int(4), (int(4)) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1)))) ^ 0) | ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)))), _GLF_IDENTITY(int(4), (int(4)) - 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1)))) ^ 0) | ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)))), _GLF_IDENTITY(int(4), (int(4)) - 0)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1)))) ^ 0) | ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)))), _GLF_IDENTITY(int(4), (int(4)) - 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1)))) ^ 0) | ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)))), _GLF_IDENTITY(int(4), (int(4)) - 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1)))) ^ 0) | ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)))), _GLF_IDENTITY(int(4), (int(4)) - 0)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, _GLF_IDENTITY(((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1)))) ^ 0), (_GLF_IDENTITY(((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1)))) ^ 0), (true ? ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1)))) ^ 0) : _GLF_FUZZED(85887)))) | (((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1)))) ^ 0))) | ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)))), _GLF_IDENTITY(int(4), (int(4)) - 0))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 0, 0, 1))), 1, 1)))) ^ 0) | ((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) ^ 0))), 1))), 1, 1)))) ^ 0)))), _GLF_IDENTITY(int(4), (int(4)) - 0))))))), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) << 0), 0)))), _GLF_IDENTITY(int(4), (int(4)) - 0))), 1 * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))))), (_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))) / vec2(1.0, 1.0)).y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (ivec4(4, 0, 0, _GLF_IDENTITY(1, ~ (~ (1))))) ^ ivec4(0, 0, 0, 0)))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), 1 * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (0)), 0)), 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0)))))) >> 0))), 1), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) + 0), (1) - 0)) | (1))))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) - _GLF_IDENTITY(0, (0) << 0), int(_GLF_ONE(1.0, injectionSwitch.y)) * ((int(4)) - 0))))), clamp((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), (int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0)))), float(_GLF_FUZZED(468.708)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0)))), float(_GLF_FUZZED(468.708)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + 0.0), injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) / 1)), 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(4)) - 0)))) * 1), _GLF_IDENTITY(1, ~ (~ (1))) * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, ((90489 % 23220) & 0) | (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, int(ivec4(4, 1, 0, 1)))))))), int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 0 ^ (4)))) - 0))))))), max(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, int(ivec2((_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0, 1)))))) >> (0 | 0)))), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), (false ? _GLF_FUZZED(46257) : _GLF_IDENTITY((int(4)), _GLF_IDENTITY(((int(4))), max(_GLF_IDENTITY(((int(4))), clamp(_GLF_IDENTITY(((int(4))), (true ? ((int(4))) : _GLF_FUZZED(_injected_loop_counter))), ((int(4))), ((int(4))))), ((int(4))))) ^ 0))) - 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), (false ? _GLF_IDENTITY(_GLF_FUZZED(46257), (_GLF_FUZZED(_GLF_IDENTITY(46257, clamp(46257, _GLF_IDENTITY(46257, (46257) | (46257)), 46257)))) - 0) : _GLF_IDENTITY((int(4)), ((int(4))) ^ 0))) - 0))) / 1)), clamp((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0)), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), min(_GLF_IDENTITY(int(4), (int(4)) - 0), _GLF_IDENTITY(int(4), (int(4)) - 0)))) | (_GLF_IDENTITY(int(4), (int(4)) - 0))))))), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * abs(1.0))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1)))), 1)))) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, 1 * (4))), _GLF_IDENTITY((int(4)), _GLF_IDENTITY((1 ^ 1), min((1 ^ 1), (1 ^ 1))) + ((int(4)))) - 0))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), 1 * (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4)))), int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) - 0, (_GLF_IDENTITY((int(4)) - 0, ((int(4)) - 0) | 0)) << 0)))), (true ? (int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((8296.8275 + -62.52))), float(1.0), bool(true))), injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) - 0, _GLF_IDENTITY((_GLF_IDENTITY((int(4)) - 0, ((int(4)) - 0) | 0)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(4), ~ (~ (int(4))))) - 0, ((int(4)) - 0) | 0)) << 0, ((_GLF_IDENTITY((int(4)) - 0, ((int(4)) - 0) | 0)) << 0) / 1)) - 0))))) : _GLF_FUZZED(9420))))))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), clamp((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), min(_GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), ~ (~ (_GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), 1 * (int(ivec4(4, 0, 0, 1))))))), _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), (int(ivec4(4, 0, 0, 1))) - 0)))), 1, 1)))) ^ 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) / (1 ^ 0)), (int(4)) - 0))), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1))), 1, 1)))) ^ 0)), _GLF_IDENTITY(int(4), (int(4)) - 0))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), (_GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec4(4, 0, 0, 1))))) | (int(ivec4(4, 0, 0, 1))))), _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(33643) : _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1))))))), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec4(4, 0, 0, 1)))), max(_GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec4(4, 0, 0, 1)))), _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec4(4, 0, 0, 1))))))) | (int(ivec4(4, 0, 0, 1))))), _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(33643) : _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))))))))))) ^ 0)), _GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, min(4, 4)))) - 0))), 1 * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 1)))) ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0)))), _GLF_IDENTITY(int(4), (int(4)) - 0))))))))), 1))))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         return;
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))); _GLF_IDENTITY(_injected_loop_counter ++, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, exp(0.0), 1.0))))) | (_injected_loop_counter ++)))
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, false), false))))))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) << 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))), bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y) && true)))), false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))), (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(true))))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, 1.0 * _GLF_IDENTITY(((injectionSwitch.x) / 1.0), (((injectionSwitch.x) / 1.0)) / 1.0))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, 1.0 * ((injectionSwitch.x) / 1.0))) < injectionSwitch.y)))))), false, true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) / 1.0)) < injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(true))))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, 1.0 * ((injectionSwitch.x) / 1.0))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, 1.0 * ((injectionSwitch.x) / 1.0))) < injectionSwitch.y)))))), false, true))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) || false)), bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))), false, true))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))), false, true)))))))))))))))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true && (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true)) && true))))));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), ~ (~ (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))); _injected_loop_counter ++)
    {
     return;
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        break;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (false)))));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    continue;
  }
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)), injectionSwitch.x), float(mat3(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)))))) > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), float(mat3(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))) > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), float(mat3(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))) > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), float(mat3(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))) > injectionSwitch.y))), true, false, false)))) || false)), (false || (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), float(mat3(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), float(mat3(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((6.9 + -92.66))), float(0.0), bool(true))), 1.0, 0.0, 0.0, 0.0, 1.0))))))) + _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0))))).y))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), float(_GLF_IDENTITY(mat3(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3((vec3(0.0, 1.0, 1.0))[0], _GLF_FUZZED(vec3(1592.2322, 5.4, -5.6).x), _GLF_FUZZED(2400.3539)), vec3(_GLF_FUZZED(-1420.6417), (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), bvec3(false, true, true)))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat3(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat3(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3((vec3(0.0, 1.0, 1.0))[0], _GLF_FUZZED(vec3(1592.2322, 5.4, -5.6).x), _GLF_FUZZED(2400.3539)), vec3(_GLF_FUZZED(-1420.6417), (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), bvec3(false, true, true)))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat3(mat4x3(mat3(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3((vec3(0.0, 1.0, 1.0))[0], _GLF_FUZZED(vec3(1592.2322, 5.4, -5.6).x), _GLF_FUZZED(2400.3539)), vec3(_GLF_FUZZED(-1420.6417), (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), bvec3(false, true, true)))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), transpose(transpose(mat4(_GLF_IDENTITY(mat3(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3((vec3(0.0, 1.0, 1.0))[0], _GLF_FUZZED(vec3(1592.2322, 5.4, -5.6).x), _GLF_FUZZED(2400.3539)), vec3(_GLF_FUZZED(-1420.6417), (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), bvec3(false, true, true)))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat3(mat4x3(mat3(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3((vec3(0.0, 1.0, 1.0))[0], _GLF_FUZZED(vec3(1592.2322, 5.4, -5.6).x), _GLF_FUZZED(2400.3539)), vec3(_GLF_FUZZED(-1420.6417), (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), bvec3(false, true, true)))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))))))))) > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x)), injectionSwitch.x), float(mat3(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))) > injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)), false, false)))) || false))) && true))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(6.1)), mix(vec2((vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(6.1)))[0], _GLF_FUZZED(-306.865)), vec2(_GLF_FUZZED(0.6), (vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(6.1)))[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))), bvec2(false, false))).y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(6.1)), bvec2(false, false)), max(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(6.1)), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(6.1)), bvec2(false, false))))).y)))), true)))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.6) : injectionSwitch.y))))))
          {
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u ^ (gl_NumWorkGroups.x));
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_IDENTITY(false, false || (false))))))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(subgroup_id * subgroup_size, bvec3(true), 1u, bvec4(true), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-2.1))), mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(-70.72, max(-70.72, -70.72)) * 829.009)), (false ? _GLF_FUZZED(2.4) : _GLF_FUZZED(_GLF_IDENTITY((-70.72 * 829.009), _GLF_IDENTITY(float(mat2x3((-70.72 * 829.009), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(1.0))), (float(mat2x3((-70.72 * 829.009), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(1.0)))) + 0.0)))))), bool(_GLF_IDENTITY(false, ! (! (false)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED((-70.72 * 829.009)), (false ? _GLF_FUZZED(2.4) : _GLF_FUZZED((-70.72 * 829.009))))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED((-70.72 * 829.009)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(2.4) : _GLF_FUZZED((-70.72 * 829.009))))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED((-70.72 * 829.009)), (false ? _GLF_FUZZED(2.4) : _GLF_FUZZED((-70.72 * 829.009))))), bool(false)))) * 1.0)))), vec3(1.0));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           return;
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 1 * (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * 1))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(faceforward(503.834, -63.31, vec2(-8.6, -50.50)[1])) : injectionSwitch.x)))), false || (_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(8312.3172)), bool(false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(acos(5.6)) : _GLF_IDENTITY(mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(8312.3172)), bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(8312.3172)), bool(false))) / 1.0)))))))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               continue;
              }
             return;
            }
           do
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))));
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_base, min(_GLF_struct_replacement_0.subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_base, 0u ^ _GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_base), max((_GLF_struct_replacement_0.subgroup_base), (_GLF_struct_replacement_0.subgroup_base)))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_base, 0u ^ (_GLF_struct_replacement_0.subgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_base, 0u ^ (_GLF_struct_replacement_0.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_base, 0u ^ (_GLF_struct_replacement_0.subgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_base, 0u ^ (_GLF_struct_replacement_0.subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_base, (_GLF_struct_replacement_0.subgroup_base) - 0u), 0u ^ (_GLF_struct_replacement_0.subgroup_base)))))))) + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_0.subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), 0 ^ (_GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size);
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED((-37977 & 16498)))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), 0 ^ (_GLF_IDENTITY(int(0), ~ (~ (int(0)))))) : _GLF_FUZZED(-13642))), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(false ? _GLF_FUZZED(926) : int(int(4)), max(false ? _GLF_FUZZED(926) : int(int(4)), false ? _GLF_FUZZED(926) : _GLF_IDENTITY(int(int(4)), ~ (~ (_GLF_IDENTITY(int(int(4)), clamp(int(int(4)), int(int(4)), int(int(4)))))))))))), 64, 2);
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0)), 0.0), (true ? vec4(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0)), 0.0) : _GLF_FUZZED(vec4(-6694.1899, 2897.5832, 1.3, 5763.1115))))))))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), true, false)))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))), tan(0.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, log(1.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0)), min(float(mat4(injectionSwitch.x, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, abs(0.0), tan(0.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, log(1.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, abs(0.0), tan(0.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, log(1.0), determinant(mat3(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat4(injectionSwitch.x, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, abs(0.0), tan(0.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, log(1.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat4(injectionSwitch.x, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, abs(0.0), tan(0.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, log(1.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.3) : 0.0)), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0))))))) > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
            return;
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
