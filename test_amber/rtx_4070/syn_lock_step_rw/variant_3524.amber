#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, float(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, float(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0, 1.0)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(false || (_GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (true)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, true, true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))), bool(bvec2((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), bool(bool((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), bool(bool((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), bool(bool((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))))))))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))))))) : gl_WorkGroupID.x)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) : gl_WorkGroupID.x))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) : gl_WorkGroupID.x))) : _GLF_FUZZED((162872u * num_workgroup))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(step(-3.7, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(step(-3.7, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : injectionSwitch)).y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))) / 1.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))) > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), false, true)))))) || false), false, true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))))) || false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(967.764)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (0.0) + 0.0)), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2980.3187)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, abs(0.0)))).x, _GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))), (injectionSwitch.x))) / 1.0), injectionSwitch.x), (true ? _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2980.3187)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, abs(0.0)))).x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2980.3187)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, abs(0.0)))).x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(vec3(-7221.4587, 25.27, -5.9).x)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), false || (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (0u | 0u) ^ (workgroup_size)), 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), 0u | (uint(uvec2(0u, 1u))))))))) ^ 0u))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), bool(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), (bool(bvec3(true, false, true))) && true)))))), (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), true, true)))), false))))))) || false))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base, 0u + (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), false, false)))) || false)), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base, 0u + (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), false, false)))) || false)), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base, 0u + (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), false, false)))) || false)), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base, 0u + (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), false, false)))) || false)), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base, 0u + (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), false, false)))) || false)), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base, 0u + (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), false, false)))) || false)), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)))))), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base, 0u + (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), false, false)))) || false)), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base, 0u + (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), false, false)))) || false)), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base, 0u + (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))), bool(bvec3(false, false, true)))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), false, false)))) || false)), _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))))))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)))))))))) ^ 0u) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (_GLF_IDENTITY(~ (uint(2u)), ~ (~ (~ (uint(2u))))))), min(uint(2u), uint(2u)))) + 0u))))) + subgroup_id * subgroup_size + subgroup_local_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)) : _GLF_FUZZED(subgroup_local_id)))))) + subgroup_local_id, 0u), clamp(uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (25414u & (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) + subgroup_local_id, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false, true))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, 0u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, 0u))), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, 0u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, 0u))))))) >> uvec2(0u, 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)), (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size))) ^ 0u)) : workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size))) : workgroup_base)) + subgroup_id * subgroup_size) << 0u) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)), (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size))) ^ 0u)) : workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size))) : workgroup_base)) + subgroup_id * subgroup_size) << 0u) + subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)), (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size))) ^ 0u)) : workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size))) : workgroup_base)) + subgroup_id * subgroup_size) << 0u) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)), (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size))) ^ 0u)) : workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size))) : workgroup_base)) + subgroup_id * subgroup_size) << 0u) + subgroup_local_id) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)), (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size))) ^ 0u)) : workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size))) : workgroup_base)) + subgroup_id * subgroup_size) << 0u) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)), (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size))) ^ 0u)) : workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size))) : workgroup_base)) + subgroup_id * subgroup_size) << 0u) + subgroup_local_id))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u)) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) << 0u) + subgroup_local_id, 0u)), ~ (~ ((uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, 0u), min(uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | 0u)), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id)), 0u))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, 0u), min(uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size), (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size)) | (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size))), ~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size))))) + subgroup_local_id)), 0u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, 0u), min(uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)), uint(uvec4(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)), (1u | (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u))) + subgroup_id * subgroup_size + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id)), 0u)))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))) | (5924u & 0u)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) << (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), min((0u), (0u))) >> 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))) + _GLF_IDENTITY(1, (1) + 0)), 0u | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) << (_GLF_IDENTITY(0u, (0u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) + 0u))) + 1))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, true, true))))))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))))), (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.9, 139.872)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-831.230), _GLF_FUZZED(5.6)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.9, 139.872)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-831.230), _GLF_FUZZED(5.6)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))).y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.9, 139.872)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-831.230), _GLF_FUZZED(5.6)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))).y)), true, false)))))))) && true))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, false))))), (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(794.919)), vec2(_GLF_FUZZED(-770.720), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(328.374)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), bvec2(false, true))))).y))))), true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, false))))), (injectionSwitch.x > injectionSwitch.y)))))))), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))), _GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false, ! (! (false))))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))), (injectionSwitch.x > injectionSwitch.y)))) && true))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(272.497, 7917.5784, 7.0, -5221.8784).a), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, false))))), (injectionSwitch.x > injectionSwitch.y))))), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))), _GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))) >> 0u)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)))) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))) << 0u)), (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY((~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((~ (virtual_gid)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))) / 1u))) / 1u))) - 0u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))) >> 0u)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)))) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))) << 0u)), (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY((~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((~ (virtual_gid)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))) / 1u))) / 1u))) - 0u)))) - 0u), clamp(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))) >> 0u)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)))) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))) << 0u)), (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY((~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((~ (virtual_gid)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))) / 1u))) / 1u))) - 0u)))) - 0u), _GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))) >> 0u)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)))) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))) << 0u)), (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY((~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((~ (virtual_gid)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))) / 1u))) / 1u))) - 0u)))) - 0u), _GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))) >> 0u)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)))) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))) << 0u)), (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY((~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((~ (virtual_gid)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))) / 1u))) / 1u))) - 0u)))) - 0u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), uint(_GLF_IDENTITY(uvec4((~ (virtual_gid)), (1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), clamp(_GLF_IDENTITY(uvec4((~ (virtual_gid)), (1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (uvec4((~ (virtual_gid)), (1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) >> uvec4(0u, 0u, 0u, 0u)), uvec4((~ (virtual_gid)), (1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec4((~ (virtual_gid)), (1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), max((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, false)), true), bvec2(bvec3(bvec2(bool(bvec2(false, false)), true), false)))))) ? _GLF_FUZZED(workgroup_size) : (~ (virtual_gid)))))) >> 0u, uint(uvec4(_GLF_IDENTITY((~ (virtual_gid)), max((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), (false ? _GLF_FUZZED(workgroup_size) : (~ (virtual_gid)))))) >> 0u, (1u | 0u), (0u | 0u), 0u))))), (1u | 1u) * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))) >> 0u)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)))) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))) << 0u)), (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY((~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((~ (virtual_gid)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))) / 1u))) / 1u))) - 0u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))) >> 0u)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)))) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))) << 0u)), (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY((~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((~ (virtual_gid)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))) / 1u))) / 1u))) - 0u)))) - 0u), clamp(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))) >> 0u)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)))) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))) << 0u)), (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY((~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((~ (virtual_gid)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))) / 1u))) / 1u))) - 0u)))) - 0u), _GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))) >> 0u)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)))) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))) << 0u)), (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY((~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((~ (virtual_gid)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))) / 1u))) / 1u))) - 0u)))) - 0u), _GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))) >> 0u)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))), (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)))) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))) << 0u)), (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY((~ (virtual_gid)) | (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u)), ((~ (virtual_gid)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))) / 1u))) / 1u))) - 0u)))) - 0u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), uint(_GLF_IDENTITY(uvec4((~ (virtual_gid)), (1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), clamp(_GLF_IDENTITY(uvec4((~ (virtual_gid)), (1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (uvec4((~ (virtual_gid)), (1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) >> uvec4(0u, 0u, 0u, 0u)), uvec4((~ (virtual_gid)), (1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec4((~ (virtual_gid)), (1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), max((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, false)), true), bvec2(bvec3(bvec2(bool(bvec2(false, false)), true), false)))))) ? _GLF_FUZZED(workgroup_size) : (~ (virtual_gid)))))) >> 0u, uint(uvec4(_GLF_IDENTITY((~ (virtual_gid)), max((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), (false ? _GLF_FUZZED(workgroup_size) : (~ (virtual_gid)))))) >> 0u, (1u | 0u), (0u | 0u), 0u))))))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) - 0), _GLF_IDENTITY((clamp(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), ~ (~ (~ (4)))))))), 4, 4)), _GLF_IDENTITY(((clamp(_GLF_IDENTITY(4, (4) | (4)), 4, 4))), clamp(((clamp(_GLF_IDENTITY(4, (4) | (4)), 4, 4))), ((clamp(_GLF_IDENTITY(4, (4) | (4)), 4, 4))), ((clamp(_GLF_IDENTITY(4, (4) | (4)), 4, 4))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), 0 ^ (_GLF_IDENTITY(4, 0 + (4)))))), 4, 4)) / 1), clamp(4, 4, 4))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY((clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 + (4)))), 4, 4)) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), max(ivec3(1, 1, 0), ivec3(1, 1, 0)))))) ^ (24714 & 0)), 0 | ((clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 + (4)))), 4, 4)) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), max(ivec3(1, 1, 0), ivec3(1, 1, 0)))))) ^ (24714 & 0))))), _GLF_IDENTITY(clamp(4, 4, 4), min(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, 4, 4))))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (0 ^ 0) | (4)), 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, int(int(0))) + (4)))), 4, 4)) / 1), clamp(4, 4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(ivec2(19452, -94762)[1]) : _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) ^ 0)))))))), _GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), 0 + (_GLF_IDENTITY(4, 0 + (4)))))), 4, 4)) / 1), clamp(4, 4, 4))))) : _GLF_FUZZED(ivec4(-86231, -81736, -34752, 94271).a))), _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - 0), 4, 4)), 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(4, 0 + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), (0 ^ (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - 0), 4, 4)), 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(4, 0 + (4)))), 4, 4)) / 1), clamp(4, 4, 4))))) | (0 ^ (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - 0), 4, 4)), 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(4, 0 + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))))), 0 ^ (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), max((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), max(_GLF_IDENTITY(0 | (0), (0 | (0)) | (0 | (0))), 0 | (0)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), _GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), ~ (~ ((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4))))))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), min(_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), ((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4))))) * 1), _GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), ~ (~ ((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4))))))))))), max((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), ~ (~ (clamp(4, 4, 4)))), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, 4), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-36100))), _GLF_IDENTITY(4, ~ (~ (4))))), 4)), 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), ~ (~ ((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), ~ (~ ((_GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY(max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)), (max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4))) << 0)))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), (true ? _GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1) : _GLF_FUZZED(62057))), _GLF_IDENTITY(clamp(4, 4, 4), (33910 & 0) + (clamp(4, 4, 4)))))), ~ (~ ((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0)))) | (0)))) + (_GLF_IDENTITY(4, ~ (~ (4))))))), 4, 4)) / 1), clamp(4, 4, 4))))))))))))) : _GLF_FUZZED(14669)), min((true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), min(_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), ((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4))))) * 1), _GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), ~ (~ ((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4))))))))))), max((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), ~ (~ (clamp(4, 4, 4)))), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, 4), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-36100))), _GLF_IDENTITY(4, ~ (~ (4))))), 4)), 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), ~ (~ ((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), ~ (~ ((_GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY(max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)), (max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4))) << 0)))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), (true ? _GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1) : _GLF_FUZZED(62057))), _GLF_IDENTITY(clamp(4, 4, 4), (33910 & 0) + (clamp(4, 4, 4)))))), ~ (~ ((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0)))) | (0)))) + (_GLF_IDENTITY(4, ~ (~ (4))))))), 4, 4)) / 1), clamp(4, 4, 4))))))))))))) : _GLF_FUZZED(14669)), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), min(_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), ((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4))))) * 1), _GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), ~ (~ ((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (0) | 0), 1))) / 1)))))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4))))))))))), max((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), ~ (~ (clamp(4, 4, 4)))), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, 4), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-36100))), _GLF_IDENTITY(4, ~ (~ (4))))), 4)), 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), ~ (~ ((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)))), ~ (~ ((_GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY(max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4)), (max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), clamp(4, 4, 4))) << 0)))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1), (true ? _GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, 0 | (0)))) + (4)))), 4, 4)) / 1) : _GLF_FUZZED(62057))), _GLF_IDENTITY(clamp(4, 4, 4), (33910 & 0) + (clamp(4, 4, 4)))))), ~ (~ ((_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0)))) | (0)))) + (_GLF_IDENTITY(4, ~ (~ (4))))))), 4, 4)) / 1), clamp(4, 4, 4))))))))))))) : _GLF_FUZZED(14669))))), (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) << _GLF_IDENTITY(0, (0) | (0))), max(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) | 0))), 1, (1 | 0), 1))), 4), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), clamp(_GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(4, 0 + (4)))))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, max(4, 4))))))) + 0), _GLF_IDENTITY(4, clamp(4, 4, 4)), 4)) / 1), clamp(4, 4, 4)))), min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))) ^ (_GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(49476))), max(4, _GLF_IDENTITY(4, 0 + (4)))), 4, 4)) / 1), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) << 0) * (_GLF_IDENTITY(4, ~ (~ (4))))), 4, 4)))), 0 ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, max(4, 4)), 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 + (4)))), 4, 4)) / 1), clamp(4, 4, 4))))))) >> 0))))))), 64, _GLF_IDENTITY(4, int(ivec4(4, (-75580 & 0), 1, 1))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  return;
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) | (4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false, true, false))), (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec3(! (! (_GLF_DEAD(false))), false, false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
