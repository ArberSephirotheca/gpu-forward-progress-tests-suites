#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), min(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(2767.2909), _GLF_FUZZED(86.68)), vec2((vec2(mat4x2(injectionSwitch, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)))[0], (vec2(mat4x2(injectionSwitch, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))) && true))), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(5792.6184)), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)))))))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)))))))))))))), false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-68.20, mix(float(_GLF_FUZZED(8.0)), float(-68.20), bool(true))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-782.265), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-0.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-782.265), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-0.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(1), int(1))))])))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-536.791, 2464.5464)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(7.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(88.92)), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true))) || false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), false || (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true))) || false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), false || (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true))) || false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), false || (injectionSwitch.x > injectionSwitch.y))))) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true))) || false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), false || (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true))) || false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), false || (injectionSwitch.x > injectionSwitch.y))))) && true))), bool(bvec3(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true))) || false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), false || (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true)), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true))) || false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), false || (injectionSwitch.x > injectionSwitch.y))))) && true))), false, true))))))))) && true, ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))))))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))))))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))))))))))), false, true)))))) && true)) && true), (((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)))))) && _GLF_IDENTITY(true, ! (! (true))))) || false)))), true, true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9865.1977)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.7), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9865.1977)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) * vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y), true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-9865.1977), clamp(_GLF_FUZZED(-9865.1977), _GLF_FUZZED(-9865.1977), _GLF_FUZZED(-9865.1977)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.7), (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (0) | (0))], _GLF_FUZZED(-9865.1977)), (_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(-9865.1977)), _GLF_IDENTITY(vec2(mat3x4(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(-9865.1977)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0)), (vec2(mat3x4(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(-9865.1977)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-9696.8208, float(vec2(-9696.8208, 0.0)))), _GLF_FUZZED(-367.465)), bvec2(false, false)))[0], _GLF_FUZZED(-9865.1977)), (vec2((injectionSwitch)[0], _GLF_FUZZED(-9865.1977))) / vec2(1.0, 1.0)))), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.1)), bool(false))), (injectionSwitch.x) + 0.0))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))))), false)))) * vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0))), 0, 1)), (int(ivec3((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0))), 0, 1))) << 0))))], float(vec2(injectionSwitch[0], sqrt(sqrt(1.0))))))), injectionSwitch[1])).y)), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-9865.1977), clamp(_GLF_FUZZED(-9865.1977), _GLF_FUZZED(-9865.1977), _GLF_FUZZED(-9865.1977)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.7), (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (0) | (0))], _GLF_FUZZED(-9865.1977)), (_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(-9865.1977)), _GLF_IDENTITY(vec2(mat3x4(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(-9865.1977)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0)), (vec2(mat3x4(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(-9865.1977)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-9696.8208, float(vec2(-9696.8208, 0.0)))), _GLF_FUZZED(-367.465)), bvec2(false, false)))[0], _GLF_FUZZED(-9865.1977)), (vec2((injectionSwitch)[0], _GLF_FUZZED(-9865.1977))) / vec2(1.0, 1.0)))), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.1)), bool(false))), (injectionSwitch.x) + 0.0))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))))), false)))) * vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0))), 0, 1)), (int(ivec3((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0))), 0, 1))) << 0))))], float(vec2(injectionSwitch[0], sqrt(sqrt(1.0))))))), injectionSwitch[1])).y))) && true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(cos(sin(0.0)), float(mat2(cos(sin(0.0)), exp(0.0), 1.0, sin(0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec4(989.315, -2.7, -22.18, -759.921).s), _GLF_FUZZED(4696.5785)), vec2((vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(682.101)))), 0.0, 1.0, 1.0, 1.0)))[0], (vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0)))[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(vec4(989.315, -2.7, -22.18, -759.921).s), _GLF_FUZZED(4696.5785)), vec2((vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(682.101)))), 0.0, 1.0, 1.0, 1.0)))[0], (vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) / exp(0.0)), 1.0, 1.0, 1.0)))[_GLF_IDENTITY(1, (1) << 0)]), bvec2(true, true))) - vec2(0.0, 0.0)))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(_GLF_IDENTITY(sin(0.0), float(mat4x3(_GLF_IDENTITY(sin(0.0), float(_GLF_IDENTITY(float(sin(0.0)), min(float(sin(0.0)), float(sin(0.0)))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(vec4(989.315, -2.7, -22.18, -759.921).s), _GLF_FUZZED(4696.5785)), vec2((vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(682.101)))), 0.0, 1.0, 1.0, 1.0)))[0], (vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(sin(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.6))), 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0)))[1]), bvec2(true, true)))).y, true, true, true)), true && (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(vec4(989.315, -2.7, -22.18, -759.921).s), _GLF_IDENTITY(_GLF_FUZZED(4696.5785), max(_GLF_FUZZED(4696.5785), _GLF_FUZZED(4696.5785)))), vec2(_GLF_IDENTITY((vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(682.101)))), 0.0, 1.0, 1.0, 1.0))), clamp((vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(682.101)))), 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY((vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(682.101)))), 0.0, 1.0, 1.0, 1.0))), ((vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(682.101)))), 0.0, 1.0, 1.0, 1.0)))) * mat2(1.0)), (vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(682.101)))), 0.0, 1.0, 1.0, 1.0)))))[0], (vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.9)), bool(false))))))[1]), bvec2(true, true)))).y, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.0)), bool(false)))))) * 1.0) < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), ~ (~ (int(_GLF_IDENTITY(1, clamp(1, 1, 1))))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), ~ (~ (int(_GLF_IDENTITY(1, clamp(1, 1, 1)))))))))) << 0))], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 0u, 0u))[2], uint(_GLF_IDENTITY(uint(gl_WorkGroupSize[2]), max(uint(gl_WorkGroupSize[2]), uint(gl_WorkGroupSize[2])))))))[2])), gl_WorkGroupSize)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), true, false, true)))))), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_IDENTITY(false, (false) && true))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bool(bool(bvec3(_GLF_DEAD(false), true, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, sin(0.0)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(5544.6275), clamp(_GLF_FUZZED(5544.6275), _GLF_IDENTITY(_GLF_FUZZED(5544.6275), (true ? _GLF_FUZZED(5544.6275) : _GLF_FUZZED(52.58))), _GLF_FUZZED(5544.6275)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-32.73), _GLF_FUZZED(float(32154u))), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)) || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9522.6030) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0))), (true ? float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3847.7593) : 0.0)), 0.0, 0.0, 0.0, exp(0.0))) : _GLF_FUZZED(-8.0)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), 1u, 1u, 0u), (true ? uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 0u))), 1u, 1u, 0u) : _GLF_FUZZED(uvec4(60630u, 66460u, 81532u, 86549u))))))) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1982.8707)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) / 1u)), (subgroup_base) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))), uint(0u)))), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u))) + subgroup_base) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) ^ 0u))) + subgroup_base, workgroup_base + subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) / 1u)), (subgroup_base) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))), uint(0u)))), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u))) + subgroup_base) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) ^ 0u))) + subgroup_base, workgroup_base + subgroup_base))) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid) ^ _GLF_IDENTITY(0u, uint(uvec3(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u & 107118u, (0u ^ 1u) * (0u & 107118u))), (true ? (_GLF_IDENTITY(0u & 107118u, (_GLF_IDENTITY(0u ^ 1u, uint(uvec2(_GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_base) : 0u ^ 1u)), 0u)))) * (0u & 107118u))) : _GLF_FUZZED(workgroup_base))), 1u))), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid) ^ 0u, ~ (~ (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), ((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid)) - 0u)) ^ (0u & (36479u | 114226u))) ^ 0u)))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), min((0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))) + 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u ^ (_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, 0u | (7u))))))), uint(7u)), min(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, min(7u, 7u))), uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, uint(uint(7u))))))))))))))) / 1u, ((_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid) ^ _GLF_IDENTITY(0u, uint(uvec3(0u, (_GLF_IDENTITY(0u & 107118u, min(_GLF_IDENTITY(0u & 107118u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : 0u & 107118u)), 0u & 107118u))), 1u))), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid) ^ _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), ((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid)) - 0u)) ^ (0u & (36479u | 114226u))) ^ 0u), ((_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, 0u | (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid))))), ((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid)) - 0u)) ^ (0u & (36479u | 114226u))) ^ 0u)) * 1u), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), ((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid)) - 0u)) ^ (0u & (36479u | 114226u))) ^ 0u), (~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), ((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid)) - 0u)) ^ (0u & (36479u | 114226u))) ^ 0u, (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), ((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid)) - 0u)) ^ (0u & (36479u | 114226u))) ^ 0u) - 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), ((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid)) << 0u)) | 0u)) - 0u)) ^ (0u & (36479u | 114226u))) ^ 0u), (~ (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), ((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid)) - 0u)) ^ (0u & (36479u | 114226u))) ^ 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(mix(subgroup_base, subgroup_base, false)) : _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), ((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid)) << 0u)) | 0u)) - 0u)) ^ (0u & (36479u | 114226u))) ^ 0u), (~ (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), ((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid)) - 0u)) ^ (0u & (36479u | 114226u))) ^ 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), ((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid)) << 0u)) | 0u)) - 0u)) ^ (0u & (36479u | 114226u))) ^ 0u), (~ (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), ((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid)) - 0u)) ^ (0u & (36479u | 114226u))) ^ 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), 1u * (~ (~ (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = _GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid), ((GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid)) - 0u)) ^ (0u & (36479u | 114226u))) ^ 0u)))))) / _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), ~ (~ ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))))), (1u << _GLF_IDENTITY(uint(7u), uint(7u))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(7u), uint(7u))), 1u * (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(7u), uint(7u))), clamp(~ (_GLF_IDENTITY(uint(7u), uint(7u))), ~ (_GLF_IDENTITY(uint(7u), uint(7u))), ~ (_GLF_IDENTITY(uint(7u), uint(7u)))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u, ((_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u) >> 0u), (_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u, clamp((_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u, (_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u, (_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u)))))), uint(7u)), uint(uint((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u)), uint(7u)))))), (true ? (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) >> 0u) | (_GLF_IDENTITY(0u ^ 0u, clamp(0u ^ 0u, _GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) + 0u), 0u ^ 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u, max((_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u, (_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u)))), uint(7u)), clamp((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) >> 0u) | (_GLF_IDENTITY(0u ^ 0u, clamp(0u ^ 0u, _GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) + 0u), 0u ^ 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u, max((_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u, (_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u)))), uint(7u)), (1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) >> 0u) | (_GLF_IDENTITY(0u ^ 0u, clamp(0u ^ 0u, _GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) + 0u), 0u ^ 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u, max((_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u, (_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u)))), uint(7u)), (1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) >> 0u) | (_GLF_IDENTITY(0u ^ 0u, clamp(0u ^ 0u, _GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) + 0u), 0u ^ 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u, max((_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u, (_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) * 1u))))) ^ 0u)))), uint(7u))))) : _GLF_FUZZED(next_virtual_gid)))))))) / 1u) - (0u | 0u))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid) ^ 0u), (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | 0u, min((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | 0u, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | 0u))), clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)))) ^ 0u)))) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_size) : subgroup_base)), subgroup_base, subgroup_base)), (subgroup_base) * 1u)), (true ? (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)) : _GLF_FUZZED(workgroup_id)))), min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))) * 1u))), _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_size))), subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))) | (subgroup_base))) * 1u)))))), (true ? _GLF_IDENTITY(true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid) ^ 0u), (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | 0u, min((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | 0u, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | 0u))), clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)))) ^ 0u)))) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_size) : subgroup_base)), subgroup_base, subgroup_base)), (subgroup_base) * 1u)), (true ? (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)) : _GLF_FUZZED(workgroup_id)))), min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))) * 1u))), _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_size))), subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))) | (subgroup_base))) * 1u)))))), (true ? true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid, (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid) ^ 0u), (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | 0u, min((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | 0u, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | 0u))), clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)))) ^ 0u)))) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_size) : subgroup_base)), subgroup_base, subgroup_base)), (subgroup_base) * 1u)), (true ? (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)) : _GLF_FUZZED(workgroup_id)))), min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))) * 1u))), _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_size))), subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))) | (subgroup_base))) * 1u)))))) : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(workgroup_id)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, 0 | (64)))), 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))) | (uint(2u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(527.687)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))).x > injectionSwitch.y), _GLF_IDENTITY(false || (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(false || (! (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
  barrier();
 atomicStore(buf[GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) * 1u, (_GLF_IDENTITY((virtual_gid) * 1u, clamp(_GLF_IDENTITY((virtual_gid) * 1u, max((virtual_gid) * _GLF_IDENTITY(1u, ~ (~ (1u))), (virtual_gid) * 1u)), (virtual_gid) * 1u, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | 0u) * 1u))) ^ 0u))], read, 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), (~ (64)) | 0)) | (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (64), int(_GLF_IDENTITY(ivec4(~ (64), 1, 0, 0), min(ivec4(~ (64), 1, 0, 0), ivec4(~ (64), 1, 0, 0))))), 1)), int(ivec2(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (64), int(_GLF_IDENTITY(ivec4(~ (64), 1, 0, 0), min(ivec4(~ (64), 1, 0, 0), ivec4(~ (64), 1, 0, 0))))), 1)), 1 * (int(ivec2(_GLF_IDENTITY(~ (64), int(_GLF_IDENTITY(ivec4(~ (64), 1, 0, 0), min(ivec4(~ (64), 1, 0, 0), ivec4(~ (64), 1, 0, 0))))), 1)))), 1))))) / 1))), (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), (~ (64)) | 0)) | (_GLF_IDENTITY(~ _GLF_IDENTITY((64), (_GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(77912)))) >> 0), (_GLF_IDENTITY(~ (64), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (64), int(_GLF_IDENTITY(ivec4(~ (64), _GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))), 0, 0), min(ivec4(~ (64), 1, 0, 0), ivec4(~ (64), 1, 0, 0))))), 1)), int(ivec2(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (64), int(_GLF_IDENTITY(ivec4(~ (64), 1, 0, 0), min(ivec4(~ (64), 1, 0, 0), ivec4(~ (64), 1, 0, 0))))), 1)), 1 * (int(ivec2(_GLF_IDENTITY(~ (64), int(_GLF_IDENTITY(ivec4(~ (64), 1, 0, 0), min(ivec4(~ (64), 1, 0, 0), ivec4(~ (64), 1, 0, 0))))), 1)))), 1))))) / 1)))) + 0))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
