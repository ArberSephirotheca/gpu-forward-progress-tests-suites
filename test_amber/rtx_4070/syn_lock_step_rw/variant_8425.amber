#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), true, false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))), true, true)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-595.885 / 87.76)), _GLF_FUZZED(135.549)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), true && (bool(bvec4(false, false, false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false)))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7306.3504) : 1.0))))))))).y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))) * vec2(1.0, 1.0)))).y))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), vec2(0.0, 0.0) + (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))))).y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y))))))))) && true)))))))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-1.7))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, max(1.0, 1.0))))))).y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - log(vec2(1.0, 1.0))))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)), bool(bvec4(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - log(vec2(1.0, 1.0))))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)), true, true, true))))))))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-1.7))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, max(1.0, 1.0))))))).y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - log(vec2(1.0, 1.0))))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)), bool(bvec4(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - log(vec2(1.0, 1.0))))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)), true, true, true))))))))))))))))) || false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))), 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)))), true)))))))))))))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)))) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(0.8)), bool(false)))), float(_GLF_FUZZED(-4.4)), bool(false))))))))).y)))))))))))))) || false), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))), 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)))), true)))))))))))))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))).y)))) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(0.8)), bool(false)))), float(_GLF_FUZZED(-4.4)), bool(false))))))))).y)))))))))))))) || false), true), true)), true))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(5.4, 7.0))))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), 0u + (uint(uvec3(subgroup_id, 1u, 0u))))), max(subgroup_id, subgroup_id))) | 0u), 0u | (subgroup_id)) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))), true, false), true)))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true) && true)), true, false), true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))), false)))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), true, false), true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true, false), true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, false), true)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))))))))), _GLF_IDENTITY(false, true && (false)), false)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false, ! (! (_GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(false)) || false)))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))), false, false, true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))), subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), max(_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) - 0u), ~ (workgroup_base))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), max(_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) - 0u), ~ (workgroup_base))))))), min(~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), max(_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) - 0u), ~ (workgroup_base))))))), ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), max(_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) - 0u), ~ (workgroup_base)))))))))) * 1u)))), (workgroup_base) ^ 0u) + subgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), max(_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) - 0u), ~ (workgroup_base)))))))))), (workgroup_base) ^ 0u) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), max(_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) - 0u), ~ (workgroup_base)))))))))), _GLF_IDENTITY((workgroup_base) ^ 0u, max((workgroup_base) ^ 0u, (workgroup_base) ^ 0u))) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), max(_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) - 0u), ~ (workgroup_base))))))))), (true ? (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), max(_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) - 0u), ~ (workgroup_base))))))))) : _GLF_FUZZED(subgroup_id)))), (workgroup_base) ^ 0u) + subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 0u, 1u, 1u))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u + ((subgroup_local_id + 1)), clamp(0u + ((subgroup_local_id + 1)), _GLF_IDENTITY(0u + ((subgroup_local_id + 1)), 0u + (_GLF_IDENTITY(0u + ((subgroup_local_id + 1)), (0u + ((subgroup_local_id + 1))) << 0u))), 0u + ((subgroup_local_id + 1)))))) / 1u))), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 0u, 1u, 1u))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u + ((subgroup_local_id + 1)), clamp(0u + ((subgroup_local_id + 1)), _GLF_IDENTITY(0u + ((subgroup_local_id + 1)), 0u + (_GLF_IDENTITY(0u + ((subgroup_local_id + 1)), (0u + ((subgroup_local_id + 1))) << 0u))), 0u + ((subgroup_local_id + 1)))))) / 1u))))), 1u), clamp(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(workgroup_id))), subgroup_local_id, subgroup_local_id)) + 1), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)) + 1), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)) + 1) : _GLF_FUZZED((uvec3(94874u, 89023u, 16514u) | uvec3(160812u, 117859u, 176909u)).y))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))), 1u), uvec2(_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 1u, 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : uint(uvec3(subgroup_local_id, 1u, 0u))))) + 1, (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)))) - 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1))))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))))), min((subgroup_local_id + 1), (subgroup_local_id + 1))), min(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) + 1))))), 1u))))) % subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), min(~ (~ (workgroup_base)), _GLF_IDENTITY(~ (~ (workgroup_base)), ~ (~ (~ (~ (workgroup_base))))))))))))), (workgroup_base) ^ 0u) + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1)), _GLF_IDENTITY(1u, 0u | (1u)) * (subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))))))), (workgroup_base) ^ 0u) + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u) : _GLF_FUZZED(workgroup_size))) + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))), (subgroup_local_id + 1))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))))), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))) - 0u)) % subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))))))), (workgroup_base) ^ 0u) + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))) / 1u) : _GLF_FUZZED(workgroup_size))) + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))), (subgroup_local_id + 1))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))))), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))) - 0u)) % subgroup_size)))), (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((true), ((true)) || false)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))))), (workgroup_base) ^ 0u) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(workgroup_base)))));
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) | (2))), 1u, _GLF_IDENTITY(1u, (1u) ^ 0u))), max(uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 1u)), uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) | (64)), 64))) ^ 0), 2), 1u, 1u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9470.9204)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))) > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))), false), true)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-609.960)), bool(false)))) - _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))))))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false, true))), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(true, ! (! (true)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) && true)))))), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), false, false)), ! (! (bool(bvec3(bool(false), false, false)))))))), (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), false, false)), ! (! (bool(bvec3(bool(false), false, false)))))))), (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), false, false)), ! (! (bool(bvec3(bool(false), false, false)))))))), (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), false, false)), ! (! (bool(bvec3(bool(false), false, false)))))))), (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), false)))))))))))), ((! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) && true)))))), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), false, false)), ! (! (bool(bvec3(bool(false), false, false)))))))), (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), false, false)), ! (! (bool(bvec3(bool(false), false, false)))))))), (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), false, false)), ! (! (bool(bvec3(bool(false), false, false)))))))), (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), false, false)), ! (! (bool(bvec3(bool(false), false, false)))))))), (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), false))))))))))))) && true))), false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u))), virtual_gid)), virtual_gid, virtual_gid))), ((virtual_gid)) + 0u))) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 0u), (_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(1u, 0u)))) | (uvec2(1u, 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u))), virtual_gid)), virtual_gid, virtual_gid))), ((virtual_gid)) + 0u))) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 0u), (_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(1u, 0u)))) | (uvec2(1u, 0u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u))), virtual_gid)), virtual_gid, virtual_gid))), ((virtual_gid)) + 0u))) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 0u), (_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(1u, 0u)))) | (uvec2(1u, 0u)))))), min(uint(_GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u))), virtual_gid)), virtual_gid, virtual_gid))), ((virtual_gid)) + 0u))) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 0u), (_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(1u, 0u)))) | (uvec2(1u, 0u)))))), uint(_GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u))), virtual_gid)), virtual_gid, virtual_gid))), ((virtual_gid)) + 0u))) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 0u), (_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(1u, 0u)))) | (uvec2(1u, 0u)))))))))) : _GLF_FUZZED(subgroup_local_id))))], read, _GLF_IDENTITY(4, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, (92305 & 0)), max(ivec2(0, (92305 & 0)), ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (0)), (92305 & 0))))))))) ^ (4)), _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0)))) << 0)) * 1)), ((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0)))) << 0)) * 1))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0)))) << 0)) * 1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0)))) << 0)) * 1)), 1), (ivec2((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0)))) << 0)) * 1)), 1)) | (ivec2((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0)))) << 0)) * 1)), 1)))), (int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0)))) << 0)) * 1)), 1), (ivec2((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0)))) << 0)) * 1)), 1)) | (ivec2((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-61284) : 64, (false ? _GLF_FUZZED(-61284) : 64) ^ 0)))) << 0)) * 1)), 1))))) | 0)))) ^ ((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), max(int(4), int(4))), (int(4)) ^ 0), (true ? int(4) : _GLF_FUZZED(-76903))), int(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | 0), 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)), ((int(5))) << 0) + 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | 0), 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)), ((int(5))) << 0) + 0)))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | 0), 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)), ((int(5))) << 0) + 0))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), ((~ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) | (4))))), 4))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), (~ ((~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))))) << 0)))) / 1))), (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), ((~ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) / ((((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), 4, 4))))) >> 0))) << 0)))))) | 0)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
