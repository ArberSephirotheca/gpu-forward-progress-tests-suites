#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize.x))), (~ (~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | ((~ (gl_WorkGroupSize.x))))) ^ 0u))) * ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | (_GLF_IDENTITY(4u, ~ (~ (4u)))))), uint(4u)))), min(~ (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), _GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize.x))), max(~ (~ (~ (gl_WorkGroupSize.x))), ~ (~ (~ (gl_WorkGroupSize.x))))))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), min(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u ^ (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (gl_WorkGroupSize.x))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (gl_WorkGroupSize.x))) / 1u), clamp(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ (~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), min((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u))))))), _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (gl_WorkGroupSize.x))) | 0u))), uint(uvec2(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u ^ (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (gl_WorkGroupSize.x))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (gl_WorkGroupSize.x))) / 1u), clamp(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), ~ (~ (~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), min((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u))))))), _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (gl_WorkGroupSize.x))) | 0u))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))))), _GLF_IDENTITY(clamp(~ (~ _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) * 1u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), min(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (gl_WorkGroupSize.x)))), 1u * (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), clamp((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) | 0u))))))))), (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), min(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (gl_WorkGroupSize.x)))), 1u * (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), clamp((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) | 0u)))))))))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) ? _GLF_IDENTITY(clamp(~ (~ (gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) * 1u)), _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), min(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), uint(uvec2((~ (gl_WorkGroupSize.x)), 0u))), (~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x)))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (gl_WorkGroupSize.x)))), 1u * (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), clamp((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x)))), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))), max(clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))))) : ~ (~ (gl_WorkGroupSize.x))), min(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))), max(clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))))) : ~ (~ (gl_WorkGroupSize.x))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))), max(clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))))) : ~ (~ (gl_WorkGroupSize.x)))) * 1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))), max(clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))))) : ~ (~ (gl_WorkGroupSize.x))))))))))), 0u | (clamp(~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) + 0u), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)) * 1u, ((~ (gl_WorkGroupSize.x)) * 1u) << 0u))), _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), min(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))).x)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), ((false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u))), 1u * ((false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) - 0u)))))))), 1u * (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (gl_WorkGroupSize.x))))))))))) : _GLF_FUZZED(subgroup_local_id)))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id));
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u), (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) + 0u, (((workgroup_base)) + 0u) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) >> 0u) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) / 1u)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), subgroup_base)), subgroup_base, subgroup_base)), (subgroup_base) | (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, (true) && true)))), false, false))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))), bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false), false)))))))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))), ! (! (! (bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(true, (true) && true)), true))))), false, false))))))))) || false)))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, (true) && true)))), false, false))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), ! (! ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))))))) || false))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), true && (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || (true)))), ((! (_GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || (true))))) && true)))))), bool(bvec2(true, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false || (_GLF_IDENTITY(false, (false) && true)))) || false), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (false) && true)))) || false))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(true, true)), false, false, false)), (bool(bvec4(bool(bvec2(true, true)), false, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(true, true)), false, false, false)), (bool(bvec4(bool(bvec2(true, true)), false, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false), false)), false))))))))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))), ! (! (! (bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (true) && true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec2(true, _GLF_IDENTITY(true, (true) && true)))))))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(true, (true) && true)), true))))), false, false))))))))) || false)))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? workgroup_base : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (true ? max(workgroup_base, workgroup_base) : _GLF_FUZZED(subgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true)))))))))))) && true)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || _GLF_IDENTITY(false, ! (! (false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true))), false, false))) || false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))) && true)), false || ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || _GLF_IDENTITY(false, ! (! (false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)))))) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || _GLF_IDENTITY(false, ! (! (false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true))), false, false))) || false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))) && true)), false || ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || _GLF_IDENTITY(false, ! (! (false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)))))) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || _GLF_IDENTITY(false, ! (! (false))), ! (! ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || _GLF_IDENTITY(false, ! (! (false))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, (true) && true)))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, _GLF_IDENTITY(((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))))), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true))), false, false))) || false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tanh(-9.5)) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), false, true), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(48.72)), bvec2(true, false))).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(48.72)), bvec2(true, false))).x < injectionSwitch.y)) && true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(true, true))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ! (! ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ! (! ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))) || false))) && true)), false || _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (_GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec4(bool(bvec2(true, true)), false, false, false)))) && true)), false, false))) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)))))) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true, true && (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))))) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-92.66, -6.5)) : injectionSwitch))))) - vec2(0.0, 0.0)).y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true))))), (((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (_GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec4(bool(bvec2(true, true)), false, false, false)))) && true)), false, false))) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false, ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)))))) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true, true && (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))))) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-92.66, -6.5)) : injectionSwitch))))) - vec2(0.0, 0.0)).y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))), false, false))) || false, ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)))))) && true)))))))))) ? workgroup_base : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (true ? max(workgroup_base, workgroup_base) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, (0u | 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false), false, false))) || false)))) && true)))), bool(bool(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false)))) && true)))), (_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false)))) && true)))), bool(bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false)))) && true)))))))) && true))))) ? workgroup_base : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (true ? max(workgroup_base, workgroup_base) : _GLF_FUZZED(subgroup_size)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true), true)), false, false)))), false, false))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false)))) && true)))), bool(bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), false)))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), false)))), false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), true))))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), true))))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))), false, false))) || false)))) && true)))))))) ? workgroup_base : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (true ? max(workgroup_base, workgroup_base) : _GLF_FUZZED(subgroup_size)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false)))) && true)))), bool(bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false)))) && true)))))))) ? workgroup_base : _GLF_FUZZED(workgroup_base))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false)))) && true)))), bool(bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false)))) && true)))))))) ? workgroup_base : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (true ? max(workgroup_base, workgroup_base) : _GLF_FUZZED(subgroup_size))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || _GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))), ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)))) && true) || _GLF_IDENTITY(false, false || (false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false), true))), false, false))) || _GLF_IDENTITY(false, false || (false)))))) || false), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false)))) && true))))) ? workgroup_base : _GLF_FUZZED(workgroup_base))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(true, true))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(true, true))), false, false)))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || _GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))), (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false, false))), ! (! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false, false))), ! (! ((bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false, false)))))))))) && true) || _GLF_IDENTITY(false, false || (false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false), true))), false, false))) || _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))))))) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))))), false)), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))) || false)))) && true))))) ? workgroup_base : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))), workgroup_base), (true ? max(workgroup_base, workgroup_base) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * ((workgroup_base))), ((workgroup_base)) >> 0u) | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u | (_GLF_FUZZED(workgroup_id))), _GLF_FUZZED(workgroup_id))) : ~ (0u))))), 0u, 0u)), (0u) + 0u), (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)) / 1u), ~ (~ ((workgroup_base))))) >> _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u))) | (uvec2(0u, 0u))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)) / 1u), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u))))) >> _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u))) | (uvec2(0u, 0u)), clamp((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u))) | (uvec2(0u, 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u))) | (uvec2(0u, 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u))) | (uvec2(0u, 0u))))))))))) | 0u) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) | 0u, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) | 0u), (max(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) | 0u, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), uint(uvec2(((workgroup_base)), 1u))) >> 0u) | 0u)) | (_GLF_IDENTITY(max(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), (((workgroup_base))) - 0u) >> 0u) | 0u, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) | 0u), (max(_GLF_IDENTITY((workgroup_base), ((_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(191450u))))) >> 0u) | 0u, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) >> _GLF_IDENTITY(0u, (0u) * 1u)) | 0u)) << 0u))), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) | 0u, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) | 0u), (max(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 0u)))), _GLF_IDENTITY(((workgroup_base)), (false ? _GLF_FUZZED(num_workgroup) : ((workgroup_base)))) >> 0u) | 0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) | 0u, clamp(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) | 0u, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) | 0u, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) | 0u)), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) | 0u) << 0u) : _GLF_FUZZED((mat4x3(_GLF_IDENTITY(2573.1946, clamp(2573.1946, 2573.1946, 2573.1946)), 7192.5672, 952.759, 6.9, -273.056, 85.17, -291.003, -22.48, 47.14, -3.8, 6.5, 5.1) , num_workgroup)))))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 1u)), uint(uvec2(uint(uvec2(workgroup_base, 1u)), 1u))))))), _GLF_IDENTITY(((workgroup_base)), ~ (_GLF_IDENTITY(~ (((workgroup_base))), (~ (((workgroup_base)))) << 0u))) >> 0u) | 0u, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u), (true ? _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))) >> 0u) : _GLF_FUZZED(subgroup_size))) | 0u), (max(_GLF_IDENTITY((workgroup_base), ((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))))) >> 0u) | 0u, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), 0u + (((workgroup_base)))) >> 0u) | 0u)) << 0u))))))) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | (subgroup_base), max(_GLF_IDENTITY((subgroup_base) | (subgroup_base), ((subgroup_base) | (subgroup_base)) >> 0u), _GLF_IDENTITY((subgroup_base) | (subgroup_base), (_GLF_IDENTITY((subgroup_base) | (subgroup_base), 1u * ((subgroup_base) | (subgroup_base)))) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (workgroup_base) | 0u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(num_workgroup) : subgroup_base))) : subgroup_base))), ((subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : subgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : subgroup_base))), (true ? (_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : subgroup_base))) : _GLF_FUZZED(subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : subgroup_base, (true ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : subgroup_base : _GLF_FUZZED(subgroup_base))))))))) | ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : subgroup_base))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(num_workgroup) : subgroup_base))) : subgroup_base))), ((subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : subgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1660.1659)), float(injectionSwitch.y), bool(true))))) ? _GLF_FUZZED(subgroup_base) : subgroup_base))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : subgroup_base))) : _GLF_FUZZED(subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : subgroup_base)))))) | ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : subgroup_base)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) << 0u) : _GLF_FUZZED(uvec3(49996u, 53097u, 58254u)[0]))), workgroup_base)), (workgroup_base) | 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (subgroup_base) | (subgroup_base)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) | 0u, _GLF_IDENTITY(min((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 1u, 1u)))) ^ 0u)) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | 0u, (workgroup_base) | 0u, (workgroup_base) | 0u), 1u * (clamp((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | 0u, (workgroup_base) | 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | _GLF_IDENTITY(0u, (0u) - 0u), (workgroup_base) | 0u, (workgroup_base) | 0u), 1u * (clamp((workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), (uvec4(0u, 1u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))))) / _GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | 0u, (workgroup_base) | 0u))))), ~ (~ (min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | 0u, (workgroup_base) | 0u, (workgroup_base) | 0u), 1u * (clamp((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | 0u, (workgroup_base) | 0u))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | _GLF_IDENTITY(0u, (0u) - 0u), (workgroup_base) | 0u, (workgroup_base) | 0u), 1u * (clamp((workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), (uvec4(0u, 1u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))))) / _GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | 0u, (workgroup_base) | 0u))))), ~ (~ (min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | 0u, (workgroup_base) | 0u, (workgroup_base) | 0u), 1u * (clamp((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | 0u, (workgroup_base) | 0u))))))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec3((_GLF_IDENTITY(min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | _GLF_IDENTITY(0u, (0u) - 0u), (workgroup_base) | 0u, (workgroup_base) | 0u), 1u * (clamp((workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), (uvec4(0u, 1u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))))) / _GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | 0u, (workgroup_base) | 0u))))), ~ (~ (min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | 0u, (workgroup_base) | 0u, (workgroup_base) | 0u), 1u * (clamp((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | 0u, (workgroup_base) | 0u))))))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), 0u + (uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | _GLF_IDENTITY(0u, (0u) - 0u), (workgroup_base) | 0u, (workgroup_base) | 0u), 1u * (clamp((workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), (uvec4(0u, 1u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))))) / _GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | 0u, (workgroup_base) | 0u))))), ~ (~ (min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | 0u, (workgroup_base) | 0u, (workgroup_base) | 0u), 1u * (clamp((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | 0u, (workgroup_base) | 0u))))))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec3((_GLF_IDENTITY(min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | _GLF_IDENTITY(0u, (0u) - 0u), (workgroup_base) | 0u, (workgroup_base) | 0u), 1u * (clamp((workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), (uvec4(0u, 1u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))))) / _GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | 0u, (workgroup_base) | 0u))))), ~ (~ (min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | 0u, (workgroup_base) | 0u, (workgroup_base) | 0u), 1u * (clamp((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | 0u, (workgroup_base) | 0u))))))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) >> 0u)), (_GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | 0u, (workgroup_base) | 0u, (workgroup_base) | 0u), 1u * (clamp((workgroup_base) | 0u, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))), clamp(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))))) | 0u, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u) | 0u))))), (_GLF_IDENTITY(min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | _GLF_IDENTITY(0u, (0u) - 0u), (workgroup_base) | 0u, (workgroup_base) | 0u), 1u * (clamp((_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))) | 0u, _GLF_IDENTITY((workgroup_base), min((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base))), (workgroup_base))) | 0u, (workgroup_base) | 0u))))), ~ (~ (min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(clamp((workgroup_base) | 0u, (workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, (_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) >> 0u)) | (_GLF_IDENTITY((workgroup_base) | 0u, (_GLF_IDENTITY((workgroup_base) | 0u, clamp((workgroup_base) | 0u, (workgroup_base) | 0u, (workgroup_base) | 0u))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1u * (clamp((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | 0u, (workgroup_base) | 0u))))))))) >> 0u))) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | 0u, (workgroup_base) | 0u, (workgroup_base) | 0u), 1u * (clamp((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | 0u, (workgroup_base) | 0u)))))), max(_GLF_IDENTITY((workgroup_base) | 0u, min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(clamp((workgroup_base) | 0u, (workgroup_base) | _GLF_IDENTITY(0u, 0u + (0u)), (workgroup_base) | 0u), _GLF_IDENTITY((clamp((workgroup_base) | 0u, (workgroup_base) | 0u, (workgroup_base) | 0u)), ((clamp((workgroup_base) | 0u, (workgroup_base) | 0u, (workgroup_base) | 0u))) << 0u) >> 0u), 1u * (clamp((workgroup_base) | 0u, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), min((workgroup_base), (workgroup_base))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), 1u * (_GLF_IDENTITY(0u, (0u) | (0u))))))) | (0u))) / 1u), (workgroup_base) | 0u)))))), _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY(0u, (0u) << 0u), min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | 0u, (workgroup_base) | 0u, (workgroup_base) | 0u), _GLF_IDENTITY(1u * (clamp((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | 0u, (workgroup_base) | 0u)), ~ (~ (1u * (_GLF_IDENTITY(clamp((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))) * 1u), (workgroup_base))) | 0u, (workgroup_base) | 0u), 0u ^ (clamp((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))) * 1u), (workgroup_base))) | 0u, (workgroup_base) | 0u))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, 0u + (_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) / 1u))), min((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(clamp((workgroup_base) | _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4752.0629), _GLF_FUZZED(-3406.3264)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)) ? 0u : _GLF_FUZZED(bitfieldInsert(subgroup_size, subgroup_id, 38423, 64772)))), (workgroup_base) | _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u) | 0u), 1u * (clamp((workgroup_base) | _GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(min((workgroup_base), (workgroup_base)), ~ (~ (_GLF_IDENTITY(min((workgroup_base), (workgroup_base)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), uint(uvec2(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), 1u))))), (workgroup_base)), clamp(min((workgroup_base), (workgroup_base)), min((_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(atomicCompSwap(workgroup_id, subgroup_size, subgroup_local_id))))), (workgroup_base)), min((workgroup_base), (workgroup_base))))), ((_GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), uint(uvec2(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), 1u))))), (workgroup_base)), clamp(min((workgroup_base), (workgroup_base)), min((_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(atomicCompSwap(workgroup_id, subgroup_size, subgroup_local_id))))), (workgroup_base)), min((workgroup_base), (workgroup_base)))))) - 0u)))))) | 0u, (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), (workgroup_base) / 1u), workgroup_base, workgroup_base))) | 0u))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) ^ 0u) | (_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) | (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u)))))))), _GLF_IDENTITY(((subgroup_base) | (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), 1u * (~ (subgroup_base))), max(~ _GLF_IDENTITY((subgroup_base), ((subgroup_base)) | (_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))))), ~ (subgroup_base))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))))))))))) / 1u, min(_GLF_IDENTITY(((subgroup_base) | (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base)))))))), 0u ^ (_GLF_IDENTITY(clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base)))))))), min(clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base)))))))), clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))))))))))))))) / 1u, (false ? _GLF_FUZZED(subgroup_id) : ((_GLF_IDENTITY(subgroup_base, (subgroup_base) << _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u))))) | (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), max(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), _GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) * 1u))))))))))) / 1u)), ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), max(~ _GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))))), ~ (subgroup_base))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (subgroup_base), max(~ _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(uint(uint((subgroup_base))), (_GLF_IDENTITY(uint(uint((subgroup_base))), min(uint(uint((subgroup_base))), uint(uint((subgroup_base)))))) * 1u)), ~ (subgroup_base))))))))))) / 1u)))))))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size)))), 0u ^ (~ (~ _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))) : _GLF_FUZZED(floatBitsToUint(-5106.4223)))))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), uint(uvec4((workgroup_base + subgroup_base), 0u, 1u, 0u)))))) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u))), max(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) << 0u)) + subgroup_base)))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))) * (subgroup_local_id)) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) * 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) + subgroup_base, 1u, 0u, 1u)))) >> 0u) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1), ((subgroup_local_id + 1)) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) % subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1), ((subgroup_local_id + 1)) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) % subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u)) ^ 0u)))));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) | 0), 64, 4);
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
