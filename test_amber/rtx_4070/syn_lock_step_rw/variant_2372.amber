#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(2710.9836, 22.23, -7373.5230).s), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false)))))), bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), float(mat2x4(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), (vec4(1.0, 0.0, 1.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))), 0.0))), (false ? _GLF_FUZZED(-4.3) : _GLF_IDENTITY(float(injectionSwitch.x), float(mat2x4(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x), (float(injectionSwitch.x)) - 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), (vec4(1.0, 0.0, 1.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))), 0.0))))) : _GLF_FUZZED(-69.32))), float(_GLF_FUZZED(47.73)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-920.006) : injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) / 1.0)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-26.72)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(1.9, 3.6, -502.494).b)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((383.522 * 8.6))), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(230.095) : injectionSwitch.y))), bool(true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), false, false, false))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0], injectionSwitch[1])))).x > injectionSwitch.y))) && true)))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)).x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y)) && true)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(injectionSwitch.x > injectionSwitch.y)))) && true)), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(injectionSwitch.x > injectionSwitch.y)))) && true))) || false)) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec2(-3.5, 9196.7802).y)))) + 0.0))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, false || (true))))))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))) || false))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-69.00), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-27.19 * -6.5))), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)), (((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0)))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat3x4(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(47.28)), float(1.0), bool(true)))))))))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(47.28)), float(1.0), bool(true)))))))))).x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)), ! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))))), bool(bvec2(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), false)), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)), ! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))))), bool(bvec2(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), false)), false))))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), max(vec2(vec4(injectionSwitch, 1.0, 0.0)), vec2(vec4(injectionSwitch, 1.0, 0.0))))).x > injectionSwitch.y, true, _GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), ! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))), bvec3(bvec4(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))), false)))), false))))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)), ! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))))), bool(bvec2(bool(bvec3(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), true, true)), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, true)), true && (bool(bvec3(! (false), true, true)))))) || false), true, true, false))))))))), false))))) || false))))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, true))))))) || false))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(47.28)), float(1.0), bool(true)))))))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-1.7)), bool(false))))), _GLF_ONE(1.0, injectionSwitch.y))))))).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))), ! (! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)))))))), bool(_GLF_IDENTITY(bvec2(bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-378.559) : injectionSwitch.x)) : _GLF_FUZZED(vec4(-0.6, -5.2, 141.428, 4630.0695)[3]))) > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), false)), false), bvec2(bvec3(bvec2(bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-378.559) : injectionSwitch.x)) : _GLF_FUZZED(vec4(-0.6, -5.2, 141.428, 4630.0695)[3]))) > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), false)), false), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)), ! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))))), bool(bvec2(bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), true)), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), false)), false))))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), max(vec2(vec4(injectionSwitch, 1.0, 0.0)), vec2(vec4(injectionSwitch, 1.0, 0.0))))).x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)), ! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))))), bool(bvec2(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), false)), false))))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))), ! (! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))), ! (! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)))))), false, false), false))))))), bool(bvec2(bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.3) : injectionSwitch.x)) > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))))))), false))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), true, true), true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)), ! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))))), bool(bvec2(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true) || (false)), false)), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y, true, true))))), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))), ! (! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)))))))), bool(_GLF_IDENTITY(bvec2(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), false)), false), true, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), false)), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), false)), false), true, false)), true, false))))))))))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(round(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), max(vec2(vec4(injectionSwitch, 1.0, 0.0)), vec2(vec4(injectionSwitch, 1.0, 0.0))))).x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)), ! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))))), bool(bvec2(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), false)), false))))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)), ! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))))), bool(bvec2(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))), ((_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))) || false)))))), false))))) || false)) && true))))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)))))))))))) || false)))), false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)), ! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))))), bool(bvec2(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), false)), false))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true, true)), false, false)), ! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))))), bool(bvec2(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), false)), false))))))))))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), true && (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(23.27, 9479.0436)))))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)), ! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false))))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), _GLF_IDENTITY(false, false || (false)), false)), false)))))))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(injectionSwitch, injectionSwitch, vec2(9956.8516, 3.7))) : injectionSwitch, min(false ? _GLF_FUZZED(clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), injectionSwitch, vec2(9956.8516, 3.7))) : injectionSwitch, false ? _GLF_FUZZED(clamp(injectionSwitch, injectionSwitch, vec2(9956.8516, 3.7))) : injectionSwitch))))) + vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(injectionSwitch, injectionSwitch, vec2(9956.8516, 3.7))) : injectionSwitch, min(false ? _GLF_FUZZED(clamp(injectionSwitch, injectionSwitch, vec2(9956.8516, 3.7))) : injectionSwitch, false ? _GLF_FUZZED(clamp(injectionSwitch, injectionSwitch, vec2(9956.8516, 3.7))) : injectionSwitch))))) + vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))).x > injectionSwitch.y)))) && true))) || false)), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 1.0, abs(1.0), 1.0, exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))), determinant(mat4(1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(44.94)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.5)), vec2(_GLF_FUZZED(-2429.1283), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))).x > injectionSwitch.y)))), _GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))), false)), ! (! (bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))).x > injectionSwitch.y, true, true)), false, _GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(bool(bvec2(bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)), _GLF_IDENTITY(false, false || (false)))), false)), true && (bool(bvec2(bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)), _GLF_IDENTITY(false, false || (false)))), false)))))))))), (_GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)), ! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))))), bool(bvec2(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, false || (false)))), false)))))))), bool(bvec4(true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, false)), ! (! (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, _GLF_IDENTITY(false, false || (false))))))), bool(bvec2(bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), true))))), false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))) || false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(79.40), _GLF_IDENTITY(_GLF_FUZZED(-8.3), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_FUZZED(-8.3), min(_GLF_FUZZED(-8.3), _GLF_FUZZED(-8.3))), sqrt(0.0), exp(0.0), 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_FUZZED(-8.3), min(_GLF_FUZZED(-8.3), _GLF_FUZZED(-8.3))), sqrt(0.0), exp(0.0), 1.0), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_FUZZED(-8.3), min(_GLF_FUZZED(-8.3), _GLF_FUZZED(_GLF_IDENTITY(-8.3, (-8.3) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))))), sqrt(0.0), exp(0.0), 1.0))))) * mat2(1.0))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0))), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat4((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))), bvec2(true, true))), injectionSwitch)).y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(216.039, -4.9)) : injectionSwitch)).y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(216.039, -4.9)) : injectionSwitch)).y))))))), true && (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, length(vec2(0.0, 0.0)), 0.0, tan(0.0), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, sin(0.0), 0.0, 0.0)), 1.0, 1.0))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))), (false ? _GLF_FUZZED(uvec3(154537u, 74589u, 120399u)) : uvec3(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))))))))), ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), ~ (~ (uvec3(2u)))), uvec3(2u)))), (false ? _GLF_FUZZED(uvec3(152456u, _GLF_IDENTITY(22689u, (22689u) | 0u), 134052u)) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))), uvec3(uvec3((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))) || false)))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    barrier();
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)))), (max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))))) | (max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)))))))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), 1u * (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))))) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)))))), ((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))), (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))), (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))))))))))) / 1u) - 0u) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))), (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)))))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), 0u ^ (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)))))), ((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))))))) / 1u) - 0u) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u))))) >> 0u), (true ? _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))), 1u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u), uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)))))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((198946u * _GLF_IDENTITY(num_workgroup, 0u | (num_workgroup)))) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 0u)))))) | (workgroup_id)), (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), _GLF_IDENTITY((workgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ ((workgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(max(workgroup_id, workgroup_id), (max(workgroup_id, workgroup_id)) << 0u))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((198946u * num_workgroup)) : _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 1u), uvec2(0u, 0u) + (uvec2(workgroup_id, 1u))))), workgroup_id)))), clamp(_GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((198946u * num_workgroup)) : _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 1u), uvec2(0u, 0u) + (uvec2(workgroup_id, 1u))))), workgroup_id)))), _GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((198946u * num_workgroup)) : _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 1u), uvec2(0u, 0u) + (uvec2(workgroup_id, 1u))))), workgroup_id)))), _GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((198946u * num_workgroup)) : _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 1u), uvec2(0u, 0u) + (uvec2(workgroup_id, 1u))))), workgroup_id)))))), _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 0u)))))) | (workgroup_id)), (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(workgroup_id, workgroup_id), (max(workgroup_id, workgroup_id)) << 0u)))))) | 0u))) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u)))))) << 0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), ~ (~ (workgroup_id))))), clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), min((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))), (true ? (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), ~ (~ (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))))))) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), ~ (~ (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))))))) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), ~ (~ (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))))))) ^ 0u) / 1u)) >> 0u))) : _GLF_FUZZED(subgroup_local_id))) + 0u, (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))), workgroup_id)))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), _GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), 1u, 1u, 0u))), workgroup_size)) * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u, _GLF_IDENTITY(((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id), (uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u), workgroup_id)) / 1u)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id), (uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u), workgroup_id)) / 1u)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (false ? _GLF_FUZZED(_GLF_IDENTITY(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id), (uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u), workgroup_id)) / 1u)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) ^ 0u)) ^ 0u)))))) + 0u) - 0u, (((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u) - 0u) / 1u))))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(71.98) : 1.0))) - log(1.0)), injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), 1u * (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) | (~ (~ (workgroup_id))))))))), clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))), (true ? (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), ~ (~ (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))))))) ^ 0u)) : _GLF_FUZZED(subgroup_local_id))) + 0u, (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)), (_GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> (1u ^ 1u)) | (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((workgroup_id), ((workgroup_id)) / 1u))) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u, _GLF_IDENTITY(((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id), (uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u), workgroup_id)) / 1u)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u) - 0u, (((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u) - 0u) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), 1u * (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) | (~ (~ (workgroup_id))))))))), clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))), (true ? (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), ~ (~ (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))))))) ^ 0u)) : _GLF_FUZZED(subgroup_local_id))) + 0u, (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)), (_GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> (1u ^ 1u)) | (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((workgroup_id), ((workgroup_id)) / 1u))) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u, _GLF_IDENTITY(((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id), (uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u), workgroup_id)) / 1u)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u) - 0u, (((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u) - 0u) / 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), 1u * (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) | (~ (~ (workgroup_id))))))))), clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))), (true ? (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), ~ (~ (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))))))) ^ 0u)) : _GLF_FUZZED(subgroup_local_id))) + 0u, (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)), (_GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> (1u ^ 1u)) | (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((workgroup_id), ((workgroup_id)) / 1u))) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u, _GLF_IDENTITY(((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id), (uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u), workgroup_id)) / 1u)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u) - 0u, (((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u) - 0u) / 1u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), 1u * (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) | (~ (~ (workgroup_id))))))))), clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))), (true ? (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), ~ (~ (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))))))) ^ 0u)) : _GLF_FUZZED(subgroup_local_id))) + 0u, (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)), (_GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> (1u ^ 1u)) | (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((workgroup_id), ((workgroup_id)) / 1u))) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u, _GLF_IDENTITY(((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id), (uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u), workgroup_id)) / 1u)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u) - 0u, (((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u) - 0u) / 1u))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), 1u * (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) | (~ (~ (workgroup_id))))))))), clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))), (true ? (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), ~ (~ (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))))))) ^ 0u)) : _GLF_FUZZED(subgroup_local_id))) + 0u, (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)), (_GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> (1u ^ 1u)) | (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((workgroup_id), ((workgroup_id)) / 1u))) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u, _GLF_IDENTITY(((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id), (uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u), workgroup_id)) / 1u)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u) - 0u, (((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u) - 0u) / 1u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), 1u * (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) | (~ (~ (workgroup_id))))))))), clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))), (true ? (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), ~ (~ (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))))))) ^ 0u)) : _GLF_FUZZED(subgroup_local_id))) + 0u, (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)), (_GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> (1u ^ 1u)) | (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((workgroup_id), ((workgroup_id)) / 1u))) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u, _GLF_IDENTITY(((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id), (uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u), workgroup_id)) / 1u)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u) - 0u, (((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u) - 0u) / 1u)))))))) | 0u)))) | 0u)))), _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u)))))), 0u | ((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) ^ 0u, clamp((workgroup_id) ^ 0u, (workgroup_id) ^ 0u, (workgroup_id) ^ 0u))), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), max(workgroup_id, workgroup_id))))))), (true ? (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) : _GLF_FUZZED(subgroup_local_id))) + 0u, (0u ^ 0u) + (_GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), 1u * (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))))) + 0u) - 0u, (((workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uaddCarry(workgroup_size, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), workgroup_id)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) + 0u) - 0u) / 1u))))), _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))))))))) / _GLF_IDENTITY(1u, max(1u, 1u))) - 0u) ^ _GLF_IDENTITY(0u, min(0u, 0u)))) : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))) >> 0u)) - 0u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))) >> 0u)) - 0u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))) >> 0u)) - 0u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))) / 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, 1.0)), (true ? float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.5) : injectionSwitch.x)), 1.0, 1.0)) : _GLF_FUZZED(-1.1))))), bool(true))) > injectionSwitch.y) && true)))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1)), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((ivec4(68379, -10542, -24222, -8660) , atomicCompSwap(workgroup_id, workgroup_id, virtual_gid))) : subgroup_local_id)), max(subgroup_local_id, subgroup_local_id)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) + (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((ivec4(68379, -10542, -24222, -8660) , atomicCompSwap(workgroup_id, workgroup_id, virtual_gid))) : subgroup_local_id)), max(subgroup_local_id, subgroup_local_id))))))) + 1) - 0u)), (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) << 0u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 1, 0), (true ? ivec4(1, 0, 1, 0) : _GLF_FUZZED(ivec4(75765, -54957, 14355, 16685))))))), max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), (1), (1)))) - 0)) | ((1))), 0 | ((1))) >> (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), int(int(~ (int(0)))))))) | (int(0))))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u)))), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), (subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))) + 1), (subgroup_local_id + 1)))), ((_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 0u))))) + 1), (subgroup_local_id + 1))))) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) << 0u), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0), (ivec2(_GLF_IDENTITY(1, (1) | (1)), 0)) << ivec2(0, 0))), min(~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0), (ivec2(_GLF_IDENTITY(1, (1) | (1)), 0)) << ivec2(0, 0))), ~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0), (ivec2(_GLF_IDENTITY(1, (1) | (1)), 0)) << ivec2(0, 0)))))))))))), (subgroup_local_id + 1)))), (min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) << 0u), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1))))), (subgroup_local_id + 1))))) << 0u)) >> 0u)) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), (~ (~ (next_virtual_gid))) | (~ (~ (next_virtual_gid)))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) + 0.0)) + 0.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), cos(0.0), 1.0, 1.0, 0.0, 0.0)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true ? virtual_gid : _GLF_FUZZED(uaddCarry(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), workgroup_base, workgroup_size)), (true ? virtual_gid : _GLF_FUZZED(uaddCarry(workgroup_id, workgroup_base, workgroup_size))) + 0u)))], _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(subgroup_local_id))), 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (0 >> _GLF_IDENTITY(int(5), int(5))) + (64)), 64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5744.2720) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_DEAD(false), false))), (bool(bool(bvec2(_GLF_DEAD(false), false)))) && true)), (bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_DEAD(false), false))), (bool(bool(bvec2(_GLF_DEAD(false), false)))) && true))) || false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false))), false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
