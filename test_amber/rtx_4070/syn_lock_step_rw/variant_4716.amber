#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_35 {
 bvec2 _f0;
 mat3x2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_34 {
 mat4x3 _f0;
 uvec4 _f1;
 mat2x4 _f2;
 mat4x3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_33 {
 uvec4 _f0;
 vec4 _f1;
 uint read;
 vec3 _f2;
} ;

struct _GLF_struct_32 {
 vec2 _f0;
 bvec4 _f1;
 mat4x3 _f2;
 vec2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_36 {
 uint _f0;
 _GLF_struct_32 _f1;
 _GLF_struct_33 _f2;
 bvec3 _f3;
 _GLF_struct_34 _f4;
 _GLF_struct_35 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_30 {
 vec4 _f0;
 ivec3 _f1;
 vec3 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_31 {
 ivec2 _f0;
 _GLF_struct_30 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_28 {
 bvec4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_27 {
 int _f0;
} ;

struct _GLF_struct_29 {
 _GLF_struct_27 _f0;
 uvec4 _f1;
 _GLF_struct_28 _f2;
} ;

struct _GLF_struct_26 {
 mat2 _f0;
 uvec3 _f1;
 vec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_37 {
 _GLF_struct_26 _f0;
 _GLF_struct_29 _f1;
 _GLF_struct_31 _f2;
 _GLF_struct_36 _f3;
} ;

struct _GLF_struct_23 {
 bvec4 _f0;
 mat3x4 _f1;
 float _f2;
} ;

struct _GLF_struct_22 {
 vec4 _f0;
 uvec2 _f1;
 uint _f2;
 vec3 _f3;
 mat3x2 _f4;
 uint next_virtual_gid;
 mat3x2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_24 {
 _GLF_struct_22 _f0;
 _GLF_struct_23 _f1;
} ;

struct _GLF_struct_20 {
 uvec4 _f0;
 float _f1;
 mat2 _f2;
 ivec3 _f3;
 vec4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_19 {
 bool _f0;
 uint _f1;
} ;

struct _GLF_struct_18 {
 vec3 _f0;
} ;

struct _GLF_struct_17 {
 uvec3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_16 {
 uvec2 _f0;
 bvec2 _f1;
 uvec4 _f2;
 ivec3 _f3;
 uvec3 _f4;
 uvec3 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_21 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_19 _f3;
 _GLF_struct_20 _f4;
} ;

struct _GLF_struct_25 {
 bvec3 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_24 _f2;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 uvec4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_12 {
 uint _f0;
 mat2x4 _f1;
 mat3 _f2;
 mat4 _f3;
 float _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 ivec4 _f1;
 mat4 _f2;
 _GLF_struct_13 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_15 {
 uint virtual_gid;
 _GLF_struct_14 _f0;
} ;

struct _GLF_struct_9 {
 int _f0;
 mat2x3 _f1;
 mat3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 uvec2 _f1;
 uvec3 _f2;
 mat4x2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 mat3x2 _f2;
 bvec4 _f3;
 _GLF_struct_9 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 mat3x2 _f1;
 ivec4 _f2;
 uint workgroup_base;
} ;

struct _GLF_struct_4 {
 float _f0;
 vec2 _f1;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 ivec2 _f1;
 mat4x2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 uint workgroup_id;
 vec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_1 {
 float _f0;
 bvec4 _f1;
 ivec4 _f2;
 bool _f3;
 mat4 _f4;
} ;

struct _GLF_struct_0 {
 bool _f0;
 bool _f1;
 float _f2;
 ivec2 _f3;
 mat4 _f4;
 mat2x3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_2 {
 int _f0;
 bool _f1;
 _GLF_struct_0 _f2;
 mat2x3 _f3;
 _GLF_struct_1 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 _GLF_struct_5 _f1;
 uvec4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.8, -922.859)) : injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))) / _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8743.3420)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8743.3420)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) / 1.0), 1.0, 1.0))), vec2(vec4(vec2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8743.3420)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), max(clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))))), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8743.3420)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) / 1.0), 1.0, 1.0))), 1.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), min(_GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(vec4(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)) / sqrt(vec2(1.0, 1.0))))), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-83.21)), float(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), 1.0 * _GLF_IDENTITY((length(vec3(0.0, 0.0, 0.0))), max((length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY((length(vec3(0.0, 0.0, 0.0))), ((length(vec3(0.0, 0.0, 0.0)))) - 0.0))))), bool(true))), 0.0), (true ? vec4(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), length(vec3(0.0, 0.0, 0.0)), 0.0) : _GLF_FUZZED(_GLF_IDENTITY(vec4(14.67, -619.602, -31.71, 48.71), (vec4(14.67, -619.602, -31.71, 48.71)) / vec4(1.0, 1.0, 1.0, 1.0))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))))))) / vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(injectionSwitch, injectionSwitch)).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))))) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false, true, true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(round(8.0)) : _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), clamp(float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(76.38))), 0.0, 0.0, 0.0, 0.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, tan(0.0), 1.0, 1.0))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(46.00))), injectionSwitch.y))))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(584.371)), bool(false))) < injectionSwitch.y))))) || false))))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_2(1, _GLF_IDENTITY(true, ! (! (true))), _GLF_struct_0(true, true, 1.0, ivec2(1), mat4(1.0), mat2x3(1.0), mat3x2(1.0)), mat2x3(1.0), _GLF_struct_1(1.0, bvec4(true), ivec4(1), _GLF_IDENTITY(true, (true) && true), mat4(1.0)), uvec2(1u)), _GLF_struct_5(_GLF_struct_3(mat3x2(1.0), ivec2(1), mat4x2(1.0), uvec3(1u)), _GLF_struct_4(1.0, vec2(1.0)), gl_WorkGroupID.x, _GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec3(-66.01, 1.5, -1.8)) : vec3(1.0), max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec3(-66.01, 1.5, -1.8)) : vec3(1.0), (true ? _GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(-66.01, 1.5, -1.8)) : vec3(1.0) : _GLF_FUZZED(vec3(214.867, -8461.8885, 0.0)))), false ? _GLF_FUZZED(vec3(-66.01, 1.5, -1.8)) : vec3(1.0))))), true), uvec4(1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), true && (! ((injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_10(_GLF_struct_7(mat4(1.0)), _GLF_struct_8(mat2(1.0), uvec2(1u), _GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(135380u, 34296u, 115718u)) : uvec3(1u))), mat4x2(1.0), ivec3(1)), mat3x2(1.0), bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_struct_9(1, mat2x3(1.0), mat3(1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(1.0, 1.0, 1.0)))), vec3(1.0)), mat3x2(1.0), ivec4(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) * 1) : _GLF_FUZZED((39771 % _GLF_IDENTITY(-43595, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10282) : -43595))))))), workgroup_size * _GLF_struct_replacement_6._f1.workgroup_id);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_IDENTITY(_GLF_struct_replacement_11.workgroup_base, (_GLF_struct_replacement_11.workgroup_base) + 0u) + subgroup_base + subgroup_local_id, _GLF_struct_14(_GLF_struct_12(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u | (_GLF_FUZZED(subgroup_id))), (true ? 1u : _GLF_FUZZED(subgroup_id)) | (true ? 1u : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1u, (1u) | (0u & 156574u)) : _GLF_FUZZED(subgroup_id), (true ? 1u : _GLF_FUZZED(subgroup_id)) | (true ? 1u : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_size)))) | (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), (true ? 1u : _GLF_FUZZED(subgroup_id)) | (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))) || false)))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))) && true)), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))))) || false)))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))) && true))))))))) ? 1u : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_size)), 0u + ((true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), (true ? 1u : _GLF_FUZZED(subgroup_id)) | (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))) && true)))))) ? 1u : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_size))))))), mat2x4(1.0), mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)), _GLF_IDENTITY(((mat4(1.0))), _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) : _GLF_FUZZED(-2916.4409)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))) / 1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.2)), float(0.0), bool(true)))) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))) + ((_GLF_IDENTITY(_GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) - _GLF_IDENTITY(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, sqrt(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))) + (0.0)), 0.0)))), transpose(transpose(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(725.292))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))))))))) * mat4(1.0)) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), mix(float(_GLF_FUZZED(-5397.7292)), float(min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), bool(true))))), float(_GLF_FUZZED(-9.2)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), mix(float(_GLF_FUZZED(-5397.7292)), float(min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), bool(true))))), float(_GLF_FUZZED(-9.2)), bool(false))), mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), mix(float(_GLF_FUZZED(-5397.7292)), float(min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), bool(true))))), float(_GLF_FUZZED(-9.2)), bool(false)))), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), mix(float(_GLF_FUZZED(-5397.7292)), float(min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), bool(true))))), float(_GLF_FUZZED(-9.2)), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), mix(float(_GLF_FUZZED(-5397.7292)), float(min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), bool(true))))), float(_GLF_FUZZED(-9.2)), bool(false))))), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), (mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(972.003)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))) / 1.0), 1.0)) - mat4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.9) : 0.0)))), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(max(9.6, -2802.1167)))), mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(max(9.6, -2802.1167))))), float(_GLF_FUZZED(vec2(-413.842, -7903.0212).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) * mat4(1.0)) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-9.2)), bool(false))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), (mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) * mat4(1.0)) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-9.2)), bool(false))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), (mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false))))), (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false)))))) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 1.0)), min(float(mat3x4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 1.0)), float(mat3x4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 1.0))))))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) + (1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (transpose(_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) * mat4(1.0)) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), (vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)) + vec3(0.0, 0.0, 0.0))))), float(_GLF_FUZZED((-3.3 * 82.21))), bool(false))), 1.0), max(clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), 1.0))), float(_GLF_FUZZED(-9.2)), bool(false))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), (mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), min((1.0), (1.0)))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(89.21))), 1.0)) - mat4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, log(1.0))), (false ? _GLF_FUZZED(-6.1) : float(mat2x4(0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, log(1.0)))))), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) * mat4(1.0)) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-9.2)), bool(_GLF_IDENTITY(false, (false) && true)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), (mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false))))), (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false))), clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false))), (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false))) : _GLF_FUZZED(552.840))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false)))))), float(_GLF_FUZZED(-3.4)), bool(false)))))) / 1.0)) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (transpose(_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) * mat4(1.0)) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(425.162))))), 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), 1.0))), float(_GLF_FUZZED(-9.2)), bool(false))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), (mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), min((1.0), (1.0)))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(89.21))), 1.0)) - mat4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, log(1.0))), (false ? _GLF_FUZZED(-6.1) : float(mat2x4(0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, log(1.0)))))), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(0.0), float(_GLF_FUZZED(67.48)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) * mat4(1.0)))), 1.0, mat4x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), ivec4(1), mat4(1.0), _GLF_struct_13(bvec2(true), _GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(80588u, 18462u, 145081u, 101857u)) : _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))))), mat4(1.0)), _GLF_IDENTITY(mat3(1.0), mat3(mat3x4(mat3(1.0))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(bvec3(true), _GLF_struct_21(_GLF_struct_16(uvec2(1u), bvec2(true), uvec4(1u), ivec3(1), uvec3(1u), uvec3(1u), bvec3(true)), _GLF_struct_17(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u)), mat4x3(1.0)), _GLF_struct_18(vec3(1.0)), _GLF_struct_19(true, 1u), _GLF_struct_20(uvec4(1u), 1.0, _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (true ? _GLF_IDENTITY(transpose(mat2(1.0)), transpose(transpose(transpose(mat2(1.0))))) : _GLF_FUZZED(mat2(-62.83, 779.370, -7132.5178, -1315.5965)))))), ivec3(1), vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), mat2x3(1.0))), _GLF_struct_24(_GLF_struct_22(vec4(1.0), _GLF_IDENTITY(uvec2(1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)), 0u), (uvec2(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)), 0u)) + uvec2(0u, 0u)) + (uvec2(1u))), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec2(1u), ~ (~ (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))))), uvec2(1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(uvec2(1u), uvec2(1u)), ~ (~ (min(uvec2(1u), uvec2(1u)))))), uvec2(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(min(uvec2(1u), uvec2(1u)), ~ (~ _GLF_IDENTITY((min(uvec2(1u), uvec2(1u))), uvec2(_GLF_IDENTITY(uvec3((min(uvec2(1u), uvec2(1u))), 0u), (uvec3((min(uvec2(1u), uvec2(1u))), 0u)) + uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(min(uvec2(1u), uvec2(1u)), ~ (~ (_GLF_IDENTITY(min(uvec2(1u), uvec2(1u)), uvec2(0u, 0u) | (_GLF_IDENTITY(min(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) / uvec2(1u, 1u)), uvec2(1u)), _GLF_IDENTITY(uvec2(uvec2(min(uvec2(1u), uvec2(1u)))), _GLF_IDENTITY(uvec2(uvec2(uvec2(uvec2(min(uvec2(1u), uvec2(1u)))))), max(uvec2(uvec2(uvec2(uvec2(min(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)), uvec2(1u)))))), uvec2(uvec2(uvec2(uvec2(_GLF_IDENTITY(min(uvec2(1u), uvec2(1u)), clamp(min(uvec2(1u), uvec2(1u)), min(uvec2(1u), uvec2(1u)), _GLF_IDENTITY(min(uvec2(1u), uvec2(1u)), (min(uvec2(1u), uvec2(1u))) - uvec2(0u, 0u)))))))))))))))))) - ((uvec2(0u, 0u) | uvec2(0u, 0u)) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), 1u, _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.6 + -79.87))), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(4377.9305)), float(float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(842.166)), float(1.0), bool(true))), (1.0) - 0.0))))), bool(true))), bool(true)))), _GLF_IDENTITY(max(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(_GLF_IDENTITY(true, false || (true)))))), (false ? _GLF_FUZZED(vec3(464.075, -5.0, _GLF_IDENTITY(385.679, (false ? _GLF_FUZZED(9.5) : 385.679)))) : vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)), float(vec3(_GLF_IDENTITY(mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)), mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)), mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)))), 0.0, 1.0))), 0.0, exp(0.0), 1.0)), max(float(mat2(_GLF_IDENTITY(mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)), float(vec3(_GLF_IDENTITY(mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)), mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)), mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)))), 0.0, 1.0))), 0.0, exp(0.0), 1.0)), float(mat2(_GLF_IDENTITY(mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)), float(vec3(_GLF_IDENTITY(mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)), mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)), mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)))), 0.0, 1.0))), 0.0, exp(0.0), 1.0)))))))))), min(max(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)))), (false ? _GLF_FUZZED(vec3(464.075, -5.0, 385.679)) : vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true))))))), max(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(vec3(_GLF_IDENTITY(464.075, float(mat2x4(464.075, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, tan(0.0)))), -5.0, 385.679)) : vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-8.6 + -79.87))), float(1.0), bool(true)))))))))), mat3x2(1.0), _GLF_struct_replacement_11.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), mat3x2(1.0), ivec4(1)), _GLF_struct_23(bvec4(true), mat3x4(1.0), 1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_37 _GLF_struct_replacement_37 = _GLF_struct_37(_GLF_struct_26(mat2(1.0), uvec3(1u), vec3(1.0), bvec4(true)), _GLF_struct_29(_GLF_struct_27(1), uvec4(1u), _GLF_struct_28(bvec4(true), mat4x3(1.0))), _GLF_struct_31(ivec2(1), _GLF_struct_30(vec4(1.0), ivec3(1), vec3(1.0), _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)) | (ivec2(1)), (_GLF_IDENTITY((ivec2(1)) | (ivec2(1)), (false ? _GLF_FUZZED(ivec2(-29090, -20097)) : (ivec2(1)) | (ivec2(1))))) | (_GLF_IDENTITY((ivec2(1)) | (ivec2(1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (ivec2(1)) | (ivec2(1)) : _GLF_FUZZED(ivec2(-56073, 69854)))))))), mat4(1.0)), _GLF_struct_36(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_struct_32(vec2(1.0), bvec4(true), mat4x3(1.0), vec2(1.0), mat2x4(1.0)), _GLF_struct_33(uvec4(1u), vec4(1.0), atomicLoad(buf[_GLF_struct_replacement_15.virtual_gid], 4, 64, 2), _GLF_IDENTITY(vec3(1.0), (false ? _GLF_FUZZED(vec3(836.988, -0.6, -215.776)) : vec3(1.0)))), bvec3(true), _GLF_struct_34(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), cos(0.0))), (float(mat3x4(1.0, round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), cos(0.0)))) - 0.0))), uvec4(1u), mat2x4(1.0), mat4x3(1.0), mat3(1.0)), _GLF_struct_35(bvec2(true), mat3x2(1.0), bvec2(true)), bvec3(true)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[_GLF_struct_replacement_25._f2._f0.next_virtual_gid], uint(1), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, true, false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[_GLF_struct_replacement_15.virtual_gid], _GLF_struct_replacement_37._f3._f2.read, _GLF_IDENTITY(4, (4) | (4)), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bool(bool(bvec4(false, true, true, false)))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bool(bool(bvec4(false, true, true, false)))))))), (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
