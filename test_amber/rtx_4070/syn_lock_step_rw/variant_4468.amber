#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (false ? _GLF_FUZZED((uvec3(20015u, 147840u, 170903u) << uvec3(152119u, 175424u, _GLF_IDENTITY(39779u, (39779u) << 0u)))) : max(gl_WorkGroupSize, gl_WorkGroupSize)))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_size) : (gl_WorkGroupSize.x))) | _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) << _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(6078.6864))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) * 1u)) / 1u, (true ? (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) * 1u)) / 1u : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), min(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), (workgroup_size) * 1u)) / 1u, (true ? (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u)) / 1u : _GLF_FUZZED(subgroup_id))))) << 0u) * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) * 1u)) / 1u, (true ? (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) * 1u)) / 1u : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), min(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), (workgroup_size) * 1u)) / 1u, (true ? (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u)) / 1u : _GLF_FUZZED(subgroup_id))))) << 0u) * workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) * 1u)) / 1u, (true ? (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) * 1u)) / 1u : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), min(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), (workgroup_size) * 1u)) / 1u, (true ? (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u)) / 1u : _GLF_FUZZED(subgroup_id))))) << 0u) * workgroup_id));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), false))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), false))))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), false)))))))))) || false)))))), (bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), false))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), false))))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), false)), false)))))))))) || false))))))) && true), _GLF_IDENTITY(true, true && (true)) && (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (injectionSwitch.y) / 1.0)) - 0.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - 0.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(860.921) : 1.0 * (injectionSwitch.y)))), (injectionSwitch.y) / 1.0)) - 0.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sqrt(1.0), 1.0))).y, (injectionSwitch.y) / 1.0)) - 0.0))))))), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))), (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false, _GLF_IDENTITY(false, ! (! (false))), true, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0), mat4x2(mat4(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], (max(injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(599.157), _GLF_FUZZED(995.531)), bvec2(false, _GLF_IDENTITY(false, bool(bool(false))))))))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), vec2(1.0, 1.0) * (mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(5.2, -5.5)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(78.38)), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(true, true))))))))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))))) - 0u) / 1u) + subgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u)))), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uint(max(workgroup_base, workgroup_base))))) / (1u & 1u)))) / 1u)) >> 0u, 0u ^ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uint(max(workgroup_base, workgroup_base))))) / (1u & 1u)))) / 1u)) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u)))), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) / 1u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED((subgroup_id >> virtual_gid)) : workgroup_base))), uint(uint(max(workgroup_base, workgroup_base))))) / (1u & 1u)))) / 1u)) >> _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_base) : 0u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u))), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u))), min(~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u))), ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u))))), ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u))), clamp(~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u))), ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u))), ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u)))))))), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uint(max(workgroup_base, workgroup_base))))) / (1u & 1u)))) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uint(max(workgroup_base, workgroup_base))))) / (1u & 1u)))) / 1u)), min((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uint(max(workgroup_base, workgroup_base))))) / (1u & 1u)))) / 1u)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uint(max(workgroup_base, workgroup_base))))) / (1u & 1u)))) / 1u)))), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uint(max(workgroup_base, workgroup_base))))) / (1u & 1u)))) / 1u)))) >> 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u))), (~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u)))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u))), (~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) - 0u)))) | 0u)))), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))))), _GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uint(max(workgroup_base, workgroup_base))))) / (1u & 1u)))) / 1u), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uint(max(workgroup_base, workgroup_base))))) / (1u & 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uint(max(workgroup_base, workgroup_base))))) / (1u & 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uint(max(workgroup_base, workgroup_base))))) / (1u & 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uint(max(workgroup_base, workgroup_base))))) / (1u & 1u)), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uint(max(workgroup_base, workgroup_base))))) / (1u & 1u))) / 1u))))) / 1u)))) >> 0u))) + subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u, min(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u, 1u * _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u), clamp(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size))) << 0u, (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u, min(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u, 1u * _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u), clamp(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size))) << 0u, (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u, min(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u, 1u * _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u), clamp(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size))) << 0u, (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u, min(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u, 1u * _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u), clamp(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size))) << 0u, (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))), false || _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), true && ((_GLF_IDENTITY(false, (false) && true)))) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec3((injectionSwitch) * mat2(1.0), 1.0))), (injectionSwitch) * mat2(1.0)))).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, true)))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, true)))), true, true, true))))))), false, true))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3041.8053, -622.970)) : injectionSwitch)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3041.8053, -622.970)) : injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, abs(0.0)))), 1.0, 1.0))))))) * vec2(1.0, 1.0)), tan(0.0), 0.0), vec4(mat4(vec4(injectionSwitch, tan(0.0), 0.0), 1.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))) - 0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.8)), bool(false)), (true ? mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.8)), bool(false)) : _GLF_FUZZED(dot(vec4(202.208, 4.6, 79.47, -4186.6568), vec4(-2.4, -6.9, -168.350, -67.55)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.8)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.8)), bool(false))), clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.8)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.8)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.8)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 1.0)), (true ? float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.8)), bool(false))), clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.8)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.8)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.8)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(length(-1.8))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.8)), bool(false))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.8)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.8)), bool(false)))))), float(_GLF_FUZZED(-3.9)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-8.8), clamp(_GLF_FUZZED(-8.8), _GLF_FUZZED(-8.8), _GLF_FUZZED(-8.8)))), bool(false))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(vec3(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0))), float(_GLF_FUZZED(-8.8)), bool(false))))), 0.0, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), mat3(_GLF_IDENTITY(mat3x4(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), transpose(transpose(mat3x4(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * abs(1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)))))))))), 0.0, log(1.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1583.1816)), bool(false))), 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 0.0, 0.0, 0.0)))), clamp(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, log(1.0)))), 1.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-0.9) : dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (0.0)))), 0.0, 0.0)))))), _GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), mat4(1.0) * (mat4(1.0)))))) * (vec4(injectionSwitch, _GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(8.3))), 0.0))))).y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / _GLF_ONE(1.0, injectionSwitch.y)))).x, float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / _GLF_ONE(1.0, injectionSwitch.y)))).x, 1.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)) || false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))))[0], clamp(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))))[0], ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))))[0], ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))))[0])), ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(5066.5989), _GLF_FUZZED(22.15)), bvec2(false, false)))).x > injectionSwitch.y))), (_GLF_IDENTITY(false, false || (false)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, max(1, 1))]), vec2(_GLF_IDENTITY(_GLF_FUZZED(5066.5989), min(_GLF_FUZZED(5066.5989), _GLF_FUZZED(5066.5989))), _GLF_FUZZED(22.15)), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) || false)))))))).x > injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, round(length(normalize(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(64.54)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0)), bool(true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))))) > injectionSwitch.y), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), min(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))) > injectionSwitch.y)))), false || _GLF_IDENTITY((true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec2(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(8.4) : float(vec2(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))))))))) > injectionSwitch.y)), ((true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec2(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(8.4) : float(vec2(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))))))))) > injectionSwitch.y))) && true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2388.5726))), 1.0)), 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, length(vec2(0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(float(vec2(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(float(vec2(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), float(vec2(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), (false ? _GLF_FUZZED(8.7) : _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))) > injectionSwitch.y), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))), false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false))), false)), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false))), false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)))))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))), false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))), false)), false))), false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false))), false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false))), false))))))))), bvec2(bvec4(bvec2(false, true), true, true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))), _GLF_IDENTITY(false, bool(bool(false))), false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))))))))), false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false))), false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))), true)), true, true)))), _GLF_IDENTITY(false, bool(bool(false))), false))))))))), bvec2(bvec4(bvec2(false, true), true, _GLF_IDENTITY(true, ! (! (true)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))))) << 0u)))], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
