#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 ivec4 _f0;
 ivec3 _f1;
 mat4x3 _f2;
 mat3 _f3;
 uint workgroup_base;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 vec3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)))) * vec2(1.0, 1.0)).y))), (false) && true), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))), false || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false || (! (false)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), true, false))))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), true, false))))))))))) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), true, true, true))))) || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false)))), false || (bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(_GLF_IDENTITY(1249.7411, clamp(1249.7411, _GLF_IDENTITY(1249.7411, mix(float(_GLF_FUZZED(3.8)), float(1249.7411), bool(true))), _GLF_IDENTITY(1249.7411, clamp(1249.7411, 1249.7411, 1249.7411)))))), bvec2(false, false))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(ivec4(1), ivec3(_GLF_IDENTITY(1, max(1, 1))), mat4x3(1.0), mat3(1.0), workgroup_size * workgroup_id)), vec3(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[0] : _GLF_FUZZED(-8843.3293))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(9.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))) : _GLF_FUZZED(-59.89)))), bool(false))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(21.93)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, abs(0.0), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, abs(0.0), 0.0))), 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, tan(0.0), 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0))) > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(21.93)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), bool(true))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, abs(0.0), 0.0)), dot(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec3(0.0, abs(0.0), 0.0))), 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, tan(0.0), 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0))) > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, false, false)))))))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, false, false)))))))))))))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.77)), vec2(_GLF_FUZZED(float(107695u)), (injectionSwitch)[1]), bvec2(false, true)), vec2(mat3x4(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.77)), vec2(_GLF_FUZZED(float(107695u)), (injectionSwitch)[1]), bvec2(false, true)), clamp(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.77)), vec2(_GLF_FUZZED(float(107695u)), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.77)), vec2(_GLF_FUZZED(float(107695u)), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.77)), vec2(_GLF_FUZZED(float(107695u)), (injectionSwitch)[1]), bvec2(false, true)))), _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), injectionSwitch)).y)), mat2(1.0) * ((injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.77)), vec2(_GLF_FUZZED(float(107695u)), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.77)), vec2(_GLF_FUZZED(float(107695u)), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.77)), vec2(_GLF_FUZZED(float(107695u)), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.77)), vec2(_GLF_FUZZED(float(107695u)), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), vec2(mat2(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.77)), vec2(_GLF_FUZZED(float(107695u)), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), 1.0, 1.0)))))).y))))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, abs(1.0), sqrt(1.0), abs(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch.y, abs(1.0), sqrt(1.0), abs(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0), (mat2x4(injectionSwitch.y, abs(1.0), sqrt(1.0), abs(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0)) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-0.3, 903.112, 387.742, -707.192, 256.171, -9.1, 8541.0650, -247.164))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, true, false)))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_struct_replacement_2._f0._f0.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 uint next_virtual_gid = _GLF_struct_replacement_2._f0._f0.workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), (buf[virtual_gid]) | (buf[virtual_gid]))) << 0u), _GLF_IDENTITY(4, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ _GLF_IDENTITY((4), (_GLF_IDENTITY((4), int(ivec4((4), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY((4), int(int((4)))))))) / 1), _GLF_IDENTITY(0 + ((~ (4))), int(ivec4(0 + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), max(_GLF_IDENTITY(~ (4), 0 ^ (~ (4))), ~ (4))), min(_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))), _GLF_IDENTITY(~ (4), (~ (4)) * 1))))), 0, 0, 1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (4)), _GLF_IDENTITY(0 + ((~ (4))), min(0 + ((~ (4))), 0 + ((~ (4)))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) | 0))), 0 + (_GLF_IDENTITY((~ (4)), ~ (~ ((~ _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), ((4)) >> 0)))))))))), clamp(~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) | 0))), 0 + (_GLF_IDENTITY((~ (4)), ~ (~ ((~ (4)))))))), ~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(0, (0) | 0) + (_GLF_IDENTITY((~ (4)), ~ (~ ((~ (4)))))))), ~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) | 0))), 0 + (_GLF_IDENTITY((~ (4)), ~ (~ ((~ (4))))))))))), max((~ (_GLF_IDENTITY((~ (4)), 0 + ((~ (4)))))), (~ (_GLF_IDENTITY((~ (4)), 0 + ((~ (4))))))))) * 1, ((_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((4), ((4)) << 0)))) << (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0)))) | 0))), 0 + ((~ (_GLF_IDENTITY(4, ~ (~ (4))))))))), max((~ (_GLF_IDENTITY((~ (4)), 0 + ((~ (4)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (4)), 0 + _GLF_IDENTITY(((~ _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((4))), (4))))), (((~ _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((4))), (4)))))) | 0))), (~ (_GLF_IDENTITY((~ (4)), 0 + ((~ (4)))))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) | ((~ (4)))), 0 + ((~ (4))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) | ((~ (4)))), 0 + ((~ (4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) | ((~ (4)))), 0 + ((~ (4)))))), int(ivec2(~ ((_GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) | ((~ (4)))), 0 + ((~ (4)))))), 0))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) | ((~ (4)))), 0 + ((~ (4))))))))))))) * 1) << 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((4), ((4)) + _GLF_IDENTITY(0, max(0, 0)))), 0 + ((~ (4)))), (_GLF_IDENTITY((~ _GLF_IDENTITY((4), ((4)) + _GLF_IDENTITY(0, max(0, 0)))), 0 + ((~ (4))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) | 0))), 0 + ((~ (4)))))), max((~ (_GLF_IDENTITY((~ _GLF_IDENTITY((4), ((4)) - 0)), 0 + ((~ (4)))))), (~ (_GLF_IDENTITY((~ (4)), 0 + _GLF_IDENTITY(((~ (4))), ~ (_GLF_IDENTITY(~ (((~ (4)))), min(~ (((~ (4)))), ~ (((~ (4)))))))))))))) * 1)), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) | (4)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (4)), 0 + ((~ _GLF_IDENTITY((4), ((4)) | ((4)))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0))), (4) | 0))), 0 + ((~ (4)))))), _GLF_IDENTITY(max((~ (_GLF_IDENTITY((~ (4)), 0 + ((~ (4)))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (4), max(~ (4), _GLF_IDENTITY(~ _GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), (4)))) | ((4))), max(~ (4), ~ (4)))))), 0 + ((~ (4))))))), (max((~ (_GLF_IDENTITY((~ (4)), _GLF_IDENTITY(0 + ((~ (4))), (0 + ((~ (4)))) / 1)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (4), max(~ (4), _GLF_IDENTITY(~ _GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), (4)))) | ((4))), max(~ (4), ~ (4)))))), 0 + ((~ (4)))))))) ^ 0))) * 1))))), _GLF_IDENTITY((~ (4)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (4)), 0 + ((~ (4)))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)), clamp((_GLF_IDENTITY(4, (4) | 0)), (_GLF_IDENTITY(4, (4) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)), ~ (~ ((_GLF_IDENTITY(4, (4) | 0)))))))), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 1 * (~ (4))), clamp(~ (4), ~ (4), ~ (4)))))))), max((~ (_GLF_IDENTITY((~ (4)), 0 + ((~ (4)))))), (~ (_GLF_IDENTITY((~ (4)), 0 + ((~ (4))))))))) * _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1 * (int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (4)), 0 + _GLF_IDENTITY((_GLF_IDENTITY((~ (4)), 0 | (_GLF_IDENTITY((~ (4)), ((~ (4))) + 0)))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (4)), 0 | ((~ _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), ((4)) | ((4))))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY((~ (4)), _GLF_IDENTITY(0, (0) >> 0) | ((~ (4))))), (false ? _GLF_FUZZED(51711) : (_GLF_IDENTITY((~ (4)), 0 | _GLF_IDENTITY(((~ (4))), (((~ (4)))) | 0))))) : _GLF_FUZZED(-52763)))) | 0)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, max((4) | 0, _GLF_IDENTITY((4) | 0, max(_GLF_IDENTITY((4), ((4)) * 1) | 0, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), clamp((4), (4), (4)))) >> 0) | 0))))))), 0 + (_GLF_IDENTITY((~ (4)), int(ivec3(_GLF_IDENTITY((~ (4)), max((~ (4)), _GLF_IDENTITY((~ (4)), (true ? (~ (4)) : _GLF_FUZZED(-72683))))), 1, 1))))))), max((~ (_GLF_IDENTITY((~ (4)), 0 + ((_GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), min(_GLF_IDENTITY(~ (4), int(ivec3(_GLF_IDENTITY(~ (4), ~ (~ (_GLF_IDENTITY(~ (4), 0 | (~ (4)))))), 1, 0))), _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4)))))))))))), (~ (_GLF_IDENTITY((~ (4)), 0 + ((~ (4))))))))) * 1)), clamp(_GLF_IDENTITY((~ (4)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (4)), 0 + _GLF_IDENTITY((_GLF_IDENTITY((~ (4)), 0 | ((~ (4))))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (4)), 0 | ((~ (4))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY((~ (4)), _GLF_IDENTITY(0, (0) >> 0) | _GLF_IDENTITY(((~ (4))), ~ (_GLF_IDENTITY(~ (((~ (4)))), (~ (((~ (4))))) | (~ (((~ (4)))))))))), (false ? _GLF_FUZZED(51711) : (_GLF_IDENTITY((~ (4)), 0 | _GLF_IDENTITY(((~ (4))), (((~ (4)))) | 0))))) : _GLF_FUZZED(-52763)))) | 0)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, max((4) | 0, _GLF_IDENTITY((4) | 0, max(_GLF_IDENTITY((4), ((4)) * 1) | 0, (4) | 0))))))), 0 + ((~ (4)))))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (4)), 0 + ((_GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4)))))))))), ~ (~ (_GLF_IDENTITY((~ (4)), 0 + ((_GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), min(~ _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), 0 | ((4))), (4))), _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))))))))))))))), (~ (_GLF_IDENTITY((~ (4)), 0 + ((~ (4))))))))) * 1)), _GLF_IDENTITY((~ (4)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (4)), 0 + _GLF_IDENTITY((_GLF_IDENTITY((~ (4)), 0 | ((~ (4))))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (4)), 0 | ((~ (4))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY((~ (4)), _GLF_IDENTITY(0, (0) >> 0) | ((~ (4))))), (false ? _GLF_FUZZED(51711) : (_GLF_IDENTITY((~ (4)), 0 | _GLF_IDENTITY(((~ (4))), (((~ (4)))) | 0))))) : _GLF_FUZZED(-52763)))) | 0)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, max((4) | 0, _GLF_IDENTITY((4) | 0, max(_GLF_IDENTITY((4), ((4)) * 1) | 0, (4) | 0))))))), 0 + ((~ (4)))))), max((~ (_GLF_IDENTITY((~ (4)), 0 + ((_GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4)))))))))))), (~ (_GLF_IDENTITY((~ (4)), 0 + ((~ (4))))))))) * 1)), _GLF_IDENTITY((~ (4)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (4)), 0 + _GLF_IDENTITY((_GLF_IDENTITY((~ (4)), 0 | ((~ (4))))), (_GLF_IDENTITY((_GLF_IDENTITY((~ _GLF_IDENTITY((4), int(_GLF_IDENTITY(ivec3((4), 0, 1), ivec3(ivec4(ivec3((4), 0, 1), (0 | 0))))))), 0 | ((~ (4))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY((~ (4)), _GLF_IDENTITY(0, (0) >> 0) | ((~ (4))))), (false ? _GLF_FUZZED(51711) : (_GLF_IDENTITY((_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), 1 * (~ (4)))) | 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | (0)) | _GLF_IDENTITY(((~ (4))), (((~ (4)))) | 0))))) : _GLF_FUZZED(-52763)))) | 0)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, max((4) | 0, _GLF_IDENTITY((4) | 0, max(_GLF_IDENTITY((4), _GLF_IDENTITY(((4)) * 1, ~ (~ (((4)) * 1)))) | 0, (4) | 0))))))), 0 + ((~ (4)))))), max((~ (_GLF_IDENTITY((~ (4)), _GLF_IDENTITY(0 + ((_GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))))))))), clamp(_GLF_IDENTITY(0 + ((_GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))))))))), max(0 + ((_GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))))))))), 0 + ((_GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))))))))))), _GLF_IDENTITY(0 + ((_GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))))))))), min(_GLF_IDENTITY(0 + ((_GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))))))))), ~ (~ (0 + ((_GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4)))))))))))), 0 + ((_GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))))))))))), 0 + ((_GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), min(~ (4), _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4)))))))))))))), (~ (_GLF_IDENTITY((~ (4)), 0 + ((~ (4))))))))) * 1)))))), _GLF_IDENTITY((~ (4)), ~ (~ (_GLF_IDENTITY((~ (4)), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (0) << 0), 0, 0)), int(ivec3(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (0) << 0), 0, 0)), (0 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x))))) + (_GLF_IDENTITY((~ (4)), ((~ (4))) ^ 0)))))), _GLF_IDENTITY((~ (4)), ~ (~ (_GLF_IDENTITY((~ (4)), 0 + ((~ (4)))))))))), 64, _GLF_IDENTITY(0, clamp(0, 0, 0)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false), false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false), false))), true)), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false), false))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false), false)))))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4603.1262)), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.5, clamp(-5.5, -5.5, _GLF_IDENTITY(-5.5, mix(float(_GLF_FUZZED(-536.092)), float(-5.5), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))), max(float(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))))), float(_GLF_FUZZED(-78.27)), bool(false))), _GLF_FUZZED((1.6 * -734.219))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)))) ? _GLF_FUZZED(vec2(9243.7102, 72.28)) : injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)))) ? _GLF_FUZZED(vec2(9243.7102, 72.28)) : injectionSwitch)).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, mix(float(_GLF_FUZZED((true ? -8.7 : vec4(-8889.7525, 94.40, -8932.0559, 957.191).a))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) - 0u), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) * 1), _GLF_IDENTITY(64, 1 * (64)), 64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true)))), (_GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true)))))), true)))), ! (! ((! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true)))))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
