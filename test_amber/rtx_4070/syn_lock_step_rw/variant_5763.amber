#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 float _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_3 {
 int _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 mat4x3 _f1;
 uint _f2;
 mat3x4 _f3;
 mat3 _f4;
 ivec4 _f5;
 uint subgroup_local_id;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3((_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), false, true))))))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false, true)))))), true, false)))), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), vec2(1.0, 1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), float(_GLF_FUZZED(-7921.7979)), bool(false)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), float(_GLF_FUZZED(-7921.7979)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), float(_GLF_FUZZED(-7921.7979)), bool(false)))))), bool(true)), clamp(mix(float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), vec2(1.0, 1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), float(_GLF_FUZZED(-7921.7979)), bool(false)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), float(_GLF_FUZZED(-7921.7979)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), float(_GLF_FUZZED(-7921.7979)), bool(false)))))), bool(true)), mix(float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), vec2(1.0, 1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), float(_GLF_FUZZED(-7921.7979)), bool(false)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), float(_GLF_FUZZED(-7921.7979)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), float(_GLF_FUZZED(-7921.7979)), bool(false)))))), bool(true)), mix(float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), vec2(1.0, 1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), float(_GLF_FUZZED(-7921.7979)), bool(false)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), float(_GLF_FUZZED(-7921.7979)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), float(_GLF_FUZZED(-7921.7979)), bool(false)))))), bool(true))))) > injectionSwitch.y, true)), false, false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y))), float(_GLF_FUZZED(-7436.5321)), bool(false)))))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_1(mat2x3(1.0), _GLF_struct_0(ivec2(_GLF_IDENTITY(1, ~ (~ (1)))), mat4x3(1.0), _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)) * (injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x2(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))) - vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), min(((injectionSwitch)) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.8)))), _GLF_IDENTITY(((injectionSwitch)), max(((injectionSwitch)), ((injectionSwitch)))) * mat2(1.0)))))))[_GLF_IDENTITY(0, (0) - 0)], max(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY(max((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), _GLF_IDENTITY((true ? vec2(mat2(injectionSwitch, 1.0, 0.0)) : _GLF_FUZZED(clamp(vec2(_GLF_IDENTITY(3.0, (3.0) / 1.0), -6.8), -4.2, 65.43))), clamp((true ? vec2(mat2(injectionSwitch, 1.0, 0.0)) : _GLF_FUZZED(clamp(vec2(_GLF_IDENTITY(3.0, (3.0) / 1.0), -6.8), -4.2, 65.43))), (true ? vec2(mat2(injectionSwitch, 1.0, 0.0)) : _GLF_FUZZED(clamp(vec2(_GLF_IDENTITY(3.0, (3.0) / 1.0), -6.8), -4.2, 65.43))), _GLF_IDENTITY((true ? vec2(mat2(injectionSwitch, 1.0, 0.0)) : _GLF_FUZZED(clamp(vec2(_GLF_IDENTITY(3.0, (3.0) / 1.0), -6.8), -4.2, 65.43))), ((true ? vec2(mat2(injectionSwitch, 1.0, 0.0)) : _GLF_FUZZED(clamp(vec2(_GLF_IDENTITY(3.0, (3.0) / 1.0), -6.8), -4.2, 65.43)))) - vec2(0.0, 0.0))))))))[0]), max(max((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), clamp((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))))) * sqrt(vec2(1.0, 1.0)))))[0]), _GLF_IDENTITY(max((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0]), _GLF_IDENTITY(max(max((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0]), max((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0])), _GLF_IDENTITY(max(max(max((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) / 1)]), max((mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], clamp(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[0], _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-5.6), _GLF_FUZZED(-2.3)), vec2((mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[0], (mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[1]), bvec2(true, true))), 0.0)), (false ? _GLF_FUZZED(vec2(-580.215, -73.46)) : vec2(vec3(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-5.6), _GLF_FUZZED(-2.3)), vec2((mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[0], (mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[1]), bvec2(true, true))), 0.0))))))[0], max(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[0], _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], float(mat2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], mix(float((mat2(1.0) * (injectionSwitch))[0]), float(_GLF_FUZZED(-808.808)), bool(false))), 0.0, 0.0, 0.0))), (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-639.989), _GLF_FUZZED((5905.6874 + (-4909.2203)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))[1]), bvec2(true, true)))[0]))), float(_GLF_FUZZED(3.1)), bool(false))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[0])))), max(max((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0]), max((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0]))), max(max(max(max((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0]), max((mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[0], clamp(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(48.72, max(48.72, _GLF_IDENTITY(48.72, (false ? _GLF_FUZZED(758.487) : _GLF_IDENTITY(48.72, clamp(48.72, 48.72, 48.72)))))), -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[0], _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[0], max(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[0], _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[0]))), float(_GLF_FUZZED(3.1)), bool(false))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | (1))) | (1))]), bvec2(true, true)))[0])))), max(max((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0]), max((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0]))), max(max(max((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0]), max((mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)))))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[0], clamp(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))[1]), bvec2(true, true)))[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(1.0, 1.0) * ((mat2(1.0) * (injectionSwitch)))), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))[1]), bvec2(true, true)))[0], max(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), clamp((mat2(1.0) * (injectionSwitch)), (mat2(1.0) * (injectionSwitch)), (mat2(1.0) * (injectionSwitch)))), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch)))[1]), bvec2(true, true)))[0], _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true))), max(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))))[0]))), float(_GLF_FUZZED(3.1)), bool(false))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(48.72, -79.28, -6241.5568).r), _GLF_FUZZED(19.88)), vec2((_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), (true ? (mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true)))[0])))), max(max((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0]), max((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0])))))))))), (mat2(1.0) * (injectionSwitch))[0])), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.3, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))))))) ? -1.3 : _GLF_FUZZED(4.5))), max(_GLF_IDENTITY(_GLF_IDENTITY(-1.3, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true))))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))))))) ? -1.3 : _GLF_FUZZED(4.5))), (true ? _GLF_IDENTITY(-1.3, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.1, 1.2)))).x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))) * vec2(1.0, 1.0)).y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))))))) ? -1.3 : _GLF_FUZZED(4.5))) : _GLF_FUZZED(tan(-6.5)))), _GLF_IDENTITY(_GLF_IDENTITY(-1.3, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))))), _GLF_IDENTITY(bool(bvec2(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))))), true)), (bool(bvec2(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))))), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? -1.3 : _GLF_FUZZED(4.5))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-1.3, (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) || false)), true, true))))) || false))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))))))) ? -1.3 : _GLF_FUZZED(4.5))), clamp(_GLF_IDENTITY(-1.3, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))))))), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))))))), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))))))))) || false), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), true, false))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), true, false))))))), true, true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))))))) ? -1.3 : _GLF_FUZZED(4.5))), _GLF_IDENTITY(-1.3, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))))))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))))))), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))))))) ? -1.3 : _GLF_FUZZED(4.5))), _GLF_IDENTITY(-1.3, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))), false, false))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-17.53) : injectionSwitch.x)))) < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))))))) ? -1.3 : _GLF_FUZZED(4.5)))))), float(_GLF_FUZZED(-16.27)), bool(false))))))), vec2(_GLF_FUZZED((- 2.4)), (_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))))))[1]), bvec2(false, true)))).x, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-2908.7628) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))))), mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0)) + 0.0)), mat3(1.0), ivec4(1), gl_SubgroupInvocationID)), _GLF_struct_3(1, _GLF_struct_2(_GLF_IDENTITY(1.0, (1.0) - log(1.0)), uvec2(1u))));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) << 0u), (0u & _GLF_IDENTITY(_GLF_IDENTITY(58863u, (false ? _GLF_FUZZED(subgroup_id) : 58863u)), max(58863u, 58863u))) | _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(50846u)))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))), min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(50846u)))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(50846u)))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))))) + _GLF_struct_replacement_4._f0._f1.subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) << 0u), (0u & _GLF_IDENTITY(_GLF_IDENTITY(58863u, (false ? _GLF_FUZZED(subgroup_id) : 58863u)), max(58863u, 58863u))) | _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(50846u)))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) & 27401u))))), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) << 0u), _GLF_IDENTITY((0u & _GLF_IDENTITY(_GLF_IDENTITY(58863u, (false ? _GLF_FUZZED(subgroup_id) : 58863u)), max(58863u, 58863u))) | _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u), (true ? (0u & _GLF_IDENTITY(_GLF_IDENTITY(58863u, (false ? _GLF_FUZZED(subgroup_id) : 58863u)), max(58863u, 58863u))) | _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) : _GLF_FUZZED((-- workgroup_base))))) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(50846u)))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u)), 0u + (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) << 0u), (0u & _GLF_IDENTITY(_GLF_IDENTITY(58863u, (false ? _GLF_FUZZED(subgroup_id) : 58863u)), max(58863u, 58863u))) | _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(50846u)))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u))))) + _GLF_struct_replacement_4._f0._f1.subgroup_local_id) / 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-366.814) : injectionSwitch.y), max((false ? _GLF_FUZZED(-366.814) : injectionSwitch.y), (false ? _GLF_FUZZED(-366.814) : injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_4._f0._f1.subgroup_local_id + 1), ((_GLF_struct_replacement_4._f0._f1.subgroup_local_id + 1)) ^ 0u) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u)))), (((_GLF_struct_replacement_4._f0._f1.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))) * 1u), subgroup_size)), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))) ^ 0u);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) : _GLF_FUZZED(subgroup_size)))], buf[virtual_gid])))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-5843.7703)), (vec2((injectionSwitch)[0], _GLF_FUZZED(-5843.7703))) * mat2(1.0)), vec2(_GLF_FUZZED(float(28966u)), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat3x4(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(tanh(9184.8307)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), bvec2(false, true))).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))), true, false))))))) || false))))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) - 0), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8157.8537) : injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read, 0u + (read)), max(read, read))) ^ 0u, (_GLF_IDENTITY((read), uint(uvec2((read), 0u))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read) ^ 0u, max(_GLF_IDENTITY((read) ^ 0u, 0u | (_GLF_IDENTITY((read) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((read) ^ 0u, clamp((read) ^ 0u, (read) ^ 0u, (read) ^ 0u)), 0u ^ (_GLF_IDENTITY((read) ^ 0u, ((read) ^ 0u) | 0u)))) >> 0u))), _GLF_IDENTITY((read) ^ 0u, (_GLF_IDENTITY((read) ^ 0u, clamp((read) ^ 0u, (read) ^ 0u, (read) ^ 0u))) / 1u))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((read) ^ 0u, uint(uvec4(_GLF_IDENTITY((read) ^ 0u, clamp((read) ^ 0u, (read) ^ 0u, (read) ^ 0u)), 0u, 0u, 0u))), (false ? _GLF_FUZZED(read) : (read) ^ 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((read) ^ 0u, max(_GLF_IDENTITY((read) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY((read) ^ 0u, (_GLF_IDENTITY((read) ^ 0u, 0u ^ (_GLF_IDENTITY((read) ^ 0u, ((read) ^ 0u) | 0u)))) >> 0u)), 0u + (0u | (_GLF_IDENTITY((read) ^ 0u, (_GLF_IDENTITY((read) ^ 0u, 0u ^ (_GLF_IDENTITY((read) ^ 0u, ((read) ^ 0u) | 0u)))) >> 0u)))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY((read) ^ 0u, (_GLF_IDENTITY((read) ^ 0u, 0u ^ (_GLF_IDENTITY((read) ^ 0u, ((read) ^ 0u) | 0u)))) >> 0u)), 0u + (0u | (_GLF_IDENTITY((read) ^ 0u, (_GLF_IDENTITY((read) ^ 0u, 0u ^ (_GLF_IDENTITY((read) ^ 0u, ((read) ^ 0u) | 0u)))) >> 0u))))) | 0u)), _GLF_IDENTITY((read) ^ 0u, ((read) ^ 0u) / 1u))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((read) ^ 0u, (false ? _GLF_FUZZED(read) : (read) ^ 0u)))))))))) | (read)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
