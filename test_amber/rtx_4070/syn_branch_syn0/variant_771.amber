#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))) | 0u), 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))) | 0u), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))) | 0u), 0u)) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))))) && true)))), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(bool(bool(false)), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool(false)), false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(bool(false)), false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bool(bool(false)), false, false)))), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool(false)), false, false)), bvec3(bvec3(bvec3(bvec3(bool(bool(false)), false, false)))))), true)))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), true), false))))))), (injectionSwitch.x > injectionSwitch.y)), true))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (-51513 & 0)); _injected_loop_counter --)
    {
     return;
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)))).y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? min(injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? min(injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y : _GLF_FUZZED(9.4)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? min(injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? min(injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y : _GLF_FUZZED(9.4)))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? min(injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? min(injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y : _GLF_FUZZED(9.4))))))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) || false))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6634.6894))))))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-5.4)), bool(false))), injectionSwitch[0])), injectionSwitch[1])))).y), true, true), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-5.4)), bool(false))), injectionSwitch[0])), injectionSwitch[1])))).y), true, true), true))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-5.4)), bool(false))), injectionSwitch[0])), injectionSwitch[1])))).y), true, true), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-5.4)), bool(false))), injectionSwitch[0])), injectionSwitch[1])))).y), true, true), true))), true)), false))))))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-18.00), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-828.761)), bvec2(true, false))).y : _GLF_FUZZED(-6634.6894))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), uint(uvec3(workgroup_id, 1u, 0u)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), bool(bvec3(! (false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) || false), (! (true)) && true))), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(90.88)), vec2(_GLF_FUZZED(-4.3), (injectionSwitch)[1]), bvec2(false, true))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), min(clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), max(clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y)) || false, true, false)), (bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y)))) || false, true, false))) && true)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) - 0u)) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) * _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) - 0) : _GLF_FUZZED(int(subgroup_local_id)))), clamp((1) * 1, (1) * _GLF_IDENTITY(1, (false ? _GLF_FUZZED(61428) : _GLF_IDENTITY(1, (1) >> 0))), (1) * 1)))) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 0u, 0u)))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 0u, 0u))))))) >> 0u) % subgroup_size) / 1u)))) | ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(1, int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1)))))) % subgroup_size)));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.7, 67.24)) : injectionSwitch)), mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.7, 67.24)) : injectionSwitch)), mat2(1.0) * (injectionSwitch)).x), float(_GLF_FUZZED(2.4)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))), false), true)))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, cos(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-9.2) : float(mat3(injectionSwitch.x, cos(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY(0 | ((1)), clamp(0 | ((1)), _GLF_IDENTITY(0 | ((1)), min(_GLF_IDENTITY(0 | ((1)), max(0 | ((1)), 0 | ((1)))), 0 | ((1)))), _GLF_IDENTITY(0 | ((1)), 0 ^ (0 | ((1)))))))) | (_GLF_IDENTITY((1), min((1), (1))))), clamp(_GLF_IDENTITY((1), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY(0 | ((1)), clamp(0 | ((1)), _GLF_IDENTITY(0 | ((1)), min(_GLF_IDENTITY(0 | ((1)), max(0 | ((1)), 0 | ((1)))), 0 | ((1)))), _GLF_IDENTITY(0 | ((1)), 0 ^ (0 | ((1)))))))) | (_GLF_IDENTITY((1), min((1), (1))))), _GLF_IDENTITY((1), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY(0 | ((1)), clamp(0 | ((1)), _GLF_IDENTITY(0 | ((1)), min(_GLF_IDENTITY(0 | ((1)), max(0 | ((1)), 0 | ((1)))), 0 | ((1)))), _GLF_IDENTITY(0 | ((1)), 0 ^ (0 | ((1)))))))) | (_GLF_IDENTITY((1), min((1), (1))))), _GLF_IDENTITY((1), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY(0 | ((1)), clamp(0 | ((1)), _GLF_IDENTITY(0 | ((1)), min(_GLF_IDENTITY(0 | ((1)), max(0 | ((1)), 0 | ((1)))), 0 | ((1)))), _GLF_IDENTITY(0 | ((1)), 0 ^ (0 | ((1)))))))) | (_GLF_IDENTITY((1), min((1), (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), int(ivec2(~ (1), 0)))) >> 0), 0 ^ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), int(ivec2(~ (1), 0)))) >> 0))))))), (true ? buf[virtual_gid] = _GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), max(~ _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))), ((_GLF_IDENTITY((1), 0 | ((1))))) << 0) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), _GLF_IDENTITY(min((1), (1)), (min((1), (1))) / 1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1))))))) >> 0), _GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), ((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), int(ivec4((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), 0, 0, 1))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), _GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), _GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1))))))))))), _GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | _GLF_IDENTITY(((1)), (((1))) | 0))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), _GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))), ((_GLF_IDENTITY((1), 0 | ((1))))) | ((_GLF_IDENTITY((1), 0 | ((1)))))) | (_GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), ((1)) ^ (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, (0 ^ (0 << _GLF_IDENTITY(int(0), int(0)))), (1 | 1)), (ivec4(0, 0, (0 ^ (0 << _GLF_IDENTITY(int(0), int(0)))), (1 | 1))) + ivec4(0, 0, 0, 0)))) | (_GLF_IDENTITY((1), ((1)) >> 0)))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | _GLF_IDENTITY((_GLF_IDENTITY((1), min((1), (1)))), ((_GLF_IDENTITY((1), min((1), (1))))) | 0), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), ((1)) | ((1))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((_GLF_IDENTITY(1, clamp(1, 1, 1))), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1))))))))))), _GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ _GLF_IDENTITY((1), 1 * ((1))), int(ivec2(~ (1), 0)))) >> 0)))), ((_GLF_IDENTITY(~ (1), max(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), ~ (~ (_GLF_IDENTITY(1, 1 * (1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 1 * (1)), 1), (ivec2(_GLF_IDENTITY(1, 1 * (1)), 1)) ^ ivec2(0, 0)))), _GLF_IDENTITY(1, 1 * (1))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), (0 | 0) | (_GLF_IDENTITY((1), ((1)) / 1))), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), 1 * ((1))), (1)))) / 1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1), 0 | ((1))), min(_GLF_IDENTITY((1), 0 | ((1))), _GLF_IDENTITY((1), 0 | ((1)))))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + (_GLF_IDENTITY((1), int(ivec4((1), 0, 1, 1))))), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (_GLF_IDENTITY(1, ~ (~ (1))))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))), (false ? _GLF_FUZZED((51122 + -58253)) : _GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))), 0 + ((_GLF_IDENTITY((1), 0 | ((1)))))))) | (_GLF_IDENTITY((1), min((1), (1))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1), 0 | ((1))), 0 | (_GLF_IDENTITY((1), ((1)) / 1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((_GLF_IDENTITY(1, ~ (~ (1))))))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | _GLF_IDENTITY((_GLF_IDENTITY((1), min((1), (1)))), max(_GLF_IDENTITY((_GLF_IDENTITY((1), min((1), (1)))), 0 + ((_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), min((1), (1)))))))), _GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), min((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1))))))) >> 0)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))), clamp((_GLF_IDENTITY((1), 0 | ((1)))), (_GLF_IDENTITY((1), 0 | ((1)))), (_GLF_IDENTITY((1), 0 | ((1)))))))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))), clamp((_GLF_IDENTITY((1), 0 | ((1)))), (_GLF_IDENTITY((1), 0 | ((1)))), (_GLF_IDENTITY((1), 0 | ((1))))))))))) | 0))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY(_GLF_IDENTITY((1), 0 | ((1))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), 0 | ((1)))))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) << 0)))), (1)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), _GLF_IDENTITY(min((1), (1)), clamp(min((1), (1)), min((1), (1)), min((1), (1)))))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) / 1) : _GLF_FUZZED(91691))))))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((_GLF_IDENTITY(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7))) ^ (1)))))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (1))))), (1))))))))))), _GLF_IDENTITY(~ (1), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1), 1 * ((1))), int(ivec2(~ (1), 0))), (_GLF_IDENTITY(~ _GLF_IDENTITY((1), 1 * ((1))), int(ivec2(~ (1), 0)))) << 0)) >> 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (1) : _GLF_FUZZED(-64156))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | _GLF_IDENTITY((_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((_GLF_IDENTITY((1), min((1), (1)))), ((_GLF_IDENTITY((1), min((1), (1))))) - 0)) * 1), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) * 1)))) | (_GLF_IDENTITY((1), min((1), (1)))), _GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))), ((_GLF_IDENTITY((1), 0 | ((1))))) ^ 0) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-20928) : 1)), 1)))))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-79865) : _GLF_IDENTITY(1, int(ivec3(1, 0, 1)))))) ^ 0))))))), (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) | 0)))) | (_GLF_IDENTITY((1), min((1), (1)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (true ? _GLF_IDENTITY(int(1), (int(1)) * 1) : _GLF_FUZZED(-27090)))))), _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec4((1), ((0 << _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(4), int(4))), 1), ~ (~ (_GLF_IDENTITY(ivec4((1), ((0 << _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(4), int(4))), 1), (ivec4((1), ((0 << _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(4), int(4))), 1)) | (ivec4((1), ((0 << _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(4), int(4))), 1))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) | 0)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1), ~ (~ ((1)))), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), ((1)) | 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))), (_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))), ((_GLF_IDENTITY((1), 0 | ((1))))) << 0)) * 1) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) / 1), (1)))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) >> 0)))))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), _GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))), (_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))), ((_GLF_IDENTITY((1), 0 | ((1))))) ^ 0)) - 0) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), max((_GLF_IDENTITY((1), 0 | ((1)))) | (_GLF_IDENTITY((1), min((1), (1)))), (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), min((1), (1)))))) | (_GLF_IDENTITY((1), min((1), (1)))))), (_GLF_IDENTITY((1), _GLF_IDENTITY(0 | ((1)), 0 ^ (0 | ((1)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) + _GLF_IDENTITY((0 & 95291), ~ (~ ((0 & 95291)))))), min((1), (1))))))))))), _GLF_IDENTITY(~ (1), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((1), 1 * ((1))), int(ivec2(~ (1), 0)))) >> 0, int(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((1), 1 * ((1))), int(ivec2(~ (1), 0)))) >> 0, 0 | ((_GLF_IDENTITY(~ _GLF_IDENTITY((1), 1 * ((1))), int(ivec2(~ (1), 0)))) >> 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((1), 1 * ((1))), int(ivec2(~ (1), 0)))) >> 0, 0 | ((_GLF_IDENTITY(~ _GLF_IDENTITY((1), 1 * ((1))), int(ivec2(~ (1), 0)))) >> 0))), (int(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((1), 1 * ((1))), int(ivec2(~ (1), 0)))) >> 0, 0 | ((_GLF_IDENTITY(~ _GLF_IDENTITY((1), 1 * ((1))), int(ivec2(~ (1), 0)))) >> 0)))) - 0)) | 0)))))))))) : _GLF_FUZZED(subgroup_local_id)));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9307.9704), _GLF_FUZZED(-6.9)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(true, true))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), min(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 1.0))), 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3x2(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 1.0))), 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0)), max(float(mat3x2(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 1.0))), 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0)), float(mat3x2(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 1.0))), 0.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0)))))))), _GLF_IDENTITY(true, (true) && true))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((true ? float(true) : -666.507))), float(0.0), bool(true))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))).y) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((+ dot(vec4(-33.84, -8.2, 1.3, _GLF_IDENTITY(-8375.5024, max(_GLF_IDENTITY(-8375.5024, max(-8375.5024, -8375.5024)), -8375.5024))), vec4(533.582, 786.841, 6.9, -3419.9583)))) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))))))), true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), true))), true)), false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-3844.1802 + 173.321))), float(injectionSwitch.x), bool(true))), (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), true)))))))) || false), true, _GLF_IDENTITY(true, false || (true)), false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((true ? float(true) : -666.507))), float(0.0), bool(true))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))).y) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((+ dot(vec4(-33.84, -8.2, 1.3, _GLF_IDENTITY(-8375.5024, max(_GLF_IDENTITY(-8375.5024, max(-8375.5024, -8375.5024)), -8375.5024))), vec4(533.582, 786.841, 6.9, -3419.9583)))) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))))))), true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), true))), true)), false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-3844.1802 + 173.321))), float(injectionSwitch.x), bool(true))), (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), true)))))))) || false), true, _GLF_IDENTITY(true, false || (true)), false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-150.318))))), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((true ? float(true) : -666.507))), float(0.0), bool(true))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))).y) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((+ dot(vec4(-33.84, -8.2, 1.3, _GLF_IDENTITY(-8375.5024, max(_GLF_IDENTITY(-8375.5024, max(-8375.5024, -8375.5024)), -8375.5024))), vec4(533.582, 786.841, 6.9, -3419.9583)))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))))))))))), true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(16.22), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -7.3))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y) || false))), true)))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3680.1825) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y) || false))), true)))), false, true), true))), true)), false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-610.815)))), false, true)), bool(bvec3(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-610.815)))), false, true)), false, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), true && (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))))), true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-3844.1802 + 173.321))), float(injectionSwitch.x), bool(true))), (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-3844.1802 + 173.321))), float(injectionSwitch.x), bool(true))), (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-3844.1802 + 173.321))), float(injectionSwitch.x), bool(true))), (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-3844.1802 + 173.321))), float(injectionSwitch.x), bool(true))), (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), true, true, false))))))))) || false), true, _GLF_IDENTITY(true, false || (true)), false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), float(_GLF_FUZZED(4261.6783)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(616.874))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7827.3161)), bool(false))))), 1.0))), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.5)), bool(false))), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((true ? float(true) : -666.507))), float(0.0), bool(true))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))).y) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((+ dot(vec4(-33.84, -8.2, 1.3, _GLF_IDENTITY(-8375.5024, _GLF_IDENTITY(max(_GLF_IDENTITY(-8375.5024, max(-8375.5024, -8375.5024)), -8375.5024), (max(_GLF_IDENTITY(-8375.5024, _GLF_IDENTITY(max(-8375.5024, -8375.5024), (max(-8375.5024, -8375.5024)) - log(round(length(normalize(vec3(1.0, 1.0, 1.0))))))), -8375.5024)) + 0.0))), vec4(533.582, 786.841, 6.9, -3419.9583)))) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(1.0, 1.0, 0.0, 1.0)))))), max(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))))))))))))), true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - tan(0.0)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false)))) || false))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false)))) || false))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false)))) || false))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true))), false)))))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))), false, true), true))), true)), false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y), false, true))))) || false)) || false), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-3844.1802 + 173.321))), float(injectionSwitch.x), bool(true))), (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), true)))))))) || false), true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false || (true)), false)))))))) || false) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, true, true)), false, false), bvec3(bvec4(bvec3(bool(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false))), true)), false, false), false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     return;
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(_GLF_IDENTITY(7, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(_injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(7, clamp(7, 7, 7)))), 7, 7))), int(7)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0))))))) && true))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1542.3658)), vec2(_GLF_FUZZED(float(-97705)), (injectionSwitch)[1]), bvec2(false, true))))[0], float(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1542.3658)), vec2(_GLF_FUZZED(float(-97705)), (injectionSwitch)[1]), bvec2(false, true))))[0], (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1542.3658)), vec2(_GLF_FUZZED(float(-97705)), (injectionSwitch)[1]), bvec2(false, true))))[0], max((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1542.3658)), vec2(_GLF_FUZZED(float(-97705)), (injectionSwitch)[1]), bvec2(false, true))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1542.3658)), vec2(_GLF_FUZZED(float(-97705)), (injectionSwitch)[1]), bvec2(false, true))))[0])) : _GLF_FUZZED(-28.13))), 0.0), mat2(1.0) * (vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1542.3658)), vec2(_GLF_FUZZED(float(-97705)), (injectionSwitch)[1]), bvec2(false, true))))[0], (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1542.3658)), vec2(_GLF_FUZZED(float(-97705)), (injectionSwitch)[1]), bvec2(false, true))))[0], max((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1542.3658)), vec2(_GLF_FUZZED(float(-97705)), (injectionSwitch)[1]), bvec2(false, true))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1542.3658)), vec2(_GLF_FUZZED(float(-97705)), (injectionSwitch)[1]), bvec2(false, true))))[0])) : _GLF_FUZZED(-28.13))), 0.0))))), _GLF_FUZZED(440.631)), vec2(_GLF_FUZZED(-9.8), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, -0.9)) : injectionSwitch)))) : _GLF_FUZZED(vec2(70.93, -7817.7564)))).x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0))), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)))))))))))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, ! (! ((true) || false)))) && true))) && true), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y))), false, false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / abs(exp(vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]))) / vec2(1.0, 1.0)).y))))
        return;
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) - (55987 & 0)))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), (int(5)) >> 0), int(5))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, min(5, 5))) / 1)), int(5)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), clamp(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY(3, ~ (~ (3)))))), int(3))))), 0, 0, _GLF_IDENTITY(0, (0) / 1)), (ivec4(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, min(3, 3))))))), 0, 0, _GLF_IDENTITY(0, (0) / 1))) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(ivec4(0 >> _GLF_IDENTITY(int(3), int(3)), 0, 0, _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) | (int(8))), int(8))) + _GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(76706))))), ivec4(0, 0, 0, 0) | (ivec4(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | 0)), int(3)), 0, 0, 0))), ivec4(_GLF_IDENTITY(0, min(0, 0)) >> _GLF_IDENTITY(int(3), int(3)), 0, 0, 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)), 1), (min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(int(_GLF_IDENTITY(1, 0 | (1))))))), 1)) * 1))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             break;
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(-8.6))) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-778.726) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, sin(0.0), 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, sin(0.0), 1.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, sin(0.0), 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, sin(0.0), 1.0)))))), injectionSwitch.y)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.5, 3.0)) : injectionSwitch)).y))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))) && true))))) || false)))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   int i = 0;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, sqrt(0.0), 0.0, abs(sqrt(0.0)), 0.0, 0.0))).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, sqrt(0.0), 0.0, abs(sqrt(0.0)), 0.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, sqrt(0.0), 0.0, abs(sqrt(0.0)), 0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, sqrt(0.0), 0.0, abs(sqrt(0.0)), 0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat4x2(injectionSwitch, 1.0, sqrt(0.0), 0.0, abs(sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))) + tan(0.0)))), 0.0, 0.0))).y)), exp(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5935.8379)), float(1.0), bool(true))), sqrt(tan(0.0))))))))))) && true), false, true, true))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, sqrt(0.0), 0.0, abs(sqrt(0.0)), 0.0, 0.0))).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, sqrt(0.0), 0.0, abs(sqrt(0.0)), 0.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, sqrt(0.0), 0.0, abs(sqrt(0.0)), 0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, sqrt(0.0), 0.0, abs(sqrt(0.0)), 0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat4x2(injectionSwitch, 1.0, sqrt(0.0), 0.0, abs(sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) + tan(0.0)))), 0.0, 0.0))).y)), exp(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5935.8379)), float(1.0), bool(true))), sqrt(tan(0.0))))))))))) && true), false, true, true))))))
      return;
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      continue;
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != 1), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != 1)) || false), false))); _injected_loop_counter ++)
      {
       do
        {
         buf[next_virtual_gid] = 2;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) || false)))))) && true)))
      continue;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec4(_injected_loop_counter, 0, (1 & 1), 1)), (int(ivec4(_injected_loop_counter, 0, (1 & 1), 1))) | 0)) != _GLF_IDENTITY(0, (0) - 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        continue;
      }
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), ! (! (bool(bool(_injected_loop_counter < 1))))))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), true))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(! (! (bool(bvec2(false, true)))), true && (_GLF_IDENTITY(! (! (bool(bvec2(false, true)))), false || (! (! (bool(bvec2(false, true))))))))))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               return;
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)));
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
              }
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false))))))))))
        break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
     buf[next_virtual_gid] = 2;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true)), false, false, false)))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, true && _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec4(_injected_loop_counter < 1, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), true)))), bool(bvec2((_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec4(_injected_loop_counter < 1, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)), false || _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, true && (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec4(_injected_loop_counter < 1, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true))))), true, true))), ((bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, true && (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec4(_injected_loop_counter < 1, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true))))), true, true)))) && true)))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, (injectionSwitch.y) / 1.0)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED((vec3(389.613, -158.755, 6049.4749) / 37.89).t)), float(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-5.9)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - 0.0)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))) || false)))), false)), bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))), true, false))))))), false)), false, true, true)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          continue;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))), (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))) || false)))), false || (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))))))))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
