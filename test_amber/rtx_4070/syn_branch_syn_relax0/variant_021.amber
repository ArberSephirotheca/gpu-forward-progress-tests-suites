#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 430

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 mat2x3 _f0;
 ivec2 _f1;
 float _f2;
 uvec4 _f3;
 mat3 _f4;
 float _f5;
 vec3 _f6;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 bvec2 _f1;
 float _f2;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 mat4 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 bvec4 _f4;
 mat2 _f5;
 _GLF_struct_9 _f6;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 uint virtual_gid;
 bvec3 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 ivec2 _f1;
 int _f2;
} ;

struct _GLF_struct_11 {
 int _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
 bool _f3;
 mat4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 vec3 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 _GLF_struct_1 _f1;
 bvec3 _f2;
 _GLF_struct_2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))), ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))) && true)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.2) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(vec2(injectionSwitch.x, 1.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(ivec2(1), _GLF_struct_1(_GLF_struct_0(mat3(1.0), mat3x2(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(65.57, (false ? _GLF_FUZZED(cosh(-60.21)) : 65.57)), max(65.57, _GLF_IDENTITY(65.57, clamp(65.57, 65.57, 65.57))))))), 1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(65.57)), clamp((true ? 0.0 : _GLF_FUZZED(65.57)), (true ? 0.0 : _GLF_FUZZED(65.57)), (true ? 0.0 : _GLF_FUZZED(65.57))))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (vec2(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))) : _GLF_FUZZED(determinant(mat4(-3.7, -45.00, -674.030, 5.3, -1.4, -304.982, -6477.8389, 5220.7756, 8.0, 0.4, 4.0, -45.56, -8.1, 4.3, 13.76, -89.36))))) + 0.0) : _GLF_FUZZED(65.57))), 1.0)))), (_GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(65.57)), clamp((true ? 0.0 : _GLF_FUZZED(65.57)), (true ? 0.0 : _GLF_FUZZED(65.57)), (true ? 0.0 : _GLF_FUZZED(65.57))))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (vec2(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0)))))) + 0.0) : _GLF_FUZZED(65.57))), 1.0))))) + sin(vec2(0.0, 0.0))))), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))), float(mat3x4(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0)))), (false ? _GLF_FUZZED(3524.2646) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))) + (1.0)))), max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(65.57, max(65.57, _GLF_IDENTITY(65.57, clamp(_GLF_IDENTITY(65.57, float(float(65.57))), 65.57, 65.57))))))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(65.57, min(65.57, 65.57))))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, true && (true)) ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), (_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(65.57))), 1.0))) / vec2(1.0, 1.0)))))), dot(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(86.50) : 1.0)), 0.0), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))), float(mat3x4(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(65.57)), ((true ? 0.0 : _GLF_FUZZED(65.57))) - 0.0)), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-33.93))), 1.0)))))))), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0)))), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0)))))))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), mat2(1.0) * (vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(65.57, _GLF_IDENTITY(max(65.57, _GLF_IDENTITY(65.57, clamp(65.57, 65.57, 65.57))), (max(65.57, _GLF_IDENTITY(65.57, clamp(65.57, 65.57, 65.57)))) / cos(tan(0.0))))))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(65.57, (_GLF_IDENTITY(65.57, clamp(65.57, 65.57, 65.57))) - 0.0))), 0.0 + ((true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(65.57, (_GLF_IDENTITY(65.57, clamp(65.57, 65.57, _GLF_IDENTITY(65.57, (65.57) / 1.0)))) - 0.0)))))), 1.0)), _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(65.57, float(mat4x2(65.57, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), 1.0)))))), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.9) : _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 0.0))))), 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))))) : _GLF_FUZZED(98.63))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.9) : _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 0.0))))), 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))))) : _GLF_FUZZED(98.63))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.9) : _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 0.0))))), 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))))) : _GLF_FUZZED(98.63))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.9) : _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 0.0))))), 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))))) : _GLF_FUZZED(98.63))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.9) : _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 0.0))))), 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))))) : _GLF_FUZZED(98.63))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.9) : _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 0.0))))), 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))))) : _GLF_FUZZED(98.63))))), 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.9) : _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), max(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(65.57))), 1.0)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 0.0))))), 1.0) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))))) : _GLF_FUZZED(98.63))))), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) - 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(-90.08))))), 1.0, 1.0, 0.0, sqrt(0.0))))))))), 0.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))))))), mat2x4(1.0), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), mat2x3(1.0)), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat4x2(1.0), mat2x3(1.0), bvec4(true)), bvec3(true), _GLF_struct_2(mat4x3(1.0), gl_SubgroupSize));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, false, true))) && true, bool(_GLF_IDENTITY(bool((false) && true), ! (! (bool((false) && true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u) >> _GLF_IDENTITY(0u, 0u ^ (0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))) : _GLF_FUZZED(subgroup_id)))) / 1u)), clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))))), min(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), workgroup_id))))), _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_id))))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(1, _GLF_struct_4(uvec2(1u), ivec2(1), 1), _GLF_struct_6(_GLF_struct_5(bvec2(true), workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3._f3.subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3._f3.subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_id * _GLF_struct_replacement_3._f3.subgroup_size, 1u)), max(uint(uvec2(subgroup_id * _GLF_struct_replacement_3._f3.subgroup_size, 1u)), uint(uvec2(subgroup_id * _GLF_struct_replacement_3._f3.subgroup_size, 1u))))))) + subgroup_local_id, bvec3(true)), mat2x3(1.0)), _GLF_struct_10(uvec4(1u), mat4(1.0), _GLF_struct_7(vec3(1.0), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false, true, true)))) || false)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((true) || false), bool(bvec3(bool((_GLF_IDENTITY(true, true && (true))) || false), false, true)))), ! (! (bool(_GLF_IDENTITY(bool((true) || false), bool(bvec3(bool((true) || false), false, true)))))))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false)), true), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false)), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), bool(bool(bool(_GLF_IDENTITY(true, (true) || false)))))))), true), false)))))))), 1.0), _GLF_struct_8(vec2(_GLF_IDENTITY(1.0, (1.0) / determinant(mat2(1.0, 1.0, 0.0, 1.0)))), vec2(1.0)), bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (false)))) || false)), mat2(1.0), _GLF_struct_9(mat2x3(1.0), _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0))) | (ivec2(1)))) ^ ivec2(0, 0), ((_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0))) | (ivec2(1)))) ^ ivec2(0, 0)) | ivec2(0, 0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp2(-6.8)) : 1.0)), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(145814u) : _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size)))))) << 0u), (true ? 1u : _GLF_FUZZED(uint(9249.0682))))), mat3(1.0), 1.0, _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) + vec3(0.0, 0.0, 0.0)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f3.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_3._f3.subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) | 0u)))) + subgroup_id * _GLF_struct_replacement_3._f3.subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f3.subgroup_size, (_GLF_struct_replacement_3._f3.subgroup_size) | (_GLF_IDENTITY(_GLF_struct_replacement_3._f3.subgroup_size, min(_GLF_struct_replacement_3._f3.subgroup_size, _GLF_struct_replacement_3._f3.subgroup_size)))), (_GLF_struct_replacement_3._f3.subgroup_size) >> 0u), clamp(_GLF_struct_replacement_3._f3.subgroup_size, _GLF_struct_replacement_3._f3.subgroup_size, _GLF_struct_replacement_3._f3.subgroup_size)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f3.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_3._f3.subgroup_size), min(_GLF_IDENTITY((_GLF_struct_replacement_3._f3.subgroup_size), clamp((_GLF_struct_replacement_3._f3.subgroup_size), (_GLF_struct_replacement_3._f3.subgroup_size), (_GLF_struct_replacement_3._f3.subgroup_size))), _GLF_IDENTITY((_GLF_struct_replacement_3._f3.subgroup_size), (1u ^ 1u) | ((_GLF_struct_replacement_3._f3.subgroup_size))))) >> 0u, (_GLF_IDENTITY((_GLF_struct_replacement_3._f3.subgroup_size), min(_GLF_IDENTITY((_GLF_struct_replacement_3._f3.subgroup_size), clamp((_GLF_struct_replacement_3._f3.subgroup_size), (_GLF_struct_replacement_3._f3.subgroup_size), (_GLF_struct_replacement_3._f3.subgroup_size))), _GLF_IDENTITY((_GLF_struct_replacement_3._f3.subgroup_size), (1u ^ 1u) | ((_GLF_struct_replacement_3._f3.subgroup_size))))) >> 0u) ^ 0u)), clamp(_GLF_struct_replacement_3._f3.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_3._f3.subgroup_size, min(_GLF_struct_replacement_3._f3.subgroup_size, _GLF_struct_replacement_3._f3.subgroup_size)), _GLF_struct_replacement_3._f3.subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f3.subgroup_size, (_GLF_struct_replacement_3._f3.subgroup_size) >> 0u), clamp(_GLF_struct_replacement_3._f3.subgroup_size, _GLF_struct_replacement_3._f3.subgroup_size, _GLF_struct_replacement_3._f3.subgroup_size))) - 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f3.subgroup_size, (_GLF_struct_replacement_3._f3.subgroup_size) >> 0u), clamp(_GLF_struct_replacement_3._f3.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_3._f3.subgroup_size, min(_GLF_struct_replacement_3._f3.subgroup_size, _GLF_struct_replacement_3._f3.subgroup_size)), _GLF_struct_replacement_3._f3.subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f3.subgroup_size, (_GLF_struct_replacement_3._f3.subgroup_size) >> 0u), clamp(_GLF_struct_replacement_3._f3.subgroup_size, _GLF_struct_replacement_3._f3.subgroup_size, _GLF_struct_replacement_3._f3.subgroup_size))) - 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f3.subgroup_size, (_GLF_struct_replacement_3._f3.subgroup_size) >> 0u), clamp(_GLF_struct_replacement_3._f3.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_3._f3.subgroup_size, min(_GLF_struct_replacement_3._f3.subgroup_size, _GLF_struct_replacement_3._f3.subgroup_size)), _GLF_struct_replacement_3._f3.subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f3.subgroup_size, (_GLF_struct_replacement_3._f3.subgroup_size) >> 0u), clamp(_GLF_struct_replacement_3._f3.subgroup_size, _GLF_struct_replacement_3._f3.subgroup_size, _GLF_struct_replacement_3._f3.subgroup_size))) - 0u), 1u))))) + 0u))) / 1u) + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, uint(uvec4(subgroup_local_id + 1, 0u, _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) * (1u & 1u)), 0u), min(uvec2(_GLF_IDENTITY(1u, (1u) * (1u & 1u)), 0u), uvec2(_GLF_IDENTITY(1u, (1u) * (1u & 1u)), 0u)))), min(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) * (1u & 1u)), 0u), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, max(1u, 1u))))), 0u, 0u, 1u))), _GLF_IDENTITY((1u), ((1u)) | ((1u))) * (1u & 1u)), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, 1u), clamp(uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, 1u), uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, 1u), uvec3(_GLF_IDENTITY(1u, 0u | (1u)), 1u, 1u))))), (1u) * (1u & 1u)), 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) * (1u & 1u)), 0u), min(uvec2(_GLF_IDENTITY(1u, (1u) * (1u & 1u)), 0u), uvec2(_GLF_IDENTITY(1u, (1u) * (1u & 1u)), 0u)))), 0u ^ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) * (1u & 1u)), 0u), min(uvec2(_GLF_IDENTITY(1u, (1u) * (1u & 1u)), 0u), uvec2(_GLF_IDENTITY(1u, (1u) * (1u & 1u)), 0u)))))))))) - 0u), 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 0u))), 0u))), subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)))) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))))))) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))))))) >> 0u) ^ 0u)))) % _GLF_struct_replacement_3._f3.subgroup_size))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false))), false || (false)), _GLF_IDENTITY(true, (true) && true)), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), true), false, false)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), true), false, false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)) || false, false, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)) || false, false, true))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 buf[_GLF_struct_replacement_11._f2._f0.virtual_gid] = 1;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-4.2, 5.0)))).y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-988.774) : injectionSwitch.x)))))) < injectionSwitch.y)), true, true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.5)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)) || false))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), min(float(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))), float(vec2(0.0, 0.0))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(1.0), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(689.535))), 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(3.9, 300.635, 2723.3274, -7.8)) : vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), injectionSwitch.x), tan(0.0), 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0)), exp(0.0), log(1.0), 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0)))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), min(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, sqrt(1.0), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), (true ? _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))) : _GLF_FUZZED(689.535))), 1.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), abs(1.0), 0.0, sqrt(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, sin(0.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0)), exp(0.0), _GLF_IDENTITY(log(1.0), 0.0 + (_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, sqrt(1.0)))))), length(log(vec4(1.0, 1.0, 1.0, 1.0)))))).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + tan(0.0)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + tan(0.0)))), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0)), clamp(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < _GLF_struct_replacement_3._f3.subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x : _GLF_FUZZED(-5.2))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   int i = _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ ((0))) * _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) - 0))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(inversesqrt(injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(inversesqrt(injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(inversesqrt(injectionSwitch))))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false), true)))))))) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), max(ivec2(2, 1), ivec2(2, 1)))), (int(_GLF_IDENTITY(ivec2(2, 1), max(ivec2(2, 1), ivec2(2, 1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(2, 2, 2))), 4, 64, 0);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
