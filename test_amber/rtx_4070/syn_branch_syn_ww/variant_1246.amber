#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            continue;
           return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
         for(int _injected_loop_counter = (1 ^ (_GLF_IDENTITY(-94745, (_GLF_IDENTITY(-94745, 0 | (-94745))) | (-94745)) & 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             return;
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-249.806) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(8826.7069)), bvec2(false, false))))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))
            continue;
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(false))), false || (bool(bool(_GLF_WRAPPED_LOOP(false)))))));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false)))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(atan(480.306)))) > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(_GLF_IDENTITY(5, (false ? _GLF_FUZZED((bvec4(bvec2(true, false), false, false) , -20046)) : 5))), int(5))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.9) : injectionSwitch.x)))))))))))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                continue;
               do
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 do
  {
   for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7579.9334))), injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2(_GLF_IDENTITY((vec2(vec2(injectionSwitch))), ((vec2(vec2(injectionSwitch)))) + vec2(0.0, 0.0))[0], _GLF_IDENTITY(_GLF_FUZZED(88.94), max(_GLF_IDENTITY(_GLF_FUZZED(88.94), clamp(_GLF_FUZZED(88.94), _GLF_FUZZED(88.94), _GLF_FUZZED(88.94))), _GLF_FUZZED(88.94)))), _GLF_IDENTITY(vec2(_GLF_FUZZED((- -7.0)), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2(vec2(injectionSwitch), 0.0, tan(0.0))))))[1]), mix(vec2(_GLF_FUZZED(171.387), _GLF_FUZZED(632.278)), vec2((vec2(_GLF_FUZZED((- -7.0)), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2(vec2(injectionSwitch), 0.0, tan(0.0))))))[1]))[0], (vec2(_GLF_FUZZED((- -7.0)), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2(vec2(injectionSwitch), 0.0, tan(0.0))))))[1]))[1]), bvec2(true, true))), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(88.94), min(_GLF_IDENTITY(_GLF_FUZZED(88.94), (_GLF_IDENTITY(_GLF_FUZZED(88.94), clamp(_GLF_FUZZED(88.94), _GLF_FUZZED(88.94), _GLF_FUZZED(88.94)))) * _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), _GLF_FUZZED(88.94)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), float(_GLF_IDENTITY(vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0), (vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), float(_GLF_IDENTITY(vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0), (vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))))) / 1.0), (vec2(vec2(injectionSwitch)))[1]), bvec2(false, true)))), ((_GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(88.94), min(_GLF_IDENTITY(_GLF_FUZZED(88.94), (_GLF_IDENTITY(_GLF_FUZZED(88.94), clamp(_GLF_FUZZED(88.94), _GLF_FUZZED(88.94), _GLF_FUZZED(88.94)))) * _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), _GLF_FUZZED(88.94)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), float(_GLF_IDENTITY(vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0), (vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), float(_GLF_IDENTITY(vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0), (vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))))) / 1.0), (vec2(vec2(injectionSwitch)))[1]), bvec2(false, true))))) * mat2(1.0)) - _GLF_IDENTITY(tan(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))), mix(vec2((tan(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))))[0], _GLF_FUZZED(-263.095)), vec2(_GLF_FUZZED(vec3(vec4(-0.3, -9472.7512, -8.2, 7.5)).r), (tan(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(507.835) : _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0)))), 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))))[1]), bvec2(false, true))), ((_GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2(_GLF_IDENTITY((vec2(vec2(injectionSwitch))), (true ? _GLF_IDENTITY((vec2(vec2(injectionSwitch))), ((vec2(vec2(injectionSwitch)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(88.94), min(_GLF_IDENTITY(_GLF_FUZZED(88.94), (_GLF_IDENTITY(_GLF_FUZZED(88.94), clamp(_GLF_FUZZED(88.94), _GLF_FUZZED(88.94), _GLF_FUZZED(88.94)))) * 1.0), _GLF_FUZZED(88.94)))), vec2(_GLF_FUZZED((- _GLF_IDENTITY(_GLF_IDENTITY(-7.0, (-7.0) * sqrt(1.0)), max(-7.0, -7.0)))), (vec2(vec2(injectionSwitch)))[1]), bvec2(false, true)))) - tan(_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2172.9650))), 0.0, 0.0))), mat2(1.0) * (vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2172.9650))), 0.0, 0.0))))), vec2(0.0, 0.0))))) * mat2(1.0)))).x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(_GLF_IDENTITY(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), (vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((_GLF_IDENTITY(- -7.0, clamp(_GLF_IDENTITY(- -7.0, (_GLF_IDENTITY(- -7.0, (_GLF_IDENTITY(true ? - -7.0 : _GLF_FUZZED(7.8), mix(float(_GLF_FUZZED(8.7)), float(true ? _GLF_IDENTITY(- -7.0, mix(float(- -7.0), float(_GLF_FUZZED(-4475.4162)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(7.8)), bool(true)))))) - 0.0), - -7.0, _GLF_IDENTITY(- -7.0, mix(float(_GLF_FUZZED(6972.4340)), float(- -7.0), bool(true))))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, -1.8)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(-509.633, 95.57, 55.77, -739.887, -73.13, 0.7)))))))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, -1.8)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(-509.633, 95.57, 55.77, -739.887, -73.13, 0.7)))))))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, -1.8)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(-509.633, 95.57, 55.77, -739.887, -73.13, 0.7)))))))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, -1.8)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(-509.633, 95.57, 55.77, -739.887, -73.13, 0.7)))))))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch)))))[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1))]), bvec2(false, true)))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) << 0)]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0))), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) << 0)]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0))), cos(0.0), 0.0)), (vec2(vec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) << 0)]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0))), cos(0.0), 0.0))) * mat2(1.0)))).y, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) * 1.0), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], _GLF_IDENTITY((vec2(vec2(injectionSwitch))), mix(vec2(((vec2(vec2(injectionSwitch))))[0], ((vec2(vec2(injectionSwitch))))[1]), vec2(_GLF_FUZZED(-42.17), _GLF_FUZZED(4067.4981)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], _GLF_IDENTITY(clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]), clamp(clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]), clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]), clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], _GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], (false ? _GLF_FUZZED(6.6) : (vec2(vec2(injectionSwitch)))[1])), (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (true ? _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) * 1) : _GLF_FUZZED(56085))))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, (-7.0) + 0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false)), min(mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((- -7.0), ((- -7.0)) - tan(0.0))), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))) : _GLF_FUZZED(-1.9)))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) * 1.0)) - 0.0))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(9.6)), bool(false))), 1.0, 1.0)), mix(float(float(mat3x2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(367.897)), bool(false))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0))), float(_GLF_FUZZED(27.46)), bool(false)))), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7579.9334))), injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2(_GLF_IDENTITY((vec2(vec2(injectionSwitch))), ((vec2(vec2(injectionSwitch)))) + vec2(0.0, 0.0))[0], _GLF_IDENTITY(_GLF_FUZZED(88.94), max(_GLF_IDENTITY(_GLF_FUZZED(88.94), clamp(_GLF_FUZZED(88.94), _GLF_FUZZED(88.94), _GLF_FUZZED(88.94))), _GLF_FUZZED(88.94)))), _GLF_IDENTITY(vec2(_GLF_FUZZED((- -7.0)), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2(vec2(injectionSwitch), 0.0, tan(0.0))))))[1]), mix(vec2(_GLF_FUZZED(171.387), _GLF_FUZZED(632.278)), vec2((vec2(_GLF_FUZZED((- -7.0)), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2(vec2(injectionSwitch), 0.0, tan(0.0))))))[1]))[0], (vec2(_GLF_FUZZED((- -7.0)), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2(vec2(injectionSwitch), 0.0, tan(0.0))))))[1]))[1]), bvec2(true, true))), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(88.94), min(_GLF_IDENTITY(_GLF_FUZZED(88.94), (_GLF_IDENTITY(_GLF_FUZZED(88.94), clamp(_GLF_FUZZED(88.94), _GLF_FUZZED(88.94), _GLF_FUZZED(88.94)))) * _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), _GLF_FUZZED(88.94)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), float(_GLF_IDENTITY(vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0), (vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), float(_GLF_IDENTITY(vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0), (vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))))) / 1.0), (vec2(vec2(injectionSwitch)))[1]), bvec2(false, true)))), ((_GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(88.94), min(_GLF_IDENTITY(_GLF_FUZZED(88.94), (_GLF_IDENTITY(_GLF_FUZZED(88.94), clamp(_GLF_FUZZED(88.94), _GLF_FUZZED(88.94), _GLF_FUZZED(88.94)))) * _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), _GLF_FUZZED(88.94)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), float(_GLF_IDENTITY(vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0), (vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), float(_GLF_IDENTITY(vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0), (vec4(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, max(-7.0, -7.0)))), 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))))) / 1.0), (vec2(vec2(injectionSwitch)))[1]), bvec2(false, true))))) * mat2(1.0)) - _GLF_IDENTITY(tan(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))), mix(vec2((tan(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))))[0], _GLF_FUZZED(-263.095)), vec2(_GLF_FUZZED(vec3(vec4(-0.3, -9472.7512, -8.2, 7.5)).r), (tan(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(507.835) : _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0)))), 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))))[1]), bvec2(false, true))), ((_GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2(_GLF_IDENTITY((vec2(vec2(injectionSwitch))), (true ? _GLF_IDENTITY((vec2(vec2(injectionSwitch))), ((vec2(vec2(injectionSwitch)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(88.94), min(_GLF_IDENTITY(_GLF_FUZZED(88.94), (_GLF_IDENTITY(_GLF_FUZZED(88.94), clamp(_GLF_FUZZED(88.94), _GLF_FUZZED(88.94), _GLF_FUZZED(88.94)))) * 1.0), _GLF_FUZZED(88.94)))), vec2(_GLF_FUZZED((- _GLF_IDENTITY(_GLF_IDENTITY(-7.0, (-7.0) * sqrt(1.0)), max(-7.0, -7.0)))), (vec2(vec2(injectionSwitch)))[1]), bvec2(false, true)))) - tan(_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2172.9650))), 0.0, 0.0))), mat2(1.0) * (vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2172.9650))), 0.0, 0.0))))), vec2(0.0, 0.0))))) * mat2(1.0)))).x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(_GLF_IDENTITY(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), (vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((_GLF_IDENTITY(- -7.0, clamp(_GLF_IDENTITY(- -7.0, (_GLF_IDENTITY(- -7.0, (_GLF_IDENTITY(true ? - -7.0 : _GLF_FUZZED(7.8), mix(float(_GLF_FUZZED(8.7)), float(true ? _GLF_IDENTITY(- -7.0, mix(float(- -7.0), float(_GLF_FUZZED(-4475.4162)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(7.8)), bool(true)))))) - 0.0), - -7.0, _GLF_IDENTITY(- -7.0, mix(float(_GLF_FUZZED(6972.4340)), float(- -7.0), bool(true))))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, -1.8)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(-509.633, 95.57, 55.77, -739.887, -73.13, 0.7)))))))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, -1.8)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(-509.633, 95.57, 55.77, -739.887, -73.13, 0.7)))))))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, -1.8)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(-509.633, 95.57, 55.77, -739.887, -73.13, 0.7)))))))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, -1.8)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(-509.633, 95.57, 55.77, -739.887, -73.13, 0.7)))))))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch)))))[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1))]), bvec2(false, true)))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) << 0)]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0))), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) << 0)]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0))), cos(0.0), 0.0)), (vec2(vec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) << 0)]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0))), cos(0.0), 0.0))) * mat2(1.0)))).y, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) * 1.0), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], _GLF_IDENTITY((vec2(vec2(injectionSwitch))), mix(vec2(((vec2(vec2(injectionSwitch))))[0], ((vec2(vec2(injectionSwitch))))[1]), vec2(_GLF_FUZZED(-42.17), _GLF_FUZZED(4067.4981)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], _GLF_IDENTITY(clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]), clamp(clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]), clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]), clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], _GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], (false ? _GLF_FUZZED(6.6) : (vec2(vec2(injectionSwitch)))[1])), (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (true ? _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) * 1) : _GLF_FUZZED(56085))))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(vec2(-7.2, 6.3))))), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(88.94)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- _GLF_IDENTITY(-7.0, (-7.0) + 0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false)), min(mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((- -7.0), ((- -7.0)) - tan(0.0))), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), (false ? _GLF_FUZZED(-48.88) : _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED((- -7.0)), mix(float(_GLF_FUZZED((- -7.0))), float(_GLF_FUZZED(-0.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[1])), mix(float(_GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], clamp((vec2(vec2(injectionSwitch)))[1], (vec2(vec2(injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (vec2(vec2(injectionSwitch)))[1]))), float(_GLF_FUZZED(7468.3173)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), bvec2(false, true)))).x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))) : _GLF_FUZZED(-1.9)))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) * 1.0)) - 0.0))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(9.6)), bool(false))), 1.0, 1.0)), mix(float(float(mat3x2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(367.897)), bool(false))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0))), float(_GLF_FUZZED(27.46)), bool(false)))), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false))))))))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true)))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = ((1 & 1) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        break;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(700.536)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))) && true))))))).x < injectionSwitch.y)))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4023.5318), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(88.44)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))) * (injectionSwitch)))).y))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))), false), false))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || false)), false || (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || false)))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))) || false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || false)))))), _GLF_IDENTITY(bool(bvec4(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || false)))))), true, false, true)), false || (bool(bvec4(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || false)))))), true, false, true)))))))))) && true))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (1 ^ 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)), false, false))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
  {
  }
 else
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(133178u) : workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(138342u), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(138342u, min(138342u, _GLF_IDENTITY(138342u, _GLF_IDENTITY(uint(uvec2(138342u, 0u)), max(uint(uvec2(138342u, 0u)), uint(uvec2(138342u, 0u)))))))), (_GLF_FUZZED(138342u)) ^ 0u)) - 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 0u, 1u)))))) * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) - 0), 1)) ^ 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) * 1u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))), clamp(uint(uvec4(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))), uint(uvec4(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | _GLF_IDENTITY(0u, (0u) + 0u)))), _GLF_IDENTITY(uint(uvec4(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))), max(uint(uvec4(0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))))), (0u | 0u))), uint(uvec4(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))))))))) | 0u) & 15083u)), _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), ~ (~ (_GLF_IDENTITY(((subgroup_size)), 0u + (((subgroup_size))))))) << 0u), (subgroup_size))) ^ 0u), bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(28049u)))))), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, _GLF_IDENTITY(0u, max(0u, 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))), 0u, 0u)), (0u) | 0u), 0u, 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u)))), ~ (~ ((subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(uvec4(0u, 0u, 1u, 0u))), clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u)))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) ^ 0u), 0u, 0u)), ~ (~ ((subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(0u, 0u, 1u, 0u), (uvec4(0u, 0u, 1u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))), clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u)))))), uint(uint(uint(_GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 0u), ~ (~ (uvec4(0u, 0u, 1u, 0u)))))), clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u)), ~ (_GLF_IDENTITY(~ ((subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u))), max(~ ((subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u))), ~ ((subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u))))))))))))))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), (true) && true)), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) ^ 0u), false, true), true))))))
      {
       int i = 0;
       do
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) - 0)) << 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(_GLF_IDENTITY(0, (0) << 0))))))); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    break;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))))) || false)))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(uvec3(163755u, 131607u, 77129u)[2])), max((true ? workgroup_base : _GLF_FUZZED(uvec3(163755u, 131607u, 77129u)[2])), (true ? workgroup_base : _GLF_FUZZED(uvec3(163755u, 131607u, 77129u)[2])))))))), _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | 0), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | 0), int(7))) - 0)) + (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(47057) : 4)), 4)), 1, 0))), 4)))), _GLF_IDENTITY(64, (64) - 0), 4);
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                      return;
                     if(_GLF_DEAD(false))
                      barrier();
                     continue;
                    }
                   barrier();
                   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))
                    break;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((8.6))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((8.6))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((8.6))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((8.6))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y)), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), bool(bvec3((false), false, true))))) && true))) && true)))
                        return;
                       continue;
                      }
                     return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1335.4352)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x)) > injectionSwitch.y))))
                    return;
                   continue;
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, false))))))) || false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                    barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (10332 & int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_WRAPPED_LOOP(false)))), (! (! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_WRAPPED_LOOP(false)))))))))) || false))))) && true), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_WRAPPED_LOOP(false)))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(false))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false)))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false)))))), false || (! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false))))))))))), bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), bool(bvec2((! (_GLF_WRAPPED_LOOP(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((! (_GLF_WRAPPED_LOOP(false)))))), false || (! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false))))))))), false, false)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false)))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false)))))), false || (! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false))))))))))), bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), bool(bvec2((! (_GLF_WRAPPED_LOOP(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((! (_GLF_WRAPPED_LOOP(false)))))), false || (! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false))))))))), false, false))))))))) || false))))), ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_WRAPPED_LOOP(false)))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(false))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false)))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false)))))), false || (! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false))))))))))), bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), bool(bvec2((! (_GLF_WRAPPED_LOOP(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((! (_GLF_WRAPPED_LOOP(false)))))), false || (! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false))))))))), false, false)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false)))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false)))))), false || (! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false))))))))))), bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), bool(bvec2((! (_GLF_WRAPPED_LOOP(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((! (_GLF_WRAPPED_LOOP(false)))))), false || (! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false))))))))), false, false))))))))) || false)))))) || false) && true))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(int(0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, false, false, true)), false || (bool(bvec4((false) && true, false, false, true)))))) || (false), (false || (false)) || false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y : _GLF_FUZZED(log(5.1)))))), false, true))), ! (! (true)))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     barrier();
                    }
                  }
                }
               else
                {
                }
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))) || false)))))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) || false)))), false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false))))))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 continue;
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                }
               continue;
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))[1], injectionSwitch[1])))).x < injectionSwitch.y))))
              {
               barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))));
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7)))))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), true, true, false))))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[1], 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(888.684), _GLF_FUZZED((-77.01 * 405.885)), (vec3(0.0, 0.0, 1.0))[2]), vec3((vec3(0.0, 0.0, 1.0))[0], (vec3(0.0, 0.0, 1.0))[1], _GLF_FUZZED(-9156.5696)), bvec3(true, true, false))))), 1.0)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(4842.2509), _GLF_FUZZED(7750.6572)), _GLF_IDENTITY(vec2(mat4x3(vec2(_GLF_FUZZED(4842.2509), _GLF_FUZZED(7750.6572)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0)), vec2(mat4x3(vec2(mat4x3(vec2(_GLF_FUZZED(4842.2509), _GLF_FUZZED(7750.6572)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0)))), bvec2(false, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[1], 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(888.684), _GLF_FUZZED((-77.01 * 405.885)), (vec3(0.0, 0.0, 1.0))[2]), vec3((vec3(0.0, 0.0, 1.0))[0], (vec3(0.0, 0.0, 1.0))[1], _GLF_FUZZED(-9156.5696)), bvec3(true, true, false))))), 1.0)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(4842.2509), _GLF_FUZZED(7750.6572)), _GLF_IDENTITY(vec2(mat4x3(vec2(_GLF_FUZZED(4842.2509), _GLF_FUZZED(7750.6572)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0)), vec2(mat4x3(vec2(mat4x3(vec2(_GLF_FUZZED(4842.2509), _GLF_FUZZED(7750.6572)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0)))), bvec2(false, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[1], 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(888.684), _GLF_FUZZED((-77.01 * 405.885)), (vec3(0.0, 0.0, 1.0))[2]), vec3((vec3(0.0, 0.0, 1.0))[0], (vec3(0.0, 0.0, 1.0))[1], _GLF_FUZZED(-9156.5696)), bvec3(true, true, false))))), 1.0)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(4842.2509), _GLF_FUZZED(7750.6572)), _GLF_IDENTITY(vec2(mat4x3(vec2(_GLF_FUZZED(4842.2509), _GLF_FUZZED(7750.6572)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0)), vec2(mat4x3(vec2(mat4x3(vec2(_GLF_FUZZED(4842.2509), _GLF_FUZZED(7750.6572)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0)))), bvec2(false, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))[1]), vec2(_GLF_FUZZED(float(182247u)), _GLF_FUZZED(19.49)), bvec2(false, false))).x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))), bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true)), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))) && true)))))))))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               else
                {
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(false))
            break;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false || (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) && true))))) && true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec3(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true), false, _GLF_IDENTITY(true, false || (true)), true)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec3(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec3(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), false, true, true))))))))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (((((1 & 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) >> 0)) - 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (0) ^ (0 ^ 0)))) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           break;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           barrier();
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
