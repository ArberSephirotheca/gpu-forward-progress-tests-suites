#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_20 {
 vec3 _f0;
 vec3 _f1;
 bool _f2;
 vec2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_19 {
 uint _f0;
 bvec2 _f1;
 vec3 _f2;
 ivec4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_18 {
 ivec2 _f0;
 ivec2 _f1;
 bool _f2;
 mat3x4 _f3;
 mat3x2 _f4;
 float _f5;
} ;

struct _GLF_struct_17 {
 mat3x2 _f0;
} ;

struct _GLF_struct_21 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 mat2x4 _f3;
 mat3 _f4;
 _GLF_struct_20 _f5;
} ;

struct _GLF_struct_22 {
 mat4x3 _f0;
 _GLF_struct_21 _f1;
 uint subgroup_base;
 uint _f2;
} ;

struct _GLF_struct_14 {
 mat3 _f0;
} ;

struct _GLF_struct_15 {
 uint _f0;
 vec2 _f1;
 _GLF_struct_14 _f2;
 int _f3;
 vec4 _f4;
} ;

struct _GLF_struct_12 {
 vec3 _f0;
 mat4x3 _f1;
 vec4 _f2;
 mat2x3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
 uvec3 _f1;
 uint _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 vec4 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 mat4x2 _f1;
 vec4 _f2;
 ivec3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 vec3 _f1;
 uint _f2;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 mat4x3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 mat3x4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_16 {
 mat4 _f0;
 _GLF_struct_7 _f1;
 bvec2 _f2;
 _GLF_struct_9 _f3;
 uint workgroup_id;
 _GLF_struct_13 _f4;
 _GLF_struct_15 _f5;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 mat3x4 _f1;
 uint _f2;
 mat4x3 _f3;
 float _f4;
 mat2 _f5;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 uvec3 _f1;
 vec3 _f2;
 bvec2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_2 {
 uint subgroup_local_id;
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 float _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(gl_SubgroupInvocationID, _GLF_struct_0(_GLF_IDENTITY(mat3(1.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3(1.0))), uvec3(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : 1u))), vec3(1.0), bvec2(true), mat4x2(1.0)), _GLF_struct_1(ivec4(1), mat3x4(1.0), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) * 1u), mat4x3(1.0), 1.0, mat2(1.0))), 1.0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-3.9)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_struct_7(_GLF_struct_4(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat4x3(1.0), vec4(1.0)), mat3x4(1.0), _GLF_struct_5(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u)))), vec3(1.0), 1u), _GLF_struct_6(mat3x2(1.0), mat2(1.0))), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, false || (true))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(true, false || (true))))), true)))))), true, true)), false, true)))), _GLF_struct_9(_GLF_struct_8(bvec3(true), mat4x2(1.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(6029.5844, clamp(6029.5844, 6029.5844, _GLF_IDENTITY(6029.5844, (6029.5844) - 0.0))))), bool(false)))), ivec3(1), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-9281.6195, 557.006, 358.145, 163.111)) : _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) : _GLF_FUZZED((mat4x2(-7.2, _GLF_IDENTITY(-5.0, clamp(-5.0, -5.0, -5.0)), 8101.0068, 7.2, 23.61, -8.9, 587.549, -1445.3841) * mat2x4(-4.6, 8991.7571, -0.7, 983.938, -9161.3673, -826.985, 9.0, 727.881))))))))), gl_WorkGroupID.x, _GLF_struct_13(_GLF_struct_10(mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), uvec3(1u), 1u, uvec3(1u)), vec4(1.0), _GLF_struct_11(bvec4(true)), _GLF_struct_12(vec3(1.0), mat4x3(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 1.0)))), vec4(1.0), mat2x3(1.0), ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(max(~ (1), ~ _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))), (max(~ (1), ~ _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) | ((1))), (1))))) << 0)))))))))), _GLF_struct_15(1u, vec2(1.0), _GLF_struct_14(mat3(1.0)), 1, vec4(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(vec4(-9.9, 2937.8963, -8.1, 3.1).p)), float((injectionSwitch)[1]), bool(true))), (true ? (injectionSwitch)[1] : _GLF_FUZZED(702.703)))), vec2(_GLF_FUZZED(7089.2784), _GLF_FUZZED(-455.731)), bvec2(false, false)))) + vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), true))))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u | (_GLF_FUZZED(subgroup_id)))) / 1u) : workgroup_size)) * _GLF_struct_replacement_16.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(mat4x3(1.0), _GLF_struct_21(_GLF_struct_17(mat3x2(1.0)), _GLF_struct_18(ivec2(1), ivec2(_GLF_IDENTITY(1, (1) - 0)), true, mat3x4(1.0), mat3x2(1.0), 1.0), _GLF_struct_19(1u, bvec2(true), vec3(_GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (1.0))), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) >> 0)), mat2(1.0)), mat2x4(1.0), mat3(1.0), _GLF_struct_20(vec3(1.0), vec3(1.0), true, vec2(1.0), ivec3(1))), subgroup_id * subgroup_size, 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), true))) && true, false, true)))), ! (! (_GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_22.subgroup_base, 0u | (workgroup_base + _GLF_struct_replacement_22.subgroup_base)), uint(uvec2(workgroup_base + _GLF_struct_replacement_22.subgroup_base, 0u))) + _GLF_struct_replacement_3._f0.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_22.subgroup_base + (_GLF_IDENTITY((_GLF_struct_replacement_3._f0.subgroup_local_id + 1) % subgroup_size, ~ (~ ((_GLF_struct_replacement_3._f0.subgroup_local_id + 1) % subgroup_size))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-7.7)), vec2(_GLF_FUZZED(64.19), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))))))[0], _GLF_FUZZED(-89.33)), vec2(_GLF_FUZZED(1695.3457), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false, true, false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((_GLF_struct_replacement_3._f0.subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(987.358)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(-6531.5401)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat2x4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)))))), ((injectionSwitch.x > injectionSwitch.y)) || false))), false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (true) && true))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))), (! (false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), (! (false)) || false), false, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) || false), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) || false), false, false, true)))), true, false))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))), (! (false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), (! (false)) || false), false, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))))))) || false), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) || false), false, false, true)))), true, false))))) || false)) && true)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, 1, 1)), ~ (~ (int(_GLF_IDENTITY(ivec3(64, 1, 1), (ivec3(64, 1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), min(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), clamp(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), (ivec4(-8292, -2511, -80044, 4305)) - ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), ivec4(0, 0, 0, 0) ^ (ivec4(-8292, -2511, -80044, 4305))), ivec4(-8292, -2511, -80044, 4305))), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), ivec4(-8292, -2511, -80044, 4305))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), min(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), clamp(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), (ivec4(-8292, -2511, -80044, 4305)) - ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), ivec4(0, 0, 0, 0) ^ (ivec4(-8292, -2511, -80044, 4305))), ivec4(-8292, -2511, -80044, 4305))), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), ivec4(-8292, -2511, -80044, 4305))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), min(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), clamp(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), (ivec4(-8292, -2511, -80044, 4305)) - ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), ivec4(0, 0, 0, 0) ^ (ivec4(-8292, -2511, -80044, 4305))), ivec4(-8292, -2511, -80044, 4305))), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), ivec4(-8292, -2511, -80044, 4305))))))), (_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), min(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), clamp(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), (ivec4(-8292, -2511, -80044, 4305)) - ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), ivec4(0, 0, 0, 0) ^ (ivec4(-8292, -2511, -80044, 4305))), ivec4(-8292, -2511, -80044, 4305))), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), ivec4(-8292, -2511, -80044, 4305)))))))) | ivec4(0, 0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), min(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), clamp(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), (ivec4(-8292, -2511, -80044, 4305)) - ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), ivec4(0, 0, 0, 0) ^ (ivec4(-8292, -2511, -80044, 4305))), ivec4(-8292, -2511, -80044, 4305))), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), ivec4(-8292, -2511, -80044, 4305))))))), (_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), min(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), clamp(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), (ivec4(-8292, -2511, -80044, 4305)) - ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), ivec4(0, 0, 0, 0) ^ (ivec4(-8292, -2511, -80044, 4305))), ivec4(-8292, -2511, -80044, 4305))), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), ivec4(-8292, -2511, -80044, 4305)))))))) | (_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), min(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), clamp(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), (ivec4(-8292, -2511, -80044, 4305)) - ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), ivec4(0, 0, 0, 0) ^ (ivec4(-8292, -2511, -80044, 4305))), ivec4(-8292, -2511, -80044, 4305))), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), ivec4(-8292, -2511, -80044, 4305))))))))), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), min(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), clamp(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), (ivec4(-8292, -2511, -80044, 4305)) - ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), ivec4(0, 0, 0, 0) ^ (ivec4(-8292, -2511, -80044, 4305))), ivec4(-8292, -2511, -80044, 4305))), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), ivec4(-8292, -2511, -80044, 4305))))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), min(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), clamp(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), (ivec4(-8292, -2511, -80044, 4305)) - ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), ivec4(0, 0, 0, 0) ^ (ivec4(-8292, -2511, -80044, 4305))), ivec4(-8292, -2511, -80044, 4305))), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), ivec4(-8292, -2511, -80044, 4305))))))), (false ? _GLF_FUZZED(ivec4(-84572, 33353, 68369, 85570)) : _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), min(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), clamp(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), (ivec4(-8292, -2511, -80044, 4305)) - ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), ivec4(0, 0, 0, 0) ^ (ivec4(-8292, -2511, -80044, 4305))), ivec4(-8292, -2511, -80044, 4305))), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), ivec4(-8292, -2511, -80044, 4305))))))))), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), min(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), clamp(_GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), (ivec4(-8292, -2511, -80044, 4305)) - ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), ivec4(0, 0, 0, 0) ^ (ivec4(-8292, -2511, -80044, 4305))), ivec4(-8292, -2511, -80044, 4305))), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), _GLF_IDENTITY(ivec4(-8292, -2511, -80044, 4305), max(ivec4(-8292, -2511, -80044, 4305), ivec4(-8292, -2511, -80044, 4305))))))))).a) : 1)))))) | (ivec2(86384, -4315).xxx & ivec3(0, 0, 0)))))))), 64)), (false ? _GLF_FUZZED(-8492) : _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, 1, 1)), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, int(ivec2(64, 1))))), 64)), 1, 1), (_GLF_IDENTITY(ivec3(64, 1, 1), (ivec3(64, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)))) | (ivec3(64, 1, 1)))) | (ivec2(86384, -4315).xxx & ivec3(0, 0, 0))))), (~ (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, int(ivec2(64, _GLF_IDENTITY(1, max(1, 1))))))), 64)), 1, 1), (_GLF_IDENTITY(ivec3(64, 1, 1), (ivec3(64, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)))) | (ivec3(64, 1, 1)))) | (_GLF_IDENTITY(ivec2(86384, -4315), ivec2(ivec2(ivec2(86384, -4315)))).xxx & ivec3(0, 0, 0)))))) ^ _GLF_IDENTITY(0, clamp(0, 0, 0)))))), 64)))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED((_GLF_IDENTITY(-86612, clamp(-86612, -86612, -86612)))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.1, -1148.2383)) : injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat4((injectionSwitch)[1], 1.0, 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(vec4(-8.6, -716.041, -344.543, -5.0).p)), bool(false))), 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), sin(0.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(-5.2, -7.0, 914.155, -6.5, 1537.3616, -7096.5746, 409.425, -95.39, 2.4, 9.6, 9.4, _GLF_IDENTITY(-62.28, (_GLF_IDENTITY(-62.28, clamp(-62.28, -62.28, -62.28))) * 1.0), -4.2, -9.2, -1.8, -9.9)) : mat4((injectionSwitch)[1], 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), sin(0.0), 1.0, 1.0)))))), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-87.31)), bvec2(false, false))).y)))))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, true && (false))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), true), true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false, false)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), true && ((false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), true && ((false))), false)))))) && true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
