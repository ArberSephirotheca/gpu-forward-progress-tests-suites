#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))), max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), injectionSwitch.x)) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), bool(bvec3(((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_DEAD(false)))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_DEAD(false)))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_DEAD(false)))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_DEAD(false)))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false, false, false))))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_DEAD(false)))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_DEAD(false)))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_DEAD(false)))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false, false, false))))), true, false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -9.2)) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), false, true)))))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), true && (bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bool(false || (false)), (_GLF_IDENTITY(bool(false || (false)), bool(bool(bool(false || (false)))))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), ~ (~ (uint(uint(subgroup_size)))))), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))), (false) || false)))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u))) | 0u)) + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(virtual_gid))), ((subgroup_local_id + 1) % subgroup_size))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, _GLF_IDENTITY(0u, max(0u, 0u)))))) - 0u), (workgroup_base) / 1u) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 ^ (_GLF_IDENTITY(int(1), ~ (~ (int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), (_GLF_IDENTITY(int(ivec3(1, 1, 1)), (int(ivec3(1, 1, 1))) | (int(ivec3(1, 1, 1))))) + 0)))))))), (_GLF_IDENTITY(int(1), 0 ^ (_GLF_IDENTITY(int(1), ~ (~ (int(1))))))) | (_GLF_IDENTITY(int(1), 0 ^ (_GLF_IDENTITY(int(1), ~ (~ (int(1))))))))))) % subgroup_size))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, min(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), ((_GLF_IDENTITY(64, (64) >> 0))) | ((_GLF_IDENTITY(64, (64) >> 0)))) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << 0)))) ^ 0, clamp((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) | 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (64) << 0)))) ^ 0, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec3((64), 0, 1), clamp(ivec3((64), 0, 1), _GLF_IDENTITY(ivec3((64), 0, 1), (ivec3((64), 0, 1)) / ivec3(1, 1, 1)), ivec3((64), 0, 1))))) << 0), (_GLF_IDENTITY(64, (64) << 0)) | 0)))) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> _GLF_IDENTITY(0, max(0, 0)))) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (64))) - 0)) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (true ? _GLF_IDENTITY(64, (64) << 0) : _GLF_FUZZED(24396)))))) ^ 0, 0, 1), max(ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, 0, 1), ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, 0, 1)))), int(ivec2(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0))))) | ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))))) ^ 0, 0, 1), max(ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, _GLF_IDENTITY((64), min((64), _GLF_IDENTITY((64), 0 | ((64))))) << 0)))) ^ 0, 0, 1), ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, 0, 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, 0, 1), max(ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, 0, 1), ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, 0, 1))), (false ? _GLF_FUZZED(ivec3(-13807, -33310, -22571)) : _GLF_IDENTITY(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, 0, 1), max(ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, 0, 1), ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))), 0, 1))), (_GLF_IDENTITY(ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, 0, 1), max(ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, 0, 1), ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, 0, 1)))) << ivec3(0, 0, 0)))), _GLF_IDENTITY(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0))), max(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))))) ^ 0, 0, 1), max(ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, 0, 1), ivec3((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(64, (64) << 0)))) ^ 0, 0, 1)))))), 0))))))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).y), false, true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false)))), false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(4.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) * cos(0.0), mix(float(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(4.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) * cos(0.0)), float(_GLF_FUZZED(-8.1)), bool(false)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) * cos(0.0)), 1.0, 1.0, sin(0.0)), (false ? _GLF_FUZZED(mat2(5.4, 5.9, 1850.2776, -9.9)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (injectionSwitch.y) * _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), float(mat4x3(cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-3.2)), float(cos(0.0)), bool(true)))), mix(float((_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-3.2)), float(cos(0.0)), _GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || false), true && (bool(true))), false, true, true))))))), _GLF_IDENTITY(float(_GLF_FUZZED(551.472)), min(float(_GLF_FUZZED(551.472)), _GLF_IDENTITY(float(_GLF_FUZZED(551.472)), clamp(float(_GLF_FUZZED(551.472)), float(_GLF_FUZZED(551.472)), float(_GLF_FUZZED(551.472)))))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))))))), 1.0, 1.0, sin(0.0)), mat2(mat2x3(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (injectionSwitch.y) * _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), float(mat4x3(cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-3.2)), float(cos(0.0)), bool(true)))), mix(float((_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-3.2)), float(cos(0.0)), _GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || false), true && (bool(true))), false, true, true))))))), _GLF_IDENTITY(float(_GLF_FUZZED(551.472)), min(float(_GLF_FUZZED(551.472)), _GLF_IDENTITY(float(_GLF_FUZZED(551.472)), clamp(float(_GLF_FUZZED(551.472)), float(_GLF_FUZZED(551.472)), float(_GLF_FUZZED(551.472)))))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))))))), 1.0, 1.0, sin(0.0)))))))), max(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) * cos(0.0)), 1.0, 1.0, sin(0.0)), (false ? _GLF_FUZZED(mat2(5.4, 5.9, 1850.2776, -9.9)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (injectionSwitch.y) * _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), float(mat4x3(cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-3.2)), float(cos(0.0)), bool(true)))), mix(float((_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-3.2)), float(cos(0.0)), _GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || false), true && (bool(true))), false, true, true))))))), _GLF_IDENTITY(float(_GLF_FUZZED(551.472)), min(float(_GLF_FUZZED(551.472)), _GLF_IDENTITY(float(_GLF_FUZZED(551.472)), clamp(float(_GLF_FUZZED(551.472)), float(_GLF_FUZZED(551.472)), float(_GLF_FUZZED(551.472)))))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))))))), 1.0, 1.0, sin(0.0)), mat2(mat2x3(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (injectionSwitch.y) * _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), float(mat4x3(cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-3.2)), float(cos(0.0)), bool(true)))), mix(float((_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-3.2)), float(cos(0.0)), _GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || false), true && (bool(true))), false, true, true))))))), _GLF_IDENTITY(float(_GLF_FUZZED(551.472)), min(float(_GLF_FUZZED(551.472)), _GLF_IDENTITY(float(_GLF_FUZZED(551.472)), clamp(float(_GLF_FUZZED(551.472)), float(_GLF_FUZZED(551.472)), float(_GLF_FUZZED(551.472)))))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))))))), 1.0, 1.0, sin(0.0)))))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) * cos(0.0)), 1.0, 1.0, sin(0.0)), (false ? _GLF_FUZZED(mat2(5.4, 5.9, 1850.2776, -9.9)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (injectionSwitch.y) * _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), float(mat4x3(cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-3.2)), float(cos(0.0)), bool(true)))), mix(float((_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-3.2)), float(cos(0.0)), _GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || false), true && (bool(true))), false, true, true))))))), _GLF_IDENTITY(float(_GLF_FUZZED(551.472)), min(float(_GLF_FUZZED(551.472)), _GLF_IDENTITY(float(_GLF_FUZZED(551.472)), clamp(float(_GLF_FUZZED(551.472)), float(_GLF_FUZZED(551.472)), float(_GLF_FUZZED(551.472)))))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))))))), 1.0, 1.0, sin(0.0)), mat2(mat2x3(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (injectionSwitch.y) * _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), float(mat4x3(cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-3.2)), float(cos(0.0)), bool(true)))), mix(float((_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-3.2)), float(cos(0.0)), _GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || false), true && (bool(true))), false, true, true))))))), _GLF_IDENTITY(float(_GLF_FUZZED(551.472)), min(float(_GLF_FUZZED(551.472)), _GLF_IDENTITY(float(_GLF_FUZZED(551.472)), clamp(float(_GLF_FUZZED(551.472)), float(_GLF_FUZZED(551.472)), float(_GLF_FUZZED(551.472)))))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))))))), 1.0, 1.0, sin(0.0))))))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   int i = _GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) / 1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) / 1, _GLF_IDENTITY(int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(28758))), int(2))) / 1, 0, 1)), clamp(_GLF_IDENTITY(int(ivec3((1 << _GLF_IDENTITY(int(2), int(2))) / 1, 0, 1)), 0 | (int(ivec3((1 << _GLF_IDENTITY(int(2), int(2))) / 1, 0, 1)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), 0 + ((1 << _GLF_IDENTITY(int(2), int(2))))) / 1, 0, 1)), (true ? int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), 0 + ((1 << _GLF_IDENTITY(int(2), int(2))))) / 1, 0, 1)) : _GLF_FUZZED(-96463))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), int(2))) / 1, 0, 1))))), int(ivec2((1 << _GLF_IDENTITY(int(2), int(2))) / 1, 0))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | 0)), min((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | 0)), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | 0))))) | ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | 0)))) - (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0))))), int(_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 0, 1), _GLF_IDENTITY(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), clamp(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), _GLF_IDENTITY(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), min(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), _GLF_IDENTITY(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), ~ (~ (clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1))))))))))))), min(int(2), int(2))))), (_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), clamp(int(int(_GLF_IDENTITY(2, clamp(2, 2, 2)))), int(int(2)), int(int(2)))))), 0 | (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), clamp(int(int(2)), _GLF_IDENTITY(int(int(2)), (_GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 1)))) << (0 << _GLF_IDENTITY(int(4), int(4)))), int(int(2))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2), max((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2)))), (true ? _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2), max((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2)))) : _GLF_FUZZED(-12880))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) / 1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) / 1, _GLF_IDENTITY(int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(28758))), int(2))) / 1, 0, 1)), clamp(_GLF_IDENTITY(int(ivec3((1 << _GLF_IDENTITY(int(2), int(2))) / 1, 0, 1)), 0 | (int(ivec3((1 << _GLF_IDENTITY(int(2), int(2))) / 1, 0, 1)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), 0 + ((1 << _GLF_IDENTITY(int(2), int(2))))) / 1, 0, 1)), (true ? int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), 0 + ((1 << _GLF_IDENTITY(int(2), int(2))))) / 1, 0, 1)) : _GLF_FUZZED(-96463))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), int(2))) / 1, 0, 1))))), int(ivec2((1 << _GLF_IDENTITY(int(2), int(2))) / 1, 0))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | 0)), min((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | 0)), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | 0))))) | ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | 0)))) - (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0))))), int(_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 0, 1), _GLF_IDENTITY(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), clamp(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), _GLF_IDENTITY(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), min(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), _GLF_IDENTITY(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), ~ (~ (clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1))))))))))))), min(int(2), int(2))))), (_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), clamp(int(int(_GLF_IDENTITY(2, clamp(2, 2, 2)))), int(int(2)), int(int(2)))))), 0 | (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), clamp(int(int(2)), _GLF_IDENTITY(int(int(2)), (_GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 1)))) << (0 << _GLF_IDENTITY(int(4), int(4)))), int(int(2))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2), max((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2)))), (true ? _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2), max((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2)))) : _GLF_FUZZED(-12880)))))))), (false ? _GLF_FUZZED(-54834) : ~ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) / 1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) / 1, _GLF_IDENTITY(int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), (true ? int(2) : _GLF_FUZZED(28758))), int(2))) / 1, 0, 1)), clamp(_GLF_IDENTITY(int(ivec3((1 << _GLF_IDENTITY(int(2), int(2))) / 1, 0, 1)), 0 | (int(ivec3((1 << _GLF_IDENTITY(int(2), int(2))) / 1, 0, 1)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), int(2))), 0 + ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, clamp(2, 2, 2)))) : _GLF_FUZZED(85784)))))))) / 1, 0, 1)), (true ? int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), 0 + ((1 << _GLF_IDENTITY(int(2), int(2))))) / 1, 0, 1)) : _GLF_FUZZED(-96463))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), int(2))) / 1, 0, 1))))), int(ivec2((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2))))) / 1, 0))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) ^ 0))) + (2))) | 0)), min((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + _GLF_IDENTITY((2), clamp((2), (2), (2))))) | 0)), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | 0))))) | ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | 0)))) - (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), clamp(_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), _GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), _GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 0, 1), _GLF_IDENTITY(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), clamp(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), _GLF_IDENTITY(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), min(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), _GLF_IDENTITY(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), ~ (~ (clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1))))))))))), (true ? int(_GLF_IDENTITY(ivec3(2, 0, 1), _GLF_IDENTITY(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), clamp(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), _GLF_IDENTITY(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), min(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), _GLF_IDENTITY(clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1)), ~ (~ (clamp(ivec3(2, 0, 1), ivec3(2, 0, _GLF_IDENTITY(1, (1) - 0)), ivec3(2, 0, 1))))))))))) : _GLF_FUZZED(-90545))))), min(_GLF_IDENTITY(int(2), (int(2)) | 0), int(2))))), (_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 0 + (2)), 2)), _GLF_IDENTITY(int(int(2)), clamp(int(int(_GLF_IDENTITY(2, clamp(2, 2, 2)))), int(int(2)), int(int(2)))))), 0 | (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), clamp(_GLF_IDENTITY(int(int(2)), (false ? _GLF_FUZZED(-78081) : int(int(2)))), _GLF_IDENTITY(int(int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), (false ? _GLF_FUZZED(96443) : int(int(2)))), int(ivec4(int(int(2)), 0, 1, 1)))) << (0 << _GLF_IDENTITY(int(4), int(4)))), int(int(2))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))), (_GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772)))))) / 1) : 2), max((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, false), true)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, false), true)))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, false), true)))), false)))))))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(_GLF_IDENTITY(37772, (37772) ^ 0), clamp(37772, 37772, 37772))))) : 2), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2)))), (true ? _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2), max((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2)))) : _GLF_IDENTITY(_GLF_FUZZED(-12880), (_GLF_FUZZED(-12880)) / 1))))))))))))), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, 2, 2))))) / 1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) / 1, max((1 << _GLF_IDENTITY(int(2), int(2))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) + 0), (1 << _GLF_IDENTITY(int(2), int(2))) / 1)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) / 1, max((1 << _GLF_IDENTITY(int(2), int(2))) / 1, (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 | (int(2))), int(2))) / 1))) ^ 0), int(ivec2((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (~ (2)))), int(2))) / 1, 0))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, 0 + (2))), ((_GLF_IDENTITY(2, 0 + (2)))) | ((_GLF_IDENTITY(2, 0 + (2))))) | 0)) - (0 | 0))), int(_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), int(_GLF_IDENTITY(ivec3(2, 0, 1), clamp(ivec3(2, 0, 1), ivec3(2, 0, 1), ivec3(2, 0, 1)))))), min(int(2), int(_GLF_IDENTITY(2, 1 * (2))))))), (_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), clamp(int(int(2)), int(_GLF_IDENTITY(int(2), (int(2)) ^ 0)), int(int(_GLF_IDENTITY(2, (2) << 0))))))), 0 | (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), clamp(int(_GLF_IDENTITY(int(2), (int(2)) * 1)), _GLF_IDENTITY(int(int(2)), (int(int(2))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), int(int(2))))))))))) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(37772, clamp(_GLF_IDENTITY(37772, 0 ^ (37772)), _GLF_IDENTITY(37772, max(37772, 37772)), _GLF_IDENTITY(37772, clamp(37772, 37772, 37772))))) : 2)))))))) - (0 | 0)), 0)));
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(52061))), (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(52061)))) | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(52061))))), (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(52061, (true ? 52061 : _GLF_FUZZED(33631))))))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3)), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3))) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(52061))), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(52061), (true ? 4 : _GLF_FUZZED(52061)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))), _GLF_IDENTITY(((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(52061))))) ^ 0, int(ivec2(((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(52061))))) ^ 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, min(3, 3)), (_GLF_IDENTITY(3, min(3, 3))) << 0)), int(3)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (true ? 4 : _GLF_FUZZED(52061))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (true ? 4 : _GLF_FUZZED(52061)))) ^ (_GLF_IDENTITY(0, 0 ^ (0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(52061))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))))), (true ? 4 : _GLF_FUZZED(52061))), (false ? _GLF_FUZZED(19694) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))))), (true ? 4 : _GLF_FUZZED(52061))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))))), (true ? 4 : _GLF_FUZZED(52061))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))))), (true ? 4 : _GLF_FUZZED(52061))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))))), (true ? 4 : _GLF_FUZZED(52061))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))))), (true ? 4 : _GLF_FUZZED(52061))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))))), (true ? 4 : _GLF_FUZZED(52061)))))) - 0)))) ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), _GLF_IDENTITY(int(3), max(int(3), int(3)))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(52061))), (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(52061)))) ^ (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) + 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 3))), int(3))))) << 0)))) >> 0) : _GLF_FUZZED((_GLF_IDENTITY(-8677, 0 ^ (-8677)) - i))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, true && (true)) ? 4 : _GLF_FUZZED(52061))), (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(52061)))) ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (3), max(~ _GLF_IDENTITY((3), ~ (~ ((3)))), ~ (3)))))), int(3)))) : _GLF_IDENTITY(_GLF_FUZZED((-8677 - i)), (_GLF_FUZZED((-8677 - i))) << 0))) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) >> 0), 64, 64)), ~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, 0, 1, 0)), 0 ^ (int(ivec4(64, 0, 1, 0)))))))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, cos(0.0)))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(825.944)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))) && true))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(43.06)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, true, false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, false || (true))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0)))), 0.0, 1.0))).y) && true), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), bool(bvec2(! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), false)))))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, false))) || false)))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(false))), false, false, false))) || false, (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(false))), false, false, false))) || false, true && ((bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))))))), false || (_GLF_DEAD(false))), false, false, false))) || false))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_DEAD(false), true))), false || (! (bool(bvec2(_GLF_DEAD(false), true)))))))), (_GLF_DEAD(false)) || false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
