#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 vec4 _f0;
} ;

struct _GLF_struct_7 {
 mat4x3 _f0;
 _GLF_struct_6 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 mat3 _f1;
 int _f2;
} ;

struct _GLF_struct_3 {
 uint _f0;
 vec2 _f1;
 ivec4 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 vec3 _f1;
 mat4 _f2;
 mat3x2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 mat2 _f1;
 vec3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 mat4x2 _f2;
 bvec4 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_0 {
 bool _f0;
 bool _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_0 _f0;
 int i;
 uint _f1;
 _GLF_struct_5 _f2;
 mat4x2 _f3;
 _GLF_struct_7 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 0u + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (_GLF_IDENTITY(0u, min(0u, 0u)) | (subgroup_local_id)) | 0u))));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), 0u + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), uint(uvec3(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size))), 1u, 1u)))));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, 0), (ivec2(4, 0)) + ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-83305, ~ (~ (_GLF_IDENTITY(-83305, max(-83305, -83305)))))))), 0), ivec2(ivec3(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-83305, ~ (~ (_GLF_IDENTITY(-83305, max(-83305, -83305)))))))), 0), max(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-83305, ~ (~ (_GLF_IDENTITY(-83305, max(-83305, -83305)))))))), 0), ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-83305, ~ (~ (_GLF_IDENTITY(-83305, max(-83305, -83305)))))))), 0))), 1))))) - 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(ivec2(4, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) * (1 ^ 0)))))), _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-83305))), 0))) - 0, ((int(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-83305))), 0))) - 0) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), (_GLF_IDENTITY(0, int(ivec3(0, 0, 0)))) | (_GLF_IDENTITY(0, int(ivec3(0, 0, 0))))), _GLF_IDENTITY(1, int(int(1))))), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(4, 0)), (int(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-83305))), 0))) - 0), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(4, 0)), (int(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-83305))), 0))) - 0), (_GLF_IDENTITY(int(ivec2(4, 0)), (int(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-83305))), 0))) - 0)) + 0), (1 | 0), 0), max(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(4, 0)), (int(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-83305))), 0))) - 0), (_GLF_IDENTITY(int(ivec2(4, 0)), (int(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-83305))), 0))) - 0)) + 0), (1 | 0), 0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(4, 0)), (int(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-83305))), 0))) - 0), (_GLF_IDENTITY(int(ivec2(4, 0)), (int(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-83305))), 0))) - 0)) + 0), (1 | 0), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), (_GLF_IDENTITY(0, int(ivec3(0, 0, 0)))) | (_GLF_IDENTITY(0, int(ivec3(0, 0, 0))))), 1))) | (int(ivec3(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec4(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1)))) >> ((0 >> _GLF_IDENTITY(int(8), int(8))) | 0)), 0)), (int(ivec2(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(13053) : 4)) : _GLF_FUZZED(-83305))), 0))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), int(ivec3(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 1, 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), int(ivec3(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 1, 0))))) | 0) | (_GLF_IDENTITY(0, int(ivec3(0, 0, 0))))), 1)))))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)))) : _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u)))))) | _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u))))))), 1u * ((_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)))) : _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u)))))) | 0u))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id + 1))) | 0u)))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_0(true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) && true))), bool(bvec4(bool(bool(_GLF_IDENTITY(true, (true) && true))), true, true, true))))))) && true)), false || ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-657.484)), bool(false)))))) > injectionSwitch.y)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true && (true && (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))))), false, false)))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (true && (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true), bvec2(bvec2(bvec2(true, true)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec2(bvec2(bvec2(true, true))))))))))), false, false)))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), true))))))))))))))))), 0, _GLF_IDENTITY(1u, max(1u, 1u)), _GLF_struct_5(_GLF_struct_1(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))) && true) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED((workgroup_id + workgroup_size))), ~ (~ ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat3x4(vec2(injectionSwitch), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED((workgroup_id + workgroup_size)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))) && true) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED((workgroup_id + workgroup_size))), ~ (~ ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat3x4(vec2(injectionSwitch), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED((workgroup_id + workgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))) && true) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED((workgroup_id + workgroup_size))), ~ (~ ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat3x4(vec2(injectionSwitch), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED((workgroup_id + workgroup_size)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), bool(bvec4(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), false, true, true)))), false, false)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), bool(bvec4(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), false, true, true)))), false, false))) || false)))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) / vec2(1.0, 1.0)))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))) || false)) && true) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED((workgroup_id + workgroup_size))), ~ (~ ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat3x4(vec2(injectionSwitch), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((true), ((true)) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) | (1u)))) : _GLF_FUZZED((workgroup_id + workgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))) && true) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED((workgroup_id + workgroup_size))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat3x4(vec2(injectionSwitch), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0))))).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED((workgroup_id + workgroup_size))))), ((~ ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat3x4(vec2(injectionSwitch), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0))))).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED((workgroup_id + workgroup_size)))))) / 1u)))))), mat2(1.0), vec3(1.0), mat2(1.0)), _GLF_struct_2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-9305.0826)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-16.06, min(_GLF_IDENTITY(-16.06, mix(float(-16.06), float(_GLF_FUZZED(-9.8)), bool(false))), _GLF_IDENTITY(-16.06, max(_GLF_IDENTITY(-16.06, mix(float(_GLF_FUZZED(972.802)), float(-16.06), bool(true))), -16.06)))), (-16.06) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(mat2x4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-16.06, min(_GLF_IDENTITY(-16.06, mix(float(-16.06), float(_GLF_FUZZED(-9.8)), bool(false))), _GLF_IDENTITY(-16.06, max(_GLF_IDENTITY(-16.06, mix(float(_GLF_FUZZED(972.802)), float(-16.06), bool(true))), -16.06)))), (-16.06) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0))), sqrt(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, abs(0.0), 1.0, 1.0))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-16.06, (_GLF_IDENTITY(-16.06, (-16.06) / 1.0)) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-16.06, (-16.06) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-16.06, (-16.06) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0 + (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-16.06, (-16.06) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-16.06, (-16.06) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(float(mat2x3(clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-16.06, (-16.06) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-16.06, (-16.06) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0 + (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-16.06, (-16.06) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-16.06, (-16.06) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-2.3) : float(mat2x3(clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-16.06, (-16.06) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-16.06, (-16.06) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0 + (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-16.06, (-16.06) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-16.06, (-16.06) / 1.0)) : (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))))))) / _GLF_ONE(1.0, injectionSwitch.y)))) / sqrt(1.0))), vec3(1.0), _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-8482.1102, -832.355, 6437.3143, -217.742, _GLF_IDENTITY(8024.4070, clamp(8024.4070, 8024.4070, 8024.4070)), 1.8, 22.41, -2.6, _GLF_IDENTITY(-715.344, (_GLF_IDENTITY(-715.344, float(_GLF_IDENTITY(mat2x4(-715.344, log(1.0), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true))), sqrt(1.0), 1.0, 0.0, exp(0.0)), mat2x4(mat4(mat2x4(-715.344, log(1.0), 0.0, 1.0, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), exp(0.0)))))))) - 0.0), 2.5, 61.33, 8.9, 398.941, 4.0, 8.2, -52.23)) : mat4(1.0))), mat3x2(1.0), vec2(1.0)), mat4x2(1.0), bvec4(true), _GLF_struct_3(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) + _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), mix(vec2((vec2(1.0))[0], (vec2(1.0))[1]), vec2(_GLF_FUZZED(-9446.1381), _GLF_FUZZED(7.6)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0)) * mat2(1.0), (true ? (vec2(1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(-5.9, 44.32)))), (_GLF_IDENTITY((vec2(1.0)) * mat2(1.0), (_GLF_IDENTITY(true, ! (! (true))) ? (vec2(1.0)) * _GLF_IDENTITY(mat2(1.0), mat2(mat4(mat2(1.0)))) : _GLF_FUZZED(vec2(-5.9, 44.32))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), max(ivec4(1), _GLF_IDENTITY(ivec4(1), (ivec4(1)) ^ ivec4(0, 0, 0, 0))))) >> ivec4(0, 0, 0, 0)), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0))))) + ivec4(0, 0, 0, 0)), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(0, 0, 0, 0) | (ivec4(1, 0, 0, 0)))), (false ? _GLF_FUZZED(-5060) : int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(0, 0, 0, 0) | (ivec4(1, 0, 0, 0)))))))), min(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(min(ivec4(1), ivec4(1)), (false ? _GLF_FUZZED(ivec4(76578, -31710, 57976, -28253)) : min(ivec4(1), _GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), ~ (~ (_GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)))))) - ivec4(0, 0, 0, 0)))))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)))), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))), min(_GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1))), ivec4(1))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0)))), 0, 0, 0)))))), _GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(0, 0, 0, 0)))))), min(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0))), ~ (~ (min(_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0))))))), _GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)))))))))), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u | _GLF_IDENTITY((1u), ((1u)) << 0u), 0u + (0u | _GLF_IDENTITY((1u), ((1u)) << _GLF_IDENTITY(0u, 0u | (0u))))), (0u | _GLF_IDENTITY((1u), ((1u)) << 0u)) >> 0u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min((1u), (1u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), max((1u), (1u))), (1u))))), _GLF_IDENTITY(uint(uvec2(0u | _GLF_IDENTITY((1u), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min((_GLF_IDENTITY(1u, min(1u, 1u))), (1u)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min(_GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, 1u))), (true ? (_GLF_IDENTITY(1u, min(1u, 1u))) : _GLF_FUZZED(subgroup_local_id)))) / 1u), (1u)))), ((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) - (0u ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), (1u))))) | 0u)) | 0u)), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min((1u), (1u))))), 0u)), ~ (~ (uint(uvec2(0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min((1u), (1u))))), 0u)))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))) | _GLF_IDENTITY((1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_FUZZED(workgroup_id))) : _GLF_IDENTITY((1u), min((1u), (1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min((1u), (1u))))), 0u ^ (_GLF_IDENTITY(0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min((1u), (1u))))), (0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min((1u), (1u)))))) << 0u))), 0u)), (uint(uvec2(_GLF_IDENTITY(0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min((1u), (1u))))), 0u ^ (_GLF_IDENTITY(0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min((1u), (1u))))), (0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min((1u), (1u)))))) << 0u))), 0u))) / 1u), ~ (~ (uint(uvec2(_GLF_IDENTITY(0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min((1u), (1u))))), uint(uvec4(_GLF_IDENTITY(0u, (0u) | (0u)) | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u), min((1u), (1u))))), 0u, 1u, 0u))), 0u)))))))) * 1u))))) | 0u)) >> (0u | 0u)))), _GLF_struct_4(mat2x4(1.0), mat3(1.0), 1)), mat4x2(1.0), _GLF_struct_7(mat4x3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_struct_6(vec4(1.0)), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(uvec2(124914u, 74054u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (true ? _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))) : _GLF_FUZZED(uvec2(81297u, 121136u)))))), (_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (true ? _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))) : _GLF_FUZZED(uvec2(81297u, 121136u))))))) << uvec2(0u, 0u)), min(uvec2(1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((-- subgroup_size)) : 1u)), _GLF_IDENTITY((1u) | 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u) | 0u, max((1u) | 0u, (1u) | 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1u) | 0u, 0u | ((1u) | 0u)), max((1u) | 0u, (1u) | 0u)))) ^ 0u))))))))), uvec2(_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))));
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], uint(2), 4, _GLF_IDENTITY(64, int(ivec4(64, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 0, 0))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, 0), min(ivec4(4, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | 0)), 0, 0), ivec4(4, 0, 0, 0)))), _GLF_IDENTITY((int(ivec4(4, 0, 0, 0))), _GLF_IDENTITY(((int(ivec4(4, _GLF_IDENTITY(0, (0) ^ 0), 0, 0)))), (((int(ivec4(4, 0, 0, 0))))) ^ 0) << 0) | (int(ivec4(4, 0, 0, 0))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(mix(0.6, -3.0, -4871.0617)) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-25.71)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.9, -45.31)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(step(-4.4, 1.4)) : injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(43.45))), max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))) && true), false, false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false)))))) || false)), (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false)))))) || false))) || false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, false)), false, false))), true, false))), false)))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), true, false))), false)))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, false)), false, false))), true, false))), false)))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), true, false))), false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, false)), false, false))), true, false))), false)))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, false), false)), true, false))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) && _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), true, true, true)))), true && (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(false || (false), true, true, true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
