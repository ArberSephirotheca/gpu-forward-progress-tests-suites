#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))) || false))), false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), _GLF_IDENTITY((mat2(injectionSwitch, determinant(mat4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.3)), bool(false))), 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0)))), 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)), (_GLF_IDENTITY((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)), mat2(0.0, 0.0, 0.0, 0.0) + ((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))))) * mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(clamp(vec2(3.1, _GLF_IDENTITY(564.387, mix(float(_GLF_FUZZED(969.303)), float(564.387), bool(true)))), vec2(-6536.0205, 6.0), injectionSwitch)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, sin(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (true ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, round(length(normalize(1.0))) * (1.0)), 0.0, 0.0, 1.0, sin(sqrt(0.0))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0)))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, -46.09, _GLF_IDENTITY(1.5, (1.5) / 1.0), 8715.4049)))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0)))), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), _GLF_IDENTITY((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)), ((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))) * mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(clamp(vec2(3.1, _GLF_IDENTITY(564.387, mix(float(_GLF_FUZZED(969.303)), float(564.387), bool(true)))), vec2(-6536.0205, 6.0), injectionSwitch)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, sin(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (true ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0)))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, -46.09, _GLF_IDENTITY(1.5, (1.5) / 1.0), 8715.4049)))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), _GLF_IDENTITY((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)), ((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))) * mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(clamp(vec2(3.1, _GLF_IDENTITY(564.387, mix(float(_GLF_FUZZED(969.303)), float(564.387), bool(true)))), vec2(-6536.0205, 6.0), injectionSwitch)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, sin(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (true ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0)))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, -46.09, _GLF_IDENTITY(1.5, (1.5) / 1.0), 8715.4049)))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0))))) + vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), _GLF_IDENTITY((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.8) : 1.0)))), 0.0)), 1.0)), ((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, log(exp(0.0)), sqrt(1.0), 1.0, 1.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))) * mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(clamp(vec2(3.1, _GLF_IDENTITY(564.387, mix(float(_GLF_FUZZED(969.303)), float(564.387), bool(true)))), vec2(-6536.0205, 6.0), injectionSwitch)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, sin(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(269.185)), bool(false))), 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (true ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0)))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, -46.09, _GLF_IDENTITY(1.5, (1.5) / 1.0), 8715.4049)))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), _GLF_IDENTITY((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)), ((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))) * mat2(1.0)) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), (false ? _GLF_FUZZED(clamp(vec2(3.1, _GLF_IDENTITY(564.387, mix(float(_GLF_FUZZED(969.303)), float(564.387), bool(true)))), vec2(-6536.0205, 6.0), injectionSwitch)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, sin(0.0), 0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((true ? 4.2 : 342.322))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), float(float(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), min(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0))))))), sin(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (true ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0)))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, -46.09, _GLF_IDENTITY(1.5, (1.5) / 1.0), 8715.4049)))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0))))) + vec2(0.0, 0.0))) - sin(vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, sin(0.0), 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, sin(_GLF_IDENTITY(0.0, float(vec3(0.0, cos(0.0), 0.0)))), 0.0)), mat2(1.0) * (vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0)), 1.0), _GLF_IDENTITY((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-4.1))), 0.0)), 1.0)), ((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))) * mat2(1.0)) / mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-5.6 / -2615.9367))), bool(false)))) - 0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-84.31)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))))), (false ? _GLF_FUZZED(clamp(vec2(3.1, _GLF_IDENTITY(564.387, mix(float(_GLF_FUZZED(969.303)), float(564.387), bool(true)))), vec2(_GLF_IDENTITY(-6536.0205, max(-6536.0205, -6536.0205)), 6.0), injectionSwitch)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, (1.0) * sqrt(abs(1.0)))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, sin(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (true ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0)))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, -46.09, _GLF_IDENTITY(1.5, (1.5) / 1.0), 8715.4049)))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), _GLF_IDENTITY((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)), ((mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(0.0, length(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x3(-71.76, 739.896, -5.2, -494.938, 0.4, 2640.6835, 9765.2889, 419.504, -0.2, -2598.0010, 365.321, -517.571)) : mat4x3(0.0, length(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), max(float(_GLF_IDENTITY(mat4x3(0.0, length(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x3(-71.76, 739.896, -5.2, -494.938, 0.4, 2640.6835, 9765.2889, 419.504, -0.2, -2598.0010, 365.321, -517.571)) : mat4x3(0.0, length(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat4x3(0.0, length(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x3(-71.76, 739.896, -5.2, -494.938, 0.4, 2640.6835, 9765.2889, 419.504, -0.2, -2598.0010, 365.321, -517.571)) : mat4x3(0.0, length(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), 1.0))) * mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(clamp(vec2(3.1, _GLF_IDENTITY(564.387, mix(float(_GLF_FUZZED(969.303)), float(564.387), bool(true)))), vec2(-6536.0205, 6.0), injectionSwitch)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, sin(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, sin(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), _GLF_IDENTITY(mat2(mat3(mat2(injectionSwitch, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, sin(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))), (mat2(mat3(mat2(injectionSwitch, determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, sin(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0)), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (true ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0)))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, -46.09, _GLF_IDENTITY(_GLF_IDENTITY(1.5, (1.5) / 1.0), max(_GLF_IDENTITY(1.5, (1.5) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.5, (1.5) / 1.0), 1.0 * (_GLF_IDENTITY(1.5, (1.5) / 1.0))))), 8715.4049)))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0))))) + vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, sin(0.0), 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, sin(0.0), 0.0)))))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.3)), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max(_GLF_IDENTITY((0.0), min((0.0), (0.0))), (0.0))) / _GLF_IDENTITY(exp(0.0), float(mat4(exp(0.0), 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), float(mat3x4(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, cos(0.0), log(1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, cos(0.0), log(1.0)), vec3(0.0, 0.0, 1.0))), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), (_GLF_IDENTITY(0.0, (0.0) - 0.0)) + abs(0.0)))))), 1.0), (mat2(injectionSwitch, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, (0.0) - tan(0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0))), 1.0, 0.0)))), 1.0)) / mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0)), 1.0))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) ? _GLF_FUZZED(clamp(vec2(3.1, _GLF_IDENTITY(564.387, mix(float(_GLF_FUZZED(969.303)), float(564.387), bool(true)))), vec2(-6536.0205, 6.0), injectionSwitch)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, sin(0.0), 0.0, 0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, sqrt(0.0)))), 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2242.7757)), float(0.0), bool(true))), 1.0, sin(sqrt(0.0))), (true ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(sqrt(0.0)), float(mat3(_GLF_IDENTITY(sin(sqrt(0.0)), (false ? _GLF_FUZZED(6705.6165) : _GLF_IDENTITY(sin(sqrt(0.0)), clamp(sin(sqrt(0.0)), sin(sqrt(0.0)), sin(sqrt(0.0)))))), 1.0, abs(0.0), 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0)))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, _GLF_IDENTITY(-46.09, clamp(-46.09, -46.09, _GLF_IDENTITY(-46.09, clamp(-46.09, -46.09, _GLF_IDENTITY(-46.09, (true ? -46.09 : _GLF_FUZZED(-7.9))))))), 1.5, 8715.4049)))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0), min((vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, sqrt(0.0)))), 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2242.7757)), float(0.0), bool(true))), 1.0, sin(sqrt(0.0))), (true ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(sqrt(0.0)), float(mat3(_GLF_IDENTITY(sin(sqrt(0.0)), (false ? _GLF_FUZZED(6705.6165) : _GLF_IDENTITY(sin(sqrt(0.0)), clamp(sin(sqrt(0.0)), sin(sqrt(0.0)), sin(sqrt(0.0)))))), 1.0, abs(0.0), 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0)))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, _GLF_IDENTITY(-46.09, clamp(-46.09, -46.09, _GLF_IDENTITY(-46.09, clamp(-46.09, -46.09, _GLF_IDENTITY(-46.09, (true ? -46.09 : _GLF_FUZZED(-7.9))))))), 1.5, 8715.4049)))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, sqrt(0.0)))), 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2242.7757)), float(0.0), bool(true))), 1.0, sin(sqrt(0.0))), (true ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(sqrt(0.0)), float(mat3(_GLF_IDENTITY(sin(sqrt(0.0)), (false ? _GLF_FUZZED(6705.6165) : _GLF_IDENTITY(sin(sqrt(0.0)), clamp(sin(sqrt(0.0)), sin(sqrt(0.0)), sin(sqrt(0.0)))))), 1.0, abs(0.0), 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0)))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, _GLF_IDENTITY(-46.09, clamp(-46.09, -46.09, _GLF_IDENTITY(-46.09, clamp(-46.09, -46.09, _GLF_IDENTITY(-46.09, (true ? -46.09 : _GLF_FUZZED(-7.9))))))), 1.5, 8715.4049)))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(-814.257) : sin(0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(-814.257) : sin(0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat2x4(_GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(-814.257) : sin(0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x4(_GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(-814.257) : sin(0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), float(mat2x4(_GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(-814.257) : sin(0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (true ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), sin(sqrt(0.0)))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, -46.09, 1.5, _GLF_IDENTITY(8715.4049, mix(float(8715.4049), float(_GLF_FUZZED(float(194168u))), bool(false))))))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : (vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (true ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0)))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, -46.09, 1.5, _GLF_IDENTITY(8715.4049, (8715.4049) - 0.0))))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0))), exp(tan(0.0))), (vec3(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), sin(0.0), 1.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (true ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0))), min(_GLF_IDENTITY(sin(sqrt(0.0)), (sin(sqrt(0.0))) + 0.0), sin(sqrt(0.0))))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0)))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, -46.09, 1.5, 8715.4049)))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : (vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat4x2(determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, 1.0 * (1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((6.1 - -656.426))), float(0.0), bool(true))), 1.0, 1.0, 0.0)), _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), min(determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2151.9524)), float(0.0), bool(true)))) + 0.0))), _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(94.32)), float(determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), bool(true))))))), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))) - vec2(0.0, 0.0)), vec2(1.0, 1.0))), 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, sin(sqrt(0.0))), (true ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0)))) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (float(mat4x3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) * 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(float(13680u), max(float(13680u), float(13680u))))), bool(false))))) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, -46.09, 1.5, 8715.4049)))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0))), exp(tan(0.0)))) * mat3(1.0)))))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(clamp(vec2(3.1, _GLF_IDENTITY(564.387, mix(float(_GLF_FUZZED(969.303)), float(564.387), bool(true)))), vec2(-6536.0205, 6.0), injectionSwitch)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, sin(0.0), 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), float(mat2(1.0, sin(0.0), 0.0, 0.0)))) / 1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0), (mat2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? 5.6 : 9.1)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(30.94)), bvec2(true, false))), injectionSwitch)), injectionSwitch)), determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(sin(0.0), (true ? _GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(5974.6822))) : _GLF_FUZZED(vec3(-3.5, -3749.2243, 36.31)[2]))), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (true ? dot(vec2(0.0, 0.0), vec2(1.0, 1.0)) : _GLF_FUZZED(73.61))), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(1.0, 1.0))), 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0))), (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? _GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(min(vec2(5438.8273, -21.31), -3.9))) : 0.0)), 1.0, sin(sqrt(_GLF_IDENTITY(0.0, 1.0 * (0.0))))), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(sqrt(0.0)))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(3.9, -0.5, -75.10, -409.578, -7663.1793, -46.09, 1.5, 8715.4049)))))), 0.0, 1.0, 1.0, 0.0)), 1.0)) / _GLF_IDENTITY(mat2(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4885.3380))), 1.0), (mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) - mat2(0.0, 0.0, 0.0, 0.0))))) - vec2(0.0, 0.0))))).x)) > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) && true), false, false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-9.7))) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))), false, false, true)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-9.7))) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))), false, false, true))))))) && true), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), (! ((! (injectionSwitch.x > injectionSwitch.y)))) && true)))))), false, false, true)))), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), (! ((! (injectionSwitch.x > injectionSwitch.y)))) && true)))))), false, false, true))))) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0), 1.0, 0.0, 0.0, sqrt(1.0), 0.0)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9251.8951)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))), true, false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.9, -215.346)) : injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-98.64), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3867.9862)), bvec2(true, false))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false, true))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false, true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false, true))), false, true)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false, true))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(true, ! (! (true))), false, true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false, true))), false, true)))), true)))), true, true, false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-62697, -70675))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec3(795.236, -7917.0727, 5.7) * mat2x3(-83.33, 6268.5115, -48.14, -475.785, 940.601, 2734.1667))) : injectionSwitch)).x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))), injectionSwitch)).y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true)))))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true)))))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true))))))))))) || false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), 0u | (_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))), 0u ^ (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) * workgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), 0u + (_GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))))) * workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u)) >> 0u), 0u ^ (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), workgroup_size)))) * workgroup_id, _GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) * workgroup_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ (-6.1 + 7.4)))), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(442.581)), float(injectionSwitch.y), bool(true)))) - log(1.0))))))) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) ^ (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))))), (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bool(bool(bool(bvec4(false, true, false, true))))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0)), 1.0)), mix(vec2(_GLF_FUZZED(-486.223), _GLF_FUZZED(5585.7627)), vec2((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0)), 1.0)))[0], (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0)), 1.0)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), false || (bool(bvec4(_GLF_DEAD(false), true, false, false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.4, -4.7)))).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, exp(0.0), 0.0))).x), 1.0, 0.0, 0.0, 0.0))))).y)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
