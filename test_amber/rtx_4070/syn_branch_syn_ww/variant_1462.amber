#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 uvec3 _f0;
 uvec4 _f1;
 bvec2 _f2;
 vec3 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_24 {
 _GLF_struct_23 _f0;
} ;

struct _GLF_struct_21 {
 mat2 _f0;
 ivec3 _f1;
 mat2x3 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_20 {
 ivec4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_20 _f0;
 int _f1;
 _GLF_struct_21 _f2;
 mat4x2 _f3;
 mat2x3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_18 {
 mat3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_19 {
 mat2 _f0;
 vec3 _f1;
 _GLF_struct_18 _f2;
 uint _f3;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
} ;

struct _GLF_struct_25 {
 ivec3 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_22 _f3;
 _GLF_struct_24 _f4;
 mat4x2 _f5;
 uint next_virtual_gid;
} ;

struct _GLF_struct_14 {
 vec4 _f0;
 mat4x2 _f1;
 ivec3 _f2;
 mat2x3 _f3;
 mat3x2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_13 {
 mat2x4 _f0;
 ivec4 _f1;
 mat4x3 _f2;
 mat4x3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_12 {
 ivec2 _f0;
 uvec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 mat2x4 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 mat3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 ivec3 _f1;
 float _f2;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 mat3x2 _f1;
 vec4 _f2;
 mat2x4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 bvec3 _f1;
 uvec2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 vec3 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 bool _f1;
 int _f2;
} ;

struct _GLF_struct_2 {
 int _f0;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 uvec2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 float _f4;
 _GLF_struct_4 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_16 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_11 _f2;
 uint subgroup_local_id;
 int _f3;
 bvec3 _f4;
 vec2 _f5;
 _GLF_struct_15 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))), true)))))))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2660.9101)), vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), bvec2(false, true))).y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2660.9101)), vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), bvec2(false, true))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2660.9101)), vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), bvec2(false, true))).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2660.9101)), vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), bvec2(false, true))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2660.9101)), vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), bvec2(false, true))).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_5(_GLF_struct_0(mat4x2(1.0)), _GLF_struct_1(_GLF_IDENTITY(vec3(1.0), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true)))), float(float((_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true)))), float(float((_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true))))))) : _GLF_FUZZED(43.22))) - 0.0)) * _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(tan(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sqrt(-340.001)) : 0.0)), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), 1.0)), dot(vec2(log(1.0), 1.0), vec2(tan(0.0), 1.0)))), max(1.0, 1.0)))) * mat3(1.0)), uvec2(1u), mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_struct_2(1), _GLF_struct_3(mat2x3(1.0), true, 1), 1.0, _GLF_struct_4(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.5) : 1.0)) : _GLF_FUZZED(-3.6))), float(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.9))), 1.0))) - 0.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)))))), mat4x3(1.0)), _GLF_struct_6(mat2x3(1.0)), _GLF_struct_11(_GLF_struct_7(bvec3(true), bvec3(true), uvec2(1u), vec2(1.0)), vec3(1.0), _GLF_struct_8(uvec2(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, (1u) ^ 0u)))), mat3x2(1.0), vec4(1.0), mat2x4(1.0), mat3x4(1.0)), _GLF_struct_9(mat2x3(1.0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), (~ (_GLF_IDENTITY(1, min(1, 1)))) - ((0 & 43999) << _GLF_IDENTITY(int(8), int(8))))))) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))), 1.0), _GLF_struct_10(ivec2(1), _GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(2.1)) : 1.0)), _GLF_IDENTITY(min(1.0, 1.0), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), float(vec3(min(1.0, 1.0), 0.0, 1.0)))) / 1.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), cos(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), mat3(mat4x3(mat3(_GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY(float(vec3(min(1.0, 1.0), 0.0, 1.0)), clamp(float(vec3(min(1.0, 1.0), 0.0, 1.0)), float(vec3(min(1.0, 1.0), 0.0, 1.0)), _GLF_IDENTITY(float(vec3(min(1.0, 1.0), 0.0, 1.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(float(vec3(min(1.0, 1.0), 0.0, 1.0)), min(float(vec3(min(1.0, 1.0), 0.0, 1.0)), float(vec3(min(1.0, 1.0), 0.0, 1.0)))), 0.0, 1.0, 0.0)), float(mat3x2(float(mat2(_GLF_IDENTITY(float(vec3(min(1.0, 1.0), 0.0, 1.0)), min(float(vec3(min(1.0, 1.0), 0.0, 1.0)), float(vec3(min(1.0, 1.0), 0.0, 1.0)))), 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)))))))) / 1.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), cos(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0))))))), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 0.0), vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0)))))) - 0.0)))), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), min(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), min(1.0, 1.0)))), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(-8.3)), bool(false))), 1.0, 0.0, 0.0)))))) - 0.0)))), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(7.9)), float(min(1.0, 1.0)), bool(true))), min(min(1.0, 1.0), min(1.0, 1.0)))), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-398.700, -5425.3738, 7.4, -578.247).s)), bool(false))), 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0)))) + vec4(0.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(normalize(626.477)))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(5566.3427) : min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0)))))))) - 0.0)))))))))), mat3x2(1.0))), gl_SubgroupInvocationID, _GLF_IDENTITY(1, (1) ^ (0 | 0)), bvec3(true), vec2(1.0), _GLF_struct_15(_GLF_struct_12(ivec2(1), uvec4(_GLF_IDENTITY(1u, (1u) | (1u))), ivec2(1)), mat2x4(1.0), _GLF_struct_13(mat2x4(1.0), ivec4(1), mat4x3(1.0), mat4x3(1.0), _GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), _GLF_struct_14(vec4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.4)), bool(false))), 1.0))), mat4x2(1.0), ivec3(1), mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED((-35.22 - 3.3)))), (1.0) / 1.0)), bool(true)))) / 1.0)), mat3x2(1.0), bvec2(true))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_16.subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) + 0u), clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) + 0u), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) + 0u, max((_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) + 0u, (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) + 0u))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) + 0u), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) + 0u))), _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), max((_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) + 0u))) + _GLF_struct_replacement_16.subgroup_local_id) ^ 0u), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, (1u & 1u)), (uvec4(1u, 0u, 0u, (1u & 1u))) - uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, (1u & _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 0u)), (true ? uint(uvec4(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)), 0u, 0u, 0u)) : _GLF_FUZZED(num_workgroup)))))), ~ (~ (uvec4(1u, 0u, 0u, (1u & _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 0u)), (true ? uint(uvec4(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)), _GLF_IDENTITY(0u, (0u) / (1u ^ 0u)), 0u, 0u)) : _GLF_FUZZED(num_workgroup))))))))))) >> 0u, ((_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, (1u & _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 0u)), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) && true), true, true), false))))) ? uint(uvec4(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)), 0u, 0u, 0u)) : _GLF_FUZZED(num_workgroup))))))), (false ? _GLF_FUZZED(uvec2(38715u, 172003u)[0]) : uint(uvec4(1u, 0u, 0u, (1u & _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 0u)), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) && true), true, true), false))))) ? uint(uvec4(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)), 0u, 0u, 0u)) : _GLF_FUZZED(num_workgroup)))))))))) >> 0u) << 0u))) * _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_16.subgroup_local_id), ((workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_16.subgroup_local_id)) - 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(37.71))))) > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(float(87732)) : max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(37.71))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(37.71))))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0)), dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(ldexp(2.5, -98876)) : 0.0))))), cos(0.0)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-706.475, 9.6)))).x)) : _GLF_FUZZED(37.71), mix(float(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0)))), dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0))), cos(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-706.475, 9.6)))).x)) : _GLF_FUZZED(37.71)), float(_GLF_FUZZED(-5975.6667)), bool(false))))))) > injectionSwitch.y)), false, true)))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(float(87732)) : max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(37.71))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(37.71))))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0)), dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(ldexp(2.5, -98876)) : 0.0))))), cos(0.0)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-706.475, 9.6)))).x)) : _GLF_FUZZED(37.71), mix(float(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0)))), dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0))), cos(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-706.475, 9.6)))).x)) : _GLF_FUZZED(37.71)), float(_GLF_FUZZED(-5975.6667)), bool(false))))))) > injectionSwitch.y)), false, true)))) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(float(87732)) : max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(37.71))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(37.71))))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0)), dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(ldexp(2.5, -98876)) : 0.0))))), cos(0.0)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-706.475, 9.6)))).x)) : _GLF_FUZZED(37.71), mix(float(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0)))), dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0))), cos(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-706.475, 9.6)))).x)) : _GLF_FUZZED(37.71)), float(_GLF_FUZZED(-5975.6667)), bool(false))))))) > injectionSwitch.y)), false, true)))) && true)), true)))) || false))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(8.8))))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(37.71, min(_GLF_IDENTITY(37.71, (37.71) - 0.0), 37.71))))))) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(8.8))))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(37.71, min(_GLF_IDENTITY(37.71, (37.71) - 0.0), 37.71))))))) > injectionSwitch.y), false, true)))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(float(87732)) : max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(37.71))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(37.71))))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0)), dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(ldexp(2.5, -98876)) : 0.0))))), cos(0.0)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-706.475, 9.6)))).x)) : _GLF_FUZZED(37.71), mix(float(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0)))), dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0))), cos(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-706.475, 9.6)))).x)) : _GLF_FUZZED(37.71)), float(_GLF_FUZZED(-5975.6667)), bool(false))))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0)), dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(ldexp(2.5, -98876)) : 0.0))))), cos(0.0)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-706.475, 9.6)))).x)) : _GLF_FUZZED(37.71), mix(float(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), mix(vec2(_GLF_FUZZED(26.85), _GLF_FUZZED(910.966)), vec2((vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))[0], _GLF_IDENTITY((vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))[1], (_GLF_IDENTITY((vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))[1], max((vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))[1], (vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))[1]))) - 0.0)), bvec2(true, true))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0)))), dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0))), cos(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-706.475, 9.6)))).x)) : _GLF_FUZZED(37.71)), float(_GLF_FUZZED(-5975.6667)), bool(false))))))))) > injectionSwitch.y)), false, true)))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(float(87732)) : max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(37.71))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(float(87732)), (true ? _GLF_FUZZED(float(87732)) : _GLF_FUZZED(30.16))) : max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(37.71))))) > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(37.71))))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0)), dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(ldexp(2.5, -98876)) : 0.0))))), cos(0.0)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-706.475, 9.6), min(_GLF_IDENTITY(vec2(-706.475, 9.6), mix(vec2((vec2(-706.475, 9.6))[0], (vec2(-706.475, 9.6))[1]), vec2(_GLF_FUZZED((-6.3 - 271.766)), _GLF_FUZZED(6.4)), bvec2(false, false))), _GLF_IDENTITY(vec2(-706.475, 9.6), _GLF_IDENTITY(mat2(1.0) * (vec2(-706.475, 9.6)), (mat2(1.0) * (vec2(-706.475, 9.6))) * vec2(1.0, 1.0)))))))).x)) : _GLF_FUZZED(37.71), mix(float(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-29.22)))), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((vec2(0.0, 0.0)) * vec2(1.0, 1.0), max((vec2(0.0, 0.0)) * vec2(1.0, 1.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0)))), dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0))), cos(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-706.475, 9.6)))).x)) : _GLF_FUZZED(37.71)), float(_GLF_FUZZED(-5975.6667)), bool(false))))))) > injectionSwitch.y)), false, true)))) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(float(87732)) : max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(37.71))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(37.71))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, length(vec2(0.0, 0.0))))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), mat2(1.0) * (vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, cos(sqrt(0.0)), 0.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0))), 0.0)), dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(ldexp(2.5, -98876)) : _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))), cos(0.0)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-706.475, 9.6)))).x)) : _GLF_FUZZED(37.71), mix(float(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0)))), dot(vec2(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, 0.0))), cos(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-706.475, 9.6)))).x)) : _GLF_FUZZED(37.71)), float(_GLF_FUZZED(-5975.6667)), bool(false))))))) > injectionSwitch.y)), false, true)))) && true)), true)))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(ivec3(1), _GLF_struct_17(bvec4(true)), _GLF_struct_19(mat2(1.0), vec3(1.0), _GLF_struct_18(mat3(1.0), ivec4(1)), 1u), _GLF_struct_22(_GLF_struct_20(ivec4(1), uvec3(1u)), 1, _GLF_struct_21(mat2(1.0), ivec3(1), mat2x3(1.0), mat2x4(1.0)), mat4x2(1.0), mat2x3(1.0), mat4(1.0)), _GLF_struct_24(_GLF_struct_23(uvec3(1u), uvec4(1u), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec4(bvec2(true), _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec3(1.0), mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0)))))), mat4x2(1.0), workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_16.subgroup_local_id + 1) % subgroup_size));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, false))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, false))) && true)))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, false))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, false))) && true)))))), true), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, false))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, false))) && true)))))), true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), false)), ! (! (bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), _GLF_IDENTITY(int(int((1) | (1))), (int(int(_GLF_IDENTITY((1) | (1), clamp((1) | (1), (1) | (1), _GLF_IDENTITY((1) | (1), ((1) | (1)) | 0)))))) - 0))), 1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | (_GLF_IDENTITY((1) | (1), max((1) | (1), (1) | (1)))))), 0 ^ (_GLF_IDENTITY(1, (1) | (1)))), 1), _GLF_IDENTITY(int(ivec2(min(_GLF_IDENTITY(1, (1) | (1)), 1), int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) - 0))) + (int(ivec2(min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 0, 0)), ~ (~ (int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 0, 0)))))), 1), int(_GLF_ONE(1.0, injectionSwitch.y)))))))), 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-47813) : _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)), 1))) | 0)))) << 0)), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_local_id + 1 < subgroup_size, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_struct_replacement_16.subgroup_local_id + 1 < subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(((! (true))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (true))) && true, bool(_GLF_IDENTITY(bool(((! (true))) && true), bool(bool(bool(((! (true))) && true))))))), ! (! (! (_GLF_IDENTITY(((! (true))) && true, bool(_GLF_IDENTITY(bool(((! (true))) && true), bool(bool(bool(((! (true))) && true))))))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) && true)))), false || (_GLF_IDENTITY(((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) && true)))), (((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) && true))))) && true))) && true), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ((! (true))) && true), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ((! (true))) && true), (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((! (true))) && true)) || false)), bool(bvec3((_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(((! (true))) && true, ! (! (_GLF_IDENTITY(((! (true))) && true, (((! (true))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (! _GLF_IDENTITY((! (true)), ((! (true))) && true)) || false)), true, false))) || false))), ((_GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) && true), true && (_GLF_IDENTITY((! (true)), ((! (true))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))))))) && true)) || false, bool(bool((_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ((! (true))) && _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ((! (true))) && true), (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((! (true))) && true)) || false)), bool(bvec3((_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ((! (true))) && true), (! _GLF_IDENTITY((! (true)), ((! (true))) && true)) || false)), true, false))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ((! (true))) && true), (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((! (true))) && true)) || false)), bool(bvec3((_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ((! (true))) && true), (! _GLF_IDENTITY((! (true)), ((! (true))) && true)) || false)), true, false))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ((! (true))) && true), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))))), ((! (true))) && true)) || false)), bool(bvec3((_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ((! (true))) && true), (! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(((! (true))) && true, false || (((! (true))) && true)))) || false)), true, false))) || false))) && true)))), ((_GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) && true), true && (_GLF_IDENTITY((! (true)), ((! (true))) && true)))))) && true)) || false)))))))
    {
     atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_25.next_virtual_gid, (_GLF_struct_replacement_25.next_virtual_gid) | (_GLF_IDENTITY(_GLF_struct_replacement_25.next_virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_25.next_virtual_gid, (_GLF_struct_replacement_25.next_virtual_gid) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_25.next_virtual_gid, 0u | (_GLF_struct_replacement_25.next_virtual_gid)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_25.next_virtual_gid, 0u | (_GLF_struct_replacement_25.next_virtual_gid)), _GLF_IDENTITY(_GLF_struct_replacement_25.next_virtual_gid, 0u | (_GLF_struct_replacement_25.next_virtual_gid)), _GLF_IDENTITY(_GLF_struct_replacement_25.next_virtual_gid, 0u | _GLF_IDENTITY((_GLF_struct_replacement_25.next_virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_struct_replacement_25.next_virtual_gid))))))))))], uint(2), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(132.201), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((vec2(-436.887, -7.4) - vec2(-3033.0092, 4513.2289)).t)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), 0.0, log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED((ivec3(11648, -62356, -67827) , injectionSwitch)) : vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), 0.0, log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), cos(0.0), 1.0, 1.0, 0.0))))).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false, true, false)))))
    barrier();
   switch(_GLF_SWITCH(0))
    {
     case 23:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     floatBitsToInt(-70.31);
     case 98:
     ivec4(-6196, -80791, 17396, _GLF_IDENTITY(_GLF_IDENTITY(-68678, _GLF_IDENTITY((_GLF_IDENTITY(-68678, (-68678) + 0)) >> 0, (_GLF_IDENTITY((_GLF_IDENTITY(-68678, (-68678) + 0)) >> 0, clamp((_GLF_IDENTITY(-68678, (-68678) + 0)) >> 0, _GLF_IDENTITY((_GLF_IDENTITY(-68678, (-68678) + 0)), ((_GLF_IDENTITY(-68678, (-68678) + 0))) | ((_GLF_IDENTITY(-68678, (-68678) + 0)))) >> _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(-68678, (-68678) + 0), (_GLF_IDENTITY(-68678, (-68678) + 0)) - 0)) >> 0))) | ((_GLF_IDENTITY(-68678, _GLF_IDENTITY((-68678), max((-68678), (-68678))) + 0)) >> 0))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(-68678, (_GLF_IDENTITY(-68678, (-68678) + 0)) >> 0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-68678, (false ? _GLF_FUZZED(8230) : -68678)), (_GLF_IDENTITY(-68678, (-68678) + 0)) >> 0), (_GLF_IDENTITY(-68678, (_GLF_IDENTITY(-68678, (-68678) + 0)) >> 0)) ^ 0), _GLF_IDENTITY(-68678, (_GLF_IDENTITY(-68678, (-68678) + 0)) >> 0)))))));
     if(_GLF_DEAD(false))
      barrier();
     case 0:
     atomicStore(buf[_GLF_struct_replacement_25.next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) / 1)), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.y), bool(true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, sqrt(length(0.0)), 1.0, 0.0), (mat2(injectionSwitch.x, sqrt(length(0.0)), 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y)))) || false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 0.0, 1.0, 1.0)), max(vec2(mat3x2(injectionSwitch, sin(0.0), 0.0, 1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)), injectionSwitch)), sin(0.0), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(-3125.6659)), float(float(1.0)), bool(true))))), 1.0))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, false || (_GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false, false)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false, true, true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 0.0)), max(float(vec2(injectionSwitch.x, 0.0)), float(vec2(injectionSwitch.x, 0.0))))) > injectionSwitch.y))))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     case 8:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
        barrier();
       barrier();
      }
     for(mat3x4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v; bvec3(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true).g; uvec4(10884u, 38242u, 2797u, 52196u))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       vec4(17.22, 24.92, 6688.2695, -6.0);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.9)), bool(false))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       -33.94;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)), 0.0, sin(0.0), 1.0, cos(0.0)))).y, (injectionSwitch.y) / 1.0)))), false))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.4)), float(1.0), bool(true))), min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.4)), float(1.0), bool(true))), min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.4)), float(1.0), bool(true))), min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))))))), false)))), true, false))), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(float(_GLF_IDENTITY(78859u, ~ (_GLF_IDENTITY(~ (78859u), (~ (78859u)) << 0u)))))), bool(false)))))), false)))))))))
        barrier();
       mat4x2 _GLF_SWITCH_0_2v[83];
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        bvec4(true, false, false, true);
        uvec4(22233u, 127334u, _GLF_IDENTITY(181979u, ~ (~ (181979u))), 57081u);
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
           barrier();
          barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
           barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) && true)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
       }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) && true))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) * vec2(1.0, 1.0)).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), true, false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     case 19:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(-6.7, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(56.90)), float(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0)))), bool(true))), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (0.0) / 1.0), 0.0)), 1030.4968, -4663.9672, 3.6, 559.196, 1282.9494, 3.2, 2.0), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))) ? _GLF_FUZZED(mat3(3218.7507, -6356.5066, -1.8, 6.8, -4.9, -8.8, _GLF_IDENTITY(-97.49, (_GLF_IDENTITY(-97.49, (-97.49) - 0.0)) - sin(0.0)), 6.1, 664.283)) : mat3(-6.7, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1030.4968, -4663.9672, 3.6, _GLF_IDENTITY(559.196, (_GLF_IDENTITY(559.196, max(559.196, _GLF_IDENTITY(559.196, float(vec4(559.196, 0.0, 1.0, 1.0)))))) / 1.0), 1282.9494, 3.2, 2.0))), _GLF_IDENTITY(mat3(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(mat3(-6.7, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / determinant(mat2(cos(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0))), (0.0) / 1.0), 0.0)), 1030.4968, -4663.9672, 3.6, 559.196, 1282.9494, 3.2, 2.0), (mat3(-6.7, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / determinant(mat2(cos(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0))), (0.0) / 1.0), 0.0)), 1030.4968, -4663.9672, 3.6, 559.196, 1282.9494, 3.2, 2.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(3218.7507, -6356.5066, -1.8, 6.8, -4.9, -8.8, -97.49, 6.1, 664.283)) : mat3(-6.7, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1030.4968, -4663.9672, 3.6, 559.196, 1282.9494, 3.2, 2.0))))), mat3(mat3(mat3(mat4x3(_GLF_IDENTITY(mat3(-6.7, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1030.4968, -4663.9672, 3.6, 559.196, 1282.9494, 3.2, 2.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(3218.7507, -6356.5066, -1.8, 6.8, -4.9, -8.8, -97.49, 6.1, 664.283)) : mat3(-6.7, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1030.4968, -4663.9672, 3.6, 559.196, 1282.9494, 3.2, 2.0))))))))));
     default:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     1;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat3x4((injectionSwitch) + vec2(0.0, 0.0), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), min(vec2(mat3x4((injectionSwitch) + vec2(0.0, 0.0), 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), vec2(mat3x4((injectionSwitch) + vec2(0.0, 0.0), 0.0, 0.0, _GLF_IDENTITY(sin(0.0), max(_GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), _GLF_IDENTITY((sin(0.0)) + 0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.7) : (sin(0.0)) + 0.0)))) / 1.0), _GLF_IDENTITY(sin(0.0), min(sin(0.0), _GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(89.50) : sin(0.0))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))) + vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(36.52)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(0.0, (0.0) - 0.0))), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))) + vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(36.52)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(0.0, (0.0) - 0.0))), injectionSwitch))) * mat2(1.0)).x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) + vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))))), injectionSwitch)).x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(54.74)), bool(false))))), injectionSwitch)).x), float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(54.74)), bool(false))))), injectionSwitch)).x), 1.0, sin(0.0), cos(0.0)), max(vec4(max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(54.74)), bool(false))))), injectionSwitch)).x), 1.0, sin(0.0), cos(0.0)), vec4(max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(54.74)), bool(false))))), injectionSwitch)).x), 1.0, sin(0.0), cos(0.0))))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))))), true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))) || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))) && true))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, bool(bvec3((injectionSwitch.x > injectionSwitch.y) && true, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (injectionSwitch.x)) > injectionSwitch.y) && true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, false, true, false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false)))), true, false, true)), true)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), true, true, true)))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, false)))), true, false))))), true, false, true))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, false, true))))))), false), bvec2(bvec4(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), false), true, true)))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true))))))))), ((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false)))), true, false, true)), true)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), true, true, true)))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, false)))), true, false))))), true, false, true))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, false, true))))))), false), bvec2(bvec4(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), false), true, true)))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true))))))))), ((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false)))), true, false, true)), true)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), true, true, true)))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, false)))), true, false))))), true, false, true))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, false, true))))))), false), bvec2(bvec4(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), false), true, true)))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true))))))))), ((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
