#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) ^ 0u), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, false))))))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-8.4, 3.8).g)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-33.19, -7.4)) : injectionSwitch)).y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), true && (_GLF_IDENTITY((false), ((false)) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), workgroup_id));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)), (true ? min((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(502.613))))), _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1805.8429)), bool(false)))))))) - 0u)) : _GLF_FUZZED(subgroup_base))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u)), 1u))), min(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 1u, 1u))), _GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 1u, 1u)))))) - 0u), _GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | (subgroup_base), min((subgroup_base) | (subgroup_base), (subgroup_base) | (subgroup_base))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, (injectionSwitch.x) - 0.0))), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) - 0.0)) - 0.0)), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch))))).x)), (subgroup_base) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_local_id) : uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) - 0u)))))) + subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uvec2((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), min(uvec2((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uvec2((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? clamp(_GLF_IDENTITY(uvec2((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)))), 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)))), 0u), min(_GLF_IDENTITY(uvec2((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)))), 0u), min(uvec2((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)))), 0u), uvec2((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)))), 0u))), uvec2((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)))), 0u))))), uvec2((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED(workgroup_base)))), (min(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED(workgroup_base))))) >> 0u))), uvec2((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(uvec2(60035u, 27389u)))))))))) - 0u)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-6481.3938)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) / 1.0)), bool(true)))), min(_GLF_IDENTITY((subgroup_base), uint(uvec4(_GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base)))))), 0u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u ^ (6u))), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))))), (0u ^ 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((subgroup_base), uint(uvec4(_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(~ (~ ((subgroup_base))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ ((subgroup_base)))))), 0u, ((_GLF_IDENTITY(1u, (1u) | (1u)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))))), (0u ^ 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) * 1.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), sin(abs(0.0)), 0.0, 1.0, 0.0))).x)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((subgroup_base) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u), (uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u)) | (uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u))))), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u))), 0u | (_GLF_IDENTITY((subgroup_base) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), min(_GLF_IDENTITY((subgroup_base), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))), ~ (~ ((subgroup_base)))), 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED((subgroup_local_id ^ subgroup_id)) : _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))))), (0u ^ 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u))))))) + 0u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), min(_GLF_IDENTITY((subgroup_base), 0u + (_GLF_IDENTITY((subgroup_base), max((subgroup_base), (subgroup_base))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).x)), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) : _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) - 0u)))))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), _GLF_IDENTITY((workgroup_base) - 0u, min((workgroup_base) - 0u, (workgroup_base) - 0u))) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.6)), float(injectionSwitch.x), bool(true))))), min(_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(169830u) : (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1259.8512) : 1.0)), 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)))), min(float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)))), max(float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)))), float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0))))))))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), clamp(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x)), (_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec2(_GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 1u)))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), min((subgroup_base) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-3593.9156))), injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) - 0u), (_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1259.8512) : 1.0)), 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)))), min(float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)))), max(float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)))), float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0))))))))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), clamp(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x)), (_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec2(_GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 1u)))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), min((subgroup_base) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-3593.9156))), injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) - 0u)) | (_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1259.8512) : 1.0)), 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)))), min(float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)))), max(float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)))), float(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.55) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9))))), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 1.0, length(vec3(0.0, 0.0, 0.0))))))))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), clamp(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x)), (_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec2(_GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 1u)))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), min((subgroup_base) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-3593.9156))), injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) - 0u)))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), mix(_GLF_IDENTITY(vec2((vec2(1.0, 1.0) * (injectionSwitch))[_GLF_IDENTITY(0, (0) ^ (94692 & 0))], _GLF_FUZZED(-9966.0507)), (vec2((vec2(1.0, 1.0) * (injectionSwitch))[_GLF_IDENTITY(0, (0) ^ (94692 & 0))], _GLF_FUZZED(-9966.0507))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(4.1), (vec2(1.0, 1.0) * (injectionSwitch))[1]), bvec2(false, true)))) - tan(vec2(0.0, 0.0)))))).x)), min((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), clamp(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))) | (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))), _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), 0u, 1u, 0u)), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), 0u, 1u, 0u))), ((uint(uvec4(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), 0u, 1u, 0u)))) | ((uint(uvec4(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), 0u, 1u, 0u))))) << _GLF_IDENTITY(0u, max(0u, 0u)))), subgroup_base))))) + (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-231.324)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0))), max((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, (_GLF_IDENTITY((injectionSwitch.x) - 0.0, clamp((injectionSwitch.x) - 0.0, (injectionSwitch.x) - 0.0, (injectionSwitch.x) - 0.0))) / 1.0)))), _GLF_IDENTITY((subgroup_base), max((subgroup_base), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) / 1u))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) * 1.0))))))) | 0u), min(_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u), _GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x)), min((subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)))))) + subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(76424) : _GLF_IDENTITY(1, int(int(1)))))), 0 + (clamp(1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(76424), 0 | (_GLF_FUZZED(76424))) : _GLF_IDENTITY(1, int(int(1)))))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))) || false)))), false || (bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), bool(_GLF_IDENTITY(bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), bool(_GLF_IDENTITY(bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))) || false)))), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(2.8), _GLF_FUZZED(-4.6)), bvec2(false, false)))).x, (injectionSwitch.x) / 1.0))) < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), false))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) && (false)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || (false)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || (false)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || (false)), (! (_GLF_IDENTITY(false, false || (false)) || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), (injectionSwitch))) - vec2(0.0, 0.0)).y))), false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || (false)), bool(bool(! (_GLF_IDENTITY(false, false || (false)) || (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))) || (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || (false)), bool(bool(! (_GLF_IDENTITY(false, false || (false)) || (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || (false)), false || (! (_GLF_IDENTITY(false, false || (false)) || (false)))), bool(bool(! (_GLF_IDENTITY(false, false || (false)) || (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true))), true, false, true))))))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (bool(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y, false)), bool(_GLF_IDENTITY(bool(bool(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-63.37)), bool(false))), false))), false || (bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), _GLF_IDENTITY((injectionSwitch[1]), _GLF_IDENTITY(float(float(_GLF_IDENTITY((injectionSwitch[1]), (_GLF_IDENTITY((injectionSwitch[1]), float(mat2x3((injectionSwitch[1]), 1.0, 0.0, 1.0, 0.0, 0.0)))) - 0.0))), mix(float(_GLF_FUZZED(vec4(-302.122, -9.5, -132.261, -502.499).g)), float(float(float(_GLF_IDENTITY((injectionSwitch[1]), (_GLF_IDENTITY((injectionSwitch[1]), float(mat2x3((injectionSwitch[1]), 1.0, 0.0, 1.0, 0.0, 0.0)))) - 0.0)))), bool(true)))) + 0.0))).x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, _GLF_IDENTITY(false, ! (! (false)))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((- (6.3 + -2027.9818)))), bool(false))), false))), _GLF_IDENTITY(false || (bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))), (false || (bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))) || false))), false || (bool(_GLF_IDENTITY(bool(bool(bvec2(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((- (6.3 + -2027.9818)))), bool(false))), false))), _GLF_IDENTITY(false || (bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))), (false || (bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))) || false)))))))))) || false)))), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), false))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) && (false)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, sqrt(1.0), 1.0, 0.0, 0.0))) < injectionSwitch.y)), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || (false)), bool(bool(! (_GLF_IDENTITY(false, false || (false)) || (false)))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || (false)), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || (false))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || (false)), bool(bool(! (_GLF_IDENTITY(false, false || (false)) || (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (true), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false || (true), true), bvec2(bvec3(bvec2(false || (true), true), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bvec2(false || (true), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false || (true), true), bvec2(bvec3(bvec2(false || (true), true), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || (false)), bool(bool(! (_GLF_IDENTITY(false, false || (false)) || (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), false))))))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false || (false)) || (false)), bool(bool(! (_GLF_IDENTITY(false, false || (false)) || (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), (injectionSwitch.x < injectionSwitch.y))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || (false)), bool(bool(! (_GLF_IDENTITY(false, false || (false)) || (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).y))), false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, false, true))))))) || false))))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (uint(2)) + 0u)) | (uint(2))), _GLF_IDENTITY((true ? uint(2) : _GLF_FUZZED(num_workgroup)), 0u + ((true ? uint(2) : _GLF_FUZZED(num_workgroup))))), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * (_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, 0u) | (uvec2(1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)))))) << _GLF_IDENTITY(uint(4u), uint(4u))), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (true ? (1u << _GLF_IDENTITY(uint(4u), uint(4u))) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u)))) << 0u), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) / 1u)))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u)))) << 0u)) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u)))) << 0u))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u + (_GLF_IDENTITY(uint(4u), uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(next_virtual_gid) : 4u))) << 0u))))), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))) / 1u)], uint(2), 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
