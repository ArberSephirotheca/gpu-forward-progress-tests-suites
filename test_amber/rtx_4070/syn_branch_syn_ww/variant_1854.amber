#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 vec2 _f0;
 uvec4 _f1;
 mat3x4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_2 {
 bool _f0;
 uvec4 _f1;
 bvec4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 vec2 _f1;
 mat4 _f2;
 mat4x3 _f3;
 bvec2 _f4;
 mat4x3 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 uint num_workgroup;
 bool _f1;
 _GLF_struct_1 _f2;
 mat4 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 float _f1;
 _GLF_struct_4 _f2;
 mat4x2 _f3;
 vec3 _f4;
 mat3x4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5302.3901, 395.997)) : injectionSwitch)).y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(uvec4(1u), 1.0, _GLF_struct_4(_GLF_struct_0(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), mat2x3(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), clamp((gl_NumWorkGroups.x), (gl_NumWorkGroups.x), (gl_NumWorkGroups.x))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(((ivec3(-82304, -60546, 57692) != ivec3(-20034, -35262, -87664)) ? subgroup_size : 60337u)))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(((ivec3(-82304, -60546, 57692) != ivec3(-20034, -35262, -87664)) ? subgroup_size : 60337u)))), (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(((ivec3(-82304, -60546, 57692) != ivec3(-20034, -35262, _GLF_IDENTITY(-87664, 1 * (_GLF_IDENTITY(-87664, 0 + (-87664)))))) ? subgroup_size : 60337u))))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) / 1u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((gl_NumWorkGroups.x))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY((1u), uint(uvec2((1u), 1u))))))) | (1u))) ^ (746u & 0u)), (_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((gl_NumWorkGroups.x))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) ^ (746u & 0u))) ^ _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)) >> 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))), true, _GLF_struct_1(mat2x4(1.0), vec2(1.0), _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY(_GLF_IDENTITY((mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY((mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0))), (_GLF_IDENTITY(true, (true) || false) ? (mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0))) : _GLF_FUZZED(mat4(690.540, _GLF_IDENTITY(-2.7, min(-2.7, -2.7)), -612.820, 852.139, -9721.9065, -9793.0370, 47.62, -4.7, -584.291, 0.4, -92.80, -86.53, 2.9, -8.6, 483.217, _GLF_IDENTITY(-636.045, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).g) : _GLF_IDENTITY(-636.045, clamp(-636.045, -636.045, _GLF_IDENTITY(-636.045, float(mat2x4(-636.045, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))))), (false ? _GLF_FUZZED(mat4(5162.3576, 491.247, 9.4, 49.31, 9.2, -48.39, -57.03, -248.455, 5566.1861, 88.40, 679.726, -9.8, 8815.4098, -828.894, -329.422, 3.7)) : _GLF_IDENTITY((mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0))), (_GLF_IDENTITY(true, (true) || false) ? (mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), float(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0)))) * _GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(mat4(690.540, _GLF_IDENTITY(-2.7, _GLF_IDENTITY(min(-2.7, -2.7), max(min(-2.7, -2.7), min(-2.7, -2.7)))), -612.820, 852.139, -9721.9065, -9793.0370, 47.62, -4.7, -584.291, 0.4, -92.80, -86.53, 2.9, -8.6, 483.217, _GLF_IDENTITY(-636.045, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).g) : _GLF_IDENTITY(-636.045, clamp(-636.045, -636.045, _GLF_IDENTITY(_GLF_IDENTITY(-636.045, float(mat2x4(-636.045, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(-636.045, float(mat2x4(-636.045, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) * exp(0.0))))))))))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true ? (mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat2((1.0), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(float(mat2((1.0), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), min(float(mat2((1.0), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), float(mat2((1.0), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(5.8)))) / 1.0))) - mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-951.120 - 6996.2653))), float(0.0), bool(true))), sqrt(0.0) + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-951.120 - 6996.2653))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 1.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), sqrt(0.0) + (clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(_GLF_IDENTITY((2.6 / mat4(7595.5437, 55.36, -182.750, 93.64, -4398.2822, -79.46, _GLF_IDENTITY(0.4, (0.4) / 1.0), -8.0, -8.1, 256.039, 9.3, -8657.0538, -24.11, -9628.3479, _GLF_IDENTITY(481.573, clamp(481.573, 481.573, 481.573)), -92.72)), (true ? (2.6 / mat4(7595.5437, 55.36, -182.750, 93.64, -4398.2822, -79.46, 0.4, -8.0, -8.1, 256.039, 9.3, -8657.0538, -24.11, -9628.3479, _GLF_IDENTITY(481.573, clamp(481.573, 481.573, 481.573)), -92.72)) : _GLF_FUZZED((mat3x4(-8719.7649, -9239.1293, -64.82, 7.4, -2.4, 2.9, 9.3, 7354.2714, 608.476, -7200.6374, -4761.2050, -5.5) * mat4x3(mat2(3.4, -80.70, 65.28, -6.6))))))), (true ? (mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0))) - mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-951.120 - 6996.2653))), float(0.0), bool(true))), _GLF_IDENTITY(sqrt(0.0) + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-951.120 - 6996.2653))), float(0.0), bool(true)))), (true ? sqrt(0.0) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-951.120 - 6996.2653, max(-951.120 - 6996.2653, -951.120 - 6996.2653))))), float(0.0), bool(true)))), max(_GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-951.120 - 6996.2653, max(-951.120 - 6996.2653, -951.120 - 6996.2653))))), float(0.0), bool(true)))), max((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-951.120 - 6996.2653, max(-951.120 - 6996.2653, -951.120 - 6996.2653))))), float(0.0), bool(true)))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-951.120 - 6996.2653, max(-951.120 - 6996.2653, -951.120 - 6996.2653))))), float(0.0), bool(true)))))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-951.120 - 6996.2653, max(-951.120 - 6996.2653, -951.120 - 6996.2653))))), float(0.0), bool(true)))))), max((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-951.120 - 6996.2653, max(-951.120 - 6996.2653, -951.120 - 6996.2653))))), float(0.0), bool(true)))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-951.120 - 6996.2653, max(-951.120 - 6996.2653, -951.120 - 6996.2653))))), float(0.0), bool(true)))))) : _GLF_IDENTITY(_GLF_FUZZED(-867.686), mix(float(_GLF_FUZZED(float(177643u))), float(_GLF_IDENTITY(_GLF_FUZZED(-867.686), min(_GLF_FUZZED(-867.686), _GLF_IDENTITY(_GLF_FUZZED(-867.686), (_GLF_FUZZED(-867.686)) * 1.0)))), bool(true)))))), 0.0, _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0)))), max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1715.6395) : _GLF_IDENTITY(0.0, 0.0 + (0.0))))), float(_GLF_FUZZED((77.53))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), min(clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), min(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0) : _GLF_IDENTITY(_GLF_FUZZED((2.6 / mat4(7595.5437, 55.36, -182.750, 93.64, -4398.2822, -79.46, 0.4, -8.0, -8.1, 256.039, 9.3, -8657.0538, -24.11, -9628.3479, _GLF_IDENTITY(481.573, clamp(481.573, 481.573, 481.573)), -92.72))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_FUZZED((2.6 / mat4(_GLF_IDENTITY(7595.5437, max(_GLF_IDENTITY(7595.5437, mix(float(7595.5437), float(_GLF_FUZZED(-4176.0623)), bool(false))), _GLF_IDENTITY(7595.5437, mix(float(_GLF_FUZZED(70.62)), float(7595.5437), bool(true))))), 55.36, -182.750, 93.64, -4398.2822, -79.46, 0.4, -8.0, -8.1, 256.039, 9.3, -8657.0538, -24.11, -9628.3479, _GLF_IDENTITY(481.573, clamp(481.573, 481.573, 481.573)), -92.72))), transpose(transpose(_GLF_FUZZED((2.6 / mat4(7595.5437, 55.36, -182.750, 93.64, -4398.2822, -79.46, 0.4, -8.0, -8.1, 256.039, 9.3, -8657.0538, -24.11, -9628.3479, _GLF_IDENTITY(_GLF_IDENTITY(481.573, clamp(481.573, _GLF_IDENTITY(481.573, max(481.573, 481.573)), 481.573)), clamp(481.573, 481.573, _GLF_IDENTITY(481.573, mix(float(_GLF_FUZZED(48.92)), float(481.573), bool(true))))), -92.72)))))) : _GLF_FUZZED(mat4(mat4x3(-7.1, -3615.2389, 87.37, -3.6, 2.4, _GLF_IDENTITY(941.030, (false ? _GLF_FUZZED(-1.6) : 941.030)), 458.704, 68.65, -8.7, 89.93, -8.0, -37.78)))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), mat4x3(1.0), bvec2(true), mat4x3(1.0), ivec4(1)), mat4(1.0), _GLF_struct_2(true, _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), _GLF_IDENTITY(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), min((1u), (1u))))) | (1u)), uint(uvec3(1u, 1u, 0u)))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))))), (max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) | (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) - 0u) : _GLF_FUZZED(12026u))))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u)))))))))) / (0u | 1u))))), clamp(~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, _GLF_IDENTITY(0u, (0u) / 1u)))))))), ~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) ^ 0u))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (false ? _GLF_FUZZED(uvec3(179076u, 145609u, 170006u)) : uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u))))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), min(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), 1u * ((1u)))), 0u), (uvec3(1u, 1u, 0u)) | (uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u))))))))))), ~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u)), uint(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), clamp(_GLF_IDENTITY(uvec3(1u, 1u, 0u), ~ (~ (uvec3(1u, 1u, 0u)))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), 0u ^ ((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u), 0u))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) - uvec3(0u, 0u, 0u)))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))))), (max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) | (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) - 0u) : _GLF_FUZZED(12026u))))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u)))))))))) / (0u | 1u))))), clamp(~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, _GLF_IDENTITY(0u, (0u) / 1u)))))))), ~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) ^ 0u))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (false ? _GLF_FUZZED(uvec3(179076u, 145609u, 170006u)) : uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u))))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), min(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), 1u * ((1u)))), 0u), (uvec3(1u, 1u, 0u)) | (uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u))))))))))), ~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u)), uint(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), clamp(_GLF_IDENTITY(uvec3(1u, 1u, 0u), ~ (~ (uvec3(1u, 1u, 0u)))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), 0u ^ ((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u), 0u))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) - uvec3(0u, 0u, 0u)))))))))))), clamp(_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))))), (max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) | (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) - 0u) : _GLF_FUZZED(12026u))))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u)))))))))) / (0u | 1u))))), clamp(~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, _GLF_IDENTITY(0u, (0u) / 1u)))))))), ~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) ^ 0u))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (false ? _GLF_FUZZED(uvec3(179076u, 145609u, 170006u)) : uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u))))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), min(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), 1u * ((1u)))), 0u), (uvec3(1u, 1u, 0u)) | (uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u))))))))))), ~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u)), uint(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), clamp(_GLF_IDENTITY(uvec3(1u, 1u, 0u), ~ (~ (uvec3(1u, 1u, 0u)))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), 0u ^ ((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u), 0u))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) - uvec3(0u, 0u, 0u)))))))))))), _GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))))), (max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) | (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) - 0u) : _GLF_FUZZED(12026u))))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u)))))))))) / (0u | 1u))))), clamp(~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, _GLF_IDENTITY(0u, (0u) / 1u)))))))), ~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) ^ 0u))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (false ? _GLF_FUZZED(uvec3(179076u, 145609u, 170006u)) : uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u))))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), min(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), 1u * ((1u)))), 0u), (uvec3(1u, 1u, 0u)) | (uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u))))))))))), ~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u)), uint(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), clamp(_GLF_IDENTITY(uvec3(1u, 1u, 0u), ~ (~ (uvec3(1u, 1u, 0u)))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), 0u ^ ((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u), 0u))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) - uvec3(0u, 0u, 0u)))))))))))), _GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))))), (max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) | (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) - 0u) : _GLF_FUZZED(12026u))))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u)))))))))) / (0u | 1u))))), clamp(~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, _GLF_IDENTITY(0u, (0u) / 1u)))))))), ~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) ^ 0u))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (false ? _GLF_FUZZED(uvec3(179076u, 145609u, 170006u)) : uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u))))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), min(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), 1u * ((1u)))), 0u), (uvec3(1u, 1u, 0u)) | (uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u))))))))))), ~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u)), uint(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), clamp(_GLF_IDENTITY(uvec3(1u, 1u, 0u), ~ (~ (uvec3(1u, 1u, 0u)))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), 0u ^ ((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u), 0u))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) - uvec3(0u, 0u, 0u)))))))))))))), _GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))))), (max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) | (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) - 0u) : _GLF_FUZZED(12026u))))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u)))))))))) / (0u | 1u))))), clamp(~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, _GLF_IDENTITY(0u, (0u) / 1u)))))))), ~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) ^ 0u))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (false ? _GLF_FUZZED(uvec3(179076u, 145609u, 170006u)) : uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u))))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), min(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), 1u * ((1u)))), 0u), (uvec3(1u, 1u, 0u)) | (uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u))))))))))), ~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u)), uint(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), clamp(_GLF_IDENTITY(uvec3(1u, 1u, 0u), ~ (~ (uvec3(1u, 1u, 0u)))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), 0u ^ ((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u), 0u))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) - uvec3(0u, 0u, 0u)))))))))))), _GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))), max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, 0u)))))), (max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) | (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) - 0u) : _GLF_FUZZED(12026u))))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u)))))))))) / (0u | 1u))))), clamp(~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(uvec3(1u, 1u, _GLF_IDENTITY(0u, (0u) / 1u)))))))), ~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) ^ 0u))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), clamp(uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (false ? _GLF_FUZZED(uvec3(179076u, 145609u, 170006u)) : uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u))))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), min(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), 1u * ((1u)))), 0u), (uvec3(1u, 1u, 0u)) | (uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u))))))))))), ~ (uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u)), uint(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), clamp(_GLF_IDENTITY(uvec3(1u, 1u, 0u), ~ (~ (uvec3(1u, 1u, 0u)))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), 0u ^ ((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u), 0u))), _GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) - uvec3(0u, 0u, 0u)))))))))))))))), bvec4(true), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(round(6.8))))), mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(round(6.8)))))))), _GLF_struct_3(vec2(1.0), uvec4(1u), mat3x4(1.0), mat4x3(1.0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 0 ^ (_GLF_IDENTITY(1, 0 | (1)))))), mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.8)), float(1.0), bool(true)))), vec3(1.0), mat3x4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) && true), bool(bool(_GLF_DEAD(false))))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-56.66)), bool(false)))) - _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 0.0))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id), uint(uvec2(min(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id), (1u & 1u)))))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(13.83) : _GLF_ONE(1.0, injectionSwitch.y)))), 0u), clamp(uvec3(subgroup_id, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(13.83) : _GLF_ONE(1.0, injectionSwitch.y)))), 0u), uvec3(subgroup_id, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(13.83) : _GLF_ONE(1.0, injectionSwitch.y)))), 0u), _GLF_IDENTITY(uvec3(subgroup_id, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(13.83) : _GLF_ONE(1.0, injectionSwitch.y)))), 0u), min(uvec3(subgroup_id, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(13.83) : _GLF_ONE(1.0, injectionSwitch.y)))), 0u), uvec3(subgroup_id, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(13.83) : _GLF_ONE(1.0, injectionSwitch.y)))), 0u))))))), subgroup_id)), subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id)), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u, (0u) | (0u))))), subgroup_id)), subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) : _GLF_FUZZED(workgroup_size))), min(subgroup_id, subgroup_id))))))) / 1u), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), subgroup_id)), subgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))), min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) * 1u)))), ~ (subgroup_id))))), min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))))) - 0u)))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) ? ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u)))), min(~ (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u)))), ~ (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (true ? uvec3(subgroup_size, 0u, 1u) : _GLF_FUZZED(uvec3(subgroup_size)))))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), ~ (~ (_GLF_FUZZED(subgroup_size))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(workgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), _GLF_IDENTITY((bool(bvec3(false, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false)))))))), ((bool(bvec3(false, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))) && true) && true))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))) && true)))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))) && true))))) && true)))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true)))) || false)))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true)))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), (bool(bvec3(false, false, true))) && true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true)))) || false))))))) || false)))))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((bool(bvec3(false, false, true))) && true, bool(bvec3((bool(bvec3(false, false, true))) && true, true, false)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, _GLF_IDENTITY(true, (true) || false)))) && true)))) || false))))))))) || false)))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(vec3(-3302.3628, -160.993, 561.593))))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sqrt(0.0))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), clamp((subgroup_local_id) | (subgroup_local_id), (subgroup_local_id) | (subgroup_local_id), (subgroup_local_id) | (subgroup_local_id)))))))) + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(19650) : ~ (1))))))) < subgroup_size, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.0, 1848.1119)))).x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1 < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1 < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1 < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1 < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(! (! (bool(bvec4(false, true, false, true)))), (_GLF_IDENTITY(! (! (bool(bvec4(false, true, false, true)))), ! (! (! (! (bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(bool(bvec3(false, false, true)), false)))), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
