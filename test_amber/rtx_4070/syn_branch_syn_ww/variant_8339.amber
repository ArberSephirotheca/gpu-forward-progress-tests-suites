#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), true, false, true)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! _GLF_IDENTITY(((_GLF_DEAD(false))), true && (((_GLF_DEAD(false))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) ^ 0u), 0u | (_GLF_IDENTITY((gl_NumWorkGroups.x), 0u + ((gl_NumWorkGroups.x))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, max(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((gl_NumWorkGroups.x) ^ 0u) ^ 0u))), _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u))) ^ 0u, max(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, min(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u), 0u | (((gl_NumWorkGroups.x) ^ 0u))) ^ _GLF_IDENTITY(0u, 0u ^ (0u)), ((gl_NumWorkGroups.x) ^ 0u) ^ 0u)), (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))) : _GLF_FUZZED(subgroup_id)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) << 0u)) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), clamp((gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x), 0u + ((gl_NumWorkGroups.x))), (gl_NumWorkGroups.x))), 0u + ((gl_NumWorkGroups.x))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, max(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))))) ^ 0u) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, (((gl_NumWorkGroups.x) ^ 0u) ^ 0u) << 0u), (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, (1u | 1u)))).x) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u))) ^ 0u, max(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u)))), clamp(~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u)))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u))))), (~ (~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u)))))) << 0u))), ~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, min(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) ^ 0u)), (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))) : _GLF_FUZZED(subgroup_id)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) ^ 0u), 0u | (_GLF_IDENTITY((gl_NumWorkGroups.x), 0u + ((gl_NumWorkGroups.x))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, max(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((gl_NumWorkGroups.x) ^ 0u) ^ 0u))), _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) ? _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u))) ^ 0u, max(_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)).x) ^ 0u) ^ 0u, ~ (~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, min(((gl_NumWorkGroups.x) ^ 0u) ^ _GLF_IDENTITY(0u, (0u) >> 0u), ((gl_NumWorkGroups.x) ^ 0u) ^ 0u)), (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))) : _GLF_FUZZED(subgroup_id)), uint(uint((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) ? _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u))) ^ 0u, max(_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)).x) ^ 0u) ^ 0u, ~ (~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, min(((gl_NumWorkGroups.x) ^ 0u) ^ _GLF_IDENTITY(0u, (0u) >> 0u), ((gl_NumWorkGroups.x) ^ 0u) ^ 0u)), (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))) : _GLF_FUZZED(subgroup_id))))))), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) ^ 0u), 0u | (_GLF_IDENTITY((gl_NumWorkGroups.x), 0u + ((gl_NumWorkGroups.x))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, max(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u, ~ (~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u), uint(uvec4(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u), clamp(((gl_NumWorkGroups.x) ^ 0u), ((gl_NumWorkGroups.x) ^ 0u), ((gl_NumWorkGroups.x) ^ 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))) ^ 0u))), _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u))) ^ 0u, _GLF_IDENTITY(max(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, min(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) ^ 0u)), (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id)))), (true ? max(_GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, 0u ^ (((gl_NumWorkGroups.x) ^ 0u) ^ 0u)), ~ (~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, min(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) ^ 0u)), (_GLF_IDENTITY(true, ! (! (true))) ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id)))) : _GLF_FUZZED(uvec2(169489u, 145667u).g)))) : _GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) ^ 0u), 0u | (_GLF_IDENTITY((gl_NumWorkGroups.x), 0u + ((gl_NumWorkGroups.x))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x))) ^ 0u) ^ 0u, max(_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) ^ 0u) ^ 0u, ~ (~ (((gl_NumWorkGroups.x) ^ 0u) ^ 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) ^ 0u) ^ 0u, (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u))) ^ 0u, max(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u))))), ((~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u)))))) | ((~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x) ^ 0u) ^ 0u, min(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ((gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, uint(uint(0u))) : _GLF_FUZZED(subgroup_id)))) ^ 0u)), (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))) : _GLF_FUZZED(subgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, clamp((gl_NumWorkGroups.x) ^ 0u, (gl_NumWorkGroups.x) ^ 0u, (gl_NumWorkGroups.x) ^ 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) ^ 0u), 0u | (_GLF_IDENTITY((gl_NumWorkGroups.x), 0u + ((gl_NumWorkGroups.x))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, max(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((gl_NumWorkGroups.x) ^ 0u) ^ 0u))), _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y))) && true) ? _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u))) ^ 0u, max(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups.x)), (~ ((gl_NumWorkGroups.x))) | (~ ((gl_NumWorkGroups.x)))))) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, min(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) / 1u) ^ 0u) ^ 0u)), (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))) : _GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) ^ 0u), 0u | (_GLF_IDENTITY((gl_NumWorkGroups.x), 0u + ((gl_NumWorkGroups.x))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, max(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((gl_NumWorkGroups.x) ^ 0u) ^ 0u))), _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u)), clamp(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u))))) ^ 0u, max(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << 0u)))) ^ 0u) ^ 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, min(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) ^ 0u)), (true ? ((_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))).x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))) : _GLF_FUZZED(subgroup_id)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x) ^ 0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, (((gl_NumWorkGroups.x) ^ 0u) ^ 0u) - 0u)), 0u | (_GLF_IDENTITY((gl_NumWorkGroups.x), 0u + ((gl_NumWorkGroups.x))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, max(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) | 0u)) ^ 0u), clamp(_GLF_IDENTITY(((_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) | 0u)) ^ 0u), max(((_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) | 0u)) ^ 0u), ((_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) | 0u)) ^ 0u))), ((_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) | 0u)) ^ 0u), ((_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) | 0u)) ^ 0u))))), _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, (true ? (_GLF_IDENTITY((gl_NumWorkGroups.x), 0u + ((gl_NumWorkGroups.x))) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u))) ^ 0u, max(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ~ (~ (((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u))))) ^ 0u) ^ 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, min(((gl_NumWorkGroups.x) ^ 0u) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) ^ 0u)), (true ? ((gl_NumWorkGroups.x) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_local_id))))) : _GLF_FUZZED(subgroup_id)))) : _GLF_FUZZED(subgroup_size))))), (gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, (0u) | (0u)), (gl_NumWorkGroups.x) ^ 0u)));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, 0u ^ (0u))))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), true, true)))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), true, true))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), true, true)))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), true, true))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), true, true)))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y)))), true, true)))))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(9.2) : injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0))), _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(-48.85)), float(tan(0.0)), bool(true))), 1.0, 0.0, sin(0.0), log(1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), 1.0, sqrt(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), (mat4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), tan(0.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(log(1.0), tan(0.0) + _GLF_IDENTITY((_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(4.3)), float(log(1.0)), bool(true)))), min(_GLF_IDENTITY((_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(4.3)), float(log(1.0)), bool(true)))), clamp((_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(4.3)), float(log(1.0)), bool(true)))), (_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(4.3)), float(log(1.0)), bool(true))), min(_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(4.3)), float(log(1.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(4.3)), float(log(1.0)), bool(true))), mix(float(_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(4.3)), float(log(1.0)), bool(true)))), float(_GLF_FUZZED(-7.3)), bool(false)))))), (_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(4.3)), float(log(1.0)), bool(true)))))), _GLF_IDENTITY((_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(4.3)), float(log(1.0)), bool(true)))), ((_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(4.3)), float(log(1.0)), bool(true))))) - 0.0)))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(28.19) : 0.0)), 1.0, sqrt(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(3896.4315), (_GLF_FUZZED(3896.4315)) - 0.0)), (float(_GLF_IDENTITY(_GLF_FUZZED(3896.4315), (_GLF_FUZZED(3896.4315)) - 0.0))) - 0.0), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(55.15) : 0.0)), 0.0)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), tan(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sin(0.0), log(1.0), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? determinant(mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5209.2600)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(74.44) : 0.0)))) : _GLF_FUZZED(-4.6))), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.8)), float(1.0), bool(true)))), float(_GLF_FUZZED(-4079.1821)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) * 1.0), mix(float(0.0), float(_GLF_FUZZED(-2573.2929)), bool(false))))), 0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0), (mat4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), tan(0.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(log(1.0), tan(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), (log(1.0)) - sqrt(0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.3)), float(log(1.0)), bool(true)), _GLF_IDENTITY(float(mat4x3(mix(float(_GLF_FUZZED(4.3)), float(log(1.0)), bool(true)), 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0)), clamp(float(mat4x3(mix(float(_GLF_FUZZED(4.3)), float(log(1.0)), bool(true)), 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0)), float(mat4x3(mix(float(_GLF_FUZZED(4.3)), float(log(1.0)), bool(true)), 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0)), float(mat4x3(mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY(log(1.0), max(_GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, abs(1.0)))), log(1.0)))), bool(true)), 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0)))))))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-4.2))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(28.19) : 0.0)), 1.0, sqrt(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3896.4315)), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), clamp(_GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (vec2(0.0, 0.0) + (injectionSwitch))), vec2(0.0, 0.0) + (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)) | (_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 0u))))), uint(uvec2(workgroup_size, (1u ^ 1u))))) | _GLF_IDENTITY((0u | 0u), clamp(_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u))))) / 1u), (0u | 0u), (0u | 0u)))), _GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id));
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))) || false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))), true && (bool(bvec2(false, false)))))))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), bool(bvec3(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), true, true))))))), (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), bool(bvec3(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), true, true))))))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), bool(bvec3(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), true, true))))))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), bool(bvec3(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), true, true))))))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), false, false, true)), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), false, false, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), false, false, true)), bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))), ! (_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))), ! (_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))))))))))))) && true)), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))), false, true)), false)))), true && (bool(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))) && true)), false, false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))))))) && true)), false, false, true)), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))))))) && true)), false, false, true)), false)), bool(bool(bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))))))) && true)), false, false, true)), false))))))))))))))) && true)))))))) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base)), clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), uint(uvec3(_GLF_IDENTITY(~ (workgroup_base), 1u * (~ (workgroup_base))), 1u, 1u))))))) + subgroup_base, 0u + (workgroup_base + subgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base)), max(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base)), _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base)), min(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base)), false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base)))), _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base))) ^ 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base))), (false ? _GLF_FUZZED(workgroup_size) : (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base)))))) ^ 0u, max((_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base))), (false ? _GLF_FUZZED(workgroup_size) : (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base)))))) ^ 0u, (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base))), (false ? _GLF_FUZZED(workgroup_size) : (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base)))))) ^ 0u)))))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base)), clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, ~ (~ (0u))) + (workgroup_base + subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) >> 0u)) | 0u) + subgroup_base, 0u + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), subgroup_base)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base) << 0u))))) + subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true ? workgroup_base : _GLF_FUZZED(uvec4(36943u, 107575u, 51737u, 19314u).s), _GLF_IDENTITY(0u, (0u) - 0u) ^ (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(36943u, max(36943u, 36943u)), 107575u, 51737u, _GLF_IDENTITY(19314u, (_GLF_IDENTITY(19314u, max(19314u, 19314u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))).s, clamp(uvec4(36943u, 107575u, 51737u, 19314u).s, uvec4(36943u, 107575u, 51737u, 19314u).s, uvec4(36943u, 107575u, 51737u, 19314u).s))))))) + subgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))))) | (workgroup_base)) + subgroup_base)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), (true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), (true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), (true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id)))))))) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) >> 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), uint(_GLF_IDENTITY(uvec3((workgroup_base) | (workgroup_base), 1u, 1u), uvec3(uvec3(uvec3((workgroup_base) | (workgroup_base), 1u, 1u)))))))) * 1u) + subgroup_base)), (true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id)))), clamp(~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))) ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)))), (_GLF_IDENTITY(true ? ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), 1u, _GLF_IDENTITY(1u, (1u) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec4((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u, 1u)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u))) | ((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec4((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u, 1u))))))), (uvec4(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) * uvec4(1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) * 1u)), (uint(_GLF_IDENTITY(1u, (1u) * 1u))) >> 0u))), 1u, 1u))))) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(true ? ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(_GLF_IDENTITY((workgroup_base) | (workgroup_base), _GLF_IDENTITY(((workgroup_base) | (workgroup_base)) >> 0u, min(((workgroup_base) | (workgroup_base)) >> 0u, _GLF_IDENTITY(((workgroup_base) | (workgroup_base)) >> 0u, uint(uvec4(((workgroup_base) | (workgroup_base)) >> 0u, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u)))))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) * uvec4(1u, 1u, 1u, 1u))))) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id), (true ? ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)) >> 0u), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) * uvec4(1u, 1u, 1u, 1u))))) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id)) / 1u)), (~ (_GLF_IDENTITY(true ? ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) * uvec4(1u, 1u, 1u, 1u))))) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id), (true ? ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) * uvec4(1u, 1u, 1u, 1u))))) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id)) / 1u))) | (~ (_GLF_IDENTITY(true ? ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) * uvec4(1u, 1u, 1u, 1u))))) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id), (true ? ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(_GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) >> 0u), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) * uvec4(1u, 1u, 1u, 1u))))) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id)) / 1u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), (true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id)))), (false ? _GLF_FUZZED(virtual_gid) : ~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), _GLF_IDENTITY((true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u)), min((true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u)), (true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), (true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id)))), (false ? _GLF_FUZZED(virtual_gid) : ~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), _GLF_IDENTITY((true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u)), min((true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u)), (true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u)))))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), (true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id)))), (false ? _GLF_FUZZED(virtual_gid) : ~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), _GLF_IDENTITY((true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u)), min((true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u)), (true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), (true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id)))), (false ? _GLF_FUZZED(virtual_gid) : ~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), _GLF_IDENTITY((true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u)), min((true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u)), (true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u))))))))))) >> 0u), ~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), (true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id)))))))) >> 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), 0u))), 1u))) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id)))))) >> 0u) | (_GLF_IDENTITY(118361u, 0u ^ (118361u)) & 0u))) | (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)))), (true ? ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) : _GLF_FUZZED(subgroup_local_id)))))) >> 0u))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), (vec2(vec4(injectionSwitch, 1.0, 0.0))) * mat2(1.0))).x)), 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(1u * (0u), (true ? _GLF_IDENTITY(1u * (0u), (1u * (0u)) >> 0u) : _GLF_FUZZED(subgroup_base)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(uvec3(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u))), 1u, 1u))), (1u | 1u), 1u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 0.0))), 0.0))) / round(length(normalize(exp(vec2(0.0, 0.0)))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0))))), 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) * (0u))) | (_GLF_IDENTITY(0u, 1u * (0u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(1u, ~ (~ (1u))) * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(1u, ~ (~ (1u))) * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (uint(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(1u, ~ (~ (1u))) * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) * 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) | (1u)))))) * (0u)), 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(mat4x2(-3.7, 51.12, -9110.7728, -6.0, 0.6, -10.23, -48.97, 64.36)) : mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0))))), 0.0)), injectionSwitch.x)), 0u))), (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicAnd(virtual_gid, num_workgroup)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) * 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), 0u))), (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) * 1u)))))) / 1u)) ^ 0u), uint(uvec3(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), 1u, 1u))), (_GLF_IDENTITY(1u | 1u, min(_GLF_IDENTITY(1u | 1u, (true ? 1u | 1u : _GLF_FUZZED(subgroup_size))), 1u | 1u))), 1u, _GLF_IDENTITY(0u, ~ (~ (0u))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(virtual_gid))) * (0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(virtual_gid))) * (0u)), uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(virtual_gid))) * (0u)), 0u, 0u))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(uvec3(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), 1u, 1u))), (1u | 1u), 1u, 0u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), max(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, 1u * (0u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uint(uvec3(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 1u, 1u)))) << 0u)))), 1u, 1u))), (1u | 1u), 1u, 0u))))))) ^ 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid), 0u + (clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid)))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid, virtual_gid))) | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid, virtual_gid)))), virtual_gid)), virtual_gid, virtual_gid))) >> 0u, _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid))) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid))) >> 0u)), max(uint(uint((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid))) >> 0u)), uint(uint((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid))) >> 0u))))) + 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(uint((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid))) >> 0u)), max(uint(uint((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid))) >> 0u)), uint(uint((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid))) >> 0u))))) + 0u, ((_GLF_IDENTITY(uint(uint((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid))) >> 0u)), max(uint(uint((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid))) >> 0u)), uint(uint((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid))) >> 0u))))) + 0u) / 1u))))))), 0u ^ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)))], uint(1), _GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), (_GLF_IDENTITY(int(4), (int(4)) | (int(4)))) | 0)) - 0))), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) || false)) && true))))) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(false, true, true, true))), bool(bvec4(bool(bool(bvec4(false, true, true, true))), false, false, false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, false, true)), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(981.753), _GLF_FUZZED(-35.54)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec2(bvec2((true), true)))), true, false)))))), true, true))), false, false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (false) || false))))) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), _GLF_IDENTITY(true, false || (true)), true, true))), false, false, true)))))))) || false))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))) || false)), bool(bool(false))), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false)), bool(bvec4(bool(bool(bvec4(false, true, true, true))), false, false, false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false)), bool(bvec4(bool(bool(bvec4(false, true, true, true))), false, false, false)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false)), bool(bvec4(bool(bool(bvec4(false, true, true, true))), false, false, false))))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false)), bool(bvec4(bool(bool(bvec4(false, true, true, true))), false, false, false)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false)), bool(bvec4(bool(bool(bvec4(false, true, true, true))), false, false, false))))))), true))), bool(bvec3(! (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false)), bool(bvec4(bool(bool(bvec4(false, true, true, true))), false, false, false)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false)), bool(bvec4(bool(bool(bvec4(false, true, true, true))), false, false, false))))))), true))), true, true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, false, true)), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(981.753), _GLF_FUZZED(-35.54)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), _GLF_IDENTITY(true, false || (true)), true, true))), false, false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), _GLF_IDENTITY(true, false || (true)), true, true))), false, false, true)))))))) || false)))))), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, true, false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, true && (true)))), true))), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))) && true), false, true)))))) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, true && (true)))), true))), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && true) && (bool(false)))))) && true), false, true)))))) || false))))), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, true, true))), ! (! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY(bool(bool(bool(bvec4(false, true, true, true)))), ! (! (bool(bool(bool(bvec4(false, true, true, true))))))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))))), true && (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, false, true)))))) || false)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, true, true))), ! (! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY(bool(bool(bool(bvec4(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), true, true)))), ! (! (bool(bool(bool(bvec4(false, true, true, true))))))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true))), false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))))), true && (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, false, true)))))) || false))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false)))) && true))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), next_virtual_gid)))), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid))], uint(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) + 0)))), 4, _GLF_IDENTITY(64, 0 + (64)), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, max(4, 4)), 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(46909) : 4))) << 0))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), false))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), bool(bvec2(false, false))))))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))), (! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, length(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, length(0.0)), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0))).y))))) + log(1.0))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
