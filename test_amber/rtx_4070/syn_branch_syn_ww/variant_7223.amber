#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), injectionSwitch.x))), _GLF_IDENTITY(true, (true) && true) && (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-798.174) : 0.0)), injectionSwitch.x))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(5330.6347) : float(vec2(0.0, 0.0))))))))))), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true)))) && true)))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)) && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).y)))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), min(gl_WorkGroupSize, gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) + (gl_WorkGroupSize))) | (gl_WorkGroupSize)))), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))))) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), (gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), (gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), max(_GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), (gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), _GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), (gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) >> 0u), clamp((gl_WorkGroupSize.x), (gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), _GLF_IDENTITY((gl_WorkGroupSize.x), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) ^ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))).x), (gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))))) - 0u)))) - 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) ^ 0u), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) ^ 0u), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) ^ 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) ^ 0u), uint(uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) ^ 0u), 0u, 1u))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), 1u * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (_GLF_IDENTITY(0u, (0u) | (0u)))) + (subgroup_id)))) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), clamp(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), ((_GLF_IDENTITY(0u, (0u) << 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), (true ? (_GLF_IDENTITY(0u, (0u) << 0u)) : _GLF_FUZZED(workgroup_base)))) * 1u)))), ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), ((_GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 0u, 0u, 0u))), uint(1)))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, (0u) << 0u)), 0u ^ (_GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, (0u) << 0u)), (0u | (_GLF_IDENTITY(0u, (0u) << 0u))) + 0u)))), ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))) | 0u)), uint(1), uint(1))), 4, 64, 4);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(3.1, min(3.1, 3.1))), (vec2(vec3(injectionSwitch, 0.0)))[1]), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(-9.7)), bvec2(true, false)), (false ? _GLF_FUZZED(vec2(-9.4, 5.1)) : mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(3.1, min(3.1, 3.1))), (vec2(vec3(injectionSwitch, 0.0)))[1]), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(-9.7)), bvec2(true, false)))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(3.1, min(3.1, 3.1))), (vec2(vec3(injectionSwitch, 0.0)))[1]), _GLF_IDENTITY(vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(-9.7)), mix(vec2(_GLF_FUZZED(-73.04), _GLF_FUZZED(9175.0195)), vec2((vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(-9.7)))[0], (vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(-9.7)))[1]), bvec2(true, true))), bvec2(true, false)), (false ? _GLF_FUZZED(vec2(-9.4, 5.1)) : mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(3.1, min(3.1, 3.1))), (vec2(vec3(injectionSwitch, 0.0)))[1]), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(-9.7)), bvec2(true, false)))))).x) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(3.1, min(3.1, 3.1))), (vec2(vec3(injectionSwitch, 0.0)))[1]), _GLF_IDENTITY(vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(-9.7)), mix(vec2(_GLF_FUZZED(6.2), _GLF_FUZZED(-9.7)), vec2((_GLF_IDENTITY(vec2((vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))), 0.0)))))[0], _GLF_FUZZED(-9.7)), (false ? _GLF_FUZZED(vec2(-951.555, -1.2)) : vec2((vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))), 0.0)))))[0], _GLF_FUZZED(-9.7)))))[0], _GLF_IDENTITY((vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(-9.7)))[1], (true ? (vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(-9.7)))[1] : _GLF_FUZZED(-81.30)))), bvec2(true, true))), bvec2(true, false)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), 0.0)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(3.1, min(3.1, 3.1))), (vec2(vec3(injectionSwitch, 0.0)))[1]), _GLF_IDENTITY(vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(-9.7)), (false ? _GLF_FUZZED(injectionSwitch) : vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(-9.7)))), bvec2(true, false)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(3.1, min(3.1, 3.1))), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), clamp(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(vec2(mat2x4(vec2(vec3(injectionSwitch, 0.0)), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(vec2(-7580.7153, 670.005)) : vec2(mat2x4(vec2(vec3(injectionSwitch, 0.0)), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0))))))))[1]), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(-9.7)), bvec2(true, false)))).x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 0 ^ (0))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch.y))) - 0.0), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(36.61) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(fract(-5424.5080)) : injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) - 0.0), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(fract(-5424.5080), min(fract(-5424.5080), fract(-5424.5080)))) : injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch.y))) - 0.0), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(fract(-5424.5080)) : injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false, ! (! (false))), true))))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(0.0, 0.0))) + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y : _GLF_FUZZED(-7.9))), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(4051.7857)), float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))), bool(true)))))))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0)), (true ? float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-3.6)))), 1.0, log(cos(0.0)), 0.0))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(mat2(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((-715.590), mix(float((-715.590)), float(_GLF_FUZZED(-964.645)), bool(false))))), vec2(_GLF_FUZZED(95.63), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-216.920))), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, 0.0)))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-90.00, 5248.1505)))), injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0), (mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)) * mat3(1.0)))), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y), (min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y) * cos(0.0)))) - 0.0)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) : injectionSwitch)), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) : injectionSwitch)), 1.0, 1.0, 0.0, 0.0))), injectionSwitch)).y)))))))), false, false))))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-28.48), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((0.6 + _GLF_IDENTITY(9715.4361, clamp(_GLF_IDENTITY(9715.4361, max(9715.4361, 9715.4361)), 9715.4361, _GLF_IDENTITY(9715.4361, (9715.4361) - 0.0)))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(14723))), float(injectionSwitch.y), bool(true))))), false))).x, injectionSwitch.x))) - 0.0) : _GLF_FUZZED(440.472))) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(865.927)), vec2(_GLF_FUZZED(-5343.9164), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(865.927)), vec2(_GLF_FUZZED(-5343.9164), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) * mat2(1.0))).x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(865.927)), vec2(_GLF_FUZZED(-5343.9164), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(865.927)), vec2(_GLF_FUZZED(-5343.9164), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) * mat2(1.0))).x, injectionSwitch.x) : _GLF_FUZZED(smoothstep(refract(72.63, 21.59, -2.7), -0.4, -8.2))))), 0.0)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0)))))))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-19.85, -80.53)))), injectionSwitch, injectionSwitch)))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0))), mix(float(_GLF_FUZZED(-0.0)), float(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0)))), bool(true)))))), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))) / sqrt(vec2(1.0, 1.0))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))))) - 0.0), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0)))))))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-19.85, -80.53)))), injectionSwitch, injectionSwitch)))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0))), mix(float(_GLF_FUZZED(-0.0)), float(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0)))), bool(true)))))), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))) / sqrt(vec2(1.0, 1.0))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0)))))))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-19.85, -80.53)))), injectionSwitch, injectionSwitch)))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0))), mix(float(_GLF_FUZZED(-0.0)), float(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0)))), bool(true)))))), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))) / sqrt(vec2(1.0, 1.0))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))))) - 0.0))))))) - 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(232.405, clamp(232.405, 232.405, 232.405))) : injectionSwitch.x, clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(232.405, clamp(232.405, 232.405, 232.405))) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(19.53))), false ? _GLF_FUZZED(_GLF_IDENTITY(232.405, clamp(232.405, 232.405, 232.405))) : injectionSwitch.x, false ? _GLF_FUZZED(_GLF_IDENTITY(232.405, clamp(232.405, 232.405, 232.405))) : injectionSwitch.x)))) > injectionSwitch.y))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) || false))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-28.48), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((0.6 + _GLF_IDENTITY(9715.4361, clamp(_GLF_IDENTITY(9715.4361, max(9715.4361, 9715.4361)), 9715.4361, _GLF_IDENTITY(9715.4361, (9715.4361) - 0.0)))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(14723))), float(injectionSwitch.y), bool(true))))), false))).x, injectionSwitch.x))) - 0.0) : _GLF_FUZZED(440.472))) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(865.927)), vec2(_GLF_FUZZED(-5343.9164), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(865.927)), vec2(_GLF_FUZZED(-5343.9164), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) * mat2(1.0))).x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(865.927)), vec2(_GLF_FUZZED(-5343.9164), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(865.927)), vec2(_GLF_FUZZED(-5343.9164), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) * mat2(1.0))).x, injectionSwitch.x) : _GLF_FUZZED(smoothstep(refract(72.63, 21.59, -2.7), -0.4, -8.2))))), 0.0)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0)))))))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-19.85, -80.53)))), injectionSwitch, injectionSwitch)))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0))), mix(float(_GLF_FUZZED(-0.0)), float(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0)))), bool(true)))))), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))) / sqrt(vec2(1.0, 1.0))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))))) - 0.0), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0)))))))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-19.85, -80.53)))), injectionSwitch, injectionSwitch)))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0))), mix(float(_GLF_FUZZED(-0.0)), float(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0)))), bool(true)))))), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))) / sqrt(vec2(1.0, 1.0))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0)))))))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-19.85, -80.53)))), injectionSwitch, injectionSwitch)))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0))), mix(float(_GLF_FUZZED(-0.0)), float(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0)))), bool(true)))))), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))) / sqrt(vec2(1.0, 1.0))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))))) - 0.0))))))) - 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(232.405, clamp(232.405, 232.405, 232.405))) : injectionSwitch.x, clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(232.405, clamp(232.405, 232.405, 232.405))) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(19.53))), false ? _GLF_FUZZED(_GLF_IDENTITY(232.405, clamp(232.405, 232.405, 232.405))) : injectionSwitch.x, false ? _GLF_FUZZED(_GLF_IDENTITY(232.405, clamp(232.405, 232.405, 232.405))) : injectionSwitch.x)))) > injectionSwitch.y))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) || false))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-28.48), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((0.6 + _GLF_IDENTITY(9715.4361, clamp(_GLF_IDENTITY(9715.4361, max(9715.4361, 9715.4361)), 9715.4361, _GLF_IDENTITY(9715.4361, (9715.4361) - 0.0)))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(14723))), float(injectionSwitch.y), bool(true))))), false))).x, injectionSwitch.x))) - 0.0) : _GLF_FUZZED(440.472))) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(865.927)), vec2(_GLF_FUZZED(-5343.9164), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(865.927)), vec2(_GLF_FUZZED(-5343.9164), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) * mat2(1.0))).x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(865.927)), vec2(_GLF_FUZZED(-5343.9164), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(865.927)), vec2(_GLF_FUZZED(-5343.9164), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) * mat2(1.0))).x, injectionSwitch.x) : _GLF_FUZZED(smoothstep(refract(72.63, 21.59, -2.7), -0.4, -8.2))))), 0.0)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0)))))))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-19.85, -80.53)))), injectionSwitch, injectionSwitch)))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0))), mix(float(_GLF_FUZZED(-0.0)), float(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0)))), bool(true)))))), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))) / sqrt(vec2(1.0, 1.0))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))))) - 0.0), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0)))))))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-19.85, -80.53)))), injectionSwitch, injectionSwitch)))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0))), mix(float(_GLF_FUZZED(-0.0)), float(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0)))), bool(true)))))), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))) / sqrt(vec2(1.0, 1.0))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0)))))))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-19.85, -80.53)))), injectionSwitch, injectionSwitch)))).x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0))), mix(float(_GLF_FUZZED(-0.0)), float(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, abs(1.0)))), bool(true)))))), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)))) / sqrt(vec2(1.0, 1.0))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))))) - 0.0))))))) - 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(232.405, clamp(232.405, 232.405, 232.405))) : injectionSwitch.x, clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(232.405, clamp(232.405, 232.405, 232.405))) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(19.53))), false ? _GLF_FUZZED(_GLF_IDENTITY(232.405, clamp(232.405, 232.405, 232.405))) : injectionSwitch.x, false ? _GLF_FUZZED(_GLF_IDENTITY(232.405, clamp(232.405, 232.405, 232.405))) : injectionSwitch.x)))) > injectionSwitch.y))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) || false))))))) && true), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) && (injectionSwitch.x > injectionSwitch.y))))))) && true))))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec2(true && (injectionSwitch.x > injectionSwitch.y), false)))))))))) && true)))))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)))).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(232.405, 1.0 * (_GLF_IDENTITY(232.405, (false ? _GLF_FUZZED(3.0) : 232.405))))) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(232.405) : injectionSwitch.x)) > injectionSwitch.y))), false || (bool(bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(232.405, max(_GLF_IDENTITY(232.405, max(232.405, 232.405)), _GLF_IDENTITY(232.405, (232.405) / 1.0)))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4x2((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0, 1.0)))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4x2((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0, 1.0)))))).y), float(_GLF_FUZZED(-4.0)), bool(false))), min(injectionSwitch.y, injectionSwitch.y)))))))))))))) || false)), false, true, false)), (bool(bvec4((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)), (false ? _GLF_FUZZED(232.405) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(125.342, _GLF_IDENTITY((false ? _GLF_FUZZED(-14.58) : 125.342), mix(float(_GLF_FUZZED(585.904)), float(_GLF_IDENTITY((false ? _GLF_FUZZED(-14.58) : 125.342), clamp((false ? _GLF_FUZZED(-14.58) : 125.342), (false ? _GLF_FUZZED(-14.58) : 125.342), (false ? _GLF_FUZZED(-14.58) : 125.342)))), bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))), _GLF_FUZZED(1624.6764)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)), (false ? _GLF_FUZZED(232.405) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(125.342, (false ? _GLF_FUZZED(-14.58) : _GLF_IDENTITY(125.342, (_GLF_IDENTITY(125.342, (false ? _GLF_FUZZED(-9392.4465) : 125.342))) / _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(-27.31)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec2(exp(0.0), 0.0)), dot(vec2(1.0, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-5.2, 91.29, 8009.3529, -4.1, 2736.6932, -9.5, -1.4, -70.07, 84.75)))))), vec2(exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), clamp(float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), float(vec4(float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 1.0))))))), 0.0))))))), _GLF_FUZZED(1624.6764)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)))), true, true, false)))) || false)), false, true, false))) && _GLF_IDENTITY(true, ! (! (true)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))) || false)); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(true)), (bool(_GLF_WRAPPED_IF_TRUE(true))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
                      barrier();
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))))) > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(191339u))))))
                      {
                       int i = 0;
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       do
                        {
                         atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY((next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) / 1u)) - 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) / 1u)) - 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) / 1u)) - 0u)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | 0u)) + 0u) : _GLF_FUZZED(workgroup_id)))), (_GLF_IDENTITY(~ (next_virtual_gid), _GLF_IDENTITY((~ (next_virtual_gid)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (next_virtual_gid)), ((~ (next_virtual_gid))) / 1u)), 0u | (~ (_GLF_IDENTITY((~ (next_virtual_gid)), ((~ (next_virtual_gid))) / 1u)))))) / 1u)) - 0u))), 0u))), ~ _GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY((next_virtual_gid), 0u ^ ((next_virtual_gid)))) - 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u))))) | ((_GLF_IDENTITY((next_virtual_gid), 0u ^ ((next_virtual_gid)))) - 0u))), ~ (next_virtual_gid)))))), ((next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), _GLF_IDENTITY((~ (next_virtual_gid)) / 1u, ((~ (next_virtual_gid)) / 1u) - 0u))) - 0u), ~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), 0u ^ ((next_virtual_gid)))) - 0u), ~ (next_virtual_gid))))))) | _GLF_IDENTITY(((next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))), (~ (next_virtual_gid)) / 1u)) - 0u), ~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), 0u ^ _GLF_IDENTITY(((next_virtual_gid)), (((next_virtual_gid))) / 1u))) - 0u), ~ (next_virtual_gid))))))), 0u | (((next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), max(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), _GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))))))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (~ (next_virtual_gid)) / 1u)) - 0u), ~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), 0u ^ ((next_virtual_gid)))) - 0u), ~ (next_virtual_gid)))))))))))], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY((4) ^ 0, ((4) ^ 0) | ((4) ^ 0))));
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(((next_virtual_gid)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((next_virtual_gid)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) + 0u)) / 1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(uvec3(uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), 0u, 1u)))))), uint(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0u)), 0u))))) | (next_virtual_gid))], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - (0 >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY((_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(_injected_loop_counter), max(_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(_injected_loop_counter), int(_GLF_IDENTITY(ivec3(true ? 2 : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (1 ^ 1) | (_GLF_FUZZED(_injected_loop_counter))), 1, (0 >> _GLF_IDENTITY(int(3), int(3)))), (true ? ivec3(true ? 2 : _GLF_FUZZED(_injected_loop_counter), 1, (0 >> _GLF_IDENTITY(int(3), int(3)))) : _GLF_FUZZED(ivec3(-22830, -77191, 17655)))))), true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), 0 | ((_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(_injected_loop_counter), max(_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(_injected_loop_counter), int(_GLF_IDENTITY(ivec3(true ? 2 : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (1 ^ 1) | (_GLF_FUZZED(_injected_loop_counter))), 1, (0 >> _GLF_IDENTITY(int(3), int(3)))), (true ? ivec3(true ? 2 : _GLF_FUZZED(_injected_loop_counter), 1, (0 >> _GLF_IDENTITY(int(3), int(3)))) : _GLF_FUZZED(ivec3(-22830, -77191, 17655)))))), true ? 2 : _GLF_FUZZED(_injected_loop_counter)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(_injected_loop_counter)), ~ (~ ((_GLF_IDENTITY(true, (true) && true) ? 2 : _GLF_FUZZED(_injected_loop_counter))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u))))) / 1u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u))))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u))))) / 1u))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u), max(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u))))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u))))) / 1u))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u))))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u))))) / 1u))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (_GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (_GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0))))))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0)))))))), max(~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0)))))))), ~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0))))))))))))), (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, 0 | (2)) : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0))))))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0)))))))), max(~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0)))))))), ~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0))))))))))))), (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, 0 | (2)) : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u))))) ^ 0u)))))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(_injected_loop_counter)), ~ (~ ((true ? 2 : _GLF_FUZZED(_injected_loop_counter))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u))))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (_GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (_GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0))))))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0)))))))), max(~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0)))))))), ~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0))))))))))))), (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, 0 | (2)) : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))))))))), min(0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(_injected_loop_counter)), ~ (~ ((true ? 2 : _GLF_FUZZED(_injected_loop_counter))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u))))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (_GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (_GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0))))))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0)))))))), max(~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0)))))))), ~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0))))))))))))), (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, 0 | (2)) : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))))))))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(_injected_loop_counter)), ~ (~ ((true ? 2 : _GLF_FUZZED(_injected_loop_counter))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u))))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (_GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (_GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0))))))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0)))))))), max(~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0)))))))), ~ (~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, 1, 0)), (int(ivec4(2, 0, 1, 0))) | (int(ivec4(2, 0, 1, 0))))))))))))), (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))), (uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))), uint(uvec4((uint(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, 0 | (2)) : _GLF_FUZZED(_injected_loop_counter))))), 1u, 0u, 1u)))))))))))))) ^ 0u), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, ! (! _GLF_IDENTITY(((! (false)) && true), ! (_GLF_IDENTITY(! (((! (false)) && true)), bool(bool(! (((! (false)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))))))))))))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               do
                                {
                                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.1)), bool(false))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))))) && true); _injected_loop_counter ++)
                                  {
                                   barrier();
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                          }
                         else
                          {
                           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-26.46)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                            {
                             barrier();
                             if(_GLF_DEAD(false))
                              {
                               do
                                {
                                 do
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y))))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       barrier();
                                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                                          {
                                           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
                                            barrier();
                                           if(_GLF_DEAD(false))
                                            barrier();
                                           barrier();
                                          }
                                        }
                                      }
                                     else
                                      {
                                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), ((! (false))) && _GLF_IDENTITY(true, (true) || false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))), ! (! (_GLF_IDENTITY(((! (false))), ! (! ((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, false))))))))))))) && _GLF_IDENTITY(true, (true) || false)))) && true))) && true))
                                        {
                                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                                          {
                                           if(_GLF_DEAD(false))
                                            {
                                             if(_GLF_DEAD(false))
                                              barrier();
                                             barrier();
                                            }
                                          }
                                         barrier();
                                        }
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               if(_GLF_DEAD(false))
                                barrier();
                               for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) / 1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0), ~ (_GLF_IDENTITY(~ (_injected_loop_counter --), _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), (false ? _GLF_FUZZED(41960) : (~ (0))))) ^ _GLF_IDENTITY((~ (_injected_loop_counter --)), ((~ (_injected_loop_counter --))) - 0))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0), ~ (_GLF_IDENTITY(~ (_injected_loop_counter --), _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), (false ? _GLF_FUZZED(41960) : (~ (0))))) ^ _GLF_IDENTITY((~ (_injected_loop_counter --)), ((~ (_injected_loop_counter --))) - 0))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0), ~ (_GLF_IDENTITY(~ (_injected_loop_counter --), _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), (false ? _GLF_FUZZED(41960) : (~ (0))))) ^ _GLF_IDENTITY((~ (_injected_loop_counter --)), ((~ (_injected_loop_counter --))) - 0))))))) : _GLF_FUZZED(_injected_loop_counter))) << 0))
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                      barrier();
                                     barrier();
                                    }
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), false, false))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), false, false)))))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))), false, true, false))), false, true, false)))))
                                      {
                                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), true, false))))
                                        barrier();
                                       barrier();
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   barrier();
                                  }
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     barrier();
                                    }
                                   barrier();
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   else
                                    {
                                    }
                                   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       if(_GLF_DEAD(false))
                                        {
                                         if(_GLF_DEAD(false))
                                          barrier();
                                         barrier();
                                        }
                                       barrier();
                                      }
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   do
                                    {
                                     barrier();
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                               if(_GLF_DEAD(false))
                                {
                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                  {
                                   barrier();
                                  }
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                            }
                          }
                        }
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(sqrt(0.0))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && true))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(sqrt(0.0))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && true))))))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(sqrt(0.0))), false || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(sqrt(0.0))))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && true)))))))))))) && true))));
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(int(1))))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter != 0, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec2(bvec2(_injected_loop_counter != 0, false))))))) && true)); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-36.16, 77.07)) : injectionSwitch), vec2(mat3x4((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-36.16, 77.07), (false ? _GLF_FUZZED(vec2(-5221.3129, 98.78)) : vec2(-36.16, 77.07)))) : injectionSwitch), abs(0.0), sqrt(1.0), 1.0, 1.0, 1.0, 0.0, length(0.0), 0.0, 0.0, 1.0)))), injectionSwitch)).x, (_GLF_IDENTITY(false ? _GLF_FUZZED(acosh(73.14)) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-36.16, 77.07)) : injectionSwitch), vec2(mat3x4((false ? _GLF_FUZZED(vec2(-36.16, 77.07)) : injectionSwitch), abs(0.0), sqrt(1.0), 1.0, 1.0, 1.0, 0.0, length(0.0), 0.0, 0.0, 1.0)))), injectionSwitch)).x, (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(acosh(73.14)) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-36.16, 77.07)) : injectionSwitch), vec2(mat3x4((false ? _GLF_FUZZED(vec2(-36.16, 77.07)) : injectionSwitch), abs(0.0), sqrt(1.0), 1.0, 1.0, 1.0, 0.0, length(0.0), 0.0, 0.0, 1.0)))), injectionSwitch)).x, float(mat4(false ? _GLF_FUZZED(acosh(73.14)) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-36.16, 77.07)) : injectionSwitch), vec2(mat3x4((false ? _GLF_FUZZED(vec2(-36.16, 77.07)) : injectionSwitch), abs(0.0), sqrt(1.0), 1.0, 1.0, 1.0, 0.0, length(0.0), 0.0, 0.0, 1.0)))), injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(-154.458))))) > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), true)))) && true) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true, false, false)))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
            {
            }
           else
            {
             barrier();
            }
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) + 0)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(vec2(7.8, -1149.5727), vec2(-80.54, 683.184), bvec2(true, true))) : injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 0.0))))), false)))) && true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.6) : 0.0)), 0.0)), 0.0), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-5.7, max(-5.7, -5.7)), _GLF_IDENTITY(-8.0, (-8.0) - 0.0))) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), (injectionSwitch) - vec2(0.0, 0.0)), min(min(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), min(max(0.0, 0.0), _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) - 0.0)))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(8.1, -18.00)))) - vec2(0.0, 0.0), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0))[0], _GLF_FUZZED(81.82)), vec2(_GLF_FUZZED((-6.4 - -91.36)), ((injectionSwitch) - vec2(0.0, 0.0))[1]), bvec2(false, true)))) * vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) : _GLF_FUZZED(injectionSwitch))), vec2(0.0, 0.0) + (_GLF_IDENTITY(min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))), max(_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) : _GLF_FUZZED(injectionSwitch))), vec2(0.0, 0.0) + (_GLF_IDENTITY(min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) : _GLF_FUZZED(injectionSwitch))), vec2(0.0, 0.0) + (_GLF_IDENTITY(min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))))))))))).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6980.0201)), bool(false)))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1)))), 1)), (1) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
                            barrier();
                           barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         barrier();
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                           do
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                      }
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (false))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! (false))), true))))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (_GLF_IDENTITY(bool(bvec2(true, false)), ! (! (_GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true)))))))), true, _GLF_IDENTITY(false, ! (! (false))))))), true && (true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec2(true, false))), true, false)))), true && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false))) || false))))))) || false)))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, true))))) && true), (_GLF_DEAD(false)) || false))
            {
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1)))))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
          barrier();
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))
                  barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(acosh(-7.9)), mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(acosh(-7.9)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(acosh(-7.9)), mix(float(_GLF_FUZZED(51.45)), float(true ? injectionSwitch.y : _GLF_FUZZED(acosh(-7.9))), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) && true))))), true ? injectionSwitch.y : _GLF_FUZZED(acosh(-7.9))))), float(_GLF_FUZZED(4.1)), bool(false))))), injectionSwitch.y, injectionSwitch.y)))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) - 0))) << 0) != _GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), false || (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) << 0), (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) << 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0)) | (0 ^ 0)) != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) << 0), (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) << 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0)) | (0 ^ 0)) != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true)))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) << 0), int(int(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) << 0)))), (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), _GLF_IDENTITY(((_injected_loop_counter)), min(((_injected_loop_counter)), ((_injected_loop_counter)))) << 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0)) | (0 ^ 0)) != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) << 0), int(int(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) << 0)))), (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), _GLF_IDENTITY(((_injected_loop_counter)), min(((_injected_loop_counter)), ((_injected_loop_counter)))) << 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0)) | (0 ^ 0)) != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true)), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) << 0), int(int(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) << 0)))), (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), _GLF_IDENTITY(((_injected_loop_counter)), min(((_injected_loop_counter)), ((_injected_loop_counter)))) << 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0)) | (0 ^ 0)) != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true)), true, false, false))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true))))))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
