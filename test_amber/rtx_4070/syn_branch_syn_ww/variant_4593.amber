#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (true ? injectionSwitch.x : _GLF_FUZZED(-569.324)))), bool(true))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(vec3(4.0, -5310.3468, 8414.2475).y)), bool(false))) > injectionSwitch.y)) || false))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(vec3(4.0, -5310.3468, 8414.2475).y)), bool(false))) > injectionSwitch.y)) || false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(10.97) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * sqrt(vec2(1.0, 1.0))).y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0))) > injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0))) > injectionSwitch.y)), true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0))) > injectionSwitch.y)), true)))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    return;
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)).x, uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)), (_GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) + 0u)))) | (gl_NumWorkGroups.x))))) ^ (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))))) / 1u), (1u | 1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (false))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true))) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)) || false, false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)) || false))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((2339.0781)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), bvec2(false, true))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(gl_WorkGroupID.x, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) << 0u)))), uint(1u)))), clamp(uvec2(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), min(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), ~ (~ (max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, _GLF_IDENTITY(0u, max(0u, 0u))))), max(0u, 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), uint(uvec4(max(0u, 0u), 1u, 1u, 1u)))), 1u), max(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), uint(uvec4(max(0u, 0u), 1u, 1u, 1u)))), 1u), uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), uint(uvec4(max(0u, 0u), 1u, 1u, 1u)))), 1u))))))) << _GLF_IDENTITY(uint(1u), uint(1u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)))), (false ? _GLF_FUZZED(subgroup_local_id) : clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), max(0u, 0u)), uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u))))))) << _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)))))) >> 0u)) | 0u)))) << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, 0u ^ (1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u))))) << _GLF_IDENTITY(uint(1u), uint(1u)))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), (false ? _GLF_FUZZED(11475u) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), (false ? _GLF_FUZZED(11475u) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u))))) | 0u))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(1u)) ^ 0u)))), uvec2(gl_WorkGroupID.x, _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u)))))), uint(1u))), max((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)) << _GLF_IDENTITY(uint(1u), uint(1u)))) + 0u), ~ (~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) >> 0u)), _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (((0u << _GLF_IDENTITY(uint(1u), uint(1u))))) | (((0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) + 0u))))))))), ((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))) << _GLF_IDENTITY(uvec2(2u), uvec2(2u))) + (_GLF_IDENTITY(uvec2(gl_WorkGroupID.x, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) << 0u))), (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, min(0u, 0u)))))) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), uint(_GLF_IDENTITY(1u, (1u) << 0u))))), clamp(uvec2(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), min(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), 0u | (_GLF_IDENTITY(0u, max(0u, 0u)))))), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), ~ (~ (max(0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u | (uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), uint(uvec3(uint(uvec3(0u, 1u, 0u)), 0u, 1u)))))), 0u))))), max(0u, 0u)), uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), min(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), 0u | (_GLF_IDENTITY(0u, max(0u, 0u)))))), clamp(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u))) / 1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), ~ (~ (max(0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u))))), 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u | (uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), uint(uvec3(uint(uvec3(0u, 1u, 0u)), 0u, 1u)))))), 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u | (uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), uint(uvec3(uint(uvec3(0u, 1u, 0u)), 0u, 1u)))))), 0u)), clamp(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u | (uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), uint(uvec3(uint(uvec3(0u, 1u, 0u)), 0u, 1u)))))), 0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u | (uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), uint(uvec3(uint(uvec3(0u, 1u, 0u)), 0u, 1u)))))), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u | (uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), uint(uvec3(uint(uvec3(0u, 1u, 0u)), 0u, 1u)))))), 0u)), clamp(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u | (uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), uint(uvec3(uint(uvec3(0u, 1u, 0u)), 0u, 1u)))))), 0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u | (uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), uint(uvec3(uint(uvec3(0u, 1u, 0u)), 0u, 1u)))))), 0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u | (uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), uint(uvec3(uint(uvec3(0u, 1u, 0u)), 0u, 1u)))))), 0u)))))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u | (uint(uvec3(0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), uint(uvec3(uint(uvec3(0u, 1u, 0u)), 0u, 1u)))))), 0u))))))), max(0u, 0u)), uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)))))) / 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), clamp(uint(_GLF_IDENTITY(1u, (1u) | (1u))), uint(_GLF_IDENTITY(1u, (1u) | (1u))), uint(_GLF_IDENTITY(1u, (1u) | (1u))))), uint(_GLF_IDENTITY(1u, (1u) | (1u))), uint(_GLF_IDENTITY(1u, (1u) | (1u))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)))), (false ? _GLF_FUZZED(subgroup_local_id) : clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u), (uvec2(0u, 0u) & uvec2(136566u, 106829u)) + (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u), min(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u), uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u))))))))))) << _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), max(0u, 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id))) : clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), min(max(0u, 0u), max(0u, 0u)))), 1u))))))) << _GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))) : _GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))), 0u)), 1u)), (uint(uvec2(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u))), 1u))) >> 0u)) | 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)), (uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u))) >> 0u)) | 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)), (uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u))) >> 0u)) | 0u)))))) / 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), max(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))) - 0u)) << 0u), 1u)), (uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u))) >> 0u)) | 0u)))))) << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u ^ (_GLF_IDENTITY(1u, (1u) << 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u))))), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec2(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec4(~ (0u), 1u, 1u, (1u ^ 1u)))))))), 1u))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(1u)))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(11475u) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), clamp(false ? _GLF_FUZZED(11475u) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), false ? _GLF_FUZZED(11475u) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), _GLF_IDENTITY(false ? _GLF_FUZZED(11475u) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(11475u) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)), min(~ (false ? _GLF_FUZZED(11475u) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)), ~ (false ? _GLF_FUZZED(11475u) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u))))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), (false ? _GLF_FUZZED(11475u) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u))))) | 0u))), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)))), uvec2(gl_WorkGroupID.x, _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))), uint(uint(~ (~ (_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))), uint(uint(~ (~ (_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))))))), max(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))), uint(uint(~ (~ (_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))))))), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))), uint(uint(~ (~ (_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u)))))))))))) ^ 0u), uint(1u))), max((0u << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)) << _GLF_IDENTITY(uint(1u), uint(1u)))) + 0u), 0u + (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)) << _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)) << _GLF_IDENTITY(uint(1u), uint(1u))) << 0u))) + 0u))), ~ (~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) >> 0u), (false ? _GLF_FUZZED(clamp(subgroup_id, num_workgroup, workgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) >> 0u)))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (((0u << _GLF_IDENTITY(uint(1u), uint(1u))))) | (((0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) + 0u)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)) << _GLF_IDENTITY(uint(1u), uint(1u)))) + 0u), 0u + (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)) << _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)) << _GLF_IDENTITY(uint(1u), uint(1u))) << 0u))) + 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)) << _GLF_IDENTITY(uint(1u), uint(1u)))) + 0u), 0u + (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)) << _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)) << _GLF_IDENTITY(uint(1u), uint(1u))) << 0u))) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)) << _GLF_IDENTITY(uint(1u), uint(1u)))) + 0u), 0u + (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)) << _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(subgroup_id) : 0u)) << _GLF_IDENTITY(uint(1u), uint(1u))) << 0u))) + 0u))))), ~ (~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (_GLF_IDENTITY(~ (~ (1u)), (_GLF_IDENTITY(~ (~ (1u)), max(~ (~ (1u)), ~ (~ (1u))))) << 0u)) / 1u))), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) >> 0u), (false ? _GLF_FUZZED(clamp(subgroup_id, num_workgroup, workgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) >> 0u)))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)))))), (((0u << _GLF_IDENTITY(uint(1u), uint(1u))))) | (((0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) + 0u)))))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (vec2(vec4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) / vec2(1.0, 1.0))).y, (false ? _GLF_FUZZED(498.007) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (vec2(vec4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) / vec2(1.0, 1.0))).y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)) | ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)) | ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)))))), min(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)) | ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)) | ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)))))), uint(uvec3(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)) | ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)))))), 0u, 1u))))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)) | ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)))))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)) | ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * workgroup_id)))))))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), workgroup_id, workgroup_id)), (workgroup_size * workgroup_id) << 0u), workgroup_size * workgroup_id));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), (1u | 1u), 1u))) * (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) / _GLF_IDENTITY(1u, (1u) - 0u), (_GLF_IDENTITY((subgroup_base) / _GLF_IDENTITY(1u, (1u) - 0u), 0u ^ ((subgroup_base) / _GLF_IDENTITY(1u, (1u) - 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), clamp(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), (true ? _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))))), uint(uvec4((_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))), 1u, 0u, 1u)))) >> 0u)), _GLF_IDENTITY((subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u)))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u)))))))), 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u)))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u)))))))), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u)))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u)))))))), 0u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u)))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u)))))))), 0u)))))))) >> 0u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))))), (1u | 1u), 1u))) * (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) / _GLF_IDENTITY(1u, (1u) - 0u), (_GLF_IDENTITY((subgroup_base) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) - 0u), 0u ^ ((subgroup_base) / _GLF_IDENTITY(1u, (1u) - 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), clamp(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), (true ? _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))))), uint(uvec4((_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))), 1u, 0u, 1u)))) >> 0u)), _GLF_IDENTITY((subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), ((subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tan(injectionSwitch)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((++ num_workgroup)) : _GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1856.2238, -9.7)))).y)) ? subgroup_local_id % 2 : _GLF_FUZZED(subgroup_base)))) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && (bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true))), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) / _GLF_IDENTITY(1, max(1, 1)))), 4, _GLF_IDENTITY(64, (64) ^ 0), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true, false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))))) && true), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false), true), true)))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), true && (true && (_GLF_DEAD(false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED((- 5041.5349)), _GLF_FUZZED(vec3(901.406, -3.6, 8945.8523).r)), bvec2(false, _GLF_IDENTITY(false, false || (false))))).x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED((- 5041.5349)), _GLF_FUZZED(vec3(901.406, -3.6, 8945.8523).r)), bvec2(false, _GLF_IDENTITY(false, false || (false))))).x), float(_GLF_FUZZED(-902.918)), bool(false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED((- 5041.5349)), _GLF_FUZZED(vec3(901.406, -3.6, 8945.8523).r)), bvec2(false, _GLF_IDENTITY(false, false || (false))))).x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))).y)) && (false), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))) * mat2(1.0)), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))).y)) && (false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec2(bvec2(false, false))))))), (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-12.56), (false ? _GLF_FUZZED(_GLF_IDENTITY(-665.368, mix(float(_GLF_FUZZED(-5.9)), float(_GLF_IDENTITY(-665.368, (false ? _GLF_FUZZED(-56.09) : -665.368))), bool(true)))) : _GLF_FUZZED(-12.56))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(-12.56), (false ? _GLF_FUZZED(-665.368) : _GLF_FUZZED(-12.56))), 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0)), mix(float(float(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(-12.56), (false ? _GLF_FUZZED(-665.368) : _GLF_FUZZED(-12.56))), 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(2040.6673)), bool(false)))), (injectionSwitch)[1]), (false ? _GLF_FUZZED(vec2(9455.0869, 279.322)) : vec2(_GLF_IDENTITY(_GLF_FUZZED(-12.56), (false ? _GLF_FUZZED(-665.368) : _GLF_FUZZED(-12.56))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-50.74)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(_GLF_IDENTITY(mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-12.56), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_FUZZED(-12.56), max(_GLF_FUZZED(-12.56), _GLF_FUZZED(-12.56))), log(1.0), exp(sqrt(0.0)), 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_FUZZED(-12.56), max(_GLF_FUZZED(-12.56), _GLF_FUZZED(-12.56))), log(1.0), exp(sqrt(0.0)), 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), (true ? mat3(_GLF_IDENTITY(_GLF_FUZZED(-12.56), max(_GLF_FUZZED(-12.56), _GLF_FUZZED(-12.56))), log(1.0), exp(sqrt(0.0)), 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat3(6808.0093, -48.45, 226.080, -17.58, 627.513, 7.8, -40.58, -4.7, -6381.7360)))) : _GLF_FUZZED(mat3(-1.8, -84.69, -98.57, -0.0, 426.352, 1.0, 719.244, -8672.5959, 828.253)))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-50.74), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-50.74), (_GLF_FUZZED(-50.74)) / 1.0)))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mat2(1.0) * (mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-12.56), mix(float(_GLF_FUZZED(-12.56)), float(_GLF_FUZZED(vec2(8.7, -3.6).g)), bool(false))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-50.74)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.56, min(-12.56, _GLF_IDENTITY(-12.56, (true ? -12.56 : _GLF_FUZZED(8.5)))))), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.56, min(-12.56, _GLF_IDENTITY(-12.56, (true ? -12.56 : _GLF_FUZZED(8.5)))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.56, min(-12.56, _GLF_IDENTITY(-12.56, (true ? -12.56 : _GLF_FUZZED(8.5)))))), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.56, min(-12.56, _GLF_IDENTITY(-12.56, (true ? -12.56 : _GLF_FUZZED(8.5)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.56, min(-12.56, _GLF_IDENTITY(-12.56, (true ? -12.56 : _GLF_FUZZED(8.5)))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.56, min(-12.56, _GLF_IDENTITY(-12.56, (true ? -12.56 : _GLF_FUZZED(8.5)))))), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.56, min(-12.56, _GLF_IDENTITY(-12.56, (true ? -12.56 : _GLF_FUZZED(8.5)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.56, min(-12.56, _GLF_IDENTITY(-12.56, (true ? -12.56 : _GLF_FUZZED(8.5)))))), (injectionSwitch)[1]))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-50.74)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mat2(1.0) * (mix(vec2(_GLF_FUZZED(-12.56), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), sqrt(1.0), 0.0)), min(vec2(vec4(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), sqrt(1.0), 0.0)), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), sqrt(1.0), 0.0)), clamp(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), sqrt(1.0), 0.0), (vec4(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), sqrt(1.0), 0.0)) * mat4(1.0))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(max((injectionSwitch), (injectionSwitch)), (max((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0))), sqrt(1.0), 0.0), clamp(vec4(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(max((injectionSwitch), (injectionSwitch)), (max((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0))), sqrt(1.0), 0.0), vec4(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(max((injectionSwitch), (injectionSwitch)), (max((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0))), sqrt(1.0), 0.0), vec4(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(max((injectionSwitch), (injectionSwitch)), (max((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0))), sqrt(1.0), 0.0)))), vec2(vec4(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), sqrt(1.0), 0.0)))))))[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), clamp(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0)), mix(float(_GLF_FUZZED(-766.477)), float(_GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), bool(true)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), min(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), vec2(0.0, 0.0) + (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))))), clamp(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), vec2(0.0, 0.0) + (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), vec2(0.0, 0.0) + (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), vec2(0.0, 0.0) + (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), clamp(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0)), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0)), (false ? _GLF_FUZZED(9870.6355) : _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0)))), _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), min(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-50.74, (-50.74) + 0.0)))))) / vec2(1.0, 1.0)))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))) / 1u)], uint(2), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), max(4, 4)), 4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(284.027)), vec2(_GLF_FUZZED(-3.9), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), 0.0 + ((injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), 1.0, 1.0, 0.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0) : _GLF_FUZZED(mat3x2(-1.6)))))) : _GLF_IDENTITY(_GLF_FUZZED((vec2(-8.8, -694.072) + 23.53)), clamp(_GLF_FUZZED((vec2(-8.8, -694.072) + 23.53)), _GLF_IDENTITY(_GLF_FUZZED((vec2(-8.8, -694.072) + 23.53)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(3.0), (_GLF_FUZZED((_GLF_IDENTITY(vec2(-8.8, -694.072), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-8.8, -694.072))) + 23.53)))[1]), clamp(vec2(_GLF_FUZZED(3.0), (_GLF_FUZZED((_GLF_IDENTITY(vec2(-8.8, -694.072), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-8.8, -694.072))) + 23.53)))[1]), vec2(_GLF_FUZZED(3.0), (_GLF_FUZZED((_GLF_IDENTITY(vec2(-8.8, -694.072), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-8.8, -694.072))) + 23.53)))[1]), vec2(_GLF_FUZZED(3.0), (_GLF_FUZZED((_GLF_IDENTITY(vec2(-8.8, -694.072), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-8.8, -694.072))) + 23.53)))[1]))), vec2((_GLF_FUZZED((vec2(-8.8, -694.072) + 23.53)))[0], _GLF_FUZZED(-4322.9723)), bvec2(true, false))), _GLF_IDENTITY(_GLF_FUZZED((vec2(-8.8, -694.072) + 23.53)), vec2(vec2(_GLF_FUZZED((vec2(-8.8, -694.072) + 23.53))))))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.8, mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(13373u)), clamp(_GLF_FUZZED(float(13373u)), _GLF_FUZZED(float(13373u)), _GLF_FUZZED(float(13373u))))), float(-8.8), bool(true))), -694.072), (true ? vec2(_GLF_IDENTITY(-8.8, mix(float(_GLF_FUZZED(float(13373u))), float(-8.8), bool(true))), -694.072) : _GLF_FUZZED(acosh(vec2(-3.9, -2.6))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.8, mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(13373u, (true ? 13373u : _GLF_FUZZED((98198u - next_virtual_gid))))))), _GLF_IDENTITY(float(-8.8), min(float(-8.8), float(-8.8))), bool(true))), -694.072), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(-8.8, mix(float(_GLF_FUZZED(float(13373u))), float(-8.8), bool(true))), -694.072))) : _GLF_FUZZED(max(injectionSwitch, 3.1)))) + 23.53))))) - vec2(0.0, 0.0)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1.8)), min(float(_GLF_FUZZED(-1.8)), float(_GLF_FUZZED(-1.8)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-8.8, -694.072) + 23.53)))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-8.8, -694.072) + 23.53))))) - vec2(0.0, 0.0)).x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-8.8, -694.072) + 23.53)))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-8.8, -694.072) + 23.53))))) - vec2(0.0, 0.0)).x))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)), _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) / 1.0)) / _GLF_IDENTITY(1.0, 1.0 * (1.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))))) && true))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6335.8680)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY((bool(bvec4(false, false, false, true))) && true, false || (_GLF_IDENTITY((bool(bvec4(false, false, false, true))) && true, bool(bvec4((bool(bvec4(false, false, false, true))) && true, false, true, true)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-691.687, 9.8)) : injectionSwitch)).x > injectionSwitch.y) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true), false)))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), false || (! ((_GLF_DEAD(false))))))) && true, (_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))), false || (! ((_GLF_DEAD(false))))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), false || (! ((_GLF_DEAD(false))))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), false || (! _GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec3(((_GLF_DEAD(false))), true, true)))))))))) && true), _GLF_IDENTITY(false, true && (false)), false, false))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), true)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, sqrt(1.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)), (true ? _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, sqrt(1.0), 1.0, 0.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(vec4(vec3(0.0, 0.0, 0.0), 1.0)), max(_GLF_IDENTITY(vec3(vec4(vec3(0.0, 0.0, 0.0), 1.0)), vec3(mat3(vec3(vec4(vec3(0.0, 0.0, 0.0), 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), vec3(vec4(vec3(0.0, 0.0, 0.0), 1.0)))))), 0.0, 0.0)), clamp(vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), sqrt(0.0), 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), sqrt(0.0), 1.0), vec3(0.0, 0.0, 1.0)), mix(float(dot(vec3(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), sqrt(0.0), 1.0), vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-10.40)), bool(false))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4215.9036)), float(1.0), bool(true))), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)), vec2(mat4x2(injectionSwitch, sqrt(1.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)), vec2(mat4x2(injectionSwitch, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.9))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)))) : _GLF_FUZZED(vec2(-8396.9023, 5499.8603))))).y, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, sqrt(1.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)), (true ? _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, sqrt(1.0), 1.0, 0.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(vec4(vec3(0.0, 0.0, 0.0), 1.0)), max(_GLF_IDENTITY(vec3(vec4(vec3(0.0, 0.0, 0.0), 1.0)), vec3(mat3(vec3(vec4(vec3(0.0, 0.0, 0.0), 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), vec3(vec4(vec3(0.0, 0.0, 0.0), 1.0)))))), 0.0, 0.0)), clamp(vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), sqrt(0.0), 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), sqrt(0.0), 1.0), vec3(0.0, 0.0, 1.0)), mix(float(dot(vec3(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), sqrt(0.0), 1.0), vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-10.40)), bool(false))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4215.9036)), float(1.0), bool(true))), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)), vec2(mat4x2(injectionSwitch, sqrt(1.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)), vec2(mat4x2(injectionSwitch, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.9))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)))) : _GLF_FUZZED(vec2(-8396.9023, 5499.8603))))).y : _GLF_FUZZED(-44.20))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))) || ((injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
