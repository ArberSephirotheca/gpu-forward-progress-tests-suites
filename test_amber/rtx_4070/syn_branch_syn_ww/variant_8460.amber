#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, false || (true)), true, true))), bool(bvec3(! (injectionSwitch.x < injectionSwitch.y), false, false)))))))), true, true)))))), bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, true, true)), (bool(bvec4((false), false, true, true))) && true)), false || (! (false)))), true)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(3114.7151)), vec2(_GLF_FUZZED(-9.9), _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), bvec2(false, true))))) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat2x4((injectionSwitch)[1], 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), vec2(_GLF_FUZZED(-7330.9470), _GLF_FUZZED(-6.7)), bvec2(false, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.3)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(490.201, 1.6)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(490.201, 1.6)) : injectionSwitch, max(false ? _GLF_FUZZED(vec2(490.201, 1.6)) : injectionSwitch, false ? _GLF_FUZZED(vec2(490.201, 1.6)) : injectionSwitch)), false ? _GLF_FUZZED(vec2(490.201, 1.6)) : injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y, false, true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), _GLF_IDENTITY(true && (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.1), _GLF_FUZZED(-8.3)), bvec2(false, false))), vec2(1.0, 1.0) * (injectionSwitch))) * vec2(1.0, 1.0)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), min(exp(vec2(0.0, 0.0)), exp(vec2(0.0, 0.0))))))).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4943.4290) : 0.0)), max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(log(injectionSwitch.x)))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(234.158)), float(0.0), bool(true))), max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535)))) - 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)) > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), true)), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true))))), bool(bvec3((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.1), _GLF_FUZZED(-8.3)), bvec2(false, false))), vec2(1.0, 1.0) * (injectionSwitch))) * vec2(1.0, 1.0)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), min(exp(vec2(0.0, 0.0)), exp(vec2(0.0, 0.0))))))).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4943.4290) : 0.0)), max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(log(injectionSwitch.x)))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(234.158)), float(0.0), bool(true))), max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535)))) - 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)) > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), true)), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true))))), true, false)))), ! (! (true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535)))) - 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.7) : 0.0)))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))))), float(vec2(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(_GLF_IDENTITY(atan(757.535), max(atan(757.535), atan(757.535))))), max(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535)))) - 0.0), (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(_GLF_IDENTITY(atan(757.535), (atan(757.535)) / 1.0)))) - 0.0)) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, cos(0.0)), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0)), dot(vec4(1.0, 1.0, 1.0, cos(0.0)), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(822.780, -2.2)) : injectionSwitch)))).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(_GLF_IDENTITY(atan(757.535), clamp(_GLF_IDENTITY(atan(757.535), (atan(757.535)) - 0.0), atan(757.535), atan(757.535))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))))), round(length(normalize(vec2(1.0, 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0) * (injectionSwitch)).x, 1.0, 0.0), mix(vec3(_GLF_FUZZED(_GLF_IDENTITY(-4611.8893, min(-4611.8893, -4611.8893))), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[1], _GLF_FUZZED(-56.70)), vec3((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[0], _GLF_FUZZED(41.34), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[2]), bvec3(true, false, true)))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-4611.8893), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[1], _GLF_FUZZED(-56.70)), vec3((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[0], _GLF_FUZZED(41.34), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[2]), bvec3(true, false, true)))), (false ? _GLF_FUZZED(1.5) : float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-4611.8893), (vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0), max(vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0), vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0))) * (injectionSwitch)).x, 1.0, 0.0))[1], _GLF_FUZZED(-56.70)), vec3((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[0], _GLF_FUZZED(41.34), (vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0))[0], ((vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0))[0]) - length(vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0))[1]), vec2(_GLF_FUZZED(-6.3), _GLF_FUZZED((-827.383 - -6.4))), bvec2(false, false))) * (injectionSwitch)).x, 1.0, 0.0))[2]), bvec3(true, false, true)))))))), float(vec3(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-4611.8893), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), min((_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[1], _GLF_FUZZED(-56.70)), vec3((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[0], _GLF_FUZZED(41.34), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[2]), bvec3(true, false, true)))), (false ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-4611.8893), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, 1.0, 0.0))[1], _GLF_FUZZED(-56.70)), vec3((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[0], _GLF_FUZZED(41.34), _GLF_IDENTITY((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[2], _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_IDENTITY((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[2], 0.0 + ((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[2]))))), bvec3(true, false, true)))), max(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-4611.8893), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, 1.0, 0.0))[1], _GLF_FUZZED(-56.70)), vec3((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[0], _GLF_FUZZED(41.34), _GLF_IDENTITY((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[2], _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_IDENTITY((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[2], 0.0 + ((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[2]))))), bvec3(true, false, true)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-4611.8893), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, 1.0, 0.0))[1], _GLF_FUZZED(-56.70)), vec3((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[0], _GLF_FUZZED(41.34), _GLF_IDENTITY((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[2], _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_IDENTITY((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[2], 0.0 + ((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0) * (injectionSwitch)).x, 1.0, 0.0))[2]))))), bvec3(true, false, true)))))))))), 1.0, 1.0))))))) > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), true)), true && (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(_GLF_IDENTITY(float(_GLF_FUZZED(2367.1707)), max(float(_GLF_FUZZED(2367.1707)), _GLF_IDENTITY(float(_GLF_FUZZED(2367.1707)), min(float(_GLF_FUZZED(2367.1707)), _GLF_IDENTITY(float(_GLF_FUZZED(2367.1707)), mix(float(_GLF_FUZZED(6.7)), float(float(_GLF_FUZZED(2367.1707))), bool(true))))))), float((injectionSwitch.y)), bool(true))) / 1.0), false, true))))))))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(490.201, 1.6)) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, false, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, cos(0.0), 0.0, 0.0))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(1.3), ((injectionSwitch))[1]), vec2(_GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch))))[0], _GLF_FUZZED(392.629)), bvec2(true, false)))).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0))) : _GLF_FUZZED(atan(757.535)))) - 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.7))), 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0))) : _GLF_FUZZED(atan(757.535))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) * 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(143.713), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(34.74)), mix(vec2(_GLF_FUZZED(-0.7), (vec2((injectionSwitch)[0], _GLF_FUZZED(34.74)))[1]), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(34.74)))[0], _GLF_FUZZED((float(-76259)))), bvec2(true, false))), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(150.704, -4603.9337)))), injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).x)) > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), true)), _GLF_IDENTITY(true, true && (true)) && (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0))), false, true))))))))), bool(bvec3(((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(490.201, 1.6)) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, false, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), false, true), bvec3(bvec4(bvec3(! (true), false, true), false)))))))))))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(1.3), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(392.629)), bvec2(true, false)))).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))))) : _GLF_FUZZED(atan(757.535))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535)))) - 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(_GLF_IDENTITY(atan(757.535), mix(float(_GLF_FUZZED(vec3(-426.780, 4871.5885, 5.9).r)), float(atan(757.535)), bool(true))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)))), 0.0)) * 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(atan(757.535)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.2) : 1.0)), 1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(vec2(1.0, 1.0) * (injectionSwitch)), (vec2(vec2(1.0, 1.0) * (injectionSwitch))) / exp(vec2(0.0, 0.0)))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(vec2(vec2(1.0, 1.0) * (injectionSwitch)), (vec2(vec2(1.0, 1.0) * (injectionSwitch))) / exp(vec2(0.0, 0.0)))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(143.713), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(34.74)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(150.704, -4603.9337)))), injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).x)) > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), true)), true && (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false, true))))))))), true, true)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), false, true))))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), false || (bool(bvec3(true, false, true))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.8))) < injectionSwitch.y)), true))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true), false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ! (! (bool((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))) || false)))) || false))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), true), bvec2(bvec4(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true, true))))) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), true))))))))))), false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.2) : injectionSwitch.y))))))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) || false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u);
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(workgroup_size * workgroup_id, 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) + subgroup_local_id, max(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), uint(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u))) + subgroup_local_id, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) * 1.0))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0 + (injectionSwitch.y))))) * 1.0))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)), 0u + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u))))), _GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)), 0u + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u))))), 0u)), max(uint(uvec2(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)), 0u + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u))))), 0u)), _GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)), 0u + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u))))), 0u)), (uint(uvec2(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)), 0u + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u))))), 0u))) | 0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), max(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), 0u | (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(182678u) : next_virtual_gid))), (false ? _GLF_FUZZED(workgroup_base) : (next_virtual_gid)))) : _GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))))), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), (uint(1)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, int(int(1))))))), (true ? (uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, int(int(1))))))) : _GLF_FUZZED(subgroup_size)))))))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), (~ (~ _GLF_IDENTITY((64), ((64)) ^ 0))) ^ 0)), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2(injectionSwitch[0], _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.6))), 0.0)), 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   int i = _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) | 0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(false, true)), false || (_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(false, true)), true, true, false)), bool(bvec4(bool(bvec4(bool(bvec2(false, true)), true, true, false)), true, true, true)))))), false, false, false))), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false), bool(_GLF_IDENTITY(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), (! (false)) || _GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), true && (((false)))) || false)) || false), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), (! (false)) || false)))) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) | (4)), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, false, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))), true)), (_GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))) && _GLF_IDENTITY(true, true && (true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0 + (float(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)), false || (_GLF_IDENTITY(false, false || (false))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
