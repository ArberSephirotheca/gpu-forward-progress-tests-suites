#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec2(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(296.193)), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))) || false))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), true, true)))), true && (_GLF_IDENTITY(bool(bool(bvec2(false, false))), (_GLF_IDENTITY(bool(bool(bvec2(false, false))), false || (bool(bool(bvec2(false, false)))))) || false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), true), true, false)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), true), true, false)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), false))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0), (false ? _GLF_FUZZED(mat4x2(534.682, 28.43, 31.31, -9.3, -6651.8366, 1.0, -588.758, 392.494)) : mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0), (false ? _GLF_FUZZED(mat4x2(534.682, 28.43, 31.31, -9.3, -6651.8366, 1.0, -588.758, 392.494)) : mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0))))), vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0), (false ? _GLF_FUZZED(mat4x2(534.682, 28.43, 31.31, -9.3, -6651.8366, 1.0, -588.758, 392.494)) : mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0))))), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0), (false ? _GLF_FUZZED(mat4x2(534.682, 28.43, 31.31, -9.3, -6651.8366, 1.0, -588.758, 392.494)) : mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0), (false ? _GLF_FUZZED(mat4x2(534.682, 28.43, 31.31, -9.3, -6651.8366, 1.0, -588.758, 392.494)) : mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0), (false ? _GLF_FUZZED(mat4x2(534.682, 28.43, 31.31, -9.3, -6651.8366, 1.0, -588.758, 392.494)) : mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0), (false ? _GLF_FUZZED(mat4x2(534.682, 28.43, 31.31, -9.3, -6651.8366, 1.0, -588.758, 392.494)) : mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0), (false ? _GLF_FUZZED(mat4x2(534.682, 28.43, 31.31, -9.3, -6651.8366, 1.0, -588.758, 392.494)) : mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0), (false ? _GLF_FUZZED(mat4x2(534.682, 28.43, 31.31, -9.3, -6651.8366, 1.0, -588.758, 392.494)) : mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0))))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0), (false ? _GLF_FUZZED(mat4x2(534.682, 28.43, 31.31, -9.3, -6651.8366, 1.0, -588.758, 392.494)) : mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0))))))).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackHalf2x16(workgroup_size)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackHalf2x16(workgroup_size)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true))) ? _GLF_FUZZED(unpackHalf2x16(workgroup_size)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))), true, false, false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), true, true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))).x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(334.156)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(334.156)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(334.156)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(334.156)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false))))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * abs(vec2(1.0, 1.0))).y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.2)), bool(false))))), true && (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.2)), bool(false))))), ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((7.4 + 40.48))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-118.591) : injectionSwitch.y)))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.2)), bool(false)))))) || false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))) && (false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) * _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.2) : 1.0)), determinant(mat2(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0, cos(abs(0.0)), 0.0, 1.0, 0.0)))))) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec3(workgroup_id, 1u, 0u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_local_id))), 1u, 0u)), (uint(uvec3(workgroup_id, 1u, 0u))) | (uint(uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), 1u, 0u))))) | (uint(uvec3(workgroup_id, 1u, 0u)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(workgroup_base))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), _GLF_IDENTITY((uint(workgroup_base)) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), ((uint(workgroup_base)) / 1u) - (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u))))))), (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), (_GLF_IDENTITY(uint(workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY(uint(workgroup_base), min(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base)))), uint(workgroup_base)))))), max((_GLF_IDENTITY(uint(workgroup_base), min(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base)))), uint(workgroup_base)))))), (_GLF_IDENTITY(uint(workgroup_base), min(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base)))), uint(workgroup_base)))))))) / 1u)) >> 0u), 1u, 0u, 0u), uvec4(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u))) : _GLF_FUZZED(workgroup_id))), 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base, workgroup_base))), (uint(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) : _GLF_FUZZED(num_workgroup))))) / 1u), 1u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / _GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u)) >> 0u), 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base, workgroup_base))), (uint(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) : _GLF_FUZZED(num_workgroup))))) / 1u), 1u, 0u, 0u))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), (_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u)) >> 0u), 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base, workgroup_base))), (uint(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) : _GLF_FUZZED(num_workgroup))))) / 1u), 1u, 0u, 0u)))))))))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), _GLF_IDENTITY((uint(workgroup_base)) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), ((uint(workgroup_base)) / 1u) - (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u))))))), (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), (_GLF_IDENTITY(uint(workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY(uint(workgroup_base), min(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base)))), uint(workgroup_base)))))), max((_GLF_IDENTITY(uint(workgroup_base), min(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base)))), uint(workgroup_base)))))), (_GLF_IDENTITY(uint(workgroup_base), min(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base)))), uint(workgroup_base)))))))) / 1u)) >> 0u), 1u, 0u, 0u), uvec4(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u))) : _GLF_FUZZED(workgroup_id))), 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base, workgroup_base))), (uint(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) : _GLF_FUZZED(num_workgroup))))) / 1u), 1u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / _GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u)) >> 0u), 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base, workgroup_base))), (uint(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) : _GLF_FUZZED(num_workgroup))))) / 1u), 1u, 0u, 0u))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), (_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u)) >> 0u), 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base, workgroup_base))), (uint(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) : _GLF_FUZZED(num_workgroup))))) / 1u), 1u, 0u, 0u)))))))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), _GLF_IDENTITY((uint(workgroup_base)) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), ((uint(workgroup_base)) / 1u) - (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), _GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u))))))), (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), (_GLF_IDENTITY(uint(workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY(uint(workgroup_base), min(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base)))), uint(workgroup_base)))))), max((_GLF_IDENTITY(uint(workgroup_base), min(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base)))), uint(workgroup_base)))))), (_GLF_IDENTITY(uint(workgroup_base), min(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base)))), uint(workgroup_base)))))))) / 1u)) >> 0u), 1u, 0u, 0u), uvec4(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u))) : _GLF_FUZZED(workgroup_id))), 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base, workgroup_base))), (uint(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) : _GLF_FUZZED(num_workgroup))))) / 1u), 1u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / _GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u)) >> 0u), 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base, workgroup_base))), (uint(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) : _GLF_FUZZED(num_workgroup))))) / 1u), 1u, 0u, 0u))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), (_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u)) >> 0u), 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_base, workgroup_base))), (uint(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) : _GLF_FUZZED(num_workgroup))))) / 1u), 1u, 0u, 0u)))))))))) - 0u))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))), (false ? _GLF_FUZZED(166469u) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) + (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY((false ? _GLF_FUZZED(166469u) : subgroup_id), clamp((false ? _GLF_FUZZED(166469u) : subgroup_id), (false ? _GLF_FUZZED(166469u) : subgroup_id), _GLF_IDENTITY((false ? _GLF_FUZZED(166469u) : subgroup_id), _GLF_IDENTITY((true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY((true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)), ((true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id))) | (_GLF_IDENTITY((true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)), (true ? (true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)) : _GLF_FUZZED(workgroup_size)))))) << 0u, 0u ^ ((_GLF_IDENTITY((true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)), ((true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id))) | (_GLF_IDENTITY((true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)), (true ? (true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)) : _GLF_FUZZED(workgroup_size)))))) << 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(166469u) : subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)), max(_GLF_IDENTITY(max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)), (false ? _GLF_FUZZED(uint(-87622)) : max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)))), _GLF_IDENTITY(max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)), clamp(max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)), max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)), max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)))))))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))), (false ? _GLF_FUZZED(166469u) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) + (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(166469u) : subgroup_id), max(_GLF_IDENTITY((false ? _GLF_FUZZED(166469u) : subgroup_id), ((false ? _GLF_FUZZED(166469u) : subgroup_id)) << 0u), (false ? _GLF_FUZZED(166469u) : subgroup_id))), clamp((false ? _GLF_FUZZED(166469u) : subgroup_id), (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id))), _GLF_IDENTITY((false ? _GLF_FUZZED(166469u) : subgroup_id), _GLF_IDENTITY((true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)), ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) ? (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id)), _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))))) : _GLF_FUZZED(subgroup_local_id))) | (_GLF_IDENTITY((true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)), (true ? (true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)) : _GLF_FUZZED(workgroup_size)))))) << 0u)))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(166469u) : subgroup_id))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)), max(_GLF_IDENTITY(max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)), (false ? _GLF_FUZZED(uint(-87622)) : max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)))), _GLF_IDENTITY(max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(166469u) : subgroup_id), clamp((false ? _GLF_FUZZED(166469u) : subgroup_id), _GLF_IDENTITY((false ? _GLF_FUZZED(166469u) : subgroup_id), uint(uvec2((false ? _GLF_FUZZED(166469u) : subgroup_id), 0u))), _GLF_IDENTITY((false ? _GLF_FUZZED(166469u) : subgroup_id), 0u | ((false ? _GLF_FUZZED(166469u) : subgroup_id))))) >> 0u)), _GLF_IDENTITY(clamp(max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)), max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)), max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u))), (clamp(max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)), max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, (false ? _GLF_FUZZED(166469u) : subgroup_id) >> 0u)), max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(166469u) : _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((false ? _GLF_FUZZED(166469u) : _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id))), (false ? _GLF_FUZZED(subgroup_size) : (false ? _GLF_FUZZED(166469u) : _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id)))))), (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(166469u) : _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id))), (false ? _GLF_FUZZED(subgroup_size) : (false ? _GLF_FUZZED(166469u) : _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id))))))) | 0u))) >> 0u)))) / 1u)))))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), max(subgroup_id, _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), subgroup_id)))), (false ? _GLF_FUZZED(166469u) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) + (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(166469u) : subgroup_id), max(_GLF_IDENTITY((false ? _GLF_FUZZED(166469u) : subgroup_id), ((false ? _GLF_FUZZED(166469u) : _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) << 0u), (false ? _GLF_FUZZED(166469u) : subgroup_id))), clamp((false ? _GLF_FUZZED(166469u) : subgroup_id), (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(min(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id), min(min(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id), min(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id))))), _GLF_IDENTITY((false ? _GLF_FUZZED(166469u) : subgroup_id), _GLF_IDENTITY((true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) | 1u), 1u, 1u))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, _GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)), ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) ? (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))))), false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id)), _GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))))) : _GLF_FUZZED(subgroup_local_id))) | (_GLF_IDENTITY((true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)), (true ? (true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, min(_GLF_IDENTITY(false ? _GLF_FUZZED(166469u) : subgroup_id, max(false ? _GLF_FUZZED(166469u) : subgroup_id, false ? _GLF_FUZZED(166469u) : subgroup_id)), false ? _GLF_FUZZED(166469u) : subgroup_id))) : _GLF_FUZZED(subgroup_local_id)) : _GLF_FUZZED(workgroup_size)))))) << 0u)))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(166469u) : subgroup_id)))))))) / _GLF_IDENTITY((1u ^ 0u), min((1u ^ 0u), (1u ^ 0u)))) * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.6)), float(0.0), bool(true)))) * 1.0), injectionSwitch.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_FUZZED(vec2(-1.7, -74.04)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), 0.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat4x2(injectionSwitch.y, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u ^ (min(virtual_gid, virtual_gid))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), (_GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), min(min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid)))) << 0u))) * 1u)], _GLF_IDENTITY(uint(2), uint(uvec4(uint(2), 1u, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.2)), float(0.0), bool(true))), injectionSwitch.x))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
