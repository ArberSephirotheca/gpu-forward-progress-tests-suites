#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)).x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(91.77, -0.5)))))[1]), max(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat4x2(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 0.0, 1.0, 1.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0))), ((injectionSwitch)) / sqrt(vec2(1.0, 1.0)))[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))), false))))), false))).x, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))))]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0 | (1)))) / 1)))]), _GLF_IDENTITY(vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), clamp(vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)))), bvec2(false, false))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false)), (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false)), mat2(1.0) * (mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false))))) / vec2(1.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false))).x)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3323.1510)), float(0.0), bool(true))), 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9.0) : dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) >> 0)))], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), ((_GLF_IDENTITY(1, 0 | (1)))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), max((_GLF_IDENTITY(1, 0 | (1))), (_GLF_IDENTITY(1, 0 | (1))))))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))))], clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))))], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))))], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))))]))), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))).x)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 1.0))))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4045.9516) : 0.0)))), 0.0, _GLF_IDENTITY(exp(0.0), min(exp(0.0), _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(-3.4) : exp(0.0))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9.0) : dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9.0) : dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), (true ? _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9.0) : dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))) : _GLF_FUZZED(dot(vec3(-7.4, -5450.3802, -796.470), vec3(7.7, 101.953, 2909.6342))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9.0) : dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))))), 1.0, 1.0, 0.0, 0.0)), (float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1, 0 | (1))), 0, 1, 1)), min(int(ivec4((_GLF_IDENTITY(1, 0 | (1))), 0, 1, 1)), int(ivec4((_GLF_IDENTITY(1, 0 | (1))), 0, 1, 1))))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).x)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9.0) : dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, 0.0, 0.0))) / 1.0), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-69427, 70588, -66089, 1061).w) : 1)), 0 | (1)))) / 1)))]), vec2(_GLF_FUZZED(_GLF_IDENTITY(723.084, max(723.084, 723.084))), _GLF_FUZZED(12.04)), bvec2(false, false))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, 0)) | (ivec4(0, 1, 1, 0)))) << ivec4(0, 0, 0, 0)))) | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1))), 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, sqrt(1.0))))[0], (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (_GLF_IDENTITY(1, 0 | (1)))) / 1)))]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false))).x)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), exp(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9.0) : dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), 0.0 + (dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)))), dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.5) : 1.0)), 1.0)))), 0.0, 0.0, exp(0.0), 1.0))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.9, -4.9)) : injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false)), clamp(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false))) / vec2(1.0, 1.0)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false)), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(723.084, clamp(_GLF_IDENTITY(723.084, (_GLF_IDENTITY(723.084, max(723.084, 723.084))) - 0.0), 723.084, 723.084))), _GLF_IDENTITY(_GLF_FUZZED(12.04), 1.0 * (_GLF_FUZZED(12.04)))), bvec2(false, false)), vec2(_GLF_IDENTITY(mat2(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-7.4), (vec2((injectionSwitch)[0], (injectionSwitch)[1]))[1]), vec2((vec2((injectionSwitch)[0], (injectionSwitch)[1]))[0], _GLF_FUZZED(30.62)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), bvec2(false, false)), 1.0, 0.0), _GLF_IDENTITY((mat2(mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)], (injectionSwitch)[1]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), 1.0, 0.0)) * mat2(1.0), transpose(transpose((mat2(mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)], (injectionSwitch)[1]), vec2(_GLF_FUZZED(723.084), _GLF_FUZZED(12.04)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), 1.0, 0.0)) * mat2(1.0)))))))))).x)) < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y))), true && (false)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.5)), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5579.0481)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5579.0481)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5579.0481)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5579.0481)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))))))), true, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5579.0481)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5579.0481)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5579.0481)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))))))), true, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), workgroup_size)) * workgroup_id, _GLF_IDENTITY(max(workgroup_size * workgroup_id, workgroup_size * workgroup_id), (max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)) | (max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u) * workgroup_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), ~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))))))), 0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(max(153338u, workgroup_id)) : workgroup_id))))))));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) ^ 0u) + subgroup_id * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id)))) | (_GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u)), (false ? _GLF_FUZZED(virtual_gid) : clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u))))), (_GLF_FUZZED(workgroup_id)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(workgroup_id), 0u, 0u, 1u), ~ (~ (uvec4(_GLF_FUZZED(workgroup_id), 0u, 0u, 1u))))))) | (_GLF_FUZZED(workgroup_id))), clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u))), (_GLF_FUZZED(workgroup_id)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(workgroup_id), 0u, 0u, 1u), ~ (~ (uvec4(_GLF_FUZZED(workgroup_id), 0u, 0u, 1u))))))) | (_GLF_FUZZED(workgroup_id))), clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u))), (_GLF_FUZZED(workgroup_id)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(workgroup_id), 0u, 0u, 1u), ~ (~ (uvec4(_GLF_FUZZED(workgroup_id), 0u, 0u, 1u))))))) | (_GLF_FUZZED(workgroup_id))), clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u))), (_GLF_FUZZED(workgroup_id)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))))))))))) >> 0u)) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (1u ^ 1u) ^ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(0u, (0u) - 0u) | (_GLF_FUZZED(workgroup_id))))), (_GLF_FUZZED(workgroup_id)) >> 0u))) : workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), uint(uvec2((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), 1u))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), 1u * ((~ (subgroup_id)))))), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), ~ (~ (subgroup_id)))), 1u))))) / (_GLF_IDENTITY(1u, 0u ^ (1u)) ^ 0u)) * subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (65912u & 0u), (199688u & 0u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u)))))) + 1 : _GLF_FUZZED(subgroup_size)))), ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1)) | 0u) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), ((_GLF_FUZZED(workgroup_id))) | ((_GLF_FUZZED(workgroup_id)))) | (_GLF_FUZZED(workgroup_id)), 0u | (_GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), ((_GLF_FUZZED(workgroup_id))) | ((_GLF_FUZZED(workgroup_id)))) | (_GLF_FUZZED(workgroup_id))))))), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id)))) >> 0u))) : workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), ((subgroup_id) | (subgroup_id)) >> 0u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / (1u ^ 0u)) * subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), max(_GLF_IDENTITY(max((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), min(subgroup_size, subgroup_size))), (_GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) | (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))) + 0u), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))), ~ (~ (max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (0 << _GLF_IDENTITY(int(3), int(3))), int(ivec3((1) ^ (0 << _GLF_IDENTITY(int(3), int(3))), 1, 1))))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) || false))))))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), _GLF_IDENTITY(0, (0) + 0) ^ ((1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), _GLF_IDENTITY(0, (0) + 0) ^ ((1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), _GLF_IDENTITY(0, (0) + 0) ^ ((1)))), min(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), _GLF_IDENTITY(0, (0) + 0) ^ ((1)))), _GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), _GLF_IDENTITY(0, (0) + 0) ^ ((1)))))), _GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), _GLF_IDENTITY(0, (0) + 0) ^ ((1)))))), _GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), _GLF_IDENTITY(0, (0) + 0) ^ ((1))))))), _GLF_IDENTITY(4, int(_GLF_ONE(_GLF_IDENTITY(1.0, log(1.0) + (1.0)), injectionSwitch.y)) * (4)), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).x < injectionSwitch.y))), true)), (bool(bvec2((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x))), mix(vec2((vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x))))[0], _GLF_FUZZED(12.12)), vec2(_GLF_FUZZED(-1.7), (vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), bvec2(false, true))))).x < injectionSwitch.y))), true))) || false)) && true)))), true, true))) ? injectionSwitch.x : _GLF_FUZZED(4.8))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)), false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), false, false)))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, false)))), false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), true))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 1)), (false ? _GLF_FUZZED(-97281) : int(ivec3(2, 1, 1)))))), _GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), (64) + 0), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))) && true))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
