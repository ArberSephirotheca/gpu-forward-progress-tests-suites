#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 1.0), (mat2(0.0, 0.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(cos(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) * 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (true ? dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)) : _GLF_FUZZED(56.89)))) * sqrt(1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), float(mat2x3(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), 1.0, 1.0, 1.0)))))), 0.0, 0.0), (vec3(cos(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 1.0)))))), 0.0, 0.0)) + vec3(0.0, 0.0, 0.0)), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), float(mat2x4(dot(vec3(cos(0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), 1.0))))) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3201.7150) : 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0)), (true ? mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)))), (_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))) / 1.0)) : _GLF_FUZZED(mat3x4(11.39, -7.4, -6.6, 56.93, 47.14, 210.370, -2.4, 70.02, -5135.3201, -6.2, 7213.3605, -79.71))))), _GLF_IDENTITY(float(mat2(float(_GLF_IDENTITY(mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(2.7))), 0.0)), dot(_GLF_IDENTITY(vec3(1.0, sqrt(0.0), 1.0), min(vec3(1.0, sqrt(0.0), 1.0), vec3(1.0, sqrt(0.0), 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(_GLF_IDENTITY(mat3(dot(vec2(0.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))), vec2(0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0), mat3(1.0) * (mat3(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0))))), dot(vec2(0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), 0.0, 0.0, sin(0.0)), (true ? mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-71.70))), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), float(_GLF_FUZZED((1.5 * -7.2))), bool(false))))), 0.0, 0.0, sin(0.0)) : _GLF_FUZZED(mat3x4(11.39, -7.4, -6.6, _GLF_IDENTITY(56.93, 1.0 * (_GLF_IDENTITY(56.93, min(_GLF_IDENTITY(56.93, (56.93) - _GLF_ZERO(0.0, injectionSwitch.x)), 56.93)))), 47.14, 210.370, _GLF_IDENTITY(-2.4, (true ? _GLF_IDENTITY(-2.4, min(-2.4, _GLF_IDENTITY(-2.4, clamp(-2.4, -2.4, -2.4)))) : _GLF_FUZZED(3.7))), 70.02, -5135.3201, -6.2, 7213.3605, -79.71))))), 1.0, 1.0, 0.0)), 1.0 * (float(mat2(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY(max(vec2(0.0, 1.0), vec2(0.0, 1.0)), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(max(vec2(0.0, 1.0), vec2(0.0, 1.0)), (max(vec2(0.0, 1.0), vec2(0.0, 1.0))) / vec2(1.0, 1.0)))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0)), (true ? mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0)) : _GLF_FUZZED(mat3x4(11.39, -7.4, -6.6, 56.93, 47.14, 210.370, -2.4, 70.02, -5135.3201, -6.2, 7213.3605, -79.71))))), 1.0, 1.0, 0.0)))))), 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(cos(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 1.0)))))), 0.0, 0.0), (vec3(cos(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(vec3(vec3(1.0, 0.0, 1.0)), (true ? vec3(vec3(1.0, 0.0, 1.0)) : _GLF_FUZZED(vec3(352.024, -2.5, -6.2))))))), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))) - 0.0), 1.0, 1.0, 1.0)))))), 0.0, 0.0)) + vec3(0.0, 0.0, 0.0)), vec3(0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), float(mat2x4(dot(vec3(cos(0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), 1.0))))) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3201.7150) : 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0)), (true ? mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0))), mix(float(float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)))), float(_GLF_FUZZED(4.2)), bool(false))))), 1.0), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, sqrt(0.0), 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-8.5, 90.25, -0.9)) : vec3(1.0, sqrt(0.0), 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-657.154)), bool(false)))), float(_GLF_FUZZED(-6.3)), bool(false))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY((_GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), float(mat4x2(sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), sin(0.0)))), ((_GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), float(mat4x2(sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), sin(0.0))))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) / 1.0)) : _GLF_FUZZED(mat3x4(11.39, -7.4, -6.6, 56.93, 47.14, 210.370, -2.4, 70.02, -5135.3201, -6.2, 7213.3605, -79.71))))), _GLF_IDENTITY(float(mat2(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-80.49)), float(0.0), bool(true))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, sqrt(0.0), 1.0), (vec3(1.0, sqrt(0.0), 1.0)) + vec3(0.0, 0.0, 0.0)), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(_GLF_IDENTITY(mat3(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0), mat3(1.0) * (mat3(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0))))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), clamp(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))))), 0.0, 0.0, sin(0.0)), (true ? mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-26.02)), bool(false))))), 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-71.70))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0)) : _GLF_FUZZED(mat3x4(11.39, -7.4, -6.6, _GLF_IDENTITY(56.93, 1.0 * (_GLF_IDENTITY(56.93, min(56.93, 56.93)))), 47.14, 210.370, _GLF_IDENTITY(-2.4, (true ? _GLF_IDENTITY(-2.4, _GLF_IDENTITY(min(-2.4, _GLF_IDENTITY(-2.4, clamp(-2.4, -2.4, -2.4))), (false ? _GLF_FUZZED(faceforward(-7.4, 88.01, -805.570)) : min(-2.4, _GLF_IDENTITY(-2.4, clamp(-2.4, -2.4, -2.4)))))) : _GLF_FUZZED(3.7))), 70.02, -5135.3201, -6.2, 7213.3605, -79.71))))), 1.0, 1.0, 0.0)), 1.0 * (float(mat2(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(-1.2)), bool(false))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0)), (true ? mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0)) : _GLF_FUZZED(mat3x4(11.39, -7.4, _GLF_IDENTITY(-6.6, min(-6.6, -6.6)), 56.93, 47.14, 210.370, -2.4, 70.02, -5135.3201, -6.2, 7213.3605, -79.71))))), 1.0, 1.0, 0.0)))))), 0.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(vec2(min(injectionSwitch, injectionSwitch)))), vec2(mat3x4(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(cos(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 1.0)))))), 0.0, 0.0), (vec3(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 1.0)))))), 1.0 * (cos(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, round(length(normalize(1.0))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, abs(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), sqrt(1.0), determinant(mat4(abs(0.0), 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0)), 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 1.0)))))))), 0.0, 0.0)) + vec3(0.0, 0.0, 0.0)), vec3(0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(cos(0.0), float(float(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0)))))), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), float(mat2x4(dot(vec3(cos(0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)))), 1.0))))) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(3201.7150, (true ? 3201.7150 : _GLF_FUZZED(-9.9)))) : 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, sin(0.0)), (true ? mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)), 1.0), vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.8))), 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec2(0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))) / 1.0)) : _GLF_FUZZED(mat3x4(11.39, -7.4, -6.6, 56.93, 47.14, 210.370, -2.4, 70.02, -5135.3201, -6.2, 7213.3605, -79.71))))), _GLF_IDENTITY(float(mat2(float(_GLF_IDENTITY(mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(_GLF_IDENTITY(mat3(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0), mat3(1.0) * (mat3(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0))))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat3(1374.5352, -8.3, -2.4, -6919.0317, 810.048, 28.00, 8.3, -776.870, 9.8) , -25.39)) : 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), 0.0, 0.0, sin(0.0)), (true ? mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-71.70, min(-71.70, _GLF_IDENTITY(-71.70, 0.0 + (-71.70))))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.4)), float(0.0), bool(true))))) : _GLF_FUZZED(mat3x4(11.39, -7.4, -6.6, _GLF_IDENTITY(56.93, 1.0 * (_GLF_IDENTITY(56.93, min(56.93, 56.93)))), 47.14, 210.370, _GLF_IDENTITY(-2.4, (true ? _GLF_IDENTITY(-2.4, min(-2.4, _GLF_IDENTITY(-2.4, clamp(-2.4, -2.4, -2.4)))) : _GLF_FUZZED(3.7))), 70.02, -5135.3201, -6.2, 7213.3605, -79.71))))), 1.0, 1.0, 0.0)), 1.0 * (float(mat2(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-18.19)), bool(false))), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0)), (true ? mat3x4(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), (_GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), 0.0 + (dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))))) + abs(0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0)) : _GLF_FUZZED(mat3x4(11.39, -7.4, -6.6, 56.93, 47.14, 210.370, -2.4, 70.02, -5135.3201, -6.2, 7213.3605, -79.71))))), 1.0, 1.0, 0.0)))))), 0.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(cos(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 1.0)))))), 0.0, 0.0), (vec3(cos(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 1.0)))))), 0.0, 0.0)) + vec3(0.0, 0.0, 0.0)), vec3(0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), float(mat2x4(dot(vec3(cos(0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), 1.0))))) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3201.7150) : 0.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (false ? _GLF_FUZZED(3201.7150) : 0.0)) : _GLF_FUZZED(8.1))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0)), (true ? mat3x4(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(6.2)), bool(false)))) / 1.0)), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))) / 1.0)) : _GLF_FUZZED(mat3x4(11.39, -7.4, -6.6, 56.93, 47.14, 210.370, -2.4, 70.02, -5135.3201, -6.2, 7213.3605, -79.71))))), _GLF_IDENTITY(float(mat2(float(_GLF_IDENTITY(mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6222.5202) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(1.1) : dot(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7801.4148)), bool(false))), 1.0), vec2(0.0, 1.0)))), float(_GLF_IDENTITY(mat3(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0), mat3(1.0) * (mat3(dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, float(float(1.0)))), vec2(_GLF_IDENTITY(vec2(vec2(0.0, _GLF_IDENTITY(1.0, float(float(1.0))))), vec2(1.0, 1.0) * (vec2(vec2(0.0, _GLF_IDENTITY(1.0, float(float(1.0))))))))), vec2(0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0))))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) : _GLF_FUZZED(log2(-1.6)))), min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))))), 0.0, 0.0, sin(0.0)), (true ? mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-71.70, (_GLF_IDENTITY(-71.70, clamp(-71.70, -71.70, -71.70))) / 1.0)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0)) : _GLF_FUZZED(mat3x4(11.39, -7.4, -6.6, _GLF_IDENTITY(56.93, 1.0 * (_GLF_IDENTITY(56.93, min(56.93, 56.93)))), 47.14, 210.370, _GLF_IDENTITY(-2.4, (true ? _GLF_IDENTITY(-2.4, min(-2.4, _GLF_IDENTITY(-2.4, clamp(-2.4, -2.4, -2.4)))) : _GLF_FUZZED(3.7))), 70.02, -5135.3201, -6.2, 7213.3605, -79.71))))), 1.0, 1.0, 0.0)), 1.0 * (float(mat2(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), mix(float(_GLF_FUZZED(vec3(-45.93, 9.7, -4.2).b)), float(clamp(0.0, 0.0, 0.0)), bool(true)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), clamp(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)))))), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0)))), dot(vec2(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.2)))), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(step(5.1, -3937.4137)))), 1.0, length(vec2(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0))), sin(0.0)), (true ? mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) - vec3(0.0, 0.0, 0.0))), dot(_GLF_IDENTITY(vec3(1.0, sqrt(0.0), 1.0), max(vec3(1.0, sqrt(0.0), 1.0), _GLF_IDENTITY(vec3(1.0, sqrt(0.0), 1.0), max(vec3(1.0, sqrt(0.0), 1.0), _GLF_IDENTITY(vec3(1.0, sqrt(0.0), 1.0), mix(vec3(_GLF_FUZZED(-684.103), (vec3(1.0, sqrt(0.0), 1.0))[1], (vec3(1.0, sqrt(0.0), 1.0))[2]), vec3((vec3(1.0, sqrt(0.0), 1.0))[0], _GLF_FUZZED(1.7), _GLF_FUZZED(-1937.3523)), bvec3(true, false, false))))))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), float(mat3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, sin(0.0)) : _GLF_FUZZED(mat3x4(11.39, -7.4, _GLF_IDENTITY(-6.6, 0.0 + (-6.6)), 56.93, 47.14, 210.370, -2.4, 70.02, -5135.3201, -6.2, 7213.3605, -79.71))))), 1.0, 1.0, 0.0)))))), 0.0)).y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))))) * vec2(1.0, 1.0)).y)))))))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-3506.9670 * 3.3))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED((-3506.9670 * 3.3))), float(injectionSwitch.y), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8943.7995)), bool(false))), injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.5, 98.89)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), vec2(1.0, 1.0) * (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), (false ? _GLF_FUZZED(vec3(9.9, 6.4, 4.8).yx) : vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))), clamp(min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), (false ? _GLF_FUZZED(vec3(9.9, 6.4, 4.8).yx) : vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))), _GLF_IDENTITY(min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), (false ? _GLF_FUZZED(vec3(9.9, 6.4, 4.8).yx) : vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))), (min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), (false ? _GLF_FUZZED(vec3(9.9, 6.4, 4.8).yx) : vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))))) / vec2(1.0, 1.0)), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), (false ? _GLF_FUZZED(vec3(9.9, 6.4, 4.8).yx) : vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))))))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(false, true)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0)))).y))))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) && true)))));
           barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > injectionSwitch.y))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(-68.89))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), _GLF_IDENTITY(_GLF_FUZZED((vec4(-9.1, 26.19, -1.3, -719.502) / vec4(-69.23, 7055.6635, 1.9, 6167.2294)).w), (_GLF_FUZZED((vec4(-9.1, 26.19, _GLF_IDENTITY(-1.3, max(_GLF_IDENTITY(-1.3, (true ? -1.3 : _GLF_FUZZED(46.11))), -1.3)), -719.502) / vec4(-69.23, 7055.6635, 1.9, 6167.2294)).w)) * 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0))))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89), (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89)) * 1.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), float(mat2x3(1.0 * (1.0), length(sin(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0))))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x)))) : _GLF_FUZZED(-68.89))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))))) / vec2(1.0, 1.0)))).y, false, false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(-68.89, (-68.89) * 1.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(-68.89, (-68.89) * 1.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(-68.89, (-68.89) * 1.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-94.74))) + (injectionSwitch.x)) : _GLF_FUZZED(-68.89))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-68.89, (-68.89) * 1.0), (_GLF_IDENTITY(-68.89, (-68.89) * 1.0)) - 0.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))) * mat2(1.0))).y))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))))) / vec2(1.0, 1.0)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-68.89, min(-68.89, -68.89)), (-68.89) * 1.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))), max(_GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))), min((mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))))), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(-68.89, (-68.89) * 1.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (_GLF_IDENTITY(0.0 + (injectionSwitch.x), float(mat4(_GLF_IDENTITY(0.0 + (injectionSwitch.x), float(mat3x2(0.0 + (injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) * 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(-68.89, (-68.89) * 1.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y))))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch))) / vec2(1.0, 1.0)))).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(36.42, 1933.5649))))) * abs(1.0)), 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89)), clamp((true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false))))) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89)), (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))) + (1.0))) * (injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) : _GLF_FUZZED(mat2(-3.9, -1154.1729, 9368.3361, 166.611)))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0), clamp((_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) : _GLF_FUZZED(mat2(-3.9, -1154.1729, 9368.3361, 166.611)))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) : _GLF_FUZZED(mat2(-3.9, -1154.1729, 9368.3361, 166.611)))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) : _GLF_FUZZED(mat2(-3.9, -1154.1729, 9368.3361, 166.611)))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))))).y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch))) / vec2(1.0, 1.0)))).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(36.42, 1933.5649))))) * abs(1.0)), 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89)), clamp((true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) : _GLF_FUZZED(-68.89)), (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-68.89))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))) + (1.0))) * (injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) : _GLF_FUZZED(_GLF_IDENTITY(mat2(-3.9, -1154.1729, 9368.3361, 166.611), (true ? mat2(-3.9, -1154.1729, 9368.3361, 166.611) : _GLF_FUZZED(mat2(-7501.8831, -74.53, 5876.2933, -88.71))))))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0), clamp((_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) * (1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) : _GLF_FUZZED(mat2(-3.9, -1154.1729, 9368.3361, 166.611)))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) : _GLF_FUZZED(mat2(-3.9, -1154.1729, 9368.3361, 166.611)))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), 1.0 * ((1.0))))) : _GLF_FUZZED(mat2(-3.9, -1154.1729, 9368.3361, 166.611)))) * (mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))))).y)))))))))) || false)));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))));
  }
 else
  {
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) || false)))))), float(injectionSwitch.x), bool(true)))))) - 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, 0.0 + (0.0)) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6.3), max(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(5.0))), _GLF_FUZZED(6.3))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true)))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true)))))))) - 0.0)), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, 0.0 + (0.0)) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6.3), max(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(5.0))), _GLF_FUZZED(6.3))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6.3), 1.0 * (_GLF_FUZZED(6.3))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true)))), max((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6.3), 1.0 * (_GLF_FUZZED(6.3))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6.3), 1.0 * (_GLF_FUZZED(6.3))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true)))))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(normalize(injectionSwitch)) : injectionSwitch)).y)))))), float(injectionSwitch.x), bool(true)))))))) - 0.0))) * exp(0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))) + ((_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, 0.0 + (0.0)) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6.3), max(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(5.0))), _GLF_FUZZED(6.3))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true)))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true)))))))) - 0.0)), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, 0.0 + (0.0)) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6.3), max(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(5.0))), _GLF_FUZZED(6.3))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6.3), 1.0 * (_GLF_FUZZED(6.3))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true)))), max((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6.3), 1.0 * (_GLF_FUZZED(6.3))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6.3), 1.0 * (_GLF_FUZZED(6.3))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true)))))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(normalize(injectionSwitch)) : injectionSwitch)).y)))))), float(injectionSwitch.x), bool(true)))))))) - 0.0))) * exp(0.0))))) - 0.0)), min(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(injectionSwitch.x), bool(true)))))))) - 0.0))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), _GLF_IDENTITY(float(_GLF_FUZZED(6.3)), float(vec3(_GLF_IDENTITY(float(_GLF_FUZZED(6.3)), _GLF_IDENTITY(min(float(_GLF_FUZZED(6.3)), float(_GLF_FUZZED(6.3))), min(_GLF_IDENTITY(min(float(_GLF_FUZZED(6.3)), float(_GLF_FUZZED(6.3))), max(min(float(_GLF_FUZZED(6.3)), float(_GLF_FUZZED(6.3))), min(float(_GLF_FUZZED(6.3)), float(_GLF_FUZZED(6.3))))), min(float(_GLF_FUZZED(6.3)), float(_GLF_FUZZED(6.3)))))), 1.0, 0.0))), bool(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), float(injectionSwitch.x), bool(true)))))) - 0.0))), min(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(_GLF_IDENTITY(6.3, (false ? _GLF_FUZZED(distance(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(6.3, mix(float(_GLF_FUZZED(0.2)), float(6.3), bool(true))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-49.03)), _GLF_IDENTITY(float(_GLF_FUZZED(6.3)), float(vec3(float(_GLF_FUZZED(6.3)), 0.0, 0.0))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), float(injectionSwitch.x), bool(true))))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-49.03, (_GLF_IDENTITY(-49.03, float(mat3x4(-49.03, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, sin(0.0))))) * 1.0))), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(injectionSwitch.x), bool(true)))), clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-49.03, (_GLF_IDENTITY(-49.03, float(mat3x4(-49.03, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, sin(0.0))))) * 1.0))), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(injectionSwitch.x), bool(true)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-49.03, (_GLF_IDENTITY(-49.03, float(mat3x4(-49.03, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, sin(0.0))))) * 1.0))), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(injectionSwitch.x), bool(true)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-49.03, (_GLF_IDENTITY(-49.03, float(mat3x4(-49.03, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, sin(0.0))))) * 1.0))), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(injectionSwitch.x), bool(true)))), 0.0 + ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-49.03, (_GLF_IDENTITY(-49.03, float(mat3x4(-49.03, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, sin(0.0))))) * 1.0))), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(injectionSwitch.x), bool(true))))))))), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(injectionSwitch.x), bool(true))))), float(vec4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(injectionSwitch.x), bool(true))))), 1.0, 1.0, 1.0))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(injectionSwitch.x), bool(true))))), float(vec4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(injectionSwitch.x), bool(true))))), 1.0, 1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0)), mix(float(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(injectionSwitch.x), bool(true))))), float(vec4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(injectionSwitch.x), bool(true))))), 1.0, 1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-7.8)), bool(false)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0)))) - 0.0))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, abs(0.0)))).x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, abs(0.0)))).x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))), mix(float(_GLF_FUZZED((-4.5 - 0.3))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, abs(0.0)))).x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, abs(0.0)))).x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))), mix(float(_GLF_FUZZED(-289.132)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, abs(0.0)))).x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), mix(float(_GLF_FUZZED(-49.03)), float(_GLF_FUZZED(6.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true)))), bool(true)))))))) - 0.0))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(1, max(1, 1)), (_injected_loop_counter != _GLF_IDENTITY(1, max(1, 1))) && true)), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (_GLF_IDENTITY(max(1, 1), ~ (~ (max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) | (max(1, 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) >> 0), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 | (_GLF_IDENTITY(1, max(1, 1))))) >> 0)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(1, 1)))) || false)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.6)), bool(false)))) / 1.0)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) || _GLF_IDENTITY((false), false || ((false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || _GLF_IDENTITY((false), false || ((false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)) << 0), _GLF_IDENTITY(int(7), int(7)))))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = _GLF_IDENTITY((((-53419 & 0) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(3), int(3))), ((((-53419 & 0) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(3), int(3)))) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               barrier();
              }
            }
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), 0 | (_GLF_IDENTITY(int(3), ~ (~ (int(3))))))) << _GLF_IDENTITY(0, 0 ^ (0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) >> 0)) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), injectionSwitch)).x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)))) | (_injected_loop_counter)) < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0), _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(false))), bool(bvec3(bool(bool(_GLF_WRAPPED_LOOP(false))), false, true)))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0)); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
      {
       for(int _injected_loop_counter = (0 & 81931); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 & 1, max(1 & 1, _GLF_IDENTITY(1 & 1, 0 ^ _GLF_IDENTITY((1 & 1), ~ (_GLF_IDENTITY(~ ((1 & 1)), (~ ((1 & 1))) / 1)))))))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false, true, true)))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec2(false, false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), bool(bvec2(bool(bool(! (false))), true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(8.4, -7.8)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.0))), injectionSwitch.y)), injectionSwitch.y))))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true), false))))))
      barrier();
    }
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(uintBitsToFloat(uvec2(141217u, 178968u))) : injectionSwitch)).y)))) && true), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), true))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.8)), bool(false)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) << 0)) | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
            }
          }
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
  }
 for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true)))), (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true))))) && true)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, (false) && true))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, true))) ? _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y) : _GLF_IDENTITY(_GLF_FUZZED(ceil(-226.244)), float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(ceil(-226.244)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0), (mat4x2(_GLF_FUZZED(ceil(-226.244)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, (0 ^ _GLF_IDENTITY(1, (1) - 0)), 0), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0)), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))) << 0)) ^ 0), 0)), 0)), max(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0)), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))) << 0)) ^ 0), 0)), 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0)), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))) << 0)) ^ 0), 0)), 0)), (true ? _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0)), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))) << 0)) ^ 0), 0)), 0)) : _GLF_FUZZED(81618))))) ^ 1), 0), (ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, max(0, 0))), 0)), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), clamp((0), (0), (0))), (0)))) | (_GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), (~ ((0))) | 0))))) - 0), 0))) << 0)) ^ 0), 0)), 0)) ^ 1), 0)) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY(~ (~ (ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 0))), 0)), 0)) ^ 1), 0))), (false ? _GLF_FUZZED(sign((ivec4(89698, 44423, -39080, 92696) + ivec4(-16811, 12643, -25940, 73888)))) : ~ (~ (ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)) ^ 1), 0))))))) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, (0 ^ _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / _GLF_IDENTITY(1, 0 | (1)))), 0), (ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, (_GLF_IDENTITY(0, max(0, 0)) ^ 1), 0)) << ivec4(0, 0, 0, 0))), clamp(int(_GLF_IDENTITY(ivec4(int(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sqrt(-763.087)) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8782.6479) : 1.0)))), injectionSwitch.y)), 1, (_GLF_IDENTITY(0 ^ 1, (_GLF_IDENTITY(0 ^ 1, (0 ^ 1) | (0 ^ 1))) * 1)), 0), (ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, (_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), max(0, 0)) ^ 1), 0)) << ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, (0 ^ 1), 0), (ivec4(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(306.252))))), 1, (_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), 0 + (max(0, 0)))) ^ _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(18089))), min(1, 1))) / (1 & 1))), 0)) << ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y)), 1, (0 ^ 1), 0), (ivec4(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6853.5826, -6446.1143)) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6853.5826, -6446.1143)) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6853.5826, -6446.1143)) : injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6853.5826, -6446.1143)) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6853.5826, -6446.1143)) : injectionSwitch)).y) - 0.0), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6853.5826, -6446.1143)) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6853.5826, -6446.1143)) : injectionSwitch)).y)))))), 1, (_GLF_IDENTITY(0, max(0, 0)) ^ 1), 0)) << ivec4(0, 0, 0, 0)))))) - 0))) - 0)); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
            }
           else
            {
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true), true, false, false))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, false)))));
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(164840u))) + subgroup_local_id, max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(164840u), max(_GLF_FUZZED(164840u), _GLF_FUZZED(164840u)))), clamp((true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(164840u), max(_GLF_FUZZED(164840u), _GLF_FUZZED(164840u)))), (true ? _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))) : _GLF_IDENTITY(_GLF_FUZZED(164840u), max(_GLF_FUZZED(164840u), _GLF_FUZZED(164840u)))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(164840u), max(_GLF_FUZZED(164840u), _GLF_IDENTITY(_GLF_FUZZED(164840u), clamp(_GLF_FUZZED(164840u), _GLF_IDENTITY(_GLF_FUZZED(164840u), (_GLF_IDENTITY(_GLF_FUZZED(164840u), uint(uvec3(_GLF_FUZZED(164840u), 1u, 1u)))) | 0u), _GLF_FUZZED(164840u))))), 0u | (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(164840u), max(_GLF_FUZZED(164840u), _GLF_IDENTITY(_GLF_FUZZED(164840u), clamp(_GLF_FUZZED(164840u), _GLF_IDENTITY(_GLF_FUZZED(164840u), (_GLF_IDENTITY(_GLF_FUZZED(164840u), uint(uvec3(_GLF_FUZZED(164840u), 1u, 1u)))) | 0u), _GLF_FUZZED(164840u))))), 1u * (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(164840u), max(_GLF_FUZZED(164840u), _GLF_IDENTITY(_GLF_FUZZED(164840u), clamp(_GLF_FUZZED(164840u), _GLF_IDENTITY(_GLF_FUZZED(164840u), (_GLF_IDENTITY(_GLF_FUZZED(164840u), uint(uvec3(_GLF_FUZZED(164840u), 1u, 1u)))) | 0u), _GLF_FUZZED(164840u))))))))))))) + subgroup_local_id, workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true)))) || false) ? subgroup_size : _GLF_FUZZED(164840u)), 0u + (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))), subgroup_size)), 0u))))) >> 0u)) : _GLF_FUZZED(164840u)), min(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(164840u)), max((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(164840u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(164840u)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(164840u))) | ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(164840u)))))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(164840u)), max((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(164840u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(164840u)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(164840u))) | ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(164840u))))))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(_GLF_IDENTITY(164840u, (164840u) << 0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u))))) : _GLF_FUZZED(_GLF_IDENTITY(164840u, (164840u) << 0u)), max(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(_GLF_IDENTITY(164840u, (164840u) << 0u)), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size))) << 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(_GLF_IDENTITY(164840u, (164840u) << 0u)), clamp(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(_GLF_IDENTITY(164840u, (_GLF_IDENTITY(164840u, ~ (~ (164840u)))) << 0u)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))) : _GLF_FUZZED(_GLF_IDENTITY(164840u, (164840u) << 0u)), true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(0u, 0u | (0u))))))) : _GLF_FUZZED(_GLF_IDENTITY(164840u, (164840u) << 0u))))))) >> (0u & 167592u))), 0u ^ ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (false ? _GLF_FUZZED((subgroup_local_id & 191485u)) : _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | (~ (~ (subgroup_size))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (false ? _GLF_FUZZED((subgroup_local_id & 191485u)) : _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | (~ (~ (subgroup_size)))))))))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ 0u), subgroup_size)), 0u)), 0u | (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), uint(uvec4(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), uint(uvec2(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))))))), 0u)), 1u))), 0u, 1u, 1u))), uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (subgroup_size)), (~ (subgroup_size))))), subgroup_size)), 0u))))))) : _GLF_FUZZED(164840u))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true)))) || false) ? subgroup_size : _GLF_FUZZED(164840u)), ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true)))) || false) ? subgroup_size : _GLF_FUZZED(164840u))) + 0u), 0u + (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), 0u)))), 0u | _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(uvec3(subgroup_size, 1u, 0u)))))) - 0u))))))), subgroup_size)), 0u))), (true ? _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(uvec3(subgroup_size, 1u, 0u)))))) - 0u))))))), subgroup_size)), 0u))), ((uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(uvec3(subgroup_size, 1u, 0u)))))) - 0u))))))), subgroup_size)), 0u)))) - 0u) : _GLF_FUZZED(num_workgroup))))) : _GLF_FUZZED(164840u)), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), max(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), 0u | (~ (subgroup_size))))), subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))) : _GLF_FUZZED(workgroup_id))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (subgroup_size)))), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))), max((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), subgroup_size)))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u))))), (true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)))))) ^ 0u)), clamp(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)))))) ^ 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)))))) ^ 0u)), uint(uvec3(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)))))) ^ 0u)), 1u, 0u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)))))) ^ 0u))))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u))))) : _GLF_FUZZED(uvec2(26327u, 11754u)))) : _GLF_FUZZED((uvec2(157885u, 3124u) & uvec2(134502u, 117072u))), uvec2(uvec3(true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))), max((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), subgroup_size)))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u))))), (true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)))))) ^ 0u)), clamp(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)))))) ^ 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)))))) ^ 0u)), uint(uvec3(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)))))) ^ 0u)), 1u, 0u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), ~ (~ (subgroup_size)), ~ (~ (subgroup_size))))), subgroup_size)))))) ^ 0u))))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u))))) : _GLF_FUZZED(uvec2(26327u, 11754u)))) : _GLF_FUZZED((uvec2(157885u, 3124u) & uvec2(134502u, 117072u))), 1u)))))), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2101.6632)), bool(false))), abs(1.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))), injectionSwitch.x)) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (uvec2(0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(6u), uint(6u))))) ^ uvec2(0u, 0u))))))))) : _GLF_FUZZED(164840u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size), max(max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size), max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)))), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (0u ^ 0u)))))))), min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size), 0u | (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size), uint(uint(max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size))))))), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), clamp(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), uint(uvec3(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), 1u, 0u))))), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u))))))) : _GLF_FUZZED(164840u)), 0u ^ ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))) | (uint(uvec3(0u, 1u, 0u))))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), max(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size))))), subgroup_size)))), 0u))))) : _GLF_FUZZED(164840u)))))))))))) + subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(uint(2.2)))) + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
