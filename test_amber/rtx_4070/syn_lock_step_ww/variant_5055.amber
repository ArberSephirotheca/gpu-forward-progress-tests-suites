#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-79.99) : 0.0)), clamp(_GLF_IDENTITY((injectionSwitch.x) - 0.0, (_GLF_IDENTITY(true, ! (! (true))) ? (injectionSwitch.x) - 0.0 : _GLF_FUZZED(2.3))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) - 0.0, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(75301))), bool(false))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), _GLF_IDENTITY(vec2(vec4(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), 0.0, 0.0)), max(vec2(vec4(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), 0.0, 0.0)), vec2(vec4(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), 0.0, 0.0))))), vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, cos(0.0), 1.0, 0.0)), 0.0 + (float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, cos(0.0), 1.0, 0.0))))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(mat2(vec2(0.0, 1.0), 0.0, 0.0))), vec2(0.0, 1.0))))) / 1.0), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), _GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0)), (transpose(mat3(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(716.876)), float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), bool(true))), 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(1.1)), bvec2(_GLF_IDENTITY(false, (false) && true), false))))), 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.8) : 0.0)))), 1.0, 0.0)))), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0)), float(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0), vec2(0.0, 1.0)), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(867.642))), injectionSwitch[1])), injectionSwitch)).x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (_GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 1.0))))[1]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(1.1)), bvec2(false, false))))), 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)) || false) ? _GLF_FUZZED(-4.8) : 0.0)))), 1.0, 0.0)))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0)), float(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0), vec2(0.0, 1.0)), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(867.642))), injectionSwitch[1])), injectionSwitch)).x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (_GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 1.0))))[1]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(1.1)), bvec2(false, false))))), 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)) || false) ? _GLF_FUZZED(-4.8) : 0.0)))), 1.0, 0.0)))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0)), float(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0), vec2(0.0, 1.0)), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(867.642))), injectionSwitch[1])), injectionSwitch)).x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (_GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 1.0))))[1]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(1.1)), bvec2(false, false))))), 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)) || false) ? _GLF_FUZZED(-4.8) : 0.0)))), 1.0, 0.0)))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0)), float(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0), vec2(0.0, 1.0)), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(867.642))), injectionSwitch[1])), injectionSwitch)).x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (_GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 1.0))))[1]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(1.1)), bvec2(false, false))))), 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)) || false) ? _GLF_FUZZED(-4.8) : 0.0)))), 1.0, 0.0)))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))))))).x)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)), mix(vec2(_GLF_FUZZED(6977.4810), (mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)))[1]), vec2((mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)))[0], _GLF_FUZZED(vec3(840.273, -2060.9165, -29.86).s)), bvec2(true, false)))), vec2(0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), float(mat3x4(_GLF_IDENTITY(min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), float(mat2x3(min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(1.1)), bvec2(_GLF_IDENTITY(false, false || (false)), false))))), 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.8) : 0.0)))), 1.0, 0.0)))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3230.3451)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.5))), 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-58.64) : 0.0)))), 1.0)), min(_GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (1.0) + sin(0.0))), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(1.1)), bvec2(false, false))))), 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.8) : 0.0))), min(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.8) : 0.0))), vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.8) : 0.0)))))), 1.0, 0.0)))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false)))) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(242.327)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0))))) - 0.0), 1.0), vec2(0.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(862.641) : 1.0))), vec2(0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 1.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(length(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-738.276)), bool(false))), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), clamp(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), clamp(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))))), 1.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(1.1)), bvec2(false, false))))), 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.8) : 0.0)))), 1.0, 0.0)))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), mix(float(_GLF_FUZZED(25.12)), float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), bool(true))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.6)), float(0.0), bool(true))), 0.0)), 1.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, 0.0 + (injectionSwitch.x))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.0)), bool(false)))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))), dot(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (_GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(mat4(vec2(0.0, 1.0), 0.0, cos(0.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0)), max(vec2(mat4(vec2(0.0, 1.0), 0.0, cos(0.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0)), vec2(mat4(vec2(0.0, 1.0), 0.0, cos(0.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0))))))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-9.9, clamp(-9.9, -9.9, -9.9))), _GLF_FUZZED(1.1)), bvec2(false, false))))), 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.8) : 0.0)))), 1.0, 0.0)))), vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(74.35)), float(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0)))), bool(true))), injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(-0.9))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), 0.0))))))).x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), mix(float(_GLF_FUZZED(-57.29)), float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), clamp(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0), (true ? mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), mix(float(_GLF_FUZZED(-57.29)), float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), clamp(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x2(0.5, -7.9, -48.38, 4.7, 1.6, -405.846)))))), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0)))))), 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y) * (determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 0.0, 1.0)))) / 1.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(1.1)), bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false))))), 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-4.8, (_GLF_IDENTITY(-4.8, clamp(-4.8, -4.8, -4.8))) * 1.0)) : 0.0)))), 1.0, 0.0)))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((+ 263.273)) : 1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))))))).x), float(_GLF_FUZZED(-5.0)), bool(false))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(1.0, 1.0 * (1.0)), exp(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), clamp(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) - 0.0))), determinant(mat2(1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(vec4(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 1.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(1.1)), bvec2(false, false))))), 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.8) : 0.0)))), 1.0, 0.0)))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0), _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, abs(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0), vec4(abs(0.0), 1.0, 1.0, 0.0)), dot(vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0), vec4(abs(0.0), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0)), min(float(mat4x2(0.0, abs(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0), vec4(abs(0.0), 1.0, 1.0, 0.0)), dot(vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0), vec4(abs(0.0), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0)), float(mat4x2(0.0, abs(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0), vec4(abs(0.0), 1.0, 1.0, 0.0)), dot(vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0), vec4(abs(0.0), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0))))), injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0))))))).x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) + 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), ! (! (bool(_GLF_IDENTITY(false, (false) && true)))))), bool(bvec4(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), ! (! (bool(_GLF_IDENTITY(false, (false) && true)))))), true, true, true)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.1, 9507.9136)) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED((+ -35.87))), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY((true ? mix(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -35.87, float(_GLF_IDENTITY(float(+ -35.87), float(float(float(+ -35.87)))))))), min(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), clamp(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), max(_GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), _GLF_FUZZED((+ -35.87)))), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87))))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(1.0)), ((true ? mix(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -35.87, float(_GLF_IDENTITY(float(+ -35.87), float(float(float(+ -35.87)))))))), min(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), clamp(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), max(_GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), _GLF_FUZZED((+ -35.87)))), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87))))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(1.0))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), min((true ? _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -35.87, float(_GLF_IDENTITY(float(+ -35.87), float(float(float(+ -35.87)))))))), min(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), clamp(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), max(_GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), _GLF_FUZZED((+ -35.87)))), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87))))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED((9187.7513 / -8.9))), float(mix(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -35.87, float(_GLF_IDENTITY(float(+ -35.87), float(float(float(+ -35.87)))))))), min(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), clamp(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), max(_GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), _GLF_FUZZED((+ -35.87)))), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87))))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true))) : _GLF_FUZZED(1.0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -35.87, float(_GLF_IDENTITY(float(+ -35.87), float(float(float(+ -35.87)))))))), min(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), clamp(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), max(_GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), _GLF_FUZZED((+ -35.87)))), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87))))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -35.87, float(_GLF_IDENTITY(float(+ -35.87), float(float(float(+ -35.87)))))))), min(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), clamp(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), max(_GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), _GLF_FUZZED((+ -35.87)))), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87))))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(mix(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -35.87, float(_GLF_IDENTITY(float(+ -35.87), float(float(float(+ -35.87)))))))), min(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), clamp(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), max(_GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), _GLF_FUZZED((+ -35.87)))), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87))))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -35.87, float(_GLF_IDENTITY(float(+ -35.87), float(float(float(+ -35.87)))))))), min(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), clamp(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), max(_GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), _GLF_FUZZED((+ -35.87)))), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87))))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -35.87, float(_GLF_IDENTITY(float(+ -35.87), float(float(float(+ -35.87)))))))), min(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), clamp(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), max(_GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), _GLF_FUZZED((+ -35.87)))), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87))))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : _GLF_FUZZED(1.0)), clamp((true ? mix(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -35.87, float(_GLF_IDENTITY(float(+ -35.87), _GLF_IDENTITY(float(float(float(+ -35.87))), (false ? _GLF_FUZZED(3.4) : float(float(float(+ -35.87)))))))))), min(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_FUZZED((+ -35.87))) / 1.0), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), max(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), min(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_FUZZED((+ -35.87))) + 0.0), _GLF_FUZZED((+ -35.87)))), _GLF_FUZZED((+ -35.87)))), _GLF_FUZZED((+ -35.87)))), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87))))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0)))), (true ? mix(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -35.87, float(_GLF_IDENTITY(_GLF_IDENTITY(float(+ -35.87), float(float(float(+ -35.87)))), clamp(_GLF_IDENTITY(float(+ -35.87), float(float(float(+ -35.87)))), _GLF_IDENTITY(float(+ -35.87), float(float(float(+ -35.87)))), _GLF_IDENTITY(float(+ -35.87), float(float(float(+ -35.87)))))))))), min(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ _GLF_IDENTITY(-35.87, max(_GLF_IDENTITY(-35.87, max(-35.87, -35.87)), -35.87)))), clamp(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), max(_GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), _GLF_FUZZED((+ -35.87)))), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED(_GLF_IDENTITY((+ -35.87), _GLF_IDENTITY(float(vec3((+ -35.87), 0.0, 1.0)), (float(vec3((+ -35.87), 0.0, 1.0))) - 0.0)))))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(1.0)), (true ? mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -35.87, float(_GLF_IDENTITY(float(_GLF_IDENTITY(+ -35.87, (+ -35.87) / 1.0)), _GLF_IDENTITY(float(float(float(+ -35.87))), max(float(float(float(+ -35.87))), float(float(float(+ -35.87)))))))))), min(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), min(_GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), clamp(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), max(_GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), _GLF_FUZZED((+ -35.87)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), (_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8), 1.0), max(vec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8), 1.0), vec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8), 1.0)))))))) * 1.0), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87))))))), mix(float(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ -35.87, float(_GLF_IDENTITY(float(_GLF_IDENTITY(+ -35.87, (+ -35.87) / 1.0)), _GLF_IDENTITY(float(float(float(+ -35.87))), max(float(float(float(+ -35.87))), float(float(float(+ -35.87)))))))))), min(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), min(_GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), clamp(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), max(_GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), _GLF_FUZZED((+ -35.87)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), (_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8), 1.0), max(vec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8), 1.0), vec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8), 1.0)))))))) * 1.0), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))))))), float(_GLF_FUZZED(-8018.9905)), bool(false))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(1.0)))))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_FUZZED((+ _GLF_IDENTITY(-35.87, (-35.87) * 1.0)))), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, false))), ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, false)))))) ? mix(float(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), min(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_FUZZED((+ -35.87)), 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, exp(0.0), 1.0), mat4(1.0) * (mat4(_GLF_FUZZED((+ -35.87)), 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, exp(0.0), 1.0)))), min(float(_GLF_IDENTITY(mat4(_GLF_FUZZED((+ -35.87)), 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, exp(0.0), 1.0), mat4(1.0) * (mat4(_GLF_FUZZED((+ -35.87)), 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, exp(0.0), 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_FUZZED((+ -35.87)), 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, exp(0.0), 1.0), mat4(1.0) * (mat4(_GLF_FUZZED((+ -35.87)), 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, exp(0.0), 1.0)))), (float(_GLF_IDENTITY(mat4(_GLF_FUZZED((+ -35.87)), 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, exp(0.0), 1.0), mat4(1.0) * (mat4(_GLF_FUZZED((+ -35.87)), 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, exp(0.0), 1.0))))) + 0.0)))), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (true ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (true ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87))), mix(float(_GLF_FUZZED(183.886)), float(clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (true ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ -35.87)))), bool(true)))) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec2(1.0, 0.0), vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)))))))), float(injectionSwitch.y), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(1.0))))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED((+ -35.87))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), clamp(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.1)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true)))), bool(true)))), min(float(injectionSwitch.y), float(injectionSwitch.y)))) - sin(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y)))), float(_GLF_FUZZED(-3199.1630)), bool(false))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? mix(float(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), min(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ _GLF_IDENTITY(-35.87, (true ? _GLF_IDENTITY(-35.87, float(mat4(-35.87, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED((- 79.96)))))), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (true ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ _GLF_IDENTITY(-35.87, (false ? _GLF_FUZZED(-6.6) : -35.87))))))))), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-8.8, (-8.8) + 0.0)) : 1.0)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED((+ -35.87))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), min(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.5)), float(injectionSwitch.y), bool(true)))) - 0.0), injectionSwitch.y, injectionSwitch.y))), float(injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))))), min(float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), (true ? _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))) : _GLF_FUZZED(1.0)))) - sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, cos(0.0) * (0.0))) / cos(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y)))), float(_GLF_FUZZED(-3199.1630)), bool(false))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? mix(float(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), min(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (true ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ _GLF_IDENTITY(-35.87, (false ? _GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_FUZZED(-6.6), _GLF_IDENTITY(_GLF_FUZZED(-6.6), 0.0 + (_GLF_FUZZED(-6.6))))) : -35.87))))))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8.8) : 1.0)))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED((+ -35.87))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), min(float(injectionSwitch.y), float(injectionSwitch.y))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), min(float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), (_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(min(float(injectionSwitch.y), float(injectionSwitch.y)), max(min(float(injectionSwitch.y), float(injectionSwitch.y)), min(float(injectionSwitch.y), float(injectionSwitch.y)))))) - sin(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), min(float(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-601.548) : injectionSwitch.y)), determinant(mat4(1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), float(injectionSwitch.y))), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y)))), float(_GLF_FUZZED(-3199.1630)), bool(false))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (true ? mix(float(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), min(_GLF_FUZZED((+ -35.87)), _GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), clamp(_GLF_IDENTITY(_GLF_FUZZED((+ -35.87)), (true ? _GLF_FUZZED((+ -35.87)) : _GLF_FUZZED(-9.8))), _GLF_FUZZED((+ -35.87)), _GLF_FUZZED((+ _GLF_IDENTITY(-35.87, (false ? _GLF_FUZZED(-6.6) : -35.87))))))))), _GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(5.1))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.4)), bool(false))))), injectionSwitch.x)) < injectionSwitch.y)))) : _GLF_FUZZED(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8.8) : 1.0))))))))) && true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(round(vec4(-15.09, 0.5, -868.966, -8.4).g)) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(281.628), clamp(_GLF_FUZZED(281.628), _GLF_FUZZED(281.628), _GLF_FUZZED(281.628))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(281.628), clamp(_GLF_FUZZED(281.628), _GLF_FUZZED(281.628), _GLF_FUZZED(281.628))))), min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(281.628), clamp(_GLF_FUZZED(281.628), _GLF_FUZZED(281.628), _GLF_FUZZED(281.628))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(281.628), clamp(_GLF_FUZZED(281.628), _GLF_FUZZED(281.628), _GLF_FUZZED(281.628))))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(281.628), clamp(_GLF_FUZZED(281.628), _GLF_FUZZED(281.628), _GLF_FUZZED(281.628))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(281.628), clamp(_GLF_FUZZED(281.628), _GLF_FUZZED(281.628), _GLF_FUZZED(281.628))))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(281.628))) > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(281.628), _GLF_IDENTITY(min(_GLF_FUZZED(281.628), _GLF_FUZZED(281.628)), float(float(min(_GLF_FUZZED(281.628), _GLF_FUZZED(281.628)))))))) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(281.628))) > injectionSwitch.y)) && true, (((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(281.628))) > injectionSwitch.y)) && true) && true)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(true, bool(bool(true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true, true, true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x)))) > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true, true, true))))), false, false, true))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), true, true))))), false, false, true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u | (1u))))), (false ? _GLF_FUZZED((~ uvec4(148518u, 120766u, 16007u, 138951u))) : uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u | (1u)))))))), (true ? uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u | (1u))))), (false ? _GLF_FUZZED((~ uvec4(148518u, 120766u, 16007u, 138951u))) : uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u | (1u)))))))) : _GLF_FUZZED(uvec3(132604u, 173091u, 193400u))))).x, _GLF_IDENTITY(0u, min(0u, 0u)) + (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), clamp(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_WorkGroupID.x, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), uvec4(gl_WorkGroupID.x, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), uvec4(gl_WorkGroupID.x, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 1u, 1u))))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(268.086)), bool(false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.0), _GLF_FUZZED(461.475)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))) || false)))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec3(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(injectionSwitch)))))) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true))))))), true, true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), uint(uint(~ (subgroup_size))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) >> (0 ^ 0)), 1))) % subgroup_size) / 1u)), _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 1 * (1))))) % subgroup_size)) >> 0u, (((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u) % subgroup_size)) >> 0u) | _GLF_IDENTITY(0u, ~ (~ (0u)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size)))))) >> 0u) | 0u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), uint(uint(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)))))) ^ 0u))), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), uint(uint(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)))))) ^ 0u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), uint(uint(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)))))) ^ 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), uint(uint(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)))))) ^ 0u)))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), uint(uint(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)))))) ^ 0u))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), uint(uint(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)))))) ^ 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), uint(uint(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)))))) ^ 0u))))))))) | (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)) >> 0u, ((((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) << 0)) % subgroup_size)) >> 0u) | 0u)))))) - (0u ^ 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), 1u * (_GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), (true ? (uint(1)) : _GLF_FUZZED(subgroup_size))), (true ? (uint(1)) : _GLF_FUZZED(subgroup_id))) >> 0u), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(-718.437))) > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false || (true))), ! (! (bool(bool(false || (true)))))), false || (_GLF_IDENTITY(bool(bool(false || (true))), bool(bvec3(bool(bool(false || (true))), true, true))))))))) && true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))).x < injectionSwitch.y)), true, true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)), bool(bool(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)))))), true))), (_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)), bool(bool(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)))))), true))), (! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)), bool(bool(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)), bool(bool(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)))))), true))), (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)), bool(bool(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)))))), true)))) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)), bool(bool(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)))))), true))), (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), bool(bool((false)))))))))), _GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)), bool(bool(bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, false, true)))))), true)))) || false))))))) || false)) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, false), true))))))), false || (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.2) : injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), round(length(normalize(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(86.21)), float(1.0), bool(true))), 1.0, 1.0, 1.0)))), 1.0, abs(0.0), 1.0, 0.0, 1.0))), 0.0, 1.0, 0.0))))) && true)), false || _GLF_IDENTITY(((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.3)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(219.985))))) && true))), _GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.3)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(219.985))))) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec3(((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.3)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(219.985))))) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false))))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-774.651)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.7))), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED((-76.94 * 0.2))), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) + 0u)], uint(_GLF_IDENTITY(2, (2) - 0)), _GLF_IDENTITY(4, _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_GLF_IDENTITY(17075, 0 | (17075))))) / 1), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0), min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0))), 4)), max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0), min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0))), 4)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0), min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0))), 4)))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))))) || false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) && true))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), vec2(_GLF_FUZZED(-1.1), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! (! ((bool(_GLF_IDENTITY((false), ! (! ((false))))))))))))), bool(bvec3(! _GLF_IDENTITY((false), bool(bvec2((false), false))), true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), float(mat4x3(float(injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, sin(0.0))))) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), log(1.0), 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(mat4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), log(1.0), 1.0)) : _GLF_FUZZED(injectionSwitch)))), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, sin(0.0))))) - vec2(0.0, 0.0)).y)), ! (! (! (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, sin(0.0))))) - vec2(0.0, 0.0)).y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
