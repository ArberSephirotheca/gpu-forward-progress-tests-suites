#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), true, false, false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-9.9)), bool(false))))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-9.9)), bool(false))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-9.9)), bool(false))))).x > injectionSwitch.y), true), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-9.9)), bool(false))))).x > injectionSwitch.y), true))))), true && (bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-9.9)), bool(false))))).x > injectionSwitch.y), true), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-9.9)), bool(false))))).x > injectionSwitch.y), true))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 | 1) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)), 0 | (_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec2(-82543, -55521)[1]) : int(7))), (int(7)) | 0)))))); _injected_loop_counter ++)
      {
       return;
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec3(bool(_GLF_IDENTITY(false, false || (false))), true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec3(bool(_GLF_IDENTITY(false, false || (false))), true, false))))) && true)))))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec3(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec3(bool(_GLF_IDENTITY(false, false || (false))), true, false))))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 0, 1), max(ivec3(_injected_loop_counter, 0, 1), ivec3(_injected_loop_counter, 0, 1)))), min(int(ivec3(_injected_loop_counter, 0, 1)), int(ivec3(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), 0, 1))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 0, 1), max(ivec3(_injected_loop_counter, 0, 1), ivec3(_injected_loop_counter, 0, 1)))), min(int(ivec3(_injected_loop_counter, 0, 1)), int(ivec3(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), 0, 1))))), (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 0, 1), max(ivec3(_injected_loop_counter, 0, 1), ivec3(_injected_loop_counter, 0, 1)))), min(int(ivec3(_injected_loop_counter, 0, 1)), int(ivec3(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), 0, 1)))))) | (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 0, 1), max(ivec3(_injected_loop_counter, 0, 1), ivec3(_injected_loop_counter, 0, 1)))), min(int(ivec3(_injected_loop_counter, 0, 1)), int(ivec3(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), 0, 1))))))), _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 0, 1), max(ivec3(_injected_loop_counter, 0, 1), ivec3(_injected_loop_counter, 0, 1)))), min(int(ivec3(_injected_loop_counter, 0, 1)), int(ivec3(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), 0, 1)))))))) >> (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (true ? _GLF_IDENTITY(int(8), clamp(int(8), int(8), _GLF_IDENTITY(int(8), 0 + (int(8))))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) << 0)) << 0)))))) != _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(9134.5172) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0)), (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0))), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))))), (true ? float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(9134.5172) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0)), (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0))), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))))) : _GLF_FUZZED(416.903)))), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), clamp(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), clamp(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), max(_GLF_IDENTITY(float(_GLF_FUZZED(406.627)), mix(float(float(_GLF_FUZZED(406.627))), float(_GLF_FUZZED(8.1)), bool(false))), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), (float(_GLF_FUZZED(406.627))) - 0.0))), bool(false)), mix(_GLF_IDENTITY(float(float(_GLF_ONE(1.0, injectionSwitch.y))), min(float(float(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(float(_GLF_ONE(1.0, injectionSwitch.y))), min(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(float(_GLF_ONE(1.0, injectionSwitch.y))))))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(float(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- -701.418))), bool(false))), injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))))), _GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), (_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(mix(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), (float(_GLF_ONE(1.0, injectionSwitch.y))) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(406.627)), (true ? float(_GLF_FUZZED(406.627)) : _GLF_FUZZED(-2.7)))), float(_GLF_FUZZED(2.0)), bool(false))), bool(false))), float(_GLF_FUZZED(_GLF_IDENTITY(-7.5, float(_GLF_IDENTITY(vec2(-7.5, 0.0), max(vec2(-7.5, 0.0), vec2(-7.5, 0.0))))))), bool(false)))) + 0.0))))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), float(_GLF_IDENTITY(_GLF_FUZZED(406.627), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(406.627), determinant(mat4(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 0.0, 0.0, 0.0)), 0.0, exp(0.0), 1.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(8.3) : float(mat2x4(_GLF_FUZZED(406.627), determinant(mat4(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), tan(0.0)), transpose(transpose(mat3x4(0.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), tan(0.0))))))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 0.0, 0.0, 0.0)), 0.0, exp(0.0), 1.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(bool(false), false || (bool(false)))))), 1.0)), _GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, min(_GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, (true ? (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0 : _GLF_FUZZED(-7385.9083))), _GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false))), (_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))) - 0.0)), 1.0))) / 1.0, float(mat2x4((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), mix(float(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), clamp(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), vec4(injectionSwitch.y, 1.0, 0.0, 1.0), vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))))))))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))), log(1.0))))) / sqrt(1.0))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(9134.5172) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0)), (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0))), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))))), (true ? float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(9134.5172) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0)), (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0))), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))))) : _GLF_FUZZED(416.903)))), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), clamp(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), clamp(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), max(_GLF_IDENTITY(float(_GLF_FUZZED(406.627)), mix(float(float(_GLF_FUZZED(406.627))), float(_GLF_FUZZED(8.1)), bool(false))), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), (float(_GLF_FUZZED(406.627))) - 0.0))), bool(false)), mix(_GLF_IDENTITY(float(float(_GLF_ONE(1.0, injectionSwitch.y))), min(float(float(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(float(_GLF_ONE(1.0, injectionSwitch.y))), min(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(float(_GLF_ONE(1.0, injectionSwitch.y))))))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(float(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- -701.418))), bool(false))), injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))))), _GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), (_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(mix(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), (float(_GLF_ONE(1.0, injectionSwitch.y))) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(406.627)), (true ? float(_GLF_FUZZED(406.627)) : _GLF_FUZZED(-2.7)))), float(_GLF_FUZZED(2.0)), bool(false))), bool(false))), float(_GLF_FUZZED(_GLF_IDENTITY(-7.5, float(_GLF_IDENTITY(vec2(-7.5, 0.0), max(vec2(-7.5, 0.0), vec2(-7.5, 0.0))))))), bool(false)))) + 0.0))))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), float(_GLF_IDENTITY(_GLF_FUZZED(406.627), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(406.627), determinant(mat4(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 0.0, 0.0, 0.0)), 0.0, exp(0.0), 1.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(8.3) : float(mat2x4(_GLF_FUZZED(406.627), determinant(mat4(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), tan(0.0)), transpose(transpose(mat3x4(0.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), tan(0.0))))))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 0.0, 0.0, 0.0)), 0.0, exp(0.0), 1.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(bool(false), false || (bool(false)))))), 1.0)), _GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, min(_GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, (true ? (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0 : _GLF_FUZZED(-7385.9083))), _GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false))), (_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))) - 0.0)), 1.0))) / 1.0, float(mat2x4((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), mix(float(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), clamp(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), vec4(injectionSwitch.y, 1.0, 0.0, 1.0), vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))))))))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))), log(1.0))))) / sqrt(1.0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(9134.5172) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0)), (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0))), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))))), (true ? float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(9134.5172) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0)), (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0))), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))))) : _GLF_FUZZED(416.903)))), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), clamp(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), clamp(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), max(_GLF_IDENTITY(float(_GLF_FUZZED(406.627)), mix(float(float(_GLF_FUZZED(406.627))), float(_GLF_FUZZED(8.1)), bool(false))), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), (float(_GLF_FUZZED(406.627))) - 0.0))), bool(false)), mix(_GLF_IDENTITY(float(float(_GLF_ONE(1.0, injectionSwitch.y))), min(float(float(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(float(_GLF_ONE(1.0, injectionSwitch.y))), min(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(float(_GLF_ONE(1.0, injectionSwitch.y))))))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(float(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- -701.418))), bool(false))), injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))))), _GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), (_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(mix(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), (float(_GLF_ONE(1.0, injectionSwitch.y))) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(406.627)), (true ? float(_GLF_FUZZED(406.627)) : _GLF_FUZZED(-2.7)))), float(_GLF_FUZZED(2.0)), bool(false))), bool(false))), float(_GLF_FUZZED(_GLF_IDENTITY(-7.5, float(_GLF_IDENTITY(vec2(-7.5, 0.0), max(vec2(-7.5, 0.0), vec2(-7.5, 0.0))))))), bool(false)))) + 0.0))))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), float(_GLF_IDENTITY(_GLF_FUZZED(406.627), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(406.627), determinant(mat4(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 0.0, 0.0, 0.0)), 0.0, exp(0.0), 1.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(8.3) : float(mat2x4(_GLF_FUZZED(406.627), determinant(mat4(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), tan(0.0)), transpose(transpose(mat3x4(0.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), tan(0.0))))))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 0.0, 0.0, 0.0)), 0.0, exp(0.0), 1.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(bool(false), false || (bool(false)))))), 1.0)), _GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, min(_GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, (true ? (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0 : _GLF_FUZZED(-7385.9083))), _GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false))), (_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))) - 0.0)), 1.0))) / 1.0, float(mat2x4((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), mix(float(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), clamp(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), vec4(injectionSwitch.y, 1.0, 0.0, 1.0), vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))))))))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))), log(1.0))))) / sqrt(1.0))), (int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(9134.5172) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0)), (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0))), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))))), (true ? float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(9134.5172) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0)), (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0))), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))))) : _GLF_FUZZED(416.903)))), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), clamp(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), clamp(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), max(_GLF_IDENTITY(float(_GLF_FUZZED(406.627)), mix(float(float(_GLF_FUZZED(406.627))), float(_GLF_FUZZED(8.1)), bool(false))), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), (float(_GLF_FUZZED(406.627))) - 0.0))), bool(false)), mix(_GLF_IDENTITY(float(float(_GLF_ONE(1.0, injectionSwitch.y))), min(float(float(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(float(_GLF_ONE(1.0, injectionSwitch.y))), min(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(float(_GLF_ONE(1.0, injectionSwitch.y))))))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(float(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- -701.418))), bool(false))), injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))))), _GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), (_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(mix(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), (float(_GLF_ONE(1.0, injectionSwitch.y))) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(406.627)), (true ? float(_GLF_FUZZED(406.627)) : _GLF_FUZZED(-2.7)))), float(_GLF_FUZZED(2.0)), bool(false))), bool(false))), float(_GLF_FUZZED(_GLF_IDENTITY(-7.5, float(_GLF_IDENTITY(vec2(-7.5, 0.0), max(vec2(-7.5, 0.0), vec2(-7.5, 0.0))))))), bool(false)))) + 0.0))))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), float(_GLF_IDENTITY(_GLF_FUZZED(406.627), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(406.627), determinant(mat4(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 0.0, 0.0, 0.0)), 0.0, exp(0.0), 1.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(8.3) : float(mat2x4(_GLF_FUZZED(406.627), determinant(mat4(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), tan(0.0)), transpose(transpose(mat3x4(0.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), tan(0.0))))))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 0.0, 0.0, 0.0)), 0.0, exp(0.0), 1.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(bool(false), false || (bool(false)))))), 1.0)), _GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, min(_GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, (true ? (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0 : _GLF_FUZZED(-7385.9083))), _GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false))), (_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))) - 0.0)), 1.0))) / 1.0, float(mat2x4((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), mix(float(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), clamp(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), vec4(injectionSwitch.y, 1.0, 0.0, 1.0), vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))))))))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))), log(1.0))))) / sqrt(1.0)))) ^ 0)) ^ 0), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(9134.5172) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0)), (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0))), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))))), (true ? float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(9134.5172) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0)), (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0))), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))))) : _GLF_FUZZED(416.903)))), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), clamp(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), max(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), clamp(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), max(_GLF_IDENTITY(float(_GLF_FUZZED(406.627)), mix(float(float(_GLF_FUZZED(406.627))), float(_GLF_FUZZED(8.1)), bool(false))), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), (float(_GLF_FUZZED(406.627))) - 0.0))), bool(false)), mix(_GLF_IDENTITY(float(float(_GLF_ONE(1.0, injectionSwitch.y))), min(float(float(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(float(_GLF_ONE(1.0, injectionSwitch.y))), min(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(float(_GLF_ONE(1.0, injectionSwitch.y))))))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(float(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- -701.418))), bool(false))), injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))))), _GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), (_GLF_IDENTITY(mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)), mix(float(mix(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), (float(_GLF_ONE(1.0, injectionSwitch.y))) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(406.627)), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(406.627)), (true ? float(_GLF_FUZZED(406.627)) : _GLF_FUZZED(-2.7)))), float(_GLF_FUZZED(2.0)), bool(false))), bool(false))), float(_GLF_FUZZED(_GLF_IDENTITY(-7.5, float(_GLF_IDENTITY(vec2(-7.5, 0.0), max(vec2(-7.5, 0.0), vec2(-7.5, 0.0))))))), bool(false)))) + 0.0))))), _GLF_IDENTITY(float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), float(_GLF_IDENTITY(_GLF_FUZZED(406.627), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(406.627), determinant(mat4(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 0.0, 0.0, 0.0)), 0.0, exp(0.0), 1.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(8.3) : float(mat2x4(_GLF_FUZZED(406.627), determinant(mat4(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), tan(0.0)), transpose(transpose(mat3x4(0.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), tan(0.0))))))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 0.0, 0.0, 0.0)), 0.0, exp(0.0), 1.0, 1.0, 0.0, exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(bool(false), false || (bool(false)))))), 1.0)), _GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, min(_GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, (true ? (float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0 : _GLF_FUZZED(-7385.9083))), _GLF_IDENTITY((float(vec2(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false))), (_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(406.627)), bool(false)))) - 0.0)), 1.0))) / 1.0, float(mat2x4((float(vec2(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), mix(float(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), clamp(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), vec4(injectionSwitch.y, 1.0, 0.0, 1.0), vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))))))))), float(_GLF_FUZZED(406.627)), bool(false)))), 1.0))) / 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))), log(1.0))))) / sqrt(1.0)))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
       return;
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) || (false)), false))), true), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(atomicMin(_injected_loop_counter, 31714)) : _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))) < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 | (int(int(1))))), _GLF_IDENTITY(bool(bvec2(_injected_loop_counter < 1, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec2(_injected_loop_counter < 1, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, false || (true))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      break;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), true && (! (_GLF_WRAPPED_LOOP(false)))))));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY((gl_WorkGroupSize.x) >> 0u, ((gl_WorkGroupSize.x) >> 0u) | (_GLF_IDENTITY((gl_WorkGroupSize.x) >> 0u, 0u | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(uvec4(_GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))), max((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))).x) >> 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED((false ? 2.0 : (5.2 * -661.685)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
      }
     return;
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), ((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_DEAD(false)))))) && true))) && true))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))) && true)))), ! (! (bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), true, false, false)))) && true))))))))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.w = _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id));
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.w, max(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.w, _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.w));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.y = subgroup_base, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.y = subgroup_base), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.y = subgroup_base)) / 1u) - 0u);
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (1u ^ 1u)))) + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.y + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))) && true)))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true)))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), sin(0.0), sin(0.0), 0.0, 1.0, 1.0, exp(tan(0.0)), 1.0, abs(0.0)))), 0.0, 1.0)))) - 0.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.z = virtual_gid, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.z = virtual_gid));
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.y + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false, true, false)), bool(bool(bool(bvec4(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false, true, false))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false, true, false)), bool(bool(bool(bvec4(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false, true, false))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false || (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false, true, false)), bool(bool(bool(bvec4(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false, true, false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))), false, false)))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x = next_virtual_gid;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-809.233) : injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-809.233) : injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-809.233) : injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)))), false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))) || false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.z], uint(1), _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
  }
 else
  {
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u)) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u))))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x), clamp(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x), uint(_GLF_IDENTITY(uvec4((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x), 0u, 1u, 0u), max(uvec4((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x), 0u, 1u, 0u), uvec4((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x), 0u, 1u, 0u))))), (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x), (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x))), uint(uvec2((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x), (false ? _GLF_FUZZED(subgroup_id) : ~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x)))))), 0u)))) | ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x))))), (true ? _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x))))), uint(uvec2((0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basevirtual_gidworkgroup_id.x))), 0u))) : _GLF_FUZZED(workgroup_base))))], uint(2), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) * 1)));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
        }
       barrier();
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
      }
     else
      {
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec4(bool(bvec2(true, false)), true, true, false)))) && (false))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
