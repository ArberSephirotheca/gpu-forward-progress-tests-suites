#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0)) - abs(0.0))) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0)) - abs(0.0))) * (injectionSwitch), (mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0)) - abs(0.0))) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0)) - abs(0.0))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0)) - abs(0.0))) * (injectionSwitch)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(_GLF_IDENTITY(sqrt(vec2(78.67, -99.72)), (sqrt(vec2(78.67, -99.72))) / vec2(1.0, 1.0))) : (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), mix(_GLF_IDENTITY(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), (vec2(((injectionSwitch))[0], ((injectionSwitch))[1])) / vec2(1.0, 1.0)), vec2(_GLF_FUZZED(vec3(-9.8, -631.029, 86.15).t), _GLF_FUZZED(-4.8)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))).x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false)))))))))))))))), bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (mat2(injectionSwitch, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (mat2(injectionSwitch, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) + vec2(0.0, 0.0))), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), mat2(1.0) * (injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(-7.5))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(round(length(normalize(vec2(1.0, 1.0)))), 1.0)), dot(vec2(0.0, 0.0), vec2(round(length(normalize(vec2(1.0, 1.0)))), 1.0))), 0.0, 0.0)), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(round(length(normalize(vec2(1.0, 1.0)))), 1.0)), dot(vec2(0.0, 0.0), vec2(round(length(normalize(vec2(1.0, 1.0)))), 1.0))), 0.0, 0.0))) * mat2(1.0), max((vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(round(length(normalize(vec2(1.0, 1.0)))), 1.0)), dot(vec2(0.0, 0.0), vec2(round(length(normalize(vec2(1.0, 1.0)))), 1.0))), 0.0, 0.0))) * mat2(1.0), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(round(length(normalize(vec2(1.0, 1.0)))), 1.0)), dot(vec2(0.0, 0.0), vec2(round(length(normalize(vec2(1.0, 1.0)))), 1.0))), 0.0, 0.0))) * mat2(1.0))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-454.838, 316.693)))), determinant(mat3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) + 0.0, _GLF_IDENTITY(float(mat3x4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) + 0.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sqrt(1.0), 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, sqrt(1.0), length(0.0), sin(0.0), 0.0, 1.0)), mix(float(_GLF_FUZZED(-9813.5445)), float(float(mat3x4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) + 0.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sqrt(1.0), 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, sqrt(1.0), length(0.0), sin(0.0), 0.0, 1.0))), bool(true))))))))) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))) || false)))))))), true, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), true, false, true)))))), true, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), true, true)), false, true, true))))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(false || (_GLF_IDENTITY(false, ! (! (false)))), true, false, true))))))))), true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-99.36), _GLF_FUZZED(1.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))).y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false, true))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false, true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false, true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false, true)))))))) && true)))), true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false, true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false, true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false, true)))))))) && true)))), true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false, true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false, true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false, true)))))))) && true)))), true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.1) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))), true && (_GLF_DEAD(false))), true && (_GLF_DEAD(false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4202.8938)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4202.8938))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4202.8938))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4202.8938))))), (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4202.8938))))), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(4202.8938)), min((true ? injectionSwitch.y : _GLF_FUZZED(4202.8938)), (true ? injectionSwitch.y : _GLF_FUZZED(4202.8938)))))))))) && true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), false || (bool(bvec2(false, false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3199.6418), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-438.918)), bvec2(true, false))))).x > injectionSwitch.y), true, true)))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y), false, false, true))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), (_GLF_IDENTITY(cos(vec2(0.0, 0.0)), clamp(cos(vec2(0.0, 0.0)), cos(vec2(0.0, 0.0)), cos(vec2(0.0, 0.0))))) - vec2(0.0, 0.0))))).x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true, false, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(74.42), _GLF_FUZZED(4305.7474)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(74.42), _GLF_FUZZED(4305.7474)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(74.42), _GLF_FUZZED(4305.7474)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(74.42), _GLF_FUZZED(4305.7474)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y), true, true, true))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), bool(bvec4(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true), (! ((injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), true && ((false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) && true)))))), ! (! (! (false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0))))).y)) && true)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0))))).y)) && true))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false)))))))))))))))))))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.8) : injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4329.6174)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), false, true)), true && (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4329.6174)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), false, true)))))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4329.6174)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), false, true)), true && (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4329.6174)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), false, true)))))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), true, true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(4329.6174)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), false, true)), true && (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4329.6174)), _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(float(vec3(float(injectionSwitch.y), 0.0, 1.0)), clamp(float(vec3(float(injectionSwitch.y), 0.0, 1.0)), float(vec3(float(injectionSwitch.y), 0.0, 1.0)), _GLF_IDENTITY(float(vec3(float(injectionSwitch.y), 0.0, 1.0)), (float(vec3(float(injectionSwitch.y), 0.0, 1.0))) - 0.0)))), bool(true))), injectionSwitch.y, injectionSwitch.y)), false, true)))))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), true, true)))))) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))))), true, false, false))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true), false, false))))), _GLF_IDENTITY(false, false || (false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)))), _GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, false, false))), _GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)))), _GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, false, false))), true)), true && (bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)))), _GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, false, false))), true))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))) && (false)), (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)).x, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))))), 0u ^ ((~ (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))))))) * (1u | 1u))), clamp(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(96968u, 139306u, 189650u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u, 0u) + (gl_WorkGroupID))), max(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u, 0u) + (gl_WorkGroupID))), ~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u, 0u) + (gl_WorkGroupID))))))).x, gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) / 1u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)))))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) / 1u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) / 1u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)))))))))), gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.3) : injectionSwitch.x))), float(_GLF_FUZZED(4800.4055)), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false))))))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(atomicExchange(num_workgroup, subgroup_size)) : _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max(~ (workgroup_id), ~ (workgroup_id))))))), clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id, 0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), false || (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))), true))), true, false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), false, false))))), bool(bool(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false))))), true, false), false))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), min(float(vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(float(vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), (false ? _GLF_FUZZED(41.00) : float(vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))))))), mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0)), 0.0 + (float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0)))), mix(float(float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0))), float(_GLF_FUZZED(6224.2987)), bool(false)))), _GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), sqrt(1.0))), 0.0, 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(-66.33) : _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), min(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))), float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))))), _GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-66.33), mix(float(_GLF_FUZZED(-66.33)), float(_GLF_IDENTITY(_GLF_FUZZED(-604.061), (false ? _GLF_FUZZED(656.269) : _GLF_FUZZED(-604.061)))), bool(false))) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false)))))) / _GLF_ONE(1.0, injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-66.33), mix(float(_GLF_FUZZED(-66.33)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-604.061), max(_GLF_FUZZED(-604.061), _GLF_FUZZED(-604.061))), (false ? _GLF_FUZZED(656.269) : _GLF_FUZZED(-604.061)))), bool(false))) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false)))))) / _GLF_ONE(1.0, injectionSwitch.y)) / 1.0)), injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0)), mix(float(float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0))), float(_GLF_FUZZED(6224.2987)), bool(false)))), _GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), sqrt(1.0))), 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY((false ? _GLF_FUZZED(-66.33) : _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(_GLF_IDENTITY(-0.7, mix(float(_GLF_FUZZED(vec3(-696.742, 8.8, -0.0).x)), float(-0.7), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))), float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))))), bool(false)))), ((false ? _GLF_FUZZED(-66.33) : _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(_GLF_IDENTITY(-0.7, mix(float(_GLF_FUZZED(vec3(-696.742, 8.8, -0.0).x)), float(-0.7), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))), float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))))), bool(false))))) + 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-66.33), mix(float(_GLF_FUZZED(-66.33)), float(_GLF_IDENTITY(_GLF_FUZZED(-604.061), (false ? _GLF_FUZZED(656.269) : _GLF_FUZZED(-604.061)))), bool(false))) : _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), min(_GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(mat3x2(float(0.0), 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x2(float(0.0), 1.0, 0.0, 0.0, 1.0, 0.0)))))), float(0.0))), float(_GLF_FUZZED(-0.7)), bool(false)))))) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.x)), (uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))), 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.3)), float(0.0), bool(true))), 1.0, 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.3) : 1.0)) : _GLF_FUZZED(5.9)))), (mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.3) : 1.0)) : _GLF_FUZZED(5.9))))) * mat2(1.0)) * (mat4x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0)), mix(float(float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0))), float(_GLF_FUZZED(6224.2987)), bool(false)))), _GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), sqrt(1.0))), 0.0, 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(-66.33) : _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), _GLF_IDENTITY(max(float(0.0), float(0.0)), clamp(max(float(0.0), float(0.0)), max(float(0.0), float(0.0)), _GLF_IDENTITY(max(float(0.0), float(0.0)), mix(float(max(float(0.0), float(0.0))), float(_GLF_FUZZED(2999.6903)), bool(false)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))), _GLF_IDENTITY(max(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))), float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false))))), clamp(max(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))), float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false))))), _GLF_IDENTITY(max(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))), float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false))))), (true ? max(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))), float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false))))) : _GLF_FUZZED(2842.3869))), max(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))), float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec3(-8.1, -31.80, 16.53)) : vec3(-0.7, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7)))), float(_GLF_FUZZED(-279.701)), bool(false)))))))), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-66.33), mix(float(_GLF_FUZZED(-66.33)), float(_GLF_IDENTITY(_GLF_FUZZED(-604.061), (false ? _GLF_FUZZED(656.269) : _GLF_FUZZED(-604.061)))), bool(false))) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.7)), bool(false)))))) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.x))) * 1u)) << 0u)) + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))), min(1, 1))), 0 ^ (min(1, _GLF_IDENTITY(1, min(1, 1))))))) % subgroup_size), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))), min(1, 1))), 0 ^ (min(1, _GLF_IDENTITY(1, min(1, 1))))))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_IDENTITY(_GLF_FUZZED(22898), (_GLF_FUZZED(22898)) / 1))), (true ? 1 : _GLF_FUZZED(98435))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_IDENTITY(_GLF_FUZZED(22898), (_GLF_FUZZED(22898)) / 1))), (true ? 1 : _GLF_FUZZED(98435))))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_IDENTITY(_GLF_FUZZED(22898), (_GLF_FUZZED(22898)) / 1))), (true ? 1 : _GLF_FUZZED(98435))))), min(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_IDENTITY(_GLF_FUZZED(22898), (_GLF_FUZZED(22898)) / 1))), (true ? 1 : _GLF_FUZZED(98435))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_IDENTITY(_GLF_FUZZED(22898), (_GLF_FUZZED(22898)) / 1))), (true ? 1 : _GLF_FUZZED(98435)))))))) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), (false ? _GLF_FUZZED(-16858) : _GLF_IDENTITY(4, (4) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, ~ (~ ((4) * 1))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, ~ (~ ((4) * _GLF_IDENTITY(1, (1) + 0)))))), clamp((_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, ~ _GLF_IDENTITY((~ ((4) * 1)), ((~ ((4) * 1))) | 0)))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, ~ (~ ((4) * _GLF_IDENTITY(1, ~ (~ (1)))))))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, ~ (~ ((4) * 1)))))))) | ((_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, ~ (~ ((4) * 1))))))) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) * 1)))) | 0), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) << 0)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(2, (2) << 0)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | 0u), 1u, 1u), ~ (~ (uvec4(uint(_GLF_IDENTITY(2, (2) << 0)), 1u, 1u, 1u))))), 0u | (uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(2, (2) << 0)), 1u, 1u, 1u), ~ (~ (uvec4(uint(_GLF_IDENTITY(2, (2) << 0)), 1u, 1u, 1u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(2, (2) << 0)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | 0u), 1u, 1u), ~ (~ (uvec4(uint(_GLF_IDENTITY(2, (2) << 0)), 1u, 1u, 1u))))), 0u | (uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(2, (2) << 0)), 1u, 1u, 1u), ~ (~ (uvec4(uint(_GLF_IDENTITY(2, (2) << 0)), 1u, 1u, 1u))))))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(2, (2) << 0)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | 0u), 1u, 1u), ~ (~ (uvec4(uint(_GLF_IDENTITY(2, (2) << 0)), 1u, 1u, 1u))))), 0u | (uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(2, (2) << 0)), 1u, 1u, 1u), ~ (~ (uvec4(uint(_GLF_IDENTITY(2, (2) << 0)), 1u, 1u, 1u)))))))))))), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), int(int((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED((false ? 7888 : 72267)))))))), (4)))) | ((_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), 1)), (int(ivec2(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), 1))) | (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), 1)), (int(ivec2(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), 1))) ^ 0))))))), (4))) | (_GLF_IDENTITY(4, max(4, 4)))));
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
