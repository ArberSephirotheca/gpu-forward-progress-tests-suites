#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_10 {
 vec2 _f0;
 vec4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_9 {
 ivec4 _f0;
 int _f1;
 mat2x3 _f2;
 float _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_8 {
 bool _f0;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 bvec2 _f1;
 _GLF_struct_9 _f2;
 ivec3 _f3;
 _GLF_struct_10 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 mat3x4 _f1;
 ivec3 _f2;
 mat2 _f3;
 mat4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 float _f1;
 bvec3 _f2;
 vec2 _f3;
 mat3x4 _f4;
 int _f5;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 mat3 _f1;
 mat3x4 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 ivec4 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 mat3 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat2x4 _f1;
 mat3x4 _f2;
 ivec4 _f3;
 ivec2 _f4;
 uvec2 _f5;
 float _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_2 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_11 _f2;
 uint num_workgroup;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size;
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x = subgroup_size;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x = subgroup_local_id;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_2(_GLF_struct_0(mat2x3(1.0), mat2x4(1.0), mat3x4(1.0), ivec4(1), ivec2(1), uvec2(1u), 1.0), _GLF_struct_1(mat4x2(1.0), bvec3(true))), _GLF_struct_7(mat4(1.0), ivec4(1), _GLF_struct_3(mat4x3(1.0), mat3(1.0), mat3x4(1.0), uvec2(1u)), _GLF_struct_4(uvec2(1u), 1.0, bvec3(true), vec2(1.0), mat3x4(1.0), 1), mat3(1.0), _GLF_struct_5(vec2(1.0)), _GLF_struct_6(mat2x4(1.0), mat3x4(1.0), ivec3(1), mat2(1.0), mat4(1.0), bvec2(true))), _GLF_struct_11(_GLF_struct_8(true), bvec2(true), _GLF_struct_9(ivec4(1), 1, mat2x3(1.0), 1.0, bvec3(true)), ivec3(1), _GLF_struct_10(vec2(1.0), vec4(1.0), mat4(1.0)), bvec3(true)), gl_NumWorkGroups.x);
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z * workgroup_id;
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y = workgroup_base;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y;
 uint virtual_gid = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_id * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x + GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x;
 uint next_virtual_gid = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_id * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x + ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
