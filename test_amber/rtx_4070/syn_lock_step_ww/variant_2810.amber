#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false), bool(bvec2(_GLF_DEAD(false), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)))), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, true, true)))) && true)), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, sqrt(1.0), 0.0, tan(sin(0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0))), dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0)))), 0.0, sqrt(0.0))))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, sqrt(1.0), 0.0, tan(sin(0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0))), dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0)))), 0.0, sqrt(0.0))))))), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, sqrt(1.0), 0.0, tan(sin(0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0))), dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0)))), _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, abs(1.0)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, abs(1.0)), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, sin(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, sin(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), mix(float(dot(vec4(1.0, 0.0, sin(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(120.100)), bool(false)))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, abs(1.0)), vec4(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, abs(1.0)), vec4(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0))), 1.0, tan(0.0), 1.0, abs(0.0), 1.0, 0.0, 0.0))), sqrt(0.0))))), vec2(mat2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, sqrt(1.0), 0.0, tan(sin(0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0))), dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0)))), 0.0, sqrt(0.0))))), 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), min(vec2(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, sqrt(1.0), 0.0, tan(sin(0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0))), dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0)))), 0.0, sqrt(0.0))))), vec2(mat2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, sqrt(1.0), 0.0, tan(sin(0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0))), dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0)))), 0.0, sqrt(0.0))))), 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, sqrt(1.0), 0.0, tan(sin(0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0))), dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0)))), 0.0, sqrt(0.0))))), _GLF_IDENTITY(vec2(mat2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, sqrt(1.0), 0.0, tan(sin(0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0))), dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), 0.0 + (log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), 0.0, sqrt(0.0))))), 1.0, 0.0)), (_GLF_IDENTITY(vec2(mat2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, sqrt(1.0), 0.0, tan(sin(0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0))), dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), 0.0 + (log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), 0.0, sqrt(0.0))))), 1.0, 0.0)), vec2(mat4x2(vec2(mat2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, sqrt(1.0), 0.0, tan(sin(0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, log(1.0))), dot(vec4(1.0, cos(0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), 0.0 + (log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), 0.0, sqrt(0.0))))), 1.0, 0.0)), 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0)))) / abs(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0)))))).y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false)))) && true), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), false || (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(vec2(8.8, 41.09).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)).x, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)).x : _GLF_FUZZED(mix(1308.4203, 947.387, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), mix(float(_GLF_FUZZED(35.13)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), 0.0 + (float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x))), bool(true)))) * 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), true, true)), true && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, true)))))))) && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))) || false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(-4217.4646) : min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0), max(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0), max(vec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))), 1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.5, 1.5)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), vec2(0.0, 0.0) + (injectionSwitch)), 1.0))), vec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0)))))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, 0.0)) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-956.655)), float(injectionSwitch.y), bool(true)))) / exp(0.0)))))))), false || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0), max(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0), max(vec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))), 1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.5, 1.5)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), vec2(0.0, 0.0) + (injectionSwitch)), 1.0))), vec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0)))))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, 0.0)) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-956.655)), float(injectionSwitch.y), bool(true)))) / exp(0.0)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) | 0u))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x), ((_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x)) + 0u)), gl_WorkGroupID.x, gl_WorkGroupID.x)) >> 0u))), max(~ (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))).x, gl_WorkGroupID.x, gl_WorkGroupID.x), max(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))), (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), _GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(uvec4(uvec3(gl_WorkGroupID), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)))))))))) ^ uvec3(0u, 0u, 0u))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))).x)))), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) + (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), max(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))), (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID))))) ^ uvec3(_GLF_IDENTITY(0u, (0u) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 0u))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))).x))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u))), max(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x, uint(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), clamp(uvec4(0u, 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)))))) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED(132221u))), 0u))), (0u & 23887u) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED(132221u))), 0u))))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u))))))))))) ^ 0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x), ((_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ _GLF_IDENTITY((gl_WorkGroupID.x), (0u & 91021u) | ((gl_WorkGroupID.x))))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x)) + 0u)), gl_WorkGroupID.x, gl_WorkGroupID.x)) >> 0u))), max(~ (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))).x, gl_WorkGroupID.x, gl_WorkGroupID.x), max(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))), (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), _GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(uvec4(uvec3(gl_WorkGroupID), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)))))))))) ^ uvec3(0u, 0u, 0u))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))).x), ~ (_GLF_IDENTITY(~ (clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))), (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), _GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(uvec4(uvec3(gl_WorkGroupID), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)))))))))) ^ uvec3(0u, 0u, 0u))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))).x)), 0u ^ (~ (clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))), (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), _GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(uvec4(uvec3(gl_WorkGroupID), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)))))))))) ^ uvec3(0u, 0u, 0u))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))).x))))))))), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) + (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), max(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))), (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID))))) ^ uvec3(_GLF_IDENTITY(0u, (0u) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 0u))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))).x))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u))), max(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x, uint(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), clamp(uvec4(0u, 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)))))) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED(132221u))), 0u))), (0u & 23887u) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED(132221u))), 0u))))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u)))))))))), 1u * (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u))), max(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x, uint(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), clamp(uvec4(0u, 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)))))) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED(132221u))), 0u))), (0u & 23887u) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED(132221u))), 0u))))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u)))))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))), gl_WorkGroupID, gl_WorkGroupID)), (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u))), max(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID.x), max(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x))))), 1u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x, uint(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), clamp(uvec4(0u, 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)))))) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED(132221u))), 0u))), (0u & 23887u) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED(132221u))), 0u))))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x, 1u, 0u)))))))))))))))) ^ 0u))))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (~ (gl_WorkGroupID.x)) >> 0u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), max(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))), gl_WorkGroupID.x)), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))))), (~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))))) | _GLF_IDENTITY(0u, max(0u, 0u)))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_size, workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : max(workgroup_size, workgroup_size))), min(max(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size), max(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 1u)))) - 0u), workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), workgroup_base)) + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size))) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))))) % subgroup_size), ~ (~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))))))))), (uint(uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))))) % subgroup_size))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-21561))), _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1))) ^ 0, (0 & 56879) | _GLF_IDENTITY(((1) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(7), int(7)))))), _GLF_IDENTITY(0, 0 ^ (0))))))), ~ (~ _GLF_IDENTITY((((1) ^ 0)), ((((1) ^ 0))) + 0)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) | 0))), clamp(1, _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) << 0), 1, 0))), 1))), _GLF_IDENTITY(min((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) << 0), 1, 0))), 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) << 0), 1, 0))), 1))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) << 0), 1, 0))), 1))), 0 | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) << 0), 1, 0))), 1))))), 0, 0)))), 0 ^ (min((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) << 0), 1, 0))), 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) << 0), 1, 0))), 1))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) << 0), 1, 0))), 1))), 0 | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) << 0), 1, 0))), 1))))), 0, 0))))))) ^ 0, (0 & 56879) | _GLF_IDENTITY(((1) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), 0 ^ (0))))))), ~ (~ (((1) ^ 0))))))), min(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1))) ^ 0, (0 & 56879) | _GLF_IDENTITY(((1) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) >> 0), max(0, 0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))))), ~ (~ (((1) ^ 0))))))), uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1))) ^ 0, (0 & 56879) | _GLF_IDENTITY(_GLF_IDENTITY(((1) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))))), ~ (~ (((1) ^ 0)))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(((1) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))))), ~ (~ (((1) ^ 0)))), 0 + (_GLF_IDENTITY(((1) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))))), ~ (~ (((1) ^ 0)))))), 0, (1 ^ (1 ^ 0)), 1)))))))), uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1))) ^ 0, (0 & 56879) | _GLF_IDENTITY(((1) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (false ? _GLF_FUZZED(-8778) : _GLF_IDENTITY(0, 0 ^ (0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 ^ (0))))))))), ~ (~ (((1) ^ 0))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1))) ^ 0, (0 & 56879) | _GLF_IDENTITY(_GLF_IDENTITY(((1) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))))), ~ (~ (((1) ^ 0)))), 0 ^ (_GLF_IDENTITY(((1) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))))), ~ (~ (((1) ^ 0))))))))), (false ? _GLF_FUZZED(packSnorm2x16(vec2(0.3, 529.927))) : uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1))) ^ 0, _GLF_IDENTITY((0 & 56879) | _GLF_IDENTITY(((1) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(0, 0))))))))), ~ (~ (((1) ^ 0)))), ((0 & 56879) | _GLF_IDENTITY(((1) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))))), ~ (~ (((1) ^ 0))))) - 0)))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
