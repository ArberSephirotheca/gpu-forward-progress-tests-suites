#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 mat4x2 _f0;
 uint subgroup_local_id;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_10 {
 uvec3 _f0;
 ivec4 _f1;
 _GLF_struct_9 _f2;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 bvec3 _f1;
 bvec4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
 _GLF_struct_7 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 mat2x4 _f1;
 bvec2 _f2;
 ivec4 _f3;
 mat2 _f4;
 mat3x2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 _GLF_struct_5 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_3 {
 int _f0;
 mat4x3 _f1;
 bvec4 _f2;
 mat2x4 _f3;
 uint workgroup_base;
 mat4x3 _f4;
 mat4x2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 float _f1;
 mat4 _f2;
 mat4x2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 vec2 _f1;
 _GLF_struct_3 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_6 _f3;
 mat2x3 _f4;
 _GLF_struct_8 _f5;
 _GLF_struct_10 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-509.191 / -26.83)), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210)), _GLF_IDENTITY(min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210)), vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210))), mix(vec2((min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210)), vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210))))[0], _GLF_IDENTITY((min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210)), vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210))))[1], ((min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210)), vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-1510.5210))))[1]) - 0.0)), vec2(_GLF_FUZZED(7.9), _GLF_FUZZED(62.23)), bvec2(false, false)))), bvec2(true, false))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), true, true, true))), true, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-73.66, -8936.7609)) : injectionSwitch)).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false) && true), ! (! (bool((false) && true))))), bool(bvec4(bool(_GLF_IDENTITY(bool((false) && true), ! (! (bool((false) && true))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, false, false))))), true)), false || (bool(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, false, false))))), true)))))))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat4x2(1.0), gl_SubgroupInvocationID);
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false))), false))), false)), true))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true)))), true)))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bvec4((false), true, true, false)))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false)))))))), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))), false)), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, false)), true, true))), false, true)))), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), false)), true))))), true, false))))))), true, true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))) && true))), false)), true, true))), true))))), false)))), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), true))))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), true))))), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), true))))), true)))), false))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), false, true))), true)), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)))), false, false))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), false, true))), true)), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)))), false, false))), false))))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)), true, true))), true)), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y)), true))), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true))))), false)))), true), true)))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), _GLF_IDENTITY(true, (true) && true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), _GLF_IDENTITY(true, (true) && true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), false || ((! (false))))), (bool(_GLF_IDENTITY((! (false)), false || ((! (false)))))) || false)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), false || ((! (false))))), (bool(_GLF_IDENTITY((! (false)), false || ((! (false)))))) || false)), true, false)), bool(bool(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), false || ((! (false))))), (bool(_GLF_IDENTITY((! (false)), false || ((! (false)))))) || false)), true, false)))))))), false, false))), true)))), false)), false, true)), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), true)))), false)), false, true)), false, false)), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), false), true)))), true, true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true))))), false)))), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, _GLF_IDENTITY(false, (false) && true))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), true)))), false)))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), false))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(false, true))))), true, true))), true))))), false)))), true))))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), _GLF_IDENTITY(true, (true) && true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), _GLF_IDENTITY(true, (true) && true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), false || ((! (false))))), (bool(_GLF_IDENTITY((! (false)), false || ((! (false)))))) || false)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), false || ((! (false))))), (bool(_GLF_IDENTITY((! (false)), false || ((! (false)))))) || false)), true, false)), bool(bool(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), false || ((! (false))))), (bool(_GLF_IDENTITY((! (false)), false || ((! (false)))))) || false)), true, false)))))))), false, false))), true)))), false)), false, true)), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), true)))), false)), false, true)), false, false)), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), false), true)))), true, true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true))))), false)))), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, _GLF_IDENTITY(false, (false) && true))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), true)))), false)))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), false))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(false, true))))), true, true))), true))))), false)))), true))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), _GLF_IDENTITY(true, (true) && true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), _GLF_IDENTITY(true, (true) && true)))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), false || ((! (false))))), (bool(_GLF_IDENTITY((! (false)), false || ((! (false)))))) || false)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), false || ((! (false))))), (bool(_GLF_IDENTITY((! (false)), false || ((! (false)))))) || false)), true, false)), bool(bool(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), false || ((! (false))))), (bool(_GLF_IDENTITY((! (false)), false || ((! (false)))))) || false)), true, false)))))))), false, false))), true)))), false)), false, true)), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), true)))), false)), false, true)), false, false)), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), false), true)))), true, true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true))))), false)))), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, _GLF_IDENTITY(false, (false) && true))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)), true)))), false)))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), false))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(false, true))))), true, true))), true))))), false)))), true))))))), false)))))), false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))), (injectionSwitch.x > injectionSwitch.y))))), true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.3, 45.46)) : injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.3, 45.46)) : injectionSwitch)).y))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(true, true))), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(1u)), ((uvec3(1u))) | ((uvec3(1u))))), _GLF_struct_1(_GLF_struct_0(ivec2(1), mat4x3(1.0)), mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_struct_4(_GLF_struct_2(mat3x2(1.0), 1.0, _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(956.439, 7.4, 3887.9268, 4.0, 577.274, -215.711, -147.605, 2900.4305, -2940.6494, -3998.6889, -961.506, _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(1.6)), float(7.7), bool(true))), _GLF_IDENTITY(-978.078, max(-978.078, -978.078)), -567.789, 9.3, -5.8)) : mat4(1.0))), mat4x2(1.0), mat2(1.0)), vec2(1.0), _GLF_struct_3(1, mat4x3(1.0), bvec4(true), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0)), (false ? _GLF_FUZZED(vec3(9.3, -4.8, -9.1).t) : float(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-42.60) : _GLF_IDENTITY(1.0, (1.0) * 1.0))), min(1.0, 1.0)), 1.0))), workgroup_size * workgroup_id, mat4x3(1.0), mat4x2(1.0), vec3(1.0)), bvec3(_GLF_IDENTITY(true, ! (! (true))))), _GLF_struct_6(uvec3(1u), _GLF_struct_5(mat3x4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), float(vec2(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), float(vec2(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), 1.0)))), float(_GLF_IDENTITY(mat4(min(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), float(vec2(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), 1.0)))), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), (mat4(min(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), float(vec2(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), 1.0)))), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), ((_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), float(vec2(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), 1.0)))), float(_GLF_IDENTITY(mat4(min(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), float(vec2(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), 1.0)))), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), (mat4(min(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), float(vec2(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), 1.0)))), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) * 1.0) / cos(0.0))), mix(float(_GLF_FUZZED(-1.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), float(vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(949.226) : float(vec4(1.0, 1.0, 1.0, 0.0))))), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(7.5)), float(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0)))), bool(true)))))), bool(true))), 1.0)))), (_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, log(1.0) + (_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 1.0, 1.0, 0.0))), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))), 1.0)))), float(mat4(min(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 0.0)), (true ? float(vec4(1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(pow(-2.1, 9.9))))), float(vec2(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))), 1.0)))), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0)), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))) / cos(0.0)))), bool(true)))))), 1.0))), mat2x4(1.0), bvec2(true), ivec4(1), mat2(1.0), mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.9)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true)))), mat4x3(1.0)), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(uvec3(uvec3(1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, uint(uvec4((1u) + 0u, 1u, 0u, 1u)))))), 1u)))))), mat2x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), _GLF_struct_8(mat3x4(1.0), _GLF_struct_7(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * exp(0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))), mix(float(float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))))), float(_GLF_FUZZED(2.7)), bool(false)))), 1.0)), (false ? _GLF_FUZZED(sign(vec2(-714.705, 3.6))) : vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * exp(0.0)), max(_GLF_IDENTITY(0.0, (0.0) * exp(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * exp(0.0)), (false ? _GLF_FUZZED(66.54) : _GLF_IDENTITY(0.0, (0.0) * exp(0.0)))))), 0.0, 1.0, 1.0))))), injectionSwitch)).x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((true) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))), bvec3(true), bvec4(_GLF_IDENTITY(true, (true) && true)), vec3(1.0)), mat2x4(1.0)), _GLF_struct_10(uvec3(1u), ivec4(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(64415)))), _GLF_struct_9(mat3x4(1.0), uvec4(1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_11._f2._f2.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(uint(any(bvec3(false, false, true)))))))), _GLF_IDENTITY(max(_GLF_struct_replacement_11._f2._f2.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_11._f2._f2.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), min(_GLF_struct_replacement_11._f2._f2.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_struct_replacement_11._f2._f2.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u ^ 0u)) * subgroup_size))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (max(_GLF_struct_replacement_11._f2._f2.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_11._f2._f2.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), min(_GLF_struct_replacement_11._f2._f2.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_struct_replacement_11._f2._f2.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u ^ 0u)) * subgroup_size)))))))) + _GLF_struct_replacement_12.subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_11._f2._f2.workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), (_GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) ^ 0)) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) / 1), _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (1)) : _GLF_FUZZED((-80833 * _GLF_IDENTITY(abs(70082), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-16868) : abs(70082))))))))))) % subgroup_size, max(_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), (_GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) ^ 0)) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) / 1), _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (1)) : _GLF_FUZZED((-80833 * _GLF_IDENTITY(abs(70082), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-16868) : abs(70082))))))))))) % subgroup_size, (0u ^ 0u) ^ ((_GLF_struct_replacement_12.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), (_GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) ^ 0)) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) / 1), _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (1)) : _GLF_FUZZED((-80833 * _GLF_IDENTITY(abs(70082), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-16868) : abs(70082))))))))))) % subgroup_size)), (_GLF_struct_replacement_12.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), (_GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) ^ 0)) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) / 1), _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (1)) : _GLF_FUZZED((-80833 * _GLF_IDENTITY(abs(70082), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-16868) : abs(70082))))))))))) % subgroup_size)), (_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1))))))), (~ (~ (1))) | (~ (~ (1))))))))))), min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (~ (~ (1))))))))))), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), max(~ (_GLF_IDENTITY(~ (1), (~ (1)) + 0)), _GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), _GLF_IDENTITY(((~ (1))), max(((~ (1))), _GLF_IDENTITY(((~ (1))), int(_GLF_IDENTITY(ivec3(((~ (1))), 1, 0), ~ (~ (ivec3(((~ (1))), 1, 0)))))))) | ((~ (1))))) - _GLF_IDENTITY(0, 1 * (0))), (~ (~ (1))) | (~ (~ (1)))))))))))))) % subgroup_size, ((_GLF_struct_replacement_12.subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), clamp((1), (1), (1)))))))) % subgroup_size) >> 0u)) | 0u), (_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), ~ _GLF_IDENTITY((~ (1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((~ (1)), ((~ (1))) | ((~ (1)))) : _GLF_FUZZED((_GLF_IDENTITY(-80833 * _GLF_IDENTITY(abs(70082), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-16868) : abs(70082))), (-80833 * _GLF_IDENTITY(abs(70082), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-16868) : abs(70082)))) | 0))))))))) % subgroup_size, (_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), 0 ^ (~ (~ (1)))), min(~ (~ (1)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), ~ (~ (1)))), int(ivec4(_GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), ~ (~ (1)))), 0, 1, 1))))), (~ (~ (1))) | (~ (~ (1))))))))))), min(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), clamp(~ (_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(1, 0 | (1))))))), _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (~ (~ (1))))))))))), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), max((1), (1)))))), (~ (~ (1))) | (~ (~ (1)))))))))))))) % subgroup_size, ((_GLF_struct_replacement_12.subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) - 0))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(1, (1) - 0)))), (~ ((~ (_GLF_IDENTITY(1, (1) - 0))))) >> 0))))))) % subgroup_size) >> 0u)) | 0u)) ^ 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(max(injectionSwitch, smoothstep(vec2(-99.12, -174.650), vec2(-1047.4928, 9.5), vec2(2.7, 915.796))))))), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))) || false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))) || false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))), 64, _GLF_IDENTITY(4, (4) ^ 0));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))) && (_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(false, bool(bool(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false) && true))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), false || (! (_GLF_IDENTITY((false), ((false)) || false)))))) && true, true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), false || (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (((false))) || false)) && true) || false)))))) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, ! (! (true))))))))))), (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), ((false)) || _GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY((false), ((false)) || false))), ! _GLF_IDENTITY((! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || false))))), ! (_GLF_IDENTITY(! ((! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || false)))))), (! ((! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || _GLF_IDENTITY(false, false || (false))))))))) && true))))))) && true)))) || false), ! (! ((false) && true)))))))), true && _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), ! (! ((false)))) && true))))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), false, false))), false, true))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y)) || (false)))))), ! (! ((false)))) && true))))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_IDENTITY(true, ! (! (true))), false))) && true))))), false, false))), false, true)))) || false)), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, false || (false))) && true))))))), ! (! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, (false) && true))))))))), (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))))) && true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))) && (_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), false || (! (_GLF_IDENTITY((false), ((false)) || false)))))) && true, true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), false || (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), ((_GLF_IDENTITY((false), bool(bvec2((false), false))))) || false)) && true) || false)))))) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, ! (! (true))))))))))), (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), ((false)) || _GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY((false), ((false)) || false))), ! _GLF_IDENTITY((! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || false))))), ! (_GLF_IDENTITY(! ((! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || false)))))), (! ((! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || _GLF_IDENTITY(false, false || (false))))))))) && true))))))) && true)), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), ((false)) || _GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY((false), ((false)) || false))), ! _GLF_IDENTITY((! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || false))))), ! (_GLF_IDENTITY(! ((! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || false)))))), (! ((! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || _GLF_IDENTITY(false, false || (false))))))))) && true))))))) && true))), ! (_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), ((false)) || _GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY((false), ((false)) || false))), ! _GLF_IDENTITY((! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || false))))), ! (_GLF_IDENTITY(! ((! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || false)))))), (! ((! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || _GLF_IDENTITY(false, false || (false))))))))) && true))))))) && true)))), ! (! (! (! (! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), ((false)) || _GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY((false), ((false)) || false))), ! _GLF_IDENTITY((! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || false), true))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ((false)) || false))), (false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((false), true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), ((false)) || false)))) || false)))), (! ((! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), true, false, true))), ((false)) || _GLF_IDENTITY(false, false || (false))))))))) && true))))))) && true))))))))))))) || false), ! (! ((false) && true)))))))), true && _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), ! (! ((false)))) && true))))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), false, false))), false, true))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(994.628, -0.7, -47.78, -9790.9878))))), 1.0 * (float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(994.628, -0.7, -47.78, -9790.9878)))))))), 0.0, 0.0))).y)) || (false)))))), ! (! ((false)))) && true))))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), false))) && true))))), false, false))), false, true)))) || false)), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, false || (false))) && true))))))), ! (! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, cos(0.0), round(length(normalize(1.0))), 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (mat4(injectionSwitch, 1.0, 0.0, cos(0.0), round(length(normalize(1.0))), 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, cos(0.0), round(length(normalize(1.0))), 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (mat4(injectionSwitch, 1.0, 0.0, cos(0.0), round(length(normalize(1.0))), 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).y) * 1.0)))))) && (_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, (false) && true))))))))), (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (uint(2)) << 0u)) / 1u), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(false)))), (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, false)))) || false, ((_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, false)))) || false) || false))), bool(bool((! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, false)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, false)))) || false), (! ((_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, false)))) || false)) && true)))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
