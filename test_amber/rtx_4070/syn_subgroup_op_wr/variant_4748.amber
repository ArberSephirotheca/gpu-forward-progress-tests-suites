#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false))))), true)))), false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), false))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), false))), false)), false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), false))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), false))), false)), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), false))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), false))), false)), false))), true))), false, true)))))), false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8829.0119), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(28.53)), bvec2(true, false))))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true && (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), ! (! (bool(bvec3(false, true, false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u) % subgroup_size);
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) - 0))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0))[0], _GLF_FUZZED(26.73), _GLF_FUZZED(-854.998), _GLF_FUZZED(-6.6)), vec4(_GLF_FUZZED(-62.44), (vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), float(mat4x3(float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))) / 1.0), 1.0, 1.0, 0.0))[3]), bvec4(false, true, true, true)))))) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(max((subgroup_local_id % 2), (subgroup_local_id % 2)), 0u | (_GLF_IDENTITY(max((subgroup_local_id % 2), (subgroup_local_id % 2)), (max((subgroup_local_id % 2), (subgroup_local_id % 2))) - (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))), uint(uvec2((_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2)))), (1u ^ 1u)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2)))), uint(uvec2((_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) % 2)))), (1u ^ _GLF_IDENTITY(1u, (1u) | (1u))))))))), (_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(min(2, 2), (min(2, 2)) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))))))), (_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << 0u)))))) >> 0u), (1u & 1u) * (_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % _GLF_IDENTITY(2, (2) | (2)))))), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), clamp((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2), _GLF_IDENTITY((subgroup_local_id % 2), 0u ^ ((subgroup_local_id % 2))), (subgroup_local_id % 2))), max((subgroup_local_id % 2), (subgroup_local_id % 2))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u)), clamp((subgroup_local_id % 2), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))), _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) ^ 0u))), max((subgroup_local_id % 2), (subgroup_local_id % 2)))) / 1u)), (_GLF_IDENTITY(1u, (1u) ^ 0u) ^ 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2))), (_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2)))) | (_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2))))), clamp(_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2))), _GLF_IDENTITY((subgroup_local_id % 2), max((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) ^ 0u)), (subgroup_local_id % 2))), _GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2)))))), (_GLF_IDENTITY((subgroup_local_id % 2), max((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), (true ? ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) : _GLF_FUZZED(subgroup_local_id))), 0u, (0u ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u)) % _GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) | (_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) ^ ivec2(0, 0))))))), (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)))))))) >> 0u))) == _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) / 1) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35039), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-35039), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) ^ 0))))))), (false ? _GLF_FUZZED(6392) : (_GLF_IDENTITY(_GLF_FUZZED(-35039), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) ^ 0))))))))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0), (_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0), int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0), 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0), (_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0), int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0), 1)))))) ^ 0)) << (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (0 << _GLF_IDENTITY(int(7), int(7))) + (3))), int(3)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_IDENTITY(_GLF_FUZZED(-35039), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) ^ 0)))) >> 0), min(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_IDENTITY(_GLF_FUZZED(-35039), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) ^ 0)))) >> 0), _GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_IDENTITY(_GLF_FUZZED(-35039), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) ^ 0)))) >> 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0), (_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0), int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0), 1)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0), (_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0), int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(-35039), (_GLF_FUZZED(-35039)) >> 0), 1))))))) << 0) << (0 >> _GLF_IDENTITY(int(3), int(3)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)))))), ! (! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(-7.9)), bvec2(false, false))).y)) || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true))))))))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! (! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false)) || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! (! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (! ((! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), _GLF_IDENTITY(bool(bvec3(! (! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(! (! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! ((! (false)))), _GLF_IDENTITY(bool(bvec2(! (! ((! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(! (! ((! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((! (false)))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! ((! (false)))), _GLF_IDENTITY(bool(bvec2(! (! ((! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(! (! ((! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((! (false)))))))))))))))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, false || (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), (virtual_gid) + 0u)], 4, 64, _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), min((2), (2))))), (_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)], 4, 64, 2), (_GLF_IDENTITY(false ? _GLF_FUZZED(read) : atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), (clamp(virtual_gid, virtual_gid, virtual_gid)) | (clamp(virtual_gid, virtual_gid, virtual_gid)))), (virtual_gid) + 0u)], 4, 64, 2), clamp(false ? _GLF_FUZZED(read) : atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), (clamp(virtual_gid, virtual_gid, virtual_gid)) | (clamp(virtual_gid, virtual_gid, virtual_gid)))), (virtual_gid) + 0u)], 4, 64, 2), false ? _GLF_FUZZED(read) : atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), (clamp(virtual_gid, virtual_gid, virtual_gid)) | (clamp(virtual_gid, virtual_gid, virtual_gid)))), (virtual_gid) + 0u)], 4, 64, 2), false ? _GLF_FUZZED(read) : atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), (clamp(virtual_gid, virtual_gid, virtual_gid)) | (clamp(virtual_gid, virtual_gid, virtual_gid)))), (virtual_gid) + 0u)], 4, 64, 2)))))) - 0u);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-74.05 + 61.75))), float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), bool(true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-74.05 + 61.75))), float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), bool(true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-74.05 + 61.75))), float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), bool(true))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), false || ((! (_GLF_IDENTITY(false, ! (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_base))), ~ (_GLF_IDENTITY(~ (virtual_gid), uint(uint(~ (virtual_gid))))))) | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((num_workgroup)) : 0u))), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (true ? max(virtual_gid, virtual_gid) : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))), 0u ^ (_GLF_IDENTITY(~ (virtual_gid), uint(uint(~ (virtual_gid))))))))), ((_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((num_workgroup)) : 0u))), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (true ? max(virtual_gid, virtual_gid) : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))), 0u ^ (_GLF_IDENTITY(~ (virtual_gid), uint(uint(~ (virtual_gid)))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((num_workgroup)) : 0u))), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (true ? max(virtual_gid, virtual_gid) : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))), 0u ^ (_GLF_IDENTITY(~ (virtual_gid), uint(uint(~ (virtual_gid))))))))), ~ (~ ((_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((num_workgroup)) : 0u))), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (true ? max(virtual_gid, virtual_gid) : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))), 0u ^ (_GLF_IDENTITY(~ (virtual_gid), uint(uint(~ (virtual_gid)))))))))))))))], 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) / 1), 2))) * 1)), min(_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))))), ((virtual_gid) | (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), clamp(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))))))))) | 0u))], 4, 64, 2), max(atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) / 1u), 1u * (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) / 1u))) | (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) - 0u) | 0u), _GLF_IDENTITY(0u ^ (~ (virtual_gid)), (0u ^ (~ (virtual_gid))) >> 0u)))))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), uint(uvec4((virtual_gid), 0u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))) | ((virtual_gid)), 0u + ((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), virtual_gid, virtual_gid))), uint(uvec4((virtual_gid), 0u, 1u, 1u)))) | (_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))), (virtual_gid)))) ^ 0u)))))) >> 0u), 0u ^ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid)))))), max(_GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid)))))), ((~ _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))))))) / 1u), (~ _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid)))))))))), max((_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), uint(uvec4((virtual_gid), 0u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))) | ((virtual_gid)), 0u + ((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), virtual_gid, virtual_gid))), uint(uvec4((virtual_gid), 0u, 1u, 1u)))) | (_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))), (virtual_gid)))) ^ 0u)))))) >> 0u), 0u ^ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid)))))), max(_GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid)))))), ((~ _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))))))) / 1u), (~ _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid)))))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY((virtual_gid), uint(uvec4((virtual_gid), 0u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))) | ((virtual_gid)), 0u + ((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), virtual_gid, virtual_gid))), uint(uvec4((virtual_gid), 0u, 1u, 1u)))) | (_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))), (virtual_gid)))) ^ 0u)))))) >> 0u), 0u ^ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid)))))), max(_GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid)))))), ((~ _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))))))) / 1u), (~ _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid)))))))))))))))) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))) | (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))))))))], 4, 64, 2), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), ~ (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)) ^ (~ (virtual_gid)))))))], ~ (~ (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) ^ 0u), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid, virtual_gid)))), (_GLF_IDENTITY((~ (virtual_gid)), _GLF_IDENTITY(clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))), 0u | (clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))))))) | 0u), 0u ^ (_GLF_IDENTITY(0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid, virtual_gid)))), (_GLF_IDENTITY((~ (virtual_gid)), _GLF_IDENTITY(clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))), 0u | (clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))))))) | 0u), (0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid, virtual_gid)))), (_GLF_IDENTITY((~ (virtual_gid)), _GLF_IDENTITY(clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))), 0u | (clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))))))) | 0u)) << 0u))))))))]))), 4, 64, 2), min(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))))))], ~ (~ (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid, virtual_gid)))), (_GLF_IDENTITY((~ (virtual_gid)), _GLF_IDENTITY(clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))), 0u | (clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))))))) | 0u)))))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), 0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid, virtual_gid)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) << 0u), _GLF_IDENTITY(clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))), 0u | (clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))))))) | 0u))), ((_GLF_IDENTITY(~ (virtual_gid), 0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid, virtual_gid)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) << 0u), _GLF_IDENTITY(clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))), 0u | (clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))))))) | 0u)))) | ((_GLF_IDENTITY(~ (virtual_gid), 0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid, virtual_gid)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) << 0u), _GLF_IDENTITY(clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))), 0u | (clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))))))) | 0u))))))))) / (1u & 1u))]))), 4, 64, 2), atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))))))], ~ (~ (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid, virtual_gid)))), (_GLF_IDENTITY((~ (virtual_gid)), _GLF_IDENTITY(clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))), 0u | (clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))))))) | 0u), max(0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid, virtual_gid)))), (_GLF_IDENTITY((~ (virtual_gid)), _GLF_IDENTITY(clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))), 0u | (clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))))))) | 0u), 0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid, virtual_gid)))), (_GLF_IDENTITY((~ (virtual_gid)), _GLF_IDENTITY(clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))), 0u | (clamp((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (~ (virtual_gid))))))) | 0u))))))))]))), 4, 64, 2))))), atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u), (virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 0u ^ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 0u ^ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))))))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 0u ^ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 0u ^ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 0u ^ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u + (~ (virtual_gid)))) >> 0u), ~ (virtual_gid))), 0u ^ (~ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) - 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 0u ^ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))))))), uint(uvec4(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 0u ^ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))))))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY(0u ^ (~ (virtual_gid)), 0u ^ (0u ^ (~ (virtual_gid)))))), 0u ^ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (_GLF_IDENTITY(~ (virtual_gid), ~ (~ (_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))))))))))))))))), (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u)))) / 1u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))) | (0u ^ 0u))), 0u ^ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), ~ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), 0u))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), ~ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))), 0u)))))))) * 1u))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 0u ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), 0u ^ (~ (virtual_gid)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 0u ^ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u ^ _GLF_IDENTITY((~ (virtual_gid)), uint(_GLF_IDENTITY(uint((~ (virtual_gid))), uint(uvec2(uint((~ (virtual_gid))), 1u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ _GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid)))))), 0u ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 1u * (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 1u * (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))))), 0u, 0u))) | (uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 1u * (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))))), 0u, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u + (~ (virtual_gid)))) >> 0u), min(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u + (~ (virtual_gid)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u + (~ (virtual_gid)))) >> 0u), (true ? _GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 0u + (~ (virtual_gid)))) >> 0u) : _GLF_FUZZED(num_workgroup))))), ~ (virtual_gid))), 0u ^ (~ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) - 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 0u ^ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))))))), uint(uvec4(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid)))), 0u ^ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (~ (virtual_gid))))))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u ^ _GLF_IDENTITY((~ (virtual_gid)), max((~ (virtual_gid)), (~ (virtual_gid))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY(0u ^ (~ (virtual_gid)), 0u ^ (0u ^ (~ (virtual_gid)))))), 0u ^ (~ (_GLF_IDENTITY(~ (virtual_gid), 0u ^ (_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid))))), ~ (~ (~ (_GLF_IDENTITY(~ (virtual_gid), ~ (~ _GLF_IDENTITY((~ (virtual_gid)), ~ (~ (_GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) - 0u)))))))))))))))))))))))) / 1u)))], _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, _GLF_IDENTITY(2, (2) / 1))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec4((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0))), clamp(_GLF_IDENTITY(1.0, float(mat4x3(1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0))), _GLF_IDENTITY(1.0, float(mat4x3(1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0))), _GLF_IDENTITY(1.0, float(mat4x3(1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0)))))), float(_GLF_FUZZED(-2.8)), bool(false))))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.7) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), (1.0) / round(_GLF_IDENTITY(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), min(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), clamp(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))), _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(-4657.3627))), 0.0))).x, (true ? injectionSwitch.x : _GLF_FUZZED(mix(816.230, _GLF_IDENTITY(-6780.1621, _GLF_IDENTITY(float(mat4(-6780.1621, 1.0, 1.0, 1.0, abs(0.0), 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), sqrt(1.0), 1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(-6780.1621, 1.0, 1.0, 1.0, abs(0.0), 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), sqrt(1.0), 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-6.1)), float(float(mat4(-6780.1621, 1.0, 1.0, 1.0, abs(0.0), 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))), bool(true)))) - 0.0)), false)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), (true ? _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) : _GLF_FUZZED(-577.180))), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, exp(0.0), 1.0))))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), exp(0.0), 0.0))).x, (true ? injectionSwitch.x : _GLF_FUZZED(mix(816.230, -6780.1621, false)))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
