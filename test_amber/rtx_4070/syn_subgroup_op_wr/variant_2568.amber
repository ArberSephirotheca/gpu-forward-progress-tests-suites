#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))))))))), bool(bvec4(! (false), true, false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))), ! (! (bool(bool(false))))))), bool(bvec4(! (false), true, false, true)))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), bool(bvec4(! (false), true, false, true)))), true, false, true)))), bool(bool(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) || false))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), true, false, true)))))))))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (true ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | uvec3(0u, 0u, 0u))))), min((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), min((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (true ? uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupSize)), uvec3(uvec3(uvec3((gl_WorkGroupSize)))))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | ((gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(uvec3(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (true ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(32234u, ~ (~ (32234u))), 112766u, _GLF_IDENTITY(147415u, clamp(147415u, 147415u, _GLF_IDENTITY(147415u, (_GLF_IDENTITY(147415u, uint(_GLF_IDENTITY(uint(147415u), 0u | (uint(147415u)))))) | (147415u)))))))))) | ((gl_WorkGroupSize))))), (uvec3(uvec3(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (_GLF_IDENTITY(true, (true) || false) ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | ((gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u)))), min((~ (gl_WorkGroupSize)), (~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)))))) ^ uvec3(0u, 0u, 0u))).x, max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (true ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | uvec3(0u, 0u, 0u))))), min((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), min((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (_GLF_IDENTITY(true ? uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupSize)), uvec3(uvec3(uvec3((gl_WorkGroupSize)))))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)), max(true ? uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupSize)), uvec3(uvec3(uvec3((gl_WorkGroupSize)))))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)), true ? uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupSize)), uvec3(uvec3(uvec3((gl_WorkGroupSize)))))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u))))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (true ? uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupSize)), clamp(_GLF_IDENTITY(uvec3((gl_WorkGroupSize)), clamp(uvec3((gl_WorkGroupSize)), uvec3((gl_WorkGroupSize)), uvec3((gl_WorkGroupSize)))), uvec3((gl_WorkGroupSize)), _GLF_IDENTITY(uvec3((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (uvec3((gl_WorkGroupSize)))))))))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))))) | ((gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(uvec3(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (true ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(32234u, ~ (~ (32234u))), 112766u, _GLF_IDENTITY(147415u, clamp(147415u, 147415u, _GLF_IDENTITY(147415u, (147415u) | (147415u)))))))))) | ((gl_WorkGroupSize))))), (uvec3(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), ((gl_WorkGroupSize) | (gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ((true)) && true)))) || false) ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | ((gl_WorkGroupSize)))), clamp(uvec3(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), ((gl_WorkGroupSize) | (gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ((true)) && true)))) || false) ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | ((gl_WorkGroupSize)))), uvec3(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), ((gl_WorkGroupSize) | (gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ((true)) && true)))) || false) ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | ((gl_WorkGroupSize)))), uvec3(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), ((gl_WorkGroupSize) | (gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ((true)) && true)))) || false) ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | ((gl_WorkGroupSize)))))))) - uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, 0u)))))), 0u, 0u)))), min((~ (gl_WorkGroupSize)), (~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize)), min(_GLF_IDENTITY(~ ((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (~ ((gl_WorkGroupSize)))), _GLF_IDENTITY(~ ((gl_WorkGroupSize)), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (~ ((gl_WorkGroupSize))))))))) * uvec3(1u, 1u, 1u)))))) ^ uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (true ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec4((gl_WorkGroupSize), 1u)), uvec3(_GLF_IDENTITY(uvec3(uvec3(uvec4((gl_WorkGroupSize), 1u))), (uvec3(uvec3(uvec4((gl_WorkGroupSize), 1u)))) | (uvec3(uvec3(uvec4((gl_WorkGroupSize), 1u)))))))), ((gl_WorkGroupSize)) | uvec3(0u, 0u, 0u))))), min((~ (gl_WorkGroupSize)), _GLF_IDENTITY((~ (gl_WorkGroupSize)), min((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (true ? uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupSize)), uvec3(uvec3(uvec3((gl_WorkGroupSize)))))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | ((gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(uvec3(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (true ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(32234u, ~ (~ (32234u))), 112766u, _GLF_IDENTITY(147415u, clamp(147415u, 147415u, _GLF_IDENTITY(147415u, (147415u) | _GLF_IDENTITY((147415u), ((147415u)) | (_GLF_IDENTITY((147415u), ((147415u)) / 1u)))))))))))) | ((gl_WorkGroupSize))))), (uvec3(uvec3(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (_GLF_IDENTITY(true, (true) || false) ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | ((gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u)))), min((~ _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), (gl_WorkGroupSize)))), (~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u))))), (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (true ? uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupSize)), uvec3(uvec3(uvec3((gl_WorkGroupSize)))))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | ((gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(uvec3(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (true ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(32234u, ~ (~ (32234u))), 112766u, _GLF_IDENTITY(147415u, clamp(147415u, 147415u, _GLF_IDENTITY(147415u, (147415u) | (147415u)))))))))) | ((gl_WorkGroupSize))))), (uvec3(uvec3(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (_GLF_IDENTITY(true, (true) || false) ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | ((gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u)))), min((~ (gl_WorkGroupSize)), (~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u))))), (false ? _GLF_FUZZED(uvec3(81824u, 41686u, 117827u)) : _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (true ? uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupSize)), uvec3(uvec3(uvec3((gl_WorkGroupSize)))))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | ((gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(uvec3(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (true ? uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(32234u, ~ (~ (32234u))), 112766u, _GLF_IDENTITY(147415u, clamp(147415u, 147415u, _GLF_IDENTITY(147415u, (147415u) | (147415u)))))))))) | ((gl_WorkGroupSize))))), (uvec3(uvec3(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupSize))), (_GLF_IDENTITY(true, (true) || false) ? uvec3(uvec3((gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(32234u, 112766u, 147415u)))))) | ((gl_WorkGroupSize)))))) - uvec3(0u, 0u, 0u)))), min((~ (gl_WorkGroupSize)), (~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)))))))) >> uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))).x));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, true)))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, true)))), false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id)));
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u));
 uint read = 0;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), next_virtual_gid)), next_virtual_gid, next_virtual_gid)), 0u)), max(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), ~ (~ (~ (next_virtual_gid)))))), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), 0u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), 0u ^ (_GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), (clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)) >> 0u)))), 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec2(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), 0u)), clamp((uvec2(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), 0u)), (uvec2(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), 0u)), (uvec2(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), 0u))))), (true ? ~ (_GLF_IDENTITY((uvec2(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), 0u)), clamp((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), min(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))), ~ (~ (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), min(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))))), 0u)), (uvec2(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), 0u)), (uvec2(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), 0u))))) : _GLF_FUZZED(uvec2(38204u, 101661u)))))) + uvec2(0u, 0u))))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(uint(1), uint(1), uint(1)), clamp(_GLF_IDENTITY(clamp(uint(1), uint(1), uint(1)), (clamp(uint(1), uint(1), uint(1))) >> 0u), clamp(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), uint(1), uint(1)), clamp(uint(1), _GLF_IDENTITY(uint(1), (uint(1)) + (0u ^ 0u)), uint(1))))), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(uint(1), uint(1), uint(1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1))), uint(1), uint(1)), (clamp(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u), uint(1)))) + 0u), uint(1))) >> 0u), (_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(1, min(1, 1))), uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))))), 1))), uint(1)), _GLF_IDENTITY((clamp(uint(1), uint(1), uint(1))) >> 0u, (_GLF_IDENTITY((clamp(uint(1), uint(1), uint(1))) >> 0u, ((clamp(uint(1), uint(1), uint(1))) >> 0u) | 0u)) | ((clamp(uint(1), uint(1), uint(1))) >> 0u)))) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))))), clamp(uint(1), uint(1), uint(1)), clamp(uint(1), uint(1), uint(1))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(uint(1), uint(1), uint(1)), clamp(_GLF_IDENTITY(clamp(uint(1), uint(1), uint(1)), (clamp(_GLF_IDENTITY(uint(1), clamp(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), 0u | (~ (uint(1)))))), uint(1), _GLF_IDENTITY(uint(1), (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (1u ^ 1u) | (_GLF_FUZZED(virtual_gid))) : uint(1))))), uint(1), uint(1))) >> 0u), clamp(uint(1), uint(1), uint(1)), clamp(uint(1), uint(1), uint(1))))))), _GLF_IDENTITY(4, (0 ^ 0) + (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) + 0))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)), (bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9975.9519) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0))))) > injectionSwitch.y), false, false))) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), true)), false))))), _GLF_IDENTITY((bool(bvec4(false, false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_IDENTITY(false, true && (false)))))), false || ((! (false))))) || false)), true))) && true, ! (! ((bool(bvec4(false, false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_IDENTITY(false, true && (false)))))), false || ((! (false))))) || false)), true))) && true))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || (false)))), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, false, false, false))), true)))) || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) || false), true, true, false)))) || false)) && true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(acosh(6912.7541)) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-24.45))) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))) || false), (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), bool(bvec3(bool(_GLF_IDENTITY((false), ((false)) || false)), false, false)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), bool(bvec3(bool(_GLF_IDENTITY((false), ((false)) || false)), false, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (false), false)))))) || false), (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) || false))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))) || false), false, true)), (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat4(injectionSwitch, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0))), (vec2(mat4(injectionSwitch, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0)))) * vec2(1.0, 1.0))))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), false))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))) || false), false, true))) || false))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-24.45))) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))) || false), (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), bool(bvec3(bool(_GLF_IDENTITY((false), ((false)) || false)), false, false)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), bool(bvec3(bool(_GLF_IDENTITY((false), ((false)) || false)), false, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (false), false)))))) || false), (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) || false))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))) || false), false, true)), (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat4(injectionSwitch, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0))), (vec2(mat4(injectionSwitch, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0)))) * vec2(1.0, 1.0))))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), false))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))) || false), false, true))) || false))), bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-24.45))) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))) || false), (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), bool(bvec3(bool(_GLF_IDENTITY((false), ((false)) || false)), false, false)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), bool(bvec3(bool(_GLF_IDENTITY((false), ((false)) || false)), false, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (false), false)))))) || false), (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) || false))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))) || false), false, true)), (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat4(injectionSwitch, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0))), (vec2(mat4(injectionSwitch, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0)))) * vec2(1.0, 1.0))))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), false))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))) || false), false, true))) || false))))))) && true)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y) + tan(0.0))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-1.7, 35.40), mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-5.8)), vec2(_GLF_IDENTITY((vec2(-1.7, 35.40))[0], ((vec2(-1.7, 35.40))[0]) + 0.0), (_GLF_IDENTITY(vec2(-1.7, 35.40), max(vec2(-1.7, 35.40), _GLF_IDENTITY(vec2(-1.7, 35.40), max(vec2(-1.7, 35.40), vec2(-1.7, 35.40))))))[1]), bvec2(true, true)))) : injectionSwitch)))).y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2862.2436), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, _GLF_IDENTITY(35.40, max(35.40, _GLF_IDENTITY(35.40, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-886.336, (-886.336) - 0.0))), float(35.40), bool(true))))))) : injectionSwitch)))).y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2862.2436), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, _GLF_IDENTITY(35.40, max(35.40, _GLF_IDENTITY(35.40, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-886.336, (-886.336) - 0.0))), float(35.40), bool(true))))))) : injectionSwitch)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2862.2436), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, _GLF_IDENTITY(35.40, max(35.40, _GLF_IDENTITY(35.40, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-886.336, (-886.336) - 0.0))), float(35.40), bool(true))))))) : injectionSwitch)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, 35.40)) : injectionSwitch)))).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, 35.40)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))))))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), 0.0 + (float(float(injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, 35.40)) : injectionSwitch)))).y))))))))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, 35.40)) : injectionSwitch)))).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, 35.40)) : injectionSwitch)))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), 0.0 + (float(float(injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, 35.40)) : injectionSwitch)))).y)))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-37.59)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, 35.40)) : injectionSwitch)))).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, 35.40)) : injectionSwitch)))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), 0.0 + (float(float(injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0))), log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, 35.40)) : injectionSwitch)))).y))))))))) && true)), bool(bvec3(true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, 35.40)) : injectionSwitch)))).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, 35.40)) : injectionSwitch)))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(float(injectionSwitch.x)), 0.0 + (float(float(injectionSwitch.x)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(_GLF_IDENTITY(float(float(injectionSwitch.x)), 0.0 + (float(float(injectionSwitch.x)))), mix(float(_GLF_FUZZED(7507.5946)), float(_GLF_IDENTITY(float(float(injectionSwitch.x)), 0.0 + (float(float(injectionSwitch.x))))), bool(true)))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.7, 35.40)) : injectionSwitch)))).y))))))))), false, true)))))), true)), true && (bool(bvec2(true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.7, 35.40)), mix(vec2((_GLF_FUZZED(vec2(-1.7, 35.40)))[_GLF_IDENTITY(0, _GLF_IDENTITY((0) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-77219))), max((0) | 0, (0) | 0)))], _GLF_FUZZED(0.4)), vec2(_GLF_FUZZED((+ (- -2.3))), (_GLF_FUZZED(vec2(-1.7, 35.40)))[1]), bvec2(false, true))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.7, 35.40)), mix(vec2((_GLF_FUZZED(vec2(-1.7, 35.40)))[0], _GLF_FUZZED(0.4)), vec2(_GLF_FUZZED((+ (- -2.3))), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-1.7, 35.40)), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.7, 35.40)), mix(vec2((_GLF_FUZZED(vec2(-1.7, 35.40)))[0], _GLF_FUZZED(666.507)), vec2(_GLF_FUZZED(-9664.9182), (_GLF_FUZZED(vec2(-1.7, 35.40)))[1]), bvec2(false, true))) : _GLF_FUZZED(((injectionSwitch - injectionSwitch) - vec2(-5435.4167, -6.1))))))[1]), bvec2(false, true))) : injectionSwitch)))).y : _GLF_FUZZED(7.9))))))), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false)), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), _GLF_IDENTITY(false, false || (false)), true))), false, true, false)))))) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(617.745)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(vec2(-3.2, -3.8).y)), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-21.46), (_GLF_FUZZED(-21.46)) + 0.0)), float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), bool(true)))) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-21.46), (_GLF_FUZZED(-21.46)) + 0.0)), float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), bool(true)))) > injectionSwitch.y)))) || false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))).x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, _GLF_IDENTITY(determinant(mat4(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.3)), float(injectionSwitch.x), bool(true)))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(18.15)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), 0.0)), 0.0, 0.0, 0.0, tan(0.0), 0.0, _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(float(mat2x4(sin(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, 0.0, 1.0, exp(length(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), min(float(mat3(1.0, 0.0, 0.0, 1.0, exp(length(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), float(mat3(1.0, 0.0, 0.0, 1.0, exp(length(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0))))), 1.0, 0.0)), min(float(mat2x4(sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(18.15)), _GLF_IDENTITY(float(0.0), (_GLF_IDENTITY(float(0.0), (float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) + 0.0)) / 1.0), bool(true))), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), tan(0.0), 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 0.0, abs(0.0), determinant(mat4(0.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(62.22)), sqrt(0.0) + (float(_GLF_FUZZED(62.22)))), float(0.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (bool(_GLF_IDENTITY(true, ! (! (true)))))))))) / 1.0, (true ? (_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(62.22)), mix(float(_GLF_FUZZED(650.361)), float(float(_GLF_FUZZED(62.22))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), sqrt(0.0) + (float(_GLF_FUZZED(62.22)))), float(0.0), bool(true)))) / 1.0 : _GLF_FUZZED(_GLF_IDENTITY(2.4, mix(float(2.4), float(_GLF_FUZZED(-1.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), (_GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0)))))) / 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec3(-166.333, -7.5, -70.02).xy, vec2(0.0, 0.0) + (vec3(-166.333, -7.5, -70.02).xy)).s)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) / 1.0, mix(float((0.0) / 1.0), float(_GLF_FUZZED((vec4(-20.27, -7.8, -4299.5333, 703.123) / -281.947).r)), bool(false))), clamp(_GLF_IDENTITY((0.0) / 1.0, mix(float(_GLF_FUZZED(-532.997)), float((0.0) / 1.0), bool(true))), (0.0) / 1.0, (0.0) / 1.0)))), bool(true))), 0.0))), 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, _GLF_IDENTITY(determinant(mat4(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.3)), float(injectionSwitch.x), bool(true)))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(18.15)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), 0.0)), 0.0, 0.0, 0.0, tan(0.0), 0.0, _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(float(mat2x4(sin(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, 0.0, 1.0, exp(length(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), min(float(mat3(1.0, 0.0, 0.0, 1.0, exp(length(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), float(mat3(1.0, 0.0, 0.0, 1.0, exp(length(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0))))), 1.0, 0.0)), min(float(mat2x4(sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(18.15)), _GLF_IDENTITY(float(0.0), (_GLF_IDENTITY(float(0.0), (float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) + 0.0)) / 1.0), bool(true))), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), tan(0.0), 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 0.0, abs(0.0), determinant(mat4(0.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(62.22)), sqrt(0.0) + (float(_GLF_FUZZED(62.22)))), float(0.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (bool(_GLF_IDENTITY(true, ! (! (true)))))))))) / 1.0, (true ? (_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(62.22)), mix(float(_GLF_FUZZED(650.361)), float(float(_GLF_FUZZED(62.22))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), sqrt(0.0) + (float(_GLF_FUZZED(62.22)))), float(0.0), bool(true)))) / 1.0 : _GLF_FUZZED(_GLF_IDENTITY(2.4, mix(float(2.4), float(_GLF_FUZZED(-1.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), (_GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0)))))) / 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec3(-166.333, -7.5, -70.02).xy, vec2(0.0, 0.0) + (vec3(-166.333, -7.5, -70.02).xy)).s)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) / 1.0, mix(float((0.0) / 1.0), float(_GLF_FUZZED((vec4(-20.27, -7.8, -4299.5333, 703.123) / -281.947).r)), bool(false))), clamp(_GLF_IDENTITY((0.0) / 1.0, mix(float(_GLF_FUZZED(-532.997)), float((0.0) / 1.0), bool(true))), (0.0) / 1.0, (0.0) / 1.0)))), bool(true))), 0.0))), 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, _GLF_IDENTITY(determinant(mat4(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.3)), float(injectionSwitch.x), bool(true)))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(18.15)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), 0.0)), 0.0, 0.0, 0.0, tan(0.0), 0.0, _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(float(mat2x4(sin(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, 0.0, 1.0, exp(length(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), min(float(mat3(1.0, 0.0, 0.0, 1.0, exp(length(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), float(mat3(1.0, 0.0, 0.0, 1.0, exp(length(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0))))), 1.0, 0.0)), min(float(mat2x4(sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(18.15)), _GLF_IDENTITY(float(0.0), (_GLF_IDENTITY(float(0.0), (float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) + 0.0)) / 1.0), bool(true))), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), tan(0.0), 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 0.0, abs(0.0), determinant(mat4(0.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(62.22)), sqrt(0.0) + (float(_GLF_FUZZED(62.22)))), float(0.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (bool(_GLF_IDENTITY(true, ! (! (true)))))))))) / 1.0, (true ? (_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(62.22)), mix(float(_GLF_FUZZED(650.361)), float(float(_GLF_FUZZED(62.22))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), sqrt(0.0) + (float(_GLF_FUZZED(62.22)))), float(0.0), bool(true)))) / 1.0 : _GLF_FUZZED(_GLF_IDENTITY(2.4, mix(float(2.4), float(_GLF_FUZZED(-1.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), (_GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0)))))) / 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec3(-166.333, -7.5, -70.02).xy, vec2(0.0, 0.0) + (vec3(-166.333, -7.5, -70.02).xy)).s)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) / 1.0, mix(float((0.0) / 1.0), float(_GLF_FUZZED((vec4(-20.27, -7.8, -4299.5333, 703.123) / -281.947).r)), bool(false))), clamp(_GLF_IDENTITY((0.0) / 1.0, mix(float(_GLF_FUZZED(-532.997)), float((0.0) / 1.0), bool(true))), (0.0) / 1.0, (0.0) / 1.0)))), bool(true))), 0.0))), 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec2(! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, _GLF_IDENTITY(determinant(mat4(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.3)), float(injectionSwitch.x), bool(true)))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(18.15)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), 0.0)), 0.0, 0.0, 0.0, tan(0.0), 0.0, _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(float(mat2x4(sin(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, 0.0, 1.0, exp(length(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), min(float(mat3(1.0, 0.0, 0.0, 1.0, exp(length(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), float(mat3(1.0, 0.0, 0.0, 1.0, exp(length(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0))))), 1.0, 0.0)), min(float(mat2x4(sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(18.15)), _GLF_IDENTITY(float(0.0), (_GLF_IDENTITY(float(0.0), (float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) + 0.0)) / 1.0), bool(true))), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), tan(0.0), 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 0.0, abs(0.0), determinant(mat4(0.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(62.22)), sqrt(0.0) + (float(_GLF_FUZZED(62.22)))), float(0.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (bool(_GLF_IDENTITY(true, ! (! (true)))))))))) / 1.0, (true ? (_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(62.22)), mix(float(_GLF_FUZZED(650.361)), float(float(_GLF_FUZZED(62.22))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), sqrt(0.0) + (float(_GLF_FUZZED(62.22)))), float(0.0), bool(true)))) / 1.0 : _GLF_FUZZED(_GLF_IDENTITY(2.4, mix(float(2.4), float(_GLF_FUZZED(-1.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), (_GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0)))))) / 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec3(-166.333, -7.5, -70.02).xy, vec2(0.0, 0.0) + (vec3(-166.333, -7.5, -70.02).xy)).s)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) / 1.0, mix(float((0.0) / 1.0), float(_GLF_FUZZED((vec4(-20.27, -7.8, -4299.5333, 703.123) / -281.947).r)), bool(false))), clamp(_GLF_IDENTITY((0.0) / 1.0, mix(float(_GLF_FUZZED(-532.997)), float((0.0) / 1.0), bool(true))), (0.0) / 1.0, (0.0) / 1.0)))), bool(true))), 0.0))), 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))), true)))))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(521.013))), max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(521.013))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(521.013)))))) * (injectionSwitch)), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), mix(vec2((max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch))[0], (max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch))[1]), vec2(_GLF_FUZZED(-1796.6258), _GLF_FUZZED(0.2)), bvec2(false, false)))).x)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)))), bool(bvec4(bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.0), _GLF_FUZZED(-3842.8446)), bvec2(false, false))).y))))), true)), false, true, true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), false || (bool(bvec3(_GLF_DEAD(false), true, false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, 1.0 * ((injectionSwitch.x) - 0.0))) > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((64) * 1, (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) + 0)) * 1, ((64) * 1) >> 0)) / ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) * 1)))))) | (_GLF_IDENTITY(64, (64) * 1))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
