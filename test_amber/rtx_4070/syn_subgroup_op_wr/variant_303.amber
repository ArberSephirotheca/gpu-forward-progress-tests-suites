#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 mat2x4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_9 {
 float _f0;
 bvec4 _f1;
 mat3x4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
} ;

struct _GLF_struct_11 {
 uint _f0;
 vec2 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 bvec2 _f4;
 vec4 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 vec3 _f1;
 mat2x3 _f2;
 mat4x2 _f3;
 ivec2 _f4;
 uvec2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
 mat4x3 _f1;
 uvec4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_7 _f0;
 uint workgroup_size;
 float _f1;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_4 {
 uint virtual_gid;
 mat3x4 _f0;
} ;

struct _GLF_struct_1 {
 int _f0;
 bool _f1;
 vec2 _f2;
 mat2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_0 {
 float _f0;
 uvec3 _f1;
 vec2 _f2;
 vec4 _f3;
 mat2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 bool _f1;
 bvec3 _f2;
 uint workgroup_base;
 _GLF_struct_2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy = GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0)))))), _GLF_IDENTITY(0.0, max(0.0, 0.0))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0)), 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat3x2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0)), 0.0, 0.0, 0.0, 1.0)))))), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-0.2), mix(float(_GLF_FUZZED((- 5.9))), float(_GLF_FUZZED(-0.2)), bool(true))), mix(float(_GLF_FUZZED(-0.2)), float(_GLF_FUZZED(-5.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0))))[1]), _GLF_IDENTITY(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0)), max(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0))))))[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, (false ? _GLF_FUZZED(93.54) : -3.7)))), mix(vec2(_GLF_FUZZED(5.0), (vec2((vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0))))[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, (false ? _GLF_FUZZED(93.54) : -3.7)))))[1]), vec2(_GLF_IDENTITY((vec2((vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0))))[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(93.54) : -3.7)))))[0], max((vec2((vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0))))[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, (false ? _GLF_FUZZED(93.54) : -3.7)))))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0))))[0], ((vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0))))[0]) / exp(0.0)), _GLF_FUZZED(_GLF_IDENTITY(-3.7, (false ? _GLF_FUZZED(93.54) : -3.7)))))[0], 0.0 + (_GLF_IDENTITY((vec2((vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0))))[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, (false ? _GLF_FUZZED(93.54) : -3.7)))))[0], ((_GLF_IDENTITY(vec2((vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0))))[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, (false ? _GLF_FUZZED(93.54) : -3.7)))), (vec2((vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0))))[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, (false ? _GLF_FUZZED(93.54) : -3.7))))) - vec2(0.0, 0.0)))[0]) * 1.0))))), _GLF_FUZZED(-6.3)), bvec2(true, false))), bvec2(true, false)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((30.96 + 4.5))), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), true), true))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), true), true))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(509.831, -1.6))), ((true ? injectionSwitch : _GLF_FUZZED(vec2(509.831, -1.6)))) / vec2(1.0, 1.0))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(509.831, -1.6)))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(509.831, -1.6)))), min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(509.831, -1.6)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(509.831, -1.6)))))).y), float(_GLF_FUZZED(90.86)), bool(false))) : _GLF_FUZZED(-8135.3329))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.5)), bool(false)))))) + 0.0), (injectionSwitch.x) + log(1.0)) > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))))))))), true))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1419.9958)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bool((false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             barrier();
            }
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), bool(bvec3(! (false), true, true))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), min(float(vec2(injectionSwitch.y, abs(1.0))), float(vec2(injectionSwitch.y, abs(1.0))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_7(_GLF_struct_5(ivec4(1), mat4x3(1.0), uvec4(1u), mat4x3(1.0)), _GLF_struct_6(vec4(1.0), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, float(mat4((1.0) / 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0))))), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(_GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(cos(-9111.5454)) : float(1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(854.055, 59.80, -8306.9556).x, _GLF_IDENTITY(clamp(vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x), clamp(_GLF_IDENTITY(clamp(vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x), clamp(clamp(vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x), clamp(vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x), clamp(vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x))), clamp(vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x), _GLF_IDENTITY(clamp(vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x), clamp(clamp(vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x), clamp(vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x), _GLF_IDENTITY(clamp(vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x), float(mat3(clamp(vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x, vec3(854.055, 59.80, -8306.9556).x), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))))), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))), mat4x2(1.0), ivec2(1), uvec2(1u), ivec3(1))), gl_WorkGroupSize.x, 1.0, _GLF_struct_11(1u, vec2(1.0), _GLF_struct_8(ivec2(1)), _GLF_struct_9(1.0, bvec4(true), mat3x4(1.0), ivec4(1)), _GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), false, true)))))), vec4(1.0), _GLF_struct_10(mat2x4(1.0), ivec4(1))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(73.90)))) + (injectionSwitch)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), true))))), false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), true))))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), true))))), false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), true))))), false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), true))))), false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), true)))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), true))))), false))))))))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, 1.0)) * mat2(1.0)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), true, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), true, true)))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), true, true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), true, true)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), true, true)))), true)), true))))), true)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), (bool(bvec2(false, true))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.y = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(68559u) : _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))), min(_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))), _GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED((-13.67 + 1.1)), min(_GLF_FUZZED((-13.67 + 1.1)), _GLF_FUZZED((-13.67 + 1.1))))), bool(false)))), mix(float(_GLF_FUZZED(5.9)), float(_GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED((-13.67 + 1.1)), min(_GLF_FUZZED((-13.67 + 1.1)), _GLF_FUZZED((-13.67 + 1.1))))), bool(false)))), max(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED((-13.67 + 1.1)), min(_GLF_FUZZED((-13.67 + 1.1)), _GLF_FUZZED((-13.67 + 1.1))))), bool(false)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED((-13.67 + 1.1)), min(_GLF_FUZZED((-13.67 + 1.1)), _GLF_FUZZED((-13.67 + 1.1))))), bool(false))))))), bool(true)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))), (injectionSwitch.y))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(vec3(1.0), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), _GLF_struct_replacement_12.workgroup_size * GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.y, _GLF_struct_2(mat2x3(1.0), _GLF_struct_0(1.0, uvec3(1u), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(float(mat3x2(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(5412.3557) : 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(float(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(0.4) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat2x4(float(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), float(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), mat2(1.0), mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), 1.0)))), _GLF_struct_1(1, true, vec2(1.0), mat2(1.0), uvec3(1u))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3719.2397), _GLF_FUZZED(-313.864)), bvec2(false, false))).y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) << uvec4(0u, 0u, 0u, 0u)), max(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) << uvec4(0u, 0u, 0u, 0u))))) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id)).xy.x, (_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) << uvec4(0u, 0u, 0u, 0u))) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id)), (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) << uvec4(0u, 0u, 0u, 0u))) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id))) | (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) << uvec4(0u, 0u, 0u, 0u))) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id)))).xy, uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) << uvec4(0u, 0u, 0u, 0u))) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id)), (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) << uvec4(0u, 0u, 0u, 0u))) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id))) | (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) << uvec4(0u, 0u, 0u, 0u))) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id)))).xy))).x, min(_GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) << uvec4(0u, 0u, 0u, 0u))) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id)).xy.x, _GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) << uvec4(0u, 0u, 0u, 0u))) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id)).xy.x))) ^ 0u) + subgroup_local_id, mat3x4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, (_GLF_struct_replacement_3.workgroup_base) >> 0u), _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, min(_GLF_struct_replacement_3.workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, (_GLF_struct_replacement_3.workgroup_base) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_3.workgroup_base), max((_GLF_struct_replacement_3.workgroup_base), _GLF_IDENTITY((_GLF_struct_replacement_3.workgroup_base), ((_GLF_struct_replacement_3.workgroup_base)) + 0u))) << 0u, max((_GLF_struct_replacement_3.workgroup_base) << 0u, (_GLF_struct_replacement_3.workgroup_base) << 0u))))))) + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x, min(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id))), (false ? _GLF_FUZZED(uvec4(subgroup_id, subgroup_id, uvec2(73044u, 161471u))) : ~ (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id))))))).xy, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id)).xy) - uvec2(0u, 0u)).x, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x) | 0u))), min(_GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) << uvec4(0u, 0u, 0u, 0u)).xy, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy) - uvec2(0u, 0u))))).x, _GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x)), _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, min(_GLF_struct_replacement_3.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, (_GLF_struct_replacement_3.workgroup_base) + 0u))) + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x), min(min(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x, min(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id)).xy, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id)).xy) - uvec2(0u, 0u)).x, _GLF_IDENTITY((GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x) | 0u, (true ? (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x) | 0u : _GLF_FUZZED(workgroup_id)))))), min(_GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy) - uvec2(0u, 0u))))).x, _GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x)), _GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x), min(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x, min(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) | (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id)).xy, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, clamp(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id))))) | _GLF_IDENTITY((GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id), clamp((GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id), (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id), (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id)))).xy) - uvec2(0u, 0u)).x, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x) | 0u))), min(_GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy) - uvec2(0u, 0u))))).x, _GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x)), _GLF_struct_replacement_3.workgroup_base + GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.w * GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x)))) + (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x, ((subgroup_local_id + 1) % GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x) + 0u));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, exp(0.0), 1.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && _GLF_IDENTITY(true, false || (true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true && (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true && (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))) || false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true)))), false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(59.06)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_struct_replacement_4.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.z = read;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.xy.x)
  {
   atomicStore(checker[_GLF_IDENTITY(_GLF_struct_replacement_4.virtual_gid, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_4.virtual_gid)), (~ (~ (_GLF_struct_replacement_4.virtual_gid))) ^ 0u))], _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id, (GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id) >> uvec4(0u, 0u, 0u, 0u)).z, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(343.359) : injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mat3(_GLF_IDENTITY(mat3x4(transpose(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (mat3x4(transpose(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))), (false ? _GLF_FUZZED(mat3(187.408, 6.8, -29.32, 2.6, -1307.0709, -197.282, 98.53, -3188.3570, 359.748)) : transpose(_GLF_IDENTITY(transpose(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mat3(_GLF_IDENTITY(mat3x4(transpose(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (mat3x4(_GLF_IDENTITY(transpose(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? transpose(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(mat3(mat4x2(3995.1985, 34.68, 22.40, -4.3, 53.47, -574.834, -22.79, 9.6))))))))))))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6167.0605)), bool(false)))))), log(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((- -8.8)) : 1.0))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED((- -9.9))), float(_GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(vec3((1.0), 1.0, 1.0), (vec3((1.0), 1.0, 1.0)) + vec3(0.0, 0.0, 0.0))))))), bool(true))))) / 1.0))), mix(float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED((- -9.9))), float(_GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(vec3((1.0), 1.0, 1.0), (vec3((1.0), 1.0, 1.0)) + vec3(0.0, 0.0, 0.0))))))), bool(true))))) / 1.0)))), float(_GLF_FUZZED(47.90)), bool(false)))), log(1.0), 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, ! (! (false))));
  }
 else
  {
   atomicStore(checker[_GLF_struct_replacement_4.virtual_gid], GLF_merged3_0_2_50_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idreadsubgroup_id.z, _GLF_IDENTITY(4, (4) / 1), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(true)) : injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(36.18)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y) * 1.0), 1.0, 0.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y) * 1.0), 1.0, 0.0, 0.0)) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), ! (! (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) - vec2(0.0, 0.0)).y, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))) - vec2(0.0, 0.0)).y), float(_GLF_FUZZED(-4.5)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))) && true))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
