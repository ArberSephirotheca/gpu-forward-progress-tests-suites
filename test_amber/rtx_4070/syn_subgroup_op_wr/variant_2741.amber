#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, true))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))), bool(bvec3(! (bool(bvec3(false, false, true))), false, true)))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-442.825))), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), (true ? injectionSwitch[0] : _GLF_FUZZED(-442.825))), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, sqrt(1.0), log(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(mix(vec3(_GLF_IDENTITY((vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(mat2x3((vec3(1.0, 1.0, 1.0)), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y))), (vec3(mat2x3((vec3(1.0, 1.0, 1.0)), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y)))) * vec3(1.0, 1.0, 1.0)))[0], (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(-8222.0972)), vec3(_GLF_IDENTITY(_GLF_FUZZED(-365.728), (_GLF_FUZZED(-365.728)) - 0.0), _GLF_FUZZED(-3.8), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true)), min(_GLF_IDENTITY(mix(vec3(_GLF_IDENTITY((vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(mat2x3((vec3(1.0, 1.0, 1.0)), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y))), (vec3(mat2x3((vec3(1.0, 1.0, 1.0)), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y)))) * vec3(1.0, 1.0, 1.0)))[0], (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(-8222.0972)), vec3(_GLF_IDENTITY(_GLF_FUZZED(-365.728), (_GLF_FUZZED(-365.728)) - 0.0), _GLF_FUZZED(-3.8), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true)), (mix(vec3(_GLF_IDENTITY((vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(mat2x3((vec3(1.0, 1.0, 1.0)), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y))), (vec3(mat2x3((vec3(1.0, 1.0, 1.0)), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y)))) * vec3(1.0, 1.0, 1.0)))[0], (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(-8222.0972)), vec3(_GLF_IDENTITY(_GLF_FUZZED(-365.728), (_GLF_FUZZED(-365.728)) - 0.0), _GLF_FUZZED(-3.8), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true))) * mat3(1.0)), mix(vec3(_GLF_IDENTITY((vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(mat2x3((vec3(1.0, 1.0, 1.0)), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y))), (vec3(mat2x3((vec3(1.0, 1.0, 1.0)), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y)))) * vec3(1.0, 1.0, 1.0)))[0], (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(-8222.0972)), vec3(_GLF_IDENTITY(_GLF_FUZZED(-365.728), (_GLF_FUZZED(-365.728)) - 0.0), _GLF_FUZZED(-3.8), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true))))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.3)), float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), bool(true)))) / 1.0), min(0.0, 0.0)), 0.0)))))), 1.0, 0.0))), injectionSwitch[1]), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(_GLF_IDENTITY(-442.825, sqrt(0.0) + (-442.825))))), (true ? _GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(_GLF_IDENTITY(-442.825, sqrt(0.0) + (-442.825))))) : _GLF_FUZZED(-1087.6938))), float(mat4(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-442.825))), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), float(vec2(sqrt(1.0), 1.0))))), log(1.0), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(asin(3.0)))), 1.0, 1.0))[1], _GLF_FUZZED(-8222.0972)), vec3(_GLF_FUZZED(-365.728), _GLF_FUZZED(-3.8), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(asin(3.0)))), 1.0, 1.0))[1], _GLF_FUZZED(-8222.0972)), vec3(_GLF_FUZZED(-365.728), _GLF_FUZZED(-3.8), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(log(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(78.42) : dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat3(mat3x4(mat3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(log(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(78.42) : dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0))))))) + 0.0), 1.0, 0.0))), injectionSwitch[1]), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-442.825))), float(mat4(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-442.825))), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, sqrt(1.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-775.416)), float(1.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(mix(vec3((vec3(1.0, 1.0, 1.0))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | _GLF_IDENTITY(0, int(int(0))))], (vec3(1.0, 1.0, 1.0))[_GLF_IDENTITY(1, clamp(1, 1, 1))], _GLF_FUZZED(-8222.0972)), vec3(_GLF_FUZZED(-365.728), _GLF_FUZZED(-3.8), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true)), mix(vec3((mix(vec3((vec3(1.0, 1.0, 1.0))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | _GLF_IDENTITY(0, int(int(0))))], (vec3(1.0, 1.0, 1.0))[_GLF_IDENTITY(1, clamp(1, 1, 1))], _GLF_FUZZED(-8222.0972)), vec3(_GLF_FUZZED(-365.728), _GLF_FUZZED(-3.8), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true)))[0], _GLF_FUZZED(7.2), _GLF_FUZZED(-10.27)), vec3(_GLF_FUZZED(9.8), _GLF_IDENTITY((mix(vec3((vec3(1.0, 1.0, 1.0))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | _GLF_IDENTITY(0, int(int(0))))], (vec3(1.0, 1.0, 1.0))[_GLF_IDENTITY(1, clamp(1, 1, 1))], _GLF_FUZZED(-8222.0972)), vec3(_GLF_FUZZED(-365.728), _GLF_FUZZED(-3.8), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true)))[1], min((mix(vec3((vec3(1.0, 1.0, 1.0))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | _GLF_IDENTITY(0, int(int(0))))], (vec3(1.0, 1.0, 1.0))[_GLF_IDENTITY(1, clamp(1, 1, 1))], _GLF_FUZZED(-8222.0972)), vec3(_GLF_FUZZED(-365.728), _GLF_FUZZED(-3.8), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true)))[1], (mix(vec3((vec3(1.0, 1.0, 1.0))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | _GLF_IDENTITY(0, int(int(0))))], (vec3(1.0, 1.0, 1.0))[_GLF_IDENTITY(1, clamp(1, 1, 1))], _GLF_FUZZED(-8222.0972)), vec3(_GLF_FUZZED(-365.728), _GLF_FUZZED(-3.8), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true)))[1])), (mix(vec3((vec3(1.0, 1.0, 1.0))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | _GLF_IDENTITY(0, int(int(0))))], (vec3(1.0, 1.0, 1.0))[_GLF_IDENTITY(1, clamp(1, 1, 1))], _GLF_FUZZED(-8222.0972)), vec3(_GLF_FUZZED(-365.728), _GLF_FUZZED(-3.8), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true)))[2]), bvec3(false, true, true)))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), clamp(vec4(1.0, 0.0, 1.0, 1.0), vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(-389.429, 2164.6007, 3.7, 0.5)) : vec4(1.0, 0.0, 1.0, 1.0))))), vec4(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(84.81) : 1.0)), min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(84.81) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(84.81) : 1.0)))), 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 0.0)))))), 1.0, 0.0))), injectionSwitch[_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | 0) : _GLF_FUZZED(33017)))]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-442.825))), float(mat4(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-442.825))), 1.0, 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.3))), 1.0)))))), 0.0, abs(0.0), 0.0, 0.0, sqrt(1.0), log(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0), mix(vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(-8222.0972)), vec3(_GLF_FUZZED(-365.728), _GLF_FUZZED(-3.8), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)), 0.0, 0.0))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.7) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0))), injectionSwitch[1]))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-442.825))), float(mat4(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(-442.825), (_GLF_FUZZED(-442.825)) - 0.0))), 1.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))))), 0.0, abs(0.0), 0.0, 0.0, sqrt(1.0), log(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(-8222.0972)), vec3(_GLF_FUZZED(-365.728), _GLF_IDENTITY(_GLF_FUZZED(-3.8), clamp(_GLF_FUZZED(-3.8), _GLF_FUZZED(-3.8), _GLF_FUZZED(-3.8))), (vec3(1.0, 1.0, 1.0))[2]), bvec3(false, false, true))), vec3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(-2.7, 4586.8482, 0.2, -2.5)) : vec4(1.0, 0.0, 1.0, 1.0))), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(1.0, (1.0) + sqrt(length(vec3(0.0, 0.0, 0.0)))), 0.0))), injectionSwitch[1]))), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((true ? injectionSwitch[0] : _GLF_FUZZED(-442.825)), ((true ? injectionSwitch[0] : _GLF_FUZZED(-442.825))) * 1.0)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-442.825))), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, sqrt(1.0), log(1.0), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-437.737))), 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), vec4(vec4((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.6)), float(1.0), bool(true))), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), min(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), (true ? vec4(1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-8.1, -0.1, 6075.2971, 4.7)))))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), vec4(vec4((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))))))))), 1.0, determinant(mat2(cos(0.0), 0.0, length(0.0), round(length(normalize(1.0))))), 0.0, _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * mat4(1.0))))), (round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * mat4(1.0)))))) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), vec4(vec4((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))))))))), (false ? _GLF_FUZZED(80.30) : _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), vec4(vec4((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), 1.0, determinant(mat2(cos(0.0), 0.0, length(0.0), round(length(normalize(1.0))))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))), mix(float(_GLF_FUZZED(938.495)), float(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))) + vec3(0.0, 0.0, 0.0)), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), vec4(vec4((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))))))))), 1.0, determinant(mat2(cos(_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(1.0))))), 0.0, length(0.0), round(length(normalize(1.0))))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), vec4(vec4((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))))))))), 1.0, determinant(mat2(cos(0.0), 0.0, length(0.0), round(length(normalize(1.0))))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))))), bool(true)))), 1.0, 0.0)), min(float(mat4(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))))))], (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), injectionSwitch))[_GLF_IDENTITY(0, 1 * (0))] : _GLF_FUZZED(-442.825))), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(float(mat2(abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-83.65) : 1.0))), (_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat2x4(vec3(0.0, 0.0, 1.0), 1.0, sqrt(1.0), 1.0, 0.0, log(1.0))))) * vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 1.0))), 1.0, determinant(mat2(cos(0.0), 0.0, 0.0, 1.0)))), _GLF_IDENTITY(min(float(mat2(abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(determinant(mat2(cos(0.0), 0.0, 0.0, 1.0)), float(mat4x3(determinant(mat2(cos(0.0), 0.0, 0.0, 1.0)), 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0))))), float(mat2(abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), vec3(0.0, 0.0, 1.0))), 1.0, determinant(mat2(cos(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))), 0.0, 0.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(float(mat2(abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(44.73))), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(determinant(mat2(cos(0.0), 0.0, 0.0, 1.0)), float(mat4x3(determinant(mat2(_GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), float(mat2x4(cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), cos(0.0))), 0.0, 0.0, 1.0)), 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0))))), float(mat2(abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, determinant(mat2(cos(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), _GLF_ONE(1.0, injectionSwitch.y) * (float(0.0))), float(_GLF_FUZZED(3.1)), bool(false))))))), 0.0))), 0.0, 0.0, 1.0))))) : _GLF_FUZZED(mix(_GLF_IDENTITY(-898.352, float(mat2x4(-898.352, 1.0, 0.0, sqrt(1.0), 1.0, tan(sqrt(0.0)), 0.0, 1.0))), 9798.7229, 42.34)))))), 0.0, 0.0, sqrt(1.0), log(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))) + 0.0), dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8625.3252)), bool(false)))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), vec4(vec4((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))))))))), 1.0, 0.0)), float(mat4(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-442.825))), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, abs(0.0), 0.0, 0.0, sqrt(1.0), log(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.6)), bool(false)))))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(asin(vec4(21.37, 2313.0708, 2.2, 3.8))) : vec4(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.7)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true))))), vec4(vec4((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))))))))), 1.0, 0.0))))), injectionSwitch[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-442.825))), float(mat4(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-442.825))), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.8) : 0.0)))), 0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 0.0, abs(0.0), 0.0, 0.0, sqrt(1.0), log(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0) + (vec3(1.0, 1.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0 + (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))))))), 0.0, 0.0)), 0.0)))))), 1.0, 0.0))), injectionSwitch[1])))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1151.0412), _GLF_FUZZED(7.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1151.0412), _GLF_FUZZED(7.3)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), (injectionSwitch.x > injectionSwitch.y))) && true), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))), false)), false, true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), false || (bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), ~ (next_virtual_gid), ~ (next_virtual_gid)))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(~ (next_virtual_gid), clamp(~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), (false ? _GLF_FUZZED(read) : (next_virtual_gid)))) | ((next_virtual_gid))), ~ _GLF_IDENTITY((next_virtual_gid), ~ (~ ((next_virtual_gid)))), ~ (next_virtual_gid)))), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ ((_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(subgroup_id)))), clamp(~ (next_virtual_gid), ~ (next_virtual_gid), ~ (next_virtual_gid))), _GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) << 0u, ((next_virtual_gid) << 0u) / 1u))))), min(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), min(~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid)))))) - 0u)), 0u ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), min(~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid)))))) - 0u)), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), min(~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid)))))) - 0u)) : _GLF_FUZZED(subgroup_size))))))))), ~ _GLF_IDENTITY((next_virtual_gid), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : (next_virtual_gid)))))))), ((~ ((_GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), _GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))), min(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) - 0u)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) - 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) - 0u)), min(false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) - 0u)), false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) - 0u))))) >> 0u), false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) - 0u)))))))), ~ (next_virtual_gid))))))) | 0u), max((~ ((_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), _GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))), min(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (true ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(workgroup_base))) : ~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) - 0u)))))), ~ (next_virtual_gid))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), _GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))), min(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (true ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(workgroup_base))) : ~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) - 0u)))))), ~ (next_virtual_gid))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), _GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))), min(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (true ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(workgroup_base))) : ~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) - 0u)))))), ~ (next_virtual_gid))), min(_GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), _GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))), min(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (true ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(workgroup_base))) : ~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) - 0u)))))), ~ (next_virtual_gid))), _GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), _GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))), min(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (true ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(workgroup_base))) : ~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) - 0u)))))), ~ (next_virtual_gid))))))))))))), (~ ((_GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), _GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))), min(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) - 0u)))))), ~ (next_virtual_gid)))))))), (~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), min(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(workgroup_size) : ~ (next_virtual_gid))))), ~ (next_virtual_gid)))))), ((~ ((_GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), min(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(workgroup_size) : ~ (next_virtual_gid))))), ~ (next_virtual_gid))))))) - ((0u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) - 0u)), _GLF_IDENTITY(1u, (1u) | (1u))))))) | _GLF_IDENTITY((next_virtual_gid), 0u | ((next_virtual_gid))))], uint(1), 4, _GLF_IDENTITY(64, max(64, 64)), 4);
 if((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) | 0u) % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bool(bvec2(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
