#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 mat4 _f0;
} ;

struct _GLF_struct_19 {
 bool _f0;
 ivec2 _f1;
 uvec3 _f2;
 _GLF_struct_18 _f3;
 mat3x2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_16 {
 uvec3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_15 {
 bvec4 _f0;
 vec3 _f1;
 ivec4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_17 {
 uint _f0;
 mat2x4 _f1;
 ivec2 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
} ;

struct _GLF_struct_13 {
 uint _f0;
 vec2 _f1;
 mat4 _f2;
 bvec2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 mat2x4 _f1;
 mat4x3 _f2;
 uvec2 _f3;
 float _f4;
 bvec3 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_14 {
 uvec4 _f0;
 mat3 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
} ;

struct _GLF_struct_10 {
 uint read;
 uint _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
 mat3 _f1;
 mat3 _f2;
 mat3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 uvec4 _f1;
 mat4 _f2;
 bvec2 _f3;
 bvec4 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 _GLF_struct_6 _f1;
 bvec2 _f2;
 _GLF_struct_7 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_20 {
 _GLF_struct_8 _f0;
 bvec3 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_14 _f3;
 bvec3 _f4;
 _GLF_struct_17 _f5;
 _GLF_struct_19 _f6;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 uvec3 _f1;
 uvec4 _f2;
 vec4 _f3;
 mat2x4 _f4;
 vec3 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 mat2 _f1;
 ivec4 _f2;
 int _f3;
 mat3x4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 mat4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 float _f1;
 uint subgroup_base;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
} ;

struct _GLF_struct_5 {
 int _f0;
 bool _f1;
 vec3 _f2;
 _GLF_struct_0 _f3;
 _GLF_struct_4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (! (true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.9))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (mat2x4(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) * _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, abs(0.0), 1.0, 1.0, 1.0)), mat2x4(mat2x4(mat4(1.0) * (mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.1) : 1.0)), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.1) : 1.0)), max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.1) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.1) : 1.0)))), 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), 1.0))))))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(-4.9, 6.5, -885.605).s)), float(_GLF_IDENTITY(0.0, float(vec4(0.0, cos(0.0), 0.0, 1.0)))), bool(true)))), 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 1.0)), mat2x4(mat2x4(mat4(1.0) * (mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3770.2464)), bool(false))), 1.0, 1.0)))))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))), bool(bvec2((_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))), true))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (! (false)))), false, true, true))))))) || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true)))), _GLF_IDENTITY(! (! ((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true)))))), _GLF_IDENTITY((! (! ((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true))))))) && true, ((! (! ((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), true))))))) && true) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))), vec2(mat2(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))), 1.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))).y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(347.888, -9757.8899)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(1, true, vec3(1.0), _GLF_struct_0(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1 ^ 1))), ivec3(0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, 0)), 0)), min(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), 0) + (ivec3(1)))), _GLF_struct_4(_GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(6.9), _GLF_FUZZED(-18.65), _GLF_FUZZED((false ? -38.65 : 0.1))), vec3((vec3(1.0))[0], (vec3(1.0))[1], (vec3(1.0))[2]), bvec3(true, true, true))), 1.0, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, _GLF_struct_1(mat4(1.0), mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-975.482), min(_GLF_FUZZED(-975.482), _GLF_FUZZED(-975.482)))), float(1.0), bool(true)))), vec2(1.0)), _GLF_struct_2(bvec2(true), mat2(1.0), ivec4(1), _GLF_IDENTITY(1, 0 + (1)), mat3x4(1.0), ivec4(_GLF_IDENTITY(1, (1) * (1 & 1)))), _GLF_struct_3(mat2x3(1.0), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(16470u, 57609u, 29887u)), (_GLF_FUZZED(uvec3(16470u, 57609u, _GLF_IDENTITY(29887u, (29887u) | (_GLF_IDENTITY(_GLF_IDENTITY(29887u, (29887u) << 0u), _GLF_IDENTITY(uint(uvec4(29887u, (24386u & 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)), (uint(uvec4(29887u, (_GLF_IDENTITY(24386u & 0u, 0u ^ (24386u & 0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), (1u & 1u), 0u, 1u))), uint(2u))), 0u))) >> 0u))))))) >> uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(transpose(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (transpose(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))) * mat2(1.0))))))), (_GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0)), (_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), max(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))))) * 1.0))), max(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0, 0.0, 0.0, 1.0))))))))) / 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : uvec3(1u)))) | uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(16470u, 57609u, 29887u)), (_GLF_FUZZED(uvec3(16470u, 57609u, _GLF_IDENTITY(29887u, (29887u) | (_GLF_IDENTITY(_GLF_IDENTITY(29887u, (29887u) << 0u), _GLF_IDENTITY(uint(uvec4(29887u, (24386u & 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)), (uint(uvec4(29887u, (_GLF_IDENTITY(24386u & 0u, 0u ^ (24386u & 0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), (1u & 1u), 0u, 1u))), uint(2u))), 0u))) >> 0u))))))) >> uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0)), (_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), max(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))))) * 1.0))), max(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0, 0.0, 0.0, 1.0))))))))) / 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : uvec3(1u)))) | uvec3(0u, 0u, 0u), clamp((_GLF_IDENTITY(uvec3(1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(16470u, 57609u, 29887u)), (_GLF_FUZZED(uvec3(16470u, 57609u, _GLF_IDENTITY(_GLF_IDENTITY(29887u, clamp(29887u, 29887u, _GLF_IDENTITY(29887u, clamp(29887u, 29887u, 29887u)))), (29887u) | (_GLF_IDENTITY(_GLF_IDENTITY(29887u, (29887u) << 0u), _GLF_IDENTITY(uint(uvec4(29887u, (24386u & 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)), (uint(uvec4(29887u, (_GLF_IDENTITY(24386u & 0u, 0u ^ (24386u & 0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), (1u & 1u), 0u, 1u))), uint(2u))), 0u))) >> 0u))))))) >> uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0)), (_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), max(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))))) * 1.0))), max(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0, 0.0, 0.0, 1.0))))))))) / 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : uvec3(1u)))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(16470u, 57609u, 29887u)), _GLF_IDENTITY((_GLF_FUZZED(uvec3(16470u, 57609u, _GLF_IDENTITY(29887u, (29887u) | (_GLF_IDENTITY(_GLF_IDENTITY(29887u, (29887u) << 0u), _GLF_IDENTITY(uint(uvec4(29887u, (24386u & 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)), (uint(uvec4(29887u, (_GLF_IDENTITY(24386u & 0u, 0u ^ (24386u & 0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), (1u & 1u), 0u, 1u))), uint(2u))), 0u))) >> 0u))))))), max((_GLF_FUZZED(uvec3(16470u, 57609u, _GLF_IDENTITY(29887u, (29887u) | (_GLF_IDENTITY(_GLF_IDENTITY(29887u, (29887u) << 0u), _GLF_IDENTITY(uint(uvec4(29887u, (24386u & 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)), (uint(uvec4(29887u, (_GLF_IDENTITY(24386u & 0u, 0u ^ (24386u & 0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), (1u & 1u), 0u, 1u))), uint(2u))), 0u))) >> 0u))))))), (_GLF_FUZZED(uvec3(16470u, 57609u, _GLF_IDENTITY(29887u, (29887u) | (_GLF_IDENTITY(_GLF_IDENTITY(29887u, (29887u) << 0u), _GLF_IDENTITY(uint(uvec4(29887u, (24386u & 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)), (uint(uvec4(29887u, (_GLF_IDENTITY(24386u & 0u, 0u ^ (24386u & 0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), (1u & 1u), 0u, 1u))), uint(2u))), 0u))) >> 0u))))))))) >> uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0)), (_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), max(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))))) * 1.0))), max(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0, 0.0, 0.0, 1.0))))))))) / 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : uvec3(1u)))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(16470u, 57609u, 29887u)), (_GLF_FUZZED(uvec3(16470u, 57609u, _GLF_IDENTITY(29887u, (29887u) | (_GLF_IDENTITY(_GLF_IDENTITY(29887u, (29887u) << 0u), _GLF_IDENTITY(uint(uvec4(29887u, (24386u & 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)), (uint(uvec4(29887u, (_GLF_IDENTITY(24386u & 0u, 0u ^ (24386u & 0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), (1u & 1u), 0u, 1u))), uint(2u))), 0u))) >> 0u))))))) >> uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0)), (_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), max(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))))) * 1.0))), max(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0, 0.0, 0.0, 1.0))))))))) / 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : uvec3(1u)))) | uvec3(0u, 0u, 0u))))))), uvec4(1u), vec4(1.0), mat2x4(1.0), vec3(1.0), bvec2(true))));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_5._f4.subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_5._f4.subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-79122)))), ((subgroup_local_id + 1)) << 0u) % subgroup_size), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-79122)))), ((subgroup_local_id + 1)) << 0u) % subgroup_size)), (false ? _GLF_FUZZED(169656u) : ~ ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-79122)))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(10744) : 1)), 1)))), max(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(10744) : 1)), 1)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(10744) : 1)), 1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(10744) : 1)), 1)))))) << 0u) % subgroup_size))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0)), mat3(mat4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0)), (false ? _GLF_FUZZED(mat3(6.8, 28.52, 670.585, 20.89, 0.2, 3.2, 8.2, 75.72, 7.6)) : mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0)))))))), clamp(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0)), mat3(mat4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0)), (false ? _GLF_FUZZED(mat3(6.8, 28.52, 670.585, 20.89, 0.2, 3.2, 8.2, 75.72, 7.6)) : mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0)))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0)), mat3(mat4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0)), (false ? _GLF_FUZZED(mat3(6.8, 28.52, 670.585, 20.89, 0.2, 3.2, 8.2, 75.72, 7.6)) : mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0)))))))), float(mat2(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0)), mat3(mat4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0)), (false ? _GLF_FUZZED(mat3(6.8, 28.52, 670.585, 20.89, 0.2, 3.2, 8.2, 75.72, 7.6)) : mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0)))))))), 0.0, 0.0, 1.0))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0)), mat3(mat4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0)), (false ? _GLF_FUZZED(mat3(6.8, 28.52, 670.585, 20.89, 0.2, 3.2, 8.2, 75.72, 7.6)) : mat3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, length(0.0))))))))))), (injectionSwitch.x) - length(0.0)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_8(_GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(4139.6416), _GLF_FUZZED(9114.7154), (vec3(1.0))[2]), vec3((vec3(1.0))[_GLF_IDENTITY(0, ~ (~ (0)))], (vec3(1.0))[1], _GLF_FUZZED(3.9)), bvec3(true, true, false))), _GLF_struct_6(ivec4(1), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, _GLF_IDENTITY(1u, 0u ^ (1u)))), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, _GLF_IDENTITY(1u, 0u ^ (1u))))) / 1u)), (uvec4(1u)) | (uvec4(1u))), mat4(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_IDENTITY(true, true && (true)), true))), bvec4(true), mat2x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0)))), bvec2(true), _GLF_struct_7(mat3x4(1.0), _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))), mat3(1.0), mat3(1.0), mat4x3(1.0)), vec2(1.0)), bvec3(true), _GLF_struct_10(0, 1u, _GLF_struct_9(mat3x2(1.0))), _GLF_struct_14(uvec4(1u), mat3(1.0), _GLF_struct_11(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u))), mat2x4(1.0), mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) + 0.0), 1.0))), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), 0u | (1u))) | 0u)), 1.0, bvec3(true), bvec3(true)), _GLF_struct_12(bvec3(true)), _GLF_struct_13(1u, _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), mat4(1.0), bvec2(true), bvec4(true))), bvec3(true), _GLF_struct_17(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), mat2x4(1.0), ivec2(1), _GLF_struct_15(bvec4(true), vec3(1.0), ivec4(1), vec3(1.0)), _GLF_struct_16(uvec3(1u), mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(3.8)), max((true ? 1.0 : _GLF_FUZZED(3.8)), (true ? 1.0 : _GLF_FUZZED(3.8))))), 1.0, 1.0)), 1.0)))), clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.8))), 1.0, 1.0)), 1.0)))), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.8))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.8))), min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.8))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.8))))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), length(vec3(0.0, 0.0, 0.0))))), 1.0, 1.0)), 1.0)))), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.8))), 1.0, 1.0)), 1.0))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(1.0, 0.0, cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.2) : 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))))), min(_GLF_IDENTITY(clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)))))))), (false ? _GLF_FUZZED(61.37) : _GLF_IDENTITY(float(mat2x4(1.0, 0.0, cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.2) : 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(clamp(_GLF_IDENTITY(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(vec2(224.553, -9.6).y)), float(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), bool(true))))), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.9)), bool(false))), 0.0)), 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)))))))), float(mat2x4(1.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), 0.0, 0.0, 1.0, 1.0)))), clamp(float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, _GLF_IDENTITY(max((0.0) - 0.0, (0.0) - 0.0), min(max((0.0) - 0.0, (0.0) - 0.0), _GLF_IDENTITY(max((0.0) - 0.0, (0.0) - 0.0), float(mat4(max((0.0) - 0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0)))))))) + tan(0.0)), 0.0, 0.0, 1.0, 1.0))))), min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, float(mat2x4(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.8)), float(0.0), bool(true)))), float(_GLF_FUZZED((1646.1354))), bool(false))), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), (true ? _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(51.98)), float(cos(0.0)), bool(true))), cos(0.0), cos(0.0))) : _GLF_IDENTITY(_GLF_FUZZED(4.3), (_GLF_FUZZED(4.3)) + log(1.0)))), _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-3691.8338) : cos(0.0))), _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(1.2) : cos(0.0)), float(mat3x2((false ? _GLF_FUZZED(1.2) : cos(0.0)), 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)))))))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0))))))), float(_GLF_IDENTITY(_GLF_FUZZED(4.3), mix(float(_GLF_IDENTITY(_GLF_FUZZED(4.3), min(_GLF_FUZZED(4.3), _GLF_IDENTITY(_GLF_FUZZED(4.3), (false ? _GLF_FUZZED(6.1) : _GLF_FUZZED(4.3)))))), float(_GLF_FUZZED(516.297)), bool(false)))), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))) * 1.0)))), _GLF_struct_19(true, ivec2(1), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) << 0u), 1u))), _GLF_struct_18(mat4(1.0)), mat3x2(1.0), vec4(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8208.1897))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))))), false, false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), true), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 0.0), (mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))), true, false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_size) : uint(1))), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ! (! (_GLF_IDENTITY((bool(false)), ! (_GLF_IDENTITY(! ((bool(false))), false || (! ((bool(false)))))))))) && true)))))), ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(12.16)), bvec2(true, false))), (injectionSwitch) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))) || false)), (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(74.18)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(74.18)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0))))) && true) || false))) || false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   _GLF_struct_replacement_20._f2.read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, _GLF_IDENTITY(2, 0 | (2)));
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))))))) && true))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))), false), false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(bvec3(! (false), false, false), false)))))))))))))))))))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   _GLF_struct_replacement_20._f2.read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true, false, false))))) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)], _GLF_struct_replacement_20._f2.read, 4, 64, _GLF_IDENTITY(4, (4) >> 0));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
