#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-35.92)), bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-8.0))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-61313, 97352))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-61313, 97352))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-61313, 97352))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-61313, 97352))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x > injectionSwitch.y)))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x > injectionSwitch.y)))))), false), true, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x > injectionSwitch.y)))))), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x > injectionSwitch.y)))))), false), true, false)), false, false)))))))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), (bool(bvec4(true, true, true, false))) || false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), (bool(bvec4(true, true, true, false))) || false))), true && (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), (bool(bvec4(true, true, true, false))) || false)))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (true)))) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || ((injectionSwitch.x > injectionSwitch.y)))))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (true)))) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(7.3, -97.32)))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true) || ((injectionSwitch.x > injectionSwitch.y)))))), false))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))) && true) ? injectionSwitch : _GLF_FUZZED(vec2(3.1, 7825.6938))))))) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(-39.92)) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) - 0.0), injectionSwitch.x)), injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x)))), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(918.459)), float(injectionSwitch.x), bool(true))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((65.82 / -8299.0879))), float(injectionSwitch.x), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(2.4))))).x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))))) < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.2))), injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), ! (! (_GLF_IDENTITY(false, true && (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)) && true)) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(bool(bool(bvec2(false, false)))), bool(bvec2(bool(bool(bool(bvec2(false, false)))), true)))))))))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)) % subgroup_size) << 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), abs(1.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), (false ? _GLF_FUZZED(-6817.1334) : dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))))), dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(56.32), (true ? _GLF_IDENTITY(_GLF_FUZZED(56.32), mix(float(_GLF_FUZZED(-3.2)), float(_GLF_FUZZED(56.32)), bool(true))) : _GLF_FUZZED(-86.65)))), float(injectionSwitch.x), bool(true))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), 0.0 + (_GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), max(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), _GLF_IDENTITY(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)))))) : vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0))) * (_GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), max(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), _GLF_IDENTITY(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)))))) : vec2(1.0, 0.0)))), clamp(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), max(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), _GLF_IDENTITY(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)))))) : vec2(1.0, 0.0)))), dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), max(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), _GLF_IDENTITY(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)))))) : vec2(1.0, 0.0)))), dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), max(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), _GLF_IDENTITY(_GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)))))) : vec2(1.0, 0.0)))))))))), dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), clamp(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), (dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0))))) + 0.0), dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))))), clamp(_GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), clamp(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), (dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0))))) + 0.0), dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), clamp(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), (dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0))))) + 0.0), dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))))), clamp(_GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), clamp(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), (dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0))))) + 0.0), dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), clamp(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), (dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0))))) + 0.0), dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), clamp(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), (dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0))))) + 0.0), dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))))))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), clamp(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))), (dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0))))) + 0.0), dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_local_id)) : vec2(1.0, 0.0)))))))), dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y, true)))))))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u + _GLF_IDENTITY((next_virtual_gid), clamp((next_virtual_gid), (next_virtual_gid), (next_virtual_gid))))], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(44610) : 4, (false ? _GLF_FUZZED(44610) : _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED((47871 * -27237))))) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(44610, 0 | (44610))) : 4, (false ? _GLF_FUZZED(44610) : 4) | 0)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(44610) : 4, (false ? _GLF_FUZZED(44610) : 4) | _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), (true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(44610) : 4, (false ? _GLF_FUZZED(44610) : 4) | 0)) : _GLF_FUZZED(29332))) : _GLF_FUZZED(92406)))) | 0)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) - 0u), _GLF_IDENTITY(true && (subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) - 0u)), bool(bvec4(true && (subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) - 0u)), false, true, false)))), bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) - 0u), ! (! (subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) - 0u)))), true, true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true)) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true)), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, true))))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, true))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, true)))))) && true))))) && true)))))) && true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true, true)))) && true)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true))) && true))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true, true)))) && true)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true))) && true))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true, true)))) && true)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true))) && true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true, true)))) && true)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true))) && true))), true)))), false))), false, false)))))))), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, (0 >> _GLF_IDENTITY(int(2), int(2)))), ivec2(0, 0) + (ivec2(4, (0 >> _GLF_IDENTITY(int(2), int(2))))))))) | (4)), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))), _GLF_IDENTITY(4, (4) | (4)))))), 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) || false))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), true && ((false))), bool(bvec4(true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), true))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x) + 0.0), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).x)) > injectionSwitch.y)))) && true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), (false ? _GLF_FUZZED(mat3x2(76.11, 6.5, -6.7, 3.6, 4518.8946, -7706.1762)[1]) : vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), clamp(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))))), float(_GLF_FUZZED(-7692.0823)), bool(false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, log(1.0), 0.0, 1.0)), dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ 73.68))), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-27.48)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0)))) - determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 1.0))), 0.0, exp(log(1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, log(1.0), 0.0, 1.0)), dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ 73.68))), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-27.48)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0)))) - determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 1.0))), 0.0, exp(log(1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)), (float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0))) + 0.0)) > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)), (float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0))) + 0.0)) > injectionSwitch.y)))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y))))
      barrier();
     atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, uint(_GLF_IDENTITY(uvec4(read, 1u, 0u, 0u), (uvec4(read, 1u, 0u, 0u)) | (uvec4(read, 1u, 0u, 0u))))), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(900.631)), float(0.0), bool(true))), 0.0)), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(0.0 + _GLF_IDENTITY(((injectionSwitch)[0]), clamp(((injectionSwitch)[0]), ((injectionSwitch)[0]), ((injectionSwitch)[0]))), clamp(0.0 + _GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, 1 * (0))]), clamp((_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((- -8.9)), _GLF_FUZZED(-459.964)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], (true ? ((injectionSwitch))[0] : _GLF_FUZZED(8.5))), ((injectionSwitch))[1]), bvec2(true, true)))[0]), ((injectionSwitch)[0]), ((injectionSwitch)[0]))), _GLF_IDENTITY(0.0 + _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[0]), float(mat4x3(((injectionSwitch)[0]), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec3(1.0, 0.0, tan(0.0))), dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec3(1.0, 0.0, tan(0.0)))), 1.0, 1.0, 0.0))), clamp(((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))]), ((injectionSwitch)[0]), ((injectionSwitch)[0]))), min(0.0 + _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])))[0]), clamp(((injectionSwitch)[0]), ((injectionSwitch)[0]), ((injectionSwitch)[0]))), 0.0 + _GLF_IDENTITY(((injectionSwitch)[0]), _GLF_IDENTITY(clamp(_GLF_IDENTITY(((injectionSwitch)[0]), max(((injectionSwitch)[0]), ((injectionSwitch)[0]))), (_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5818.3848)), float(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(-1.4)), bool(false)))), bool(true)))), ((injectionSwitch)[0])), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(((injectionSwitch)[0]), max(((injectionSwitch)[0]), ((injectionSwitch)[0]))), (_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5818.3848)), float(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(-1.4)), bool(false)))), bool(true)))), ((injectionSwitch)[0])), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(((injectionSwitch)[0]), max(((injectionSwitch)[0]), ((injectionSwitch)[0]))), (_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5818.3848)), float(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(-1.4)), bool(false)))), bool(true)))), ((injectionSwitch)[0])), (false ? _GLF_FUZZED(-3.2) : clamp(_GLF_IDENTITY(((injectionSwitch)[0]), max(((injectionSwitch)[0]), ((injectionSwitch)[0]))), (_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5818.3848)), float(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(-1.4)), bool(false)))), bool(true)))), ((injectionSwitch)[0])))), clamp(_GLF_IDENTITY(((injectionSwitch)[0]), max(((injectionSwitch)[0]), ((injectionSwitch)[0]))), (_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5818.3848)), float(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(-1.4)), bool(false)))), bool(true)))), ((injectionSwitch)[0])), _GLF_IDENTITY(clamp(_GLF_IDENTITY(((injectionSwitch)[0]), max(((injectionSwitch)[0]), ((injectionSwitch)[0]))), (_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5818.3848)), float(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(-1.4)), bool(false)))), bool(true)))), ((injectionSwitch)[0])), (clamp(_GLF_IDENTITY(((injectionSwitch)[0]), max(((injectionSwitch)[0]), ((injectionSwitch)[0]))), (_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5818.3848)), float(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(-1.4)), bool(false)))), bool(true)))), ((injectionSwitch)[0]))) / 1.0))), clamp(_GLF_IDENTITY(((injectionSwitch)[0]), max(((injectionSwitch)[0]), ((injectionSwitch)[0]))), (_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-5818.3848)), float(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(-1.4)), bool(false)))), bool(true)))), ((injectionSwitch)[0]))))))), 0.0 + _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[0]), clamp(((injectionSwitch)[0]), ((injectionSwitch)[0]), ((injectionSwitch)[0]))), max(_GLF_IDENTITY(((injectionSwitch)[0]), clamp(((injectionSwitch)[0]), ((injectionSwitch)[0]), ((injectionSwitch)[0]))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[0]), clamp(((injectionSwitch)[0]), ((injectionSwitch)[0]), ((injectionSwitch)[0]))), clamp(_GLF_IDENTITY(((injectionSwitch)[0]), clamp(((injectionSwitch)[0]), ((injectionSwitch)[0]), ((injectionSwitch)[0]))), _GLF_IDENTITY(((injectionSwitch)[0]), clamp(((injectionSwitch)[0]), ((injectionSwitch)[0]), ((injectionSwitch)[0]))), _GLF_IDENTITY(((injectionSwitch)[0]), clamp(((injectionSwitch)[0]), ((injectionSwitch)[0]), ((injectionSwitch)[0])))))))))), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))) << 0)]), vec2(_GLF_FUZZED(-437.363), _GLF_FUZZED(vec4(82.97, -3.1, 9178.7610, _GLF_IDENTITY(7450.2460, min(_GLF_IDENTITY(7450.2460, (true ? 7450.2460 : _GLF_FUZZED(_GLF_IDENTITY(968.710, (968.710) / 1.0)))), 7450.2460))).r)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(intBitsToFloat(ivec2(6134, 49046))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true, true)), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true, true))))), true))))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((false ? 628.646 : -3733.8045))), float(injectionSwitch.x), bool(true))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (true ? mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(mat4x3(5.9, -14.37, 762.953, 65.41, 321.491, -1801.2307, -29.03, -3237.8291, -4.9, -8.9, -14.52, 0.6)))))))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true)))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec3(bool(bvec4(true, false, _GLF_IDENTITY(true, (true) && true), false)), false, false)))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || ((injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), false))).x, injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(exp(6201.4656)), mix(float(_GLF_FUZZED(-9805.6064)), float(_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(exp(6201.4656)), (false ? _GLF_FUZZED(7.1) : true ? 0.0 : _GLF_FUZZED(exp(6201.4656))))), bool(true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), mix(float(_GLF_FUZZED(900.631)), float(0.0), bool(true))), 0.0)), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0), (true ? mat4x3(1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x3(-693.158, 8918.2824, -7.8, 2.1, 1369.9654, 23.21, 4.6, 9297.9771, -31.10, -8.2, -7.2, 4.8))))), 1.0 * (float(_GLF_IDENTITY(mat4x3(1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0), (true ? mat4x3(1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x3(-693.158, 8918.2824, -7.8, 2.1, 1369.9654, 23.21, 4.6, 9297.9771, -31.10, -8.2, -7.2, 4.8)))))))), log(1.0), 0.0), mat3(mat3(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0), (true ? mat4x3(1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x3(-693.158, 8918.2824, -7.8, 2.1, 1369.9654, 23.21, 4.6, 9297.9771, -31.10, -8.2, -7.2, 4.8))))), 1.0 * (float(_GLF_IDENTITY(mat4x3(1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0), (true ? mat4x3(1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x3(-693.158, 8918.2824, -7.8, 2.1, 1369.9654, 23.21, 4.6, 9297.9771, -31.10, -8.2, -7.2, 4.8)))))))), log(1.0), 0.0)))))), injectionSwitch, injectionSwitch)))[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(0.0 + _GLF_IDENTITY(((injectionSwitch)[0]), clamp(((injectionSwitch)[0]), ((injectionSwitch)[0]), ((injectionSwitch)[0]))), clamp(0.0 + _GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(1, max(1, 1)) * (0))]), clamp((_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((- _GLF_IDENTITY(-8.9, max(-8.9, -8.9)))), _GLF_FUZZED(-459.964)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch))[0], (true ? ((injectionSwitch))[0] : _GLF_FUZZED(8.5))), clamp(_GLF_IDENTITY(((injectionSwitch))[0], (true ? ((injectionSwitch))[0] : _GLF_FUZZED(8.5))), _GLF_IDENTITY(((injectionSwitch))[0], (true ? ((injectionSwitch))[0] : _GLF_FUZZED(8.5))), _GLF_IDENTITY(((injectionSwitch))[0], (true ? ((injectionSwitch))[0] : _GLF_FUZZED(8.5))))), ((injectionSwitch))[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (1)), 1))]), bvec2(true, true)))[0]), ((injectionSwitch)[0]), ((injectionSwitch)[0]))), _GLF_IDENTITY(0.0 + _GLF_IDENTITY(((injectionSwitch)[0]), clamp(((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))]), ((injectionSwitch)[0]), ((injectionSwitch)[0]))), min(0.0 + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + _GLF_IDENTITY((injectionSwitch[0]), ((injectionSwitch[0])) / 1.0)), injectionSwitch[1])), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)], (true ? _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)], 1.0 * (injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) : _GLF_FUZZED(52.92))), 0.0 + (injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(-8470.0616)), bvec2(false, false)))[1])), length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0)), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), cos(0.0), 0.0, 0.0)), cos(vec2(0.0, 0.0)) * (vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0])), injectionSwitch[1])), length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), determinant(mat3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0)), sqrt(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-10.45 * 14.92))), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, abs(1.0), cos(0.0), 0.0, 0.0))))))[0]), clamp(((injectionSwitch)[0]), ((injectionSwitch)[0]), ((injectionSwitch)[0]))), 0.0 + _GLF_IDENTITY(((injectionSwitch)[0]), clamp(_GLF_IDENTITY(((injectionSwitch)[0]), _GLF_IDENTITY(max(((injectionSwitch)[0]), (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])))), min(max(((injectionSwitch)[0]), (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])))), max(((injectionSwitch)[0]), (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))))))), (_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5818.3848), (_GLF_IDENTITY(_GLF_FUZZED(-5818.3848), float(mat3(_GLF_IDENTITY(_GLF_FUZZED(-5818.3848), (_GLF_FUZZED(-5818.3848)) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) * 1.0)), float(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3((injectionSwitch), 1.0), mix(vec3((vec3((injectionSwitch), 1.0))[0], (vec3((injectionSwitch), 1.0))[1], (vec3((injectionSwitch), 1.0))[2]), vec3(_GLF_FUZZED(4.9), _GLF_FUZZED(-657.690), _GLF_FUZZED(185.142)), bvec3(false, false, false))), (_GLF_IDENTITY(vec3((injectionSwitch), 1.0), mix(vec3((vec3((injectionSwitch), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.7)), float(1.0), bool(true)))))[0], (vec3((injectionSwitch), 1.0))[1], (vec3((injectionSwitch), 1.0))[2]), vec3(_GLF_FUZZED(4.9), _GLF_FUZZED(-657.690), _GLF_FUZZED(185.142)), bvec3(false, false, false)))) / vec3(1.0, 1.0, 1.0))))[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(-1.4)), bool(false)))), bool(true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), sqrt(0.0), 1.0))) * sqrt(cos(vec2(0.0, 0.0)))))[0], mix(float(_GLF_FUZZED(678.783)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(cos(vec2(0.0, 0.0)))))[0], min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(cos(vec2(0.0, 0.0)))))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(cos(vec2(0.0, 0.0))))), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(cos(vec2(0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(cos(vec2(0.0, 0.0)))))))[0]))), bool(true)))))))), 0.0 + _GLF_IDENTITY(((injectionSwitch)[0]), clamp(((injectionSwitch)[0]), ((injectionSwitch)[0]), ((injectionSwitch)[0])))))), (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))), max((_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))), (_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))))) << 0)]), vec2(_GLF_FUZZED(-437.363), _GLF_FUZZED(vec4(82.97, -3.1, 9178.7610, _GLF_IDENTITY(7450.2460, min(_GLF_IDENTITY(7450.2460, (true ? 7450.2460 : _GLF_FUZZED(968.710))), 7450.2460))).r)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)), false)), false))))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))).x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.4) : _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) > injectionSwitch.y, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), true)), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true, true))))), true))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_IDENTITY(false, (false) && true))))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec3(bool(bvec4(true, false, true, false)), false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7394.3904, -113.708)) : injectionSwitch)))).y)) || ((injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec3(bool(bvec4(true, false, true, false)), false, false)))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7394.3904, -113.708)) : injectionSwitch)))).y)) || ((injectionSwitch.x < injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), sqrt(0.0), 1.0)))))))) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7394.3904, -113.708), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec2(7394.3904, -113.708), (vec2(7394.3904, -113.708)) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))))), max(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec2(7394.3904, -113.708), (vec2(7394.3904, -113.708)) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))))), vec3(mat4(vec3(_GLF_IDENTITY(vec2(7394.3904, -113.708), (vec2(7394.3904, -113.708)) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(vec2(7394.3904, -113.708), (vec2(7394.3904, -113.708)) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))))))))))) : injectionSwitch), mix(vec2(_GLF_FUZZED(-7.0), ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7394.3904, -113.708), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec2(7394.3904, -113.708), (vec2(7394.3904, -113.708)) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))))), max(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec2(7394.3904, -113.708), (vec2(7394.3904, -113.708)) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))))), vec3(mat4(vec3(_GLF_IDENTITY(vec2(7394.3904, -113.708), (vec2(7394.3904, -113.708)) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(vec2(7394.3904, -113.708), (vec2(7394.3904, -113.708)) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))))))))))) : injectionSwitch))[1]), vec2(((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7394.3904, -113.708), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec2(7394.3904, -113.708), (vec2(7394.3904, -113.708)) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))))), max(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec2(7394.3904, -113.708), (vec2(7394.3904, -113.708)) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))))), vec3(mat4(vec3(_GLF_IDENTITY(vec2(7394.3904, -113.708), (vec2(7394.3904, -113.708)) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(vec2(7394.3904, -113.708), (vec2(7394.3904, -113.708)) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))))))))))) : injectionSwitch))[0], _GLF_FUZZED(690.892)), bvec2(true, false)))))).y)) || ((injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), false))), false))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))))))))), false))).x, injectionSwitch.x)) * determinant(mat2(1.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))));
   subgroupAll(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9573.6444) : injectionSwitch.y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(80.87)), vec2(_GLF_FUZZED(-7.9), (injectionSwitch)[1]), bvec2(false, true))).y)))) || false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true))) && true)), false, _GLF_IDENTITY(true, ! (! (true))), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4((false), false, true, false)))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec4((false), false, _GLF_IDENTITY(true, ! (! (true))), false)))), false, false, false))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
