#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_20 {
 float _f0;
 ivec3 _f1;
 mat3x4 _f2;
 mat4x3 _f3;
 mat3x2 _f4;
 mat3x4 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_21 {
 vec4 _f0;
 uvec2 _f1;
 mat3x4 _f2;
 uvec3 _f3;
 _GLF_struct_20 _f4;
} ;

struct _GLF_struct_22 {
 ivec2 _f0;
 _GLF_struct_21 _f1;
 uvec4 _f2;
 vec3 _GLF_SWITCH_0_24v;
} ;

struct _GLF_struct_18 {
 mat3 _f0;
 mat2x3 _f1;
 uvec4 _f2;
 uint _f3;
 mat4 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_16 {
 int _f0;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
 float _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_13 {
 ivec2 _f0;
 ivec2 _f1;
 bvec2 _f2;
 vec3 _f3;
 mat3x2 _f4;
 ivec4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
} ;

struct _GLF_struct_15 {
 float _f0;
 _GLF_struct_12 _f1;
 uvec4 _f2;
 ivec4 _f3;
 bvec4 _f4;
 _GLF_struct_13 _f5;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_19 {
 uvec2 _f0;
 _GLF_struct_15 _f1;
 vec3 _f2;
 mat2x4 _f3;
 mat3 _GLF_SWITCH_0_10v;
 _GLF_struct_17 _f4;
 _GLF_struct_18 _f5;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
 ivec2 _f1;
 ivec2 _f2;
 ivec4 _f3;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
} ;

struct _GLF_struct_6 {
 uint _f0;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 ivec3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_2 {
 int _f0;
 mat2x4 _f1;
 mat2x3 _f2;
 bool _f3;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 bvec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 uvec3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_11 {
 ivec3 _f0;
 _GLF_struct_3 _f1;
 mat3 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_10 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_0 {
 uint num_workgroup;
 uvec4 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))) && true)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(42.49)), vec2(_GLF_FUZZED(206.842), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y, false, true))))), (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))) && true))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))))), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), clamp((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), _GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * ((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))), _GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), max((gl_NumWorkGroups) >> uvec3(0u, 0u, 0u), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))))), uvec3(0u, 0u, 0u) | (clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)), gl_NumWorkGroups)), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))).x, _GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(65676u, 198068u, _GLF_IDENTITY(140231u, (140231u) / 1u), 111508u)) : uvec4(1u))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false), true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y)), true)), true, false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y)), true)), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y)), true)), true, false)))))))))))))), false)))))), (bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false), bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + abs(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + abs(vec2(0.0, 0.0))).y) - 0.0))), true)), true, false)))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), false, false)), bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), (false ? _GLF_FUZZED(785.751) : float(vec3(injectionSwitch.y, 1.0, 1.0))))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), (false ? _GLF_FUZZED(785.751) : float(vec3(injectionSwitch.y, 1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), (false ? _GLF_FUZZED(785.751) : float(vec3(injectionSwitch.y, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), (false ? _GLF_FUZZED(785.751) : float(vec3(injectionSwitch.y, 1.0, 1.0))))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), (false ? _GLF_FUZZED(785.751) : float(vec3(injectionSwitch.y, 1.0, 1.0))))), 0.0)), min(float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), (false ? _GLF_FUZZED(785.751) : float(vec3(injectionSwitch.y, 1.0, 1.0))))), 0.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), (false ? _GLF_FUZZED(785.751) : float(vec3(injectionSwitch.y, 1.0, 1.0))))), 0.0)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(ivec3(1), _GLF_struct_3(_GLF_struct_1(mat3(1.0), bvec2(true), mat4x2(1.0)), _GLF_struct_2(1, mat2x4(1.0), mat2x3(1.0), true), uvec3(1u), mat3x4(1.0)), mat3(1.0), _GLF_struct_7(ivec3(1), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1)), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1)))), 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1))))), _GLF_struct_4(uvec4(1u)), _GLF_struct_5(mat3x4(1.0), mat3x4(1.0), mat4x2(1.0)), _GLF_struct_6(1u), mat3x4(1.0)), _GLF_struct_8(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_struct_10(vec4(1.0), ivec2(1), ivec2(1), ivec4(1), _GLF_struct_9(mat3x2(1.0), gl_WorkGroupSize.x)), mat4x3(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_struct_replacement_11._f5._f4.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))))))
    {
     case 0:
     case 92:
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))) && true))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 44:
     case 20:
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, true && (false)))))))
      return;
     break;
     case 89:
     ;
     default:
     _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))));
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), (subgroup_local_id + 1) >> 0u)) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec4((subgroup_size), 1u, 0u, 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((subgroup_size), 1u, 0u, 0u), (_GLF_IDENTITY(uvec4((subgroup_size), 1u, 0u, 0u), (uvec4((subgroup_size), 1u, 0u, 0u)) | (uvec4((subgroup_size), 1u, 0u, 0u)))) | uvec4(0u, 0u, 0u, 0u))), (uint(uvec4((subgroup_size), 1u, 0u, 0u))) + 0u)) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(698.542), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[0], _GLF_FUZZED(vec3(575.814, -859.862, _GLF_IDENTITY(6.4, 1.0 * (_GLF_IDENTITY(6.4, mix(float(6.4), float(_GLF_FUZZED(float(96545))), bool(false)))))).x)), bvec2(true, false))).x)))), 1u)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, (false) && true)))))), true && (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))) && true)))))
  {
   switch(_GLF_SWITCH((0 | 0)))
    {
     case 84:
     vec4(0.6, _GLF_IDENTITY(150.842, clamp(150.842, 150.842, 150.842)), 156.250, 8.0);
     case 81:
     mat4x2(-7.8, -1.9, -865.558, -245.634, 1009.7483, 4.4, -337.866, -7095.7280)[1];
     case 0:
     case 86:
     case 95:
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     case 73:
     case 34:
     return;
     break;
     default:
     1;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), 0u + (uint(1)))) | (uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), (4) | 0), 64, 4);
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))], _GLF_IDENTITY(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid]))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(1u * (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) | (virtual_gid))]), (1u * (buf[virtual_gid])) | (1u * (buf[virtual_gid]))))), ~ (_GLF_IDENTITY(~ (min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(1u * (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) | (virtual_gid))]), (1u * (buf[virtual_gid])) | (1u * (buf[virtual_gid])))))), clamp(~ (min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(1u * (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) | (virtual_gid))]), (1u * (buf[virtual_gid])) | (1u * (buf[virtual_gid])))))), _GLF_IDENTITY(~ (min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(1u * (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) | (virtual_gid))]), (1u * (buf[virtual_gid])) | (1u * (buf[virtual_gid])))))), (~ (min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(1u * (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) | (virtual_gid))]), (1u * (buf[virtual_gid])) | (1u * (buf[virtual_gid]))))))) - 0u), ~ (min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(1u * (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) | (virtual_gid))]), (1u * (buf[virtual_gid])) | (1u * (buf[virtual_gid])))))))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))))).y)))), (false ? _GLF_FUZZED((virtual_gid ^ subgroup_local_id)) : uint(uvec2(_GLF_IDENTITY(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(1u * (buf[virtual_gid]), (true ? 1u * (buf[virtual_gid]) : _GLF_FUZZED(workgroup_id))))), max(_GLF_IDENTITY(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid]))), clamp(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 1u * _GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(workgroup_base) : (buf[virtual_gid])))) | 0u))), min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> (0u & 26917u)), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(1u * (buf[virtual_gid]), (_GLF_IDENTITY(1u * (buf[virtual_gid]), _GLF_IDENTITY(uint(uvec3(1u * (buf[virtual_gid]), 0u, 1u)), max(_GLF_IDENTITY(uint(uvec3(1u * (buf[virtual_gid]), 0u, 1u)), (uint(uvec3(1u * (buf[virtual_gid]), 0u, 1u))) ^ 0u), uint(uvec3(1u * (buf[virtual_gid]), 0u, 1u)))))) + ((_GLF_IDENTITY(168568u, (_GLF_IDENTITY(168568u, (_GLF_IDENTITY(168568u, min(168568u, 168568u))) | (168568u))) ^ 0u) | 12228u) & 0u)))), _GLF_IDENTITY(min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid])), 0u ^ (_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid]))))), (min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid])))) - 0u))), _GLF_IDENTITY(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) << 0u))) * (buf[virtual_gid]))), (min(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)))), _GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid])))) | (min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 1u * (_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec4(buf[virtual_gid], 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(buf[virtual_gid], 0u, 0u, 0u)))))))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) >> 0u) < _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))
  {
   switch(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH((0 ^ 0)), _GLF_IDENTITY(int(ivec4(_GLF_SWITCH((0 ^ 0)), 0, 0, (0 | 0))), (true ? int(ivec4(_GLF_SWITCH((0 ^ 0)), 0, 0, (0 | 0))) : _GLF_FUZZED(-12447)))), min(_GLF_SWITCH((0 ^ 0)), _GLF_IDENTITY(_GLF_SWITCH((0 ^ 0)), 0 ^ (_GLF_SWITCH((0 ^ 0)))))))
    {
     case 0:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), false, true)), ! (! (bool(bvec3(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), false, true))))))), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bool((_GLF_DEAD(false)) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         return;
        }
       barrier();
      }
     case 54:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
        return;
       switch(_GLF_SWITCH(0))
        {
         case 48:
         if(_GLF_DEAD(false))
          barrier();
         mat4x3(vec3(-97.33, 404.716, -619.081), vec3(-55.98, -6.4, -119.693), vec3(-4.5, _GLF_IDENTITY(8568.3077, float(_GLF_IDENTITY(vec4(8568.3077, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), (vec4(8568.3077, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) * vec4(1.0, 1.0, 1.0, 1.0)))), -6486.7425), acos(vec3(315.022, -698.918, 973.416)));
         case 37:
         transpose(mat2x3(4570.5844, 13.17, 2.4, -62.21, -123.695, _GLF_IDENTITY(2.7, (2.7) - 0.0)));
         case 0:
         if(_GLF_DEAD(false))
          return;
         case 13:
         if(_GLF_DEAD(false))
          return;
         case 5:
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         case 25:
         case 91:
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         case 23:
         if(_GLF_DEAD(false))
          barrier();
         break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 63:
         uvec2 _GLF_SWITCH_2_0v;
         case 28:
         _GLF_IDENTITY(-938.589, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0)) * (-938.589));
         if(_GLF_DEAD(false))
          barrier();
         default:
         1;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
      }
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     case 1:
     case 63:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     case 13:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     case 66:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     case 39:
     if(_GLF_DEAD(false))
      return;
     case 77:
     case 82:
     case 23:
     subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))));
     break;
     case 79:
     if((vec4(-27.86, -73.58, 67.07, _GLF_IDENTITY(-70.08, (-70.08) - _GLF_IDENTITY(0.0, max(0.0, 0.0)))) == vec4(1531.6294, 9807.2505, -6.0, 88.29)))
      {
       lessThanEqual((_GLF_IDENTITY(step(825.691, 20.12) - vec4(523.975, -6956.7334, 2.9, -7453.1555), vec4(mat3(_GLF_IDENTITY(step(825.691, 20.12) - vec4(523.975, -6956.7334, 2.9, -7453.1555), max(_GLF_IDENTITY(step(825.691, 20.12) - vec4(523.975, -6956.7334, 2.9, -7453.1555), (step(825.691, 20.12) - vec4(523.975, -6956.7334, 2.9, -7453.1555)) / vec4(1.0, 1.0, 1.0, 1.0)), step(825.691, 20.12) - vec4(523.975, -6956.7334, 2.9, -7453.1555))), 1.0, 0.0, 1.0, log(1.0), 1.0)))), vec4(572.400, -3.0, -37.00, 8.1));
       if(_GLF_DEAD(false))
        return;
       vec2(-766.230, -749.860);
       if(_GLF_DEAD(false))
        barrier();
       ivec3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v[67];
       if(_GLF_DEAD(false))
        barrier();
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        do
         {
          _GLF_IDENTITY(uvec3(24900u, 27458u, 66889u).bbr, max(uvec3(24900u, 27458u, 66889u).bbr, _GLF_IDENTITY(uvec3(24900u, 27458u, 66889u).bbr, min(uvec3(24900u, 27458u, 66889u).bbr, uvec3(24900u, 27458u, 66889u).bbr))));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
          if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
           {
            if(_GLF_DEAD(false))
             break;
            continue;
            if(_GLF_DEAD(false))
             barrier();
           }
         }
        while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
        uvec4(151011u, 147541u, 71972u, 98482u);
        if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || (false))))))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          barrier();
         }
        for(        mat4x3(0.6, 9.5, 61.21, 243.636, -19.09, -3.4, 24.83, -4.6, 5716.7705, -5.3, -73.04, 332.856);
 (bvec3(true, false, true) != bvec3(true, true, true)); mat2x4(-1418.5446, _GLF_IDENTITY(3505.9594, clamp(3505.9594, _GLF_IDENTITY(3505.9594, max(3505.9594, 3505.9594)), _GLF_IDENTITY(3505.9594, max(3505.9594, 3505.9594)))), 97.35, 15.59, -45.02, -9.7, 6.3, -9.6))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
           continue;
          switch(_GLF_SWITCH(0))
           {
            case 22:
            if(_GLF_DEAD(false))
             barrier();
            mat2x3(4075.5519, 7.0, 224.175, -5.8, -9.2, -7.5);
            case 0:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             break;
            case 51:
            case 73:
            bvec4 _GLF_SWITCH_0_3v[94], _GLF_SWITCH_0_4v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              continue;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(false))
             barrier();
            bvec3 _GLF_SWITCH_0_5v;
            if(_GLF_DEAD(false))
             return;
            float _GLF_SWITCH_0_6v;
            if(_GLF_DEAD(false))
             return;
            case 16:
            ;
            case 91:
            (ivec2(9667, 60080) ^ -68355);
            if(_GLF_DEAD(false))
             barrier();
            break;
            case 8:
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            mat4x2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[12], _GLF_SWITCH_1_2v;
            default:
            if(_GLF_DEAD(false))
             barrier();
            1;
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            barrier();
           }
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
       }
       if((subgroup_id == subgroup_id))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y))))
          barrier();
         int _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v[51];
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         mat4x3(mat4(-195.427, -590.053, -609.064, -4680.8842, -5033.0224, -279.517, 5.3, -0.4, 62.26, -3.3, -3.4, -7.4, -60.20, -620.304, 7.1, -4.2));
         if((bvec3(true, false, true) == lessThanEqual(vec3(-374.931, -86.11, 4.2), roundEven(vec3(_GLF_IDENTITY(-7448.3629, min(-7448.3629, _GLF_IDENTITY(-7448.3629, min(-7448.3629, -7448.3629)))), -286.456, 692.366)))))
          {
           _GLF_struct_19 _GLF_struct_replacement_19;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(1.2) : injectionSwitch[1])), injectionSwitch[1])))), injectionSwitch, injectionSwitch)).y))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))
            return;
           (mat2x4(895.802, 5950.9992, 4.6, -63.55, 2.9, 550.327, _GLF_IDENTITY(2.0, mix(float(_GLF_FUZZED(8.0)), float(_GLF_IDENTITY(2.0, (2.0) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -44.64) / _GLF_IDENTITY(36.62, (_GLF_IDENTITY(36.62, min(36.62, 36.62))) + 0.0));
           bvec2(false, false);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true, false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false))), _GLF_IDENTITY(false, (false) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
            {
             switch(_GLF_SWITCH(0))
              {
               case 55:
               mat4x3(-774.873, -8877.3533, _GLF_IDENTITY(-0.6, max(_GLF_IDENTITY(-0.6, mix(float(-0.6), float(_GLF_FUZZED(-0.9)), bool(false))), -0.6)), -2.7, -9904.5012, 2.6, -49.57, -3.1, -49.05, -867.008, 10.25, -582.593);
               case 0:
               case 67:
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                {
                 switch(_GLF_SWITCH((33379 & 0)))
                  {
                   case 67:
                   bvec2(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))));
                   case 0:
                   case 39:
                   case 8:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 35:
                   case 28:
                   case 48:
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    return;
                   case 37:
                   case 76:
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                    barrier();
                   case 53:
                   case 75:
                   return;
                   break;
                   case 4:
                   uint _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                   case 26:
                   mat3x2(-35.45, 0.9, -4.1, -16.45, -999.811, 9.0);
                   default:
                   _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), (true ? ivec2(1, 1) : _GLF_FUZZED(ivec2(17098, 46699))))), (int(_GLF_IDENTITY(ivec2(1, 1), (true ? ivec2(1, 1) : _GLF_FUZZED(ivec2(17098, 46699)))))) >> 0));
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               case 29:
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                barrier();
               case 77:
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))))
                return;
               barrier();
               if(_GLF_DEAD(false))
                return;
               break;
               case 28:
               ivec3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[83];
               default:
               1;
              }
            }
           ivec2(-58294, -35212);
           if(_GLF_DEAD(false))
            return;
           _GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)));
           mat2x3(-4562.3858, 7679.2110, 7.6, -135.139, -4.0, 3.8);
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-880.650)), bool(false))) > injectionSwitch.y)))) || false, ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))))) || false) || false)))
            return;
           mat4x3(-2.7, -12.83, _GLF_IDENTITY(-7.4, (_GLF_IDENTITY(_GLF_IDENTITY(-7.4, float(mat2(-7.4, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), max(_GLF_IDENTITY(-7.4, float(mat2(-7.4, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), _GLF_IDENTITY(-7.4, float(mat2(-7.4, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))) / 1.0), 643.599, 377.107, -5065.5835, 4.0, -145.273, 9.9, 8.2, -3927.4408, -2928.1038);
           bvec4 _GLF_SWITCH_0_11v[63];
          }
         for(         matrixCompMult(mat2(-8.8, 3.7, -2.0, -7.0), mat2(-1.3, -5221.9143, 52.44, 780.078));
 false; bvec3(false, true, false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           switch(_GLF_SWITCH(0))
            {
             case 3:
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             mat2x3(6.5, -809.071, 8.0, 5335.8396, -1008.1354, -6.7);
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
             case 71:
             (mat2x3(-5262.4737, 76.60, 9.7, 97.47, _GLF_IDENTITY(84.47, mix(float(_GLF_IDENTITY(84.47, min(84.47, 84.47))), float(_GLF_FUZZED((68.71 + 3528.1833))), bool(false))), -4116.5337) / sqrt(-518.293));
             case 0:
             case 99:
             case 81:
             case 31:
             ;
             case 14:
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             case 62:
             mat4 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 73:
             case 64:
             case 66:
             case 56:
             vec4(-6002.9350, 4654.9377, -958.822, 4.0);
             break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
              break;
             case 26:
             mat2x4(-1.4, 0.2, 428.518, 302.323, -90.88, -9.0, -1317.6501, -3462.7232);
             case 38:
             bvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
             default:
             if(_GLF_DEAD(false))
              {
               switch(_GLF_SWITCH((0 ^ 0)))
                {
                 case 0:
                 case 63:
                 case 56:
                 case 62:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 case 22:
                 case 92:
                 case 7:
                 case 69:
                 case 70:
                 case 76:
                 barrier();
                 break;
                 case 65:
                 vec4 _GLF_SWITCH_4_0v[44];
                 case 27:
                 vec3 _GLF_SWITCH_4_1v[37];
                 default:
                 1;
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              continue;
             1;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)))))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                continue;
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(true)
        {
         while(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           vec4 _GLF_SWITCH_0_14v;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), (uvec3(subgroup_id, 0u, 0u)) | uvec3(0u, 0u, 0u))), 0u ^ (uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), (uvec3(subgroup_id, 0u, 0u)) | uvec3(0u, 0u, 0u)))))) & uvec3(156884u, 154936u, 65896u));
           bvec4(false, false, true, true);
           if(_GLF_DEAD(false))
            return;
           ;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           _GLF_IDENTITY(_GLF_SWITCH_0_1v, (_GLF_SWITCH_0_1v) + ivec3(0, 0, 0))[_GLF_IDENTITY(0, ~ (~ (0)))];
           if(_GLF_DEAD(false))
            barrier();
           mat2x3 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         (mat3x2(276.696, 1.6, 2.0, -1287.7399, 640.625, 9.2) / ((mat2(-519.021, 3.9, -90.46, _GLF_IDENTITY(809.431, max(809.431, _GLF_IDENTITY(809.431, (809.431) / 1.0)))) * mat3x2(2.1, 5.0, 12.66, 3447.8374, 85.33, 61.16)) / mat3x2(-740.731, -59.05, -2.0, 1824.9599, _GLF_IDENTITY(9.8, 0.0 + (9.8)), -77.50)));
         if(_GLF_DEAD(false))
          return;
         {
          switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
           {
            case 92:
            mat2x4(-8.4, 74.26, -833.149, 6.6, 700.653, 825.145, 346.450, 952.025);
            case 0:
            case 49:
            case 25:
            if(_GLF_DEAD(false))
             return;
            case 93:
            if(_GLF_DEAD(false))
             barrier();
            case 91:
            case 4:
            case 13:
            switch(_GLF_SWITCH(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-67591)))))
             {
              case 75:
              if(_GLF_DEAD(false))
               return;
              bvec4(true, true, false, true);
              case 19:
              mat4(250.376, 5.4, _GLF_IDENTITY(-2468.7299, min(-2468.7299, _GLF_IDENTITY(-2468.7299, 1.0 * (-2468.7299)))), -3.5, 82.05, -1124.7180, 9089.3279, 3995.4393, _GLF_IDENTITY(399.045, float(mat4x3(399.045, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 0.5, 7993.7604, -92.17, 78.82, -0.0, 6761.7430, 55.46);
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(degrees(-3.7)) : injectionSwitch.x)) > injectionSwitch.y))))
               return;
              case 0:
              case 50:
              _GLF_IDENTITY(vec2(-87.63, -9428.4875), (vec2(-87.63, -9428.4875)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)));
              if(_GLF_DEAD(false))
               barrier();
              case 28:
              if(_GLF_DEAD(false))
               return;
              case 49:
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               barrier();
              case 79:
              if(_GLF_DEAD(false))
               return;
              (mat2x4(203.597, -8.9, 6.0, 1996.6108, 1.4, 4.0, 5.8, 467.710) * mat4x2(767.564, -6716.8280, -3545.7476, -55.79, -677.276, 155.575, 3.2, 9968.5509));
              case 95:
              _GLF_IDENTITY(log(vec3(-3.1, 3948.4557, -2547.4005)), max(_GLF_IDENTITY(log(vec3(-3.1, 3948.4557, -2547.4005)), (false ? _GLF_FUZZED(log(vec3(307.989, -1.8, 39.96))) : log(vec3(-3.1, 3948.4557, -2547.4005)))), log(vec3(-3.1, 3948.4557, -2547.4005))));
              case 43:
              ;
              case 10:
              if(_GLF_DEAD(false))
               return;
              uvec4 _GLF_SWITCH_0_17v[90], _GLF_SWITCH_0_18v;
              case 87:
              vec3 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
              break;
              default:
              1;
             }
            break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            case 95:
            int _GLF_SWITCH_3_0v[94];
            default:
            if(_GLF_DEAD(false))
             barrier();
            1;
           }
         }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y)))))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 77:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         for(mat3 _GLF_SWITCH_2_0v; true; transpose(mat2x3(8.6, 70.66, -553.657, 36.51, -774.327, 4.4)))
          {
           mat2x4(4.8, 1.1, -1310.7573, 1.2, -8.8, -18.12, _GLF_IDENTITY(8.6, max(8.6, 8.6)), -3.0);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           -4486.1265;
           notEqual(ivec4(-52530, 77017, 31252, -34056), ivec4(-14269, -88041, -48262, -34138));
           if(_GLF_DEAD(false))
            return;
           -41290;
          }
         case 64:
         mat4x3(4.8, 9.5, 313.216, -19.43, -691.151, 5.0, 60.41, -2.9, 306.482, -863.410, 121.033, _GLF_IDENTITY(-3.8, mix(float(_GLF_FUZZED(-8.6)), float(-3.8), bool(true))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         case 0:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(true)
          {
           min(uvec3(149288u, _GLF_IDENTITY(37388u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) + (37388u)), 56318u), (+ subgroup_id));
           vec4 _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v[38], _GLF_SWITCH_0_23v[4];
           _GLF_struct_22 _GLF_struct_replacement_22;
           {
            if(_GLF_DEAD(false))
             barrier();
            switch(_GLF_SWITCH(0))
             {
              case 0:
              if(_GLF_DEAD(false))
               barrier();
              case 89:
              case 38:
              case 39:
              case 83:
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, false || ((_GLF_DEAD(false)) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false, true, false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false, true, false)))))))))))))
               barrier();
              case 68:
              case 24:
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              case 27:
              case 72:
              case 47:
              ivec2(36777, -80026);
              if(_GLF_DEAD(false))
               return;
              break;
              case 97:
              if(_GLF_DEAD(false))
               return;
              uvec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
              if(_GLF_DEAD(false))
               barrier();
              default:
              1;
             }
           }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           (mat3x4(-4.6, -643.039, 5.8, -1.2, 777.947, -5.6, 67.19, _GLF_IDENTITY(-8.5, _GLF_IDENTITY(float(mat2(-8.5, 1.0, abs(1.0), 0.0)), (float(mat2(-8.5, 1.0, abs(1.0), 0.0))) - 0.0)), -7679.3546, 7.6, 211.787, 2756.1880) - mat3x4(-99.14, 74.79, -3439.0898, -850.358, -26.37, 2526.9898, 3.6, -3.1, -8.0, 257.173, 70.49, -0.1));
           mat2x3(-8055.9472, -16.58, 22.20, 910.742, -436.353, 4716.8793);
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           uint _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
            barrier();
           for(           (mat3(-4.1, -41.94, -0.0, 2567.6438, -4.9, 94.21, _GLF_IDENTITY(-502.729, 0.0 + (_GLF_IDENTITY(-502.729, (-502.729) - _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)))))), -6.4, 7411.7515) - mat3(_GLF_IDENTITY(-82.04, 0.0 + (_GLF_IDENTITY(-82.04, min(-82.04, _GLF_IDENTITY(-82.04, max(-82.04, -82.04)))))), -693.565, -3112.1038, 57.28, 2618.3896, -4.4, 7170.1949, 1.0, -88.23));
 true; matrixCompMult(_GLF_IDENTITY(mat3(-12.12, -0.4, 2383.1223, -74.41, 23.53, _GLF_IDENTITY(-2.7, float(vec4(_GLF_IDENTITY(-2.7, (-2.7) - 0.0), 0.0, sqrt(determinant(mat2(0.0, 0.0, 1.0, 0.0))), exp(0.0)))), 80.48, 459.013, _GLF_IDENTITY(1.7, mix(float(_GLF_FUZZED(7.6)), float(_GLF_IDENTITY(1.7, 0.0 + (1.7))), bool(true)))), transpose(transpose(_GLF_IDENTITY(mat3(-12.12, -0.4, 2383.1223, -74.41, 23.53, _GLF_IDENTITY(-2.7, float(vec4(_GLF_IDENTITY(-2.7, (-2.7) - 0.0), 0.0, sqrt(determinant(mat2(0.0, 0.0, 1.0, 0.0))), exp(0.0)))), 80.48, 459.013, _GLF_IDENTITY(1.7, mix(float(_GLF_FUZZED(7.6)), float(_GLF_IDENTITY(1.7, 0.0 + (1.7))), bool(true)))), (mat3(-12.12, -0.4, 2383.1223, -74.41, 23.53, _GLF_IDENTITY(-2.7, float(vec4(_GLF_IDENTITY(-2.7, (-2.7) - 0.0), 0.0, sqrt(determinant(mat2(0.0, 0.0, 1.0, 0.0))), exp(0.0)))), 80.48, 459.013, _GLF_IDENTITY(1.7, mix(float(_GLF_FUZZED(7.6)), float(_GLF_IDENTITY(1.7, 0.0 + (1.7))), bool(true))))) * mat3(1.0))))), mat3(-0.3, 23.12, -50.20, -85.88, 2.6, -9291.0660, _GLF_IDENTITY(-93.89, _GLF_IDENTITY(float(mat2(-93.89, 0.0, sqrt(1.0), 0.0)), mix(float(_GLF_FUZZED(-0.7)), float(float(mat2(-93.89, 0.0, sqrt(1.0), 0.0))), bool(true)))), _GLF_IDENTITY(755.417, min(_GLF_IDENTITY(_GLF_IDENTITY(755.417, (false ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY(755.417, mix(float(_GLF_FUZZED(-7.6)), float(755.417), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))))))), true && (bool(true)))))))))), min(_GLF_IDENTITY(755.417, (false ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY(755.417, mix(float(_GLF_FUZZED(-7.6)), float(755.417), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))))))), true && (bool(true)))))))))), _GLF_IDENTITY(755.417, (false ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY(755.417, mix(float(_GLF_FUZZED(-7.6)), float(755.417), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))))))), true && (bool(true)))))))))))), _GLF_IDENTITY(755.417, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5710.4838)), (float(_GLF_FUZZED(-5710.4838))) / 1.0), float(_GLF_IDENTITY(755.417, min(_GLF_IDENTITY(755.417, float(vec2(755.417, 1.0))), 755.417))), bool(true)), min(mix(float(_GLF_FUZZED(-5710.4838)), float(755.417), bool(true)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5710.4838), (_GLF_FUZZED(-5710.4838)) + 0.0)), float(755.417), bool(true)), (mix(float(_GLF_FUZZED(-5710.4838)), float(755.417), bool(true))) - sin(0.0))))))), -283.046)))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))))), (_GLF_IDENTITY(false, true && (false))) && true)))
              barrier();
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         mat4((+ mat4x3(-335.566, -616.199, 8.8, _GLF_IDENTITY(-3.2, _GLF_IDENTITY(max(-3.2, -3.2), (true ? _GLF_IDENTITY(max(-3.2, -3.2), _GLF_IDENTITY(mix(float(max(-3.2, -3.2)), float(_GLF_FUZZED(-7.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(max(-3.2, -3.2)), float(_GLF_FUZZED(-7.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(max(-3.2, -3.2)), float(_GLF_FUZZED(-7.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) : _GLF_FUZZED(11.28)))), -6268.7200, 9396.2725, _GLF_IDENTITY(-1.6, max(-1.6, -1.6)), -2.9, 4.0, -2.0, _GLF_IDENTITY(-542.874, float(mat4x3(-542.874, sqrt(0.0), tan(0.0), 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), -7.2)));
         case 43:
         if(_GLF_DEAD(false))
          return;
         case 75:
         case 12:
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         vec3(-950.833, -4457.7660, -864.670);
         case 87:
         {
          switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
           {
            case 0:
            if(_GLF_DEAD(false))
             barrier();
            case 65:
            case 35:
            case 88:
            case 79:
            case 24:
            case 42:
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
             {
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            break;
            case 25:
            if(_GLF_DEAD(false))
             return;
            mat3x2 _GLF_SWITCH_3_0v[85];
            case 87:
            mat2x4 _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v[90];
            default:
            1;
           }
         }
         if(_GLF_DEAD(false))
          return;
         case 40:
         for(mat3 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v; true; uvec3(176535u, 2843u, 134494u))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))
              barrier();
             barrier();
            }
           ivec4(-10321, 62253, -62029, 88151);
           bvec3(true, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))))))), true))))) && true))) && true));
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         bvec4(false, true, true, false);
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         break;
         case 53:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         {
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          bvec4 _GLF_SWITCH_2_1v[13];
          ;
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(((bvec3(true, true, false) == bvec3(true, true, true)) ? -5.2 : 950.122))), bool(false))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))) && true)))))))
           return;
          uvec4 _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v;
          (mat4(mat3x2(1.8, 8654.2850, -50.40, -9.8, -1.2, _GLF_IDENTITY(-4541.0217, (-4541.0217) / 1.0))) / 4.4);
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), false))))
           return;
          mat4x2 _GLF_SWITCH_2_4v[10];
          if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), false, false))) || _GLF_IDENTITY(false, (false) && true))))
           return;
          ivec2(15592, -36911);
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          mat4x3(mat3x2(8.5, 6.3, -5.8, 3.4, -16.39, -0.4));
         }
         default:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         1;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0))))))), (float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0)))))))) - 0.0)) > injectionSwitch.y))))
          barrier();
        }
      }
     case 15:
     bitfieldReverse(ivec2(20868, _GLF_IDENTITY(-8915, (-8915) | (_GLF_IDENTITY(-8915, int(ivec4(-8915, 0, 0, 0)))))));
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! ((_GLF_IDENTITY(! (false), (! (false)) && true)))))) && true)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true))) || false)))))
      return;
     default:
     1;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 else
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (true ? _GLF_IDENTITY(_GLF_IDENTITY(read, uint(uvec2(read, 0u))), (_GLF_IDENTITY(read, uint(uvec2(read, 0u)))) | (_GLF_IDENTITY(read, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read, 0u), clamp(uvec2(read, 0u), uvec2(read, 0u), uvec2(read, 0u)))), _GLF_IDENTITY(clamp(uint(uvec2(read, 0u)), uint(uvec2(read, 0u)), uint(uvec2(read, 0u))), (clamp(uint(uvec2(read, 0u)), uint(uvec2(read, 0u)), uint(uvec2(read, 0u)))) | (clamp(uint(uvec2(read, 0u)), uint(uvec2(read, 0u)), uint(uvec2(read, 0u))))))))) : _GLF_FUZZED(virtual_gid))), 4, _GLF_IDENTITY(64, (64) ^ 0), 4);
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
