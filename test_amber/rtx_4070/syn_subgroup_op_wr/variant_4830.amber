#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-429.263, _GLF_IDENTITY(-55.39, clamp(-55.39, -55.39, -55.39)))) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-4672.3783)), vec2(_GLF_FUZZED((79.33 / 28.87)), _GLF_IDENTITY((vec2(0.0, 0.0))[1], mix(float((vec2(0.0, 0.0))[1]), float(_GLF_FUZZED(float(true))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(false, true))) + (injectionSwitch)).y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, true && (false)), false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, true && (false)), false)))))))) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) + (injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y : _GLF_FUZZED(3131.9237))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y : _GLF_FUZZED(3131.9237)))))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.2)), bool(false))), 0.0) + (injectionSwitch)).y), false, true, false)))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * round(length(normalize(vec3(1.0, 1.0, 1.0)))))) + _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(vec3((injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(vec3((injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((vec3((injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y))), mix(vec3(((vec3((injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y))))[0], _GLF_IDENTITY(((vec3((injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y))))[1], (((vec3((injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y))))[1]) - 0.0), _GLF_FUZZED(5777.2203)), vec3(_GLF_FUZZED(2294.8612), _GLF_FUZZED(vec4(8.6, -3.5, 9.0, -400.418).a), ((vec3((injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y))))[2]), bvec3(false, false, true))) - vec3(0.0, 0.0, 0.0)), vec3((injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y))))))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 0.0)))) / vec2(1.0, 1.0)).y), false, true, false)))), false, true, true))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), min(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), false, true, true))))))), bool(bool((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), min(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), false, true, true)))))))))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), min(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), false, true, true))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), min(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), false, true, true))))))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), min(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), false, true, true))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), min(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), false, true, true))))))))), false, false)), false || (bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), min(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), false, true, true))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), min(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true, false)))), false, true, true))))))))), false, false))))))))))) || false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, false)))), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, false, false))) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), min(~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) : _GLF_FUZZED(workgroup_size))), subgroup_size))), ~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), min(_GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1))), 0 | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (_GLF_IDENTITY(int(int(1)), (int(int(1))) | (int(int(1))))) ^ 0)), 0)), max(int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (_GLF_IDENTITY(int(int(1)), (int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (0 << _GLF_IDENTITY(int(6), int(6))) | (int(1)))) | (int(1))))) | (int(int(1))))) ^ 0)), 0)), int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (_GLF_IDENTITY(int(int(1)), (int(int(1))) | (int(int(1))))) ^ 0)), 0)))), clamp(int(ivec2(1, 0)), int(ivec2(1, 0)), int(ivec2(1, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (_GLF_IDENTITY(int(int(1)), (int(int(1))) | (int(int(1))))) ^ 0)), 0)), max(int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (_GLF_IDENTITY(int(int(1)), (int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (0 << _GLF_IDENTITY(int(6), int(6))) | (int(1)))) | (int(1))))) | (int(int(1))))) ^ 0)), 0)), int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (_GLF_IDENTITY(int(int(1)), (int(int(1))) | (int(int(1))))) ^ 0)), 0)))), clamp(int(ivec2(1, 0)), int(ivec2(1, 0)), int(ivec2(1, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (_GLF_IDENTITY(int(int(1)), (int(int(1))) | (int(int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(28606) : 1))))))) ^ 0)), 0)), max(int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (_GLF_IDENTITY(int(int(1)), (int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (0 << _GLF_IDENTITY(int(6), int(6))) | (int(1)))) | (int(1))))) | (int(int(1))))) ^ 0)), _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), 0 ^ (int(ivec2(0, 0))))))), int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) << 0)), (_GLF_IDENTITY(int(int(1)), (int(int(1))) | (int(int(1))))) ^ 0)), 0)))), clamp(int(ivec2(1, 0)), int(ivec2(1, 0)), int(ivec2(1, 0))))) | 0)) ^ 0))) % subgroup_size), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), (true ? uint(uvec2(subgroup_local_id, 1u)) : _GLF_FUZZED(subgroup_size)))), uint(uvec2(subgroup_local_id, _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u))))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))))) / 1u)))) + 1) % subgroup_size))), (_GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), uint(uvec4((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u, 1u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (true ? uvec2(subgroup_local_id, ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_FUZZED(uvec3(67269u, _GLF_IDENTITY(153253u, clamp(153253u, 153253u, 153253u)), 162498u).pt))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (false ? _GLF_FUZZED(subgroup_id) : 0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))) + 1) % subgroup_size))), ((~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), 0u + (_GLF_IDENTITY(min(workgroup_base, workgroup_base), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))), workgroup_base), max(min(workgroup_base, workgroup_base), min(workgroup_base, workgroup_base))), min(workgroup_base, workgroup_base), _GLF_IDENTITY(min(workgroup_base, workgroup_base), (min(workgroup_base, workgroup_base)) | (min(workgroup_base, workgroup_base)))))))) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size)))) | ((_GLF_IDENTITY(~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (_GLF_IDENTITY(0u, (0u) | (0u)) << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size)), clamp(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u))) | (0u)) << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size)), min(~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (_GLF_IDENTITY(0u, (0u) | (0u)) << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size)), ~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u) + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (_GLF_IDENTITY(0u, (0u) | (0u)) << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size)))), ~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) | (0u)) << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size)), ~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (_GLF_IDENTITY(0u, (0u) | (0u)) << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size)), max(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), 1u)))) - 0u))), _GLF_IDENTITY(uint(uvec4(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (0u)))), uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), 1u)))) - 0u))), 0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(29213u))))), clamp(_GLF_IDENTITY(uint(uvec4(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u), (0u ^ (0u | 0u)) + ((_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), 1u)))) - 0u, (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), 1u), (uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), 1u)) - uvec2(0u, 0u))))) - 0u))))), 0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(29213u))))), (false ? _GLF_FUZZED(workgroup_base) : uint(uvec4(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), 1u)))) - 0u))), 0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(29213u))))))), uint(uvec4(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), 1u)))) - 0u))), 0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(29213u))))), uint(uvec4(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u)), ~ (~ ((_GLF_IDENTITY(0u, (0u) >> 0u))))) | (0u)), 1u)))) - 0u))), _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(29213u))))))))), 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)))), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))))))))))) + 1) % subgroup_size)), (~ (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))), 1u * (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))), (true ? _GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))) : _GLF_FUZZED(uvec2(45532u, 186270u)))), _GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))))))))) << _GLF_IDENTITY(uint(2u), uint(2u)))), min(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), uvec2(uvec2(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))), 1u * (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))), (true ? _GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))) : _GLF_FUZZED(uvec2(45532u, 186270u)))), _GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))))))))) << _GLF_IDENTITY(uint(2u), uint(2u)))), min(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), uvec2(uvec2(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))))) + 1)) * 1u) % subgroup_size)), (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup)), clamp((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup)), (false ? _GLF_FUZZED(58491u) : _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup))) << 0u))), (true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup))))))))) + 1) % subgroup_size))) | 0u), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))), 1u * (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))), (true ? _GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))) : _GLF_FUZZED(uvec2(45532u, 186270u)))), _GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))))))))) << _GLF_IDENTITY(uint(2u), uint(2u)))), min(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), uvec2(uvec2(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))), 1u * (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))), (true ? _GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))) : _GLF_FUZZED(uvec2(45532u, 186270u)))), _GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))))))))) << _GLF_IDENTITY(uint(2u), uint(2u)))), min(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), uvec2(uvec2(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))))) + 1)) * 1u) % subgroup_size)), (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup)), clamp((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup)), (false ? _GLF_FUZZED(58491u) : _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup))) << 0u))), (true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup))))))))) + 1) % subgroup_size))) | 0u)) | (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))), 1u * (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))), (true ? _GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))) : _GLF_FUZZED(uvec2(45532u, 186270u)))), _GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))))))))) << _GLF_IDENTITY(uint(2u), uint(2u)))), min(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), uvec2(uvec2(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))), 1u * (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))), (true ? _GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))) : _GLF_FUZZED(uvec2(45532u, 186270u)))), _GLF_IDENTITY(uvec2(0u, (19852u & (0u & 37001u))), ~ (~ (uvec2(0u, (19852u & (0u & 37001u)))))))))))))) << _GLF_IDENTITY(uint(2u), uint(2u)))), min(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), uvec2(uvec2(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))))) + 1)) * 1u) % subgroup_size)), (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup)), clamp((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup)), (false ? _GLF_FUZZED(58491u) : _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup))) << 0u))), (true ? _GLF_IDENTITY(uint(2u), uint(2u)) : _GLF_FUZZED(num_workgroup))))))))) + 1) % subgroup_size))) | 0u))))), ~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), 1u * ((~ (subgroup_local_id))))))), (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size))))), uint(_GLF_IDENTITY(uint((~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size)))), (uint((~ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((2u), (_GLF_IDENTITY((2u), clamp((2u), (2u), (2u)))) | (_GLF_IDENTITY((2u), max(_GLF_IDENTITY((2u), ((2u)) - 0u), _GLF_IDENTITY((2u), ((2u)) ^ 0u))))))), uint(2u)))))) + 1) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((2u), (_GLF_IDENTITY((2u), clamp((2u), (2u), (2u)))) | (_GLF_IDENTITY((2u), max(_GLF_IDENTITY((2u), ((2u)) - 0u), _GLF_IDENTITY((2u), ((2u)) ^ 0u))))))), uint(2u)))))) + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((2u), (_GLF_IDENTITY((2u), clamp((2u), (2u), (2u)))) | (_GLF_IDENTITY((2u), max(_GLF_IDENTITY((2u), ((2u)) - 0u), _GLF_IDENTITY((2u), ((2u)) ^ 0u))))))), uint(2u)))))) + 1) % subgroup_size))))))) << 0u))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size)), max(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), 0u ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)))))), 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(uvec2(uint(2u), 1u)), min(_GLF_IDENTITY(uint(uvec2(uint(2u), 1u)), (uint(uvec2(uint(2u), 1u))) - 0u), uint(uvec2(uint(2u), 1u)))))), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))))))) + 1) % subgroup_size)), (~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size))) | (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id)) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u)))))), min(uvec2(subgroup_local_id, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, min(2u, 2u)))))), uvec2(uvec2(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))))) + 1) % subgroup_size)), (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : uint(uvec2(subgroup_id * subgroup_size, 1u))))) - 0u)) - 0u)) + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) - 0u)))) | _GLF_IDENTITY(0u, ~ (~ (0u)))))), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size)), ~ (_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) << 0u))))))) + 1) % subgroup_size))), clamp(~ (~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size))), ~ (~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) / 1u)) / 1u)), uint(2u))))), min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) / 1u)) / 1u)), uint(2u))))), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) / 1u)) / 1u)), uint(2u))))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, _GLF_IDENTITY((2u), ((2u)) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) / 1u)) / 1u)), uint(_GLF_IDENTITY(2u, (2u) * 1u))))))))) + 1) % subgroup_size))), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size))), max(~ (~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size))), ~ (~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) + 0u))))) + 1) % subgroup_size)))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) - 0u))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0)))) << 0), _GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) / 1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | 0), 1))) - 0))))))) % subgroup_size)))), (uint((~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size))))) << 0u)), clamp(uint(_GLF_IDENTITY(uint((~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0) ^ 0), (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, clamp((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))) << 0))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(45549u) : 2u))), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))))), (~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(45549u) : 2u))), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))) ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(45549u) : 2u))), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))))), (~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(45549u) : 2u))), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))) ^ 0u)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))), (uint((~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size))))) << 0u)), uint(_GLF_IDENTITY(uint((~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), ~ (~ ((_GLF_IDENTITY(1, clamp(1, 1, 1))))))) / 1) - 0, (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), ~ (~ ((_GLF_IDENTITY(1, clamp(1, 1, 1))))))) / 1) - 0) * 1))))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))))), ((~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(fma(-67.73, -462.794, 9.8)) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), min(_GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))))), ((~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))))), ((~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))) % subgroup_size)))), (uint((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size), uint(uvec4(((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size), 0u, 1u, 1u))))))))) << 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(31257) : 1)), 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, (0 ^ 0), (-95570 & 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), ~ (~ (ivec4(0, (0 ^ 0), (-95570 & 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(0, (0) | 0))))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) / 1u), 0u << _GLF_IDENTITY(uint(2u), uint(2u))))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))))))))) % subgroup_size)))), (uint((~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size))))) << 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(31257) : 1)), 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))))))))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(31257) : 1)), 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)))))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), ((_GLF_IDENTITY(1, clamp(1, 1, 1)))) ^ 0) - 0)))))))))) % subgroup_size) / 1u))))), (uint((~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size))))) << 0u)), clamp(uint(_GLF_IDENTITY(uint((~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(31257) : 1)), _GLF_IDENTITY(1, max(1, 1)), 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (false ? _GLF_FUZZED(-94667) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, 1))))) - 0)))))))))) % subgroup_size)))), (uint((~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size))))) << 0u)), uint(_GLF_IDENTITY(uint((~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(31257) : 1)), 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) | (2u))) ^ 0u)), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) | (2u))) ^ 0u)), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))))) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))) % subgroup_size)))), (uint((~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(2u, 0u + (2u))))))))), (true ? _GLF_IDENTITY(uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(2u, 0u + (2u))))))))), (uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(2u, 0u + (2u)))))))))) | (uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(2u, 0u + (2u))))))))))) : _GLF_FUZZED(subgroup_id)))) + 1) % subgroup_size))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint((~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(31257) : 1)), 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 1u, 0u, 1u)))) / 1u) << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) | 0), _GLF_IDENTITY(1, max(1, 1))))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))))))))) % subgroup_size)))), (uint((_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size)), (~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size))) >> 0u)))) << 0u)), (uint(_GLF_IDENTITY(uint((~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(31257) : 1)), 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 1u, 0u, 1u)))) / 1u) << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) | 0), _GLF_IDENTITY(1, max(1, 1))))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))))))))) % subgroup_size)))), (uint((_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size)), (~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size))) >> 0u)))) << 0u))) ^ 0u), max(uint(_GLF_IDENTITY(uint((~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(31257) : 1)), 1, 1))) - 0)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))) * 1u)) | ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))))) | (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))))))))))) % subgroup_size)))), (uint((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u & 108167u) + (0u))))) << _GLF_IDENTITY(uint(2u), uint(2u))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u & 108167u) + (0u))))) << _GLF_IDENTITY(uint(2u), uint(2u))), ((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u & 108167u) + (0u))))) << _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u) : _GLF_FUZZED((subgroup_size | uvec2(185457u, 173276u)).r)))))) + 1) % subgroup_size))))) << 0u)), uint(_GLF_IDENTITY(uint((~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(31257) : 1)), 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), clamp(uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), 0u + (uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))))))))) % subgroup_size)))), (uint((~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1) % subgroup_size))))) << 0u))))))))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.4)), float(injectionSwitch.y), bool(true))))))), false, false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), ((bool(false))) || false)))), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(bool(bvec4(! (bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(! (bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(! (bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, false)))))))) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), false || (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false)))) && true)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), false || (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), false || (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false)))) && true))) && true)))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(false)))), ((bool(false))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), false || (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false)))) && true)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), false || (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), false || (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false)))) && true))) && true)))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(false)))), ((bool(false))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), false || (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))) || false)))) && _GLF_IDENTITY(true, false || (true)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), _GLF_IDENTITY(false, (false) && true))))) || false), false || (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false), false || (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false)))) && true))) && true)))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(false)))), ((bool(false))) || false)))))))))), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))) && true))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))) && true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(int(64), _GLF_IDENTITY((int(64)) | 0, (_GLF_IDENTITY((int(64)), ((int(64))) + 0) | 0) | ((int(64)) | 0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), (int(64)) | 0)), ~ _GLF_IDENTITY((~ (int(_GLF_IDENTITY(int(64), _GLF_IDENTITY((int(64)) | 0, clamp((int(64)) | 0, (int(64)) | 0, (int(64)) | 0)))))), min((~ (int(_GLF_IDENTITY(int(64), _GLF_IDENTITY((int(64)) | 0, clamp((int(64)) | 0, (int(64)) | 0, (int(64)) | 0)))))), _GLF_IDENTITY((~ (int(_GLF_IDENTITY(int(64), _GLF_IDENTITY((int(64)) | 0, clamp((int(64)) | 0, (int(64)) | 0, (int(64)) | 0)))))), 1 * ((~ (int(_GLF_IDENTITY(int(64), _GLF_IDENTITY((int(64)) | 0, clamp((int(64)) | 0, (int(64)) | 0, (int(64)) | 0)))))))))))) | (int(_GLF_IDENTITY(int(64), (int(64)) | 0))))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(134164u) : (subgroup_size))) - _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))) ^ 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))) >> 0u)), uint(uvec2(0u, 0u))) ^ 0u)) | _GLF_IDENTITY(((_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))) ^ _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))), 0u))))), (((_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))) ^ _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))), 0u)))))) | 0u)), 1u * ((subgroup_size) - (0u ^ 0u)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3849.5254))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, ! (! (false))), false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), _GLF_IDENTITY(bool(bvec4(! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), _GLF_IDENTITY(true, ! (! (true))), false, true)), false || (bool(bvec4(! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), _GLF_IDENTITY(true, ! (! (true))), false, true)))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch / 387.029)) : injectionSwitch)), 1.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, abs(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))).x > injectionSwitch.y))) || false)) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (! (true && (false))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5149.2615), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- -6.7))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1924.8652)), bool(false))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1924.8652)), bool(false))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(-4423.7743))))) / 1.0)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0))).x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), true, false)), false || (bool(bvec3(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)), _GLF_IDENTITY(false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), (false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))) || false))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))))))), true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), min(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), 1.0), transpose(transpose(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0)))))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.4) : 0.0)), exp(0.0), 0.0, 0.0))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(0.0))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ (~ (4))), 4))) << 0, _GLF_IDENTITY(1, max(1, 1)) * (_GLF_IDENTITY(_GLF_IDENTITY((4) << 0, ((4) << 0) * 1), ((4) << 0) / 1)))));
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(67.51)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.8), _GLF_FUZZED(26.36)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, false || (false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, _GLF_IDENTITY(false, bool(bool(false))), true, true))) || false)), false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false)))), (_GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false))))) || false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true, true))))) && true, bool(bool((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))), injectionSwitch)).y)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1258.5159) : _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y)))) - 0.0), float(_GLF_FUZZED(-3.6)), bool(false))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1258.5159) : _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y)))) - 0.0), float(_GLF_FUZZED(-3.6)), bool(false)))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1258.5159) : _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y)))) - 0.0), float(_GLF_FUZZED(-3.6)), bool(false))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1258.5159) : _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y)))) - 0.0), float(_GLF_FUZZED(-3.6)), bool(false))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
