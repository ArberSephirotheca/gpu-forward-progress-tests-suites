#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 bvec4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_24 {
 ivec2 _f0;
 bvec2 _f1;
 ivec3 _f2;
 _GLF_struct_23 _f3;
 bool _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_22 {
 mat4x3 _f0;
 mat3x4 _f1;
 mat3x2 _GLF_SWITCH_2_0v;
 vec2 _f2;
} ;

struct _GLF_struct_21 {
 vec2 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_19 {
 uint _f0;
 mat2x3 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_18 {
 bvec4 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 uvec3 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_20 {
 mat2x4 _f0;
 _GLF_struct_18 _f1;
 mat3x4 _f2;
 mat3x4 _f3;
 _GLF_struct_19 _f4;
} ;

struct _GLF_struct_25 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 mat2 _f2;
 uvec3 _f3;
 _GLF_struct_22 _f4;
 mat4x2 _f5;
 _GLF_struct_24 _f6;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 mat4x2 _f1;
 ivec2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_14 {
 float _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 bvec2 _f1;
 float _f2;
 bool _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_16 {
 uint subgroup_size;
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
} ;

struct _GLF_struct_11 {
 uvec2 _f0;
 int _f1;
 uint _f2;
 uvec3 _f3;
 bvec4 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_10 {
 ivec3 _f0;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 uint _f1;
 mat2x3 _f2;
 bool _f3;
 mat4 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 vec3 _f2;
 _GLF_struct_10 _f3;
 mat3x2 _f4;
 _GLF_struct_11 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_6 {
 float _f0;
 uint _f1;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 ivec3 _f1;
 mat3x4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 _GLF_struct_5 _f1;
 mat4x3 _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_17 {
 ivec3 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_16 _f3;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 ivec4 _f1;
 bvec4 _f2;
 bvec4 _f3;
 float _f4;
} ;

struct _GLF_struct_1 {
 int _f0;
 mat3 _f1;
 vec3 _f2;
 mat4x3 _f3;
 mat2x3 _f4;
 mat4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 bvec3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 mat2x3 _f4;
 vec3 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 uint virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(ivec3(1), _GLF_struct_7(ivec2(1), _GLF_struct_5(uvec2(1u), ivec3(1), mat3x4(1.0), mat4x3(1.0)), mat4x3(1.0), _GLF_struct_6(1.0, 1u)), _GLF_struct_12(_GLF_struct_8(uvec3(1u), 1u, mat2x3(1.0), true, mat4(1.0)), _GLF_struct_9(vec3(1.0)), vec3(1.0), _GLF_struct_10(ivec3(1)), mat3x2(1.0), _GLF_struct_11(uvec2(1u), 1, 1u, _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u))), bvec4(true), uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(175959u), (_GLF_IDENTITY(_GLF_FUZZED(175959u), ~ (~ (_GLF_FUZZED(175959u))))) ^ 0u))))), uvec2(1u)), _GLF_struct_16(gl_SubgroupSize, _GLF_struct_13(mat2x3(1.0), bvec2(true), 1.0, true, mat2x3(1.0)), _GLF_struct_14(1.0, uvec2(1u)), _GLF_struct_15(mat4x3(1.0), mat4x2(1.0), ivec2(1), bvec2(true))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false), bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false), bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false))))), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false), bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false))))), true, true)), true))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 70:
     case 98:
     case 47:
     case 25:
     case 86:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     break;
     case 3:
     while((ivec3(-36214, -39439, 7976) == ivec3(-67757, 53019, _GLF_IDENTITY(-67466, int(_GLF_IDENTITY(int(-67466), int(ivec2(int(-67466), 0))))))))
      {
       mat2x3 _GLF_SWITCH_4_0v;
       17986u;
       for(bool _GLF_SWITCH_4_1v[57], _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v; (true); (ivec4(-17981, -29081, -46009, -93468) << sign(-83054)))
        {
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          bvec3 _GLF_SWITCH_4_4v, _GLF_SWITCH_4_5v;
          subgroup_id;
          if(_GLF_DEAD(false))
           barrier();
         }
         if(_GLF_DEAD(false))
          barrier();
         {
          if(_GLF_DEAD(false))
           barrier();
          sign(injectionSwitch);
          ;
          ivec4(38510, -53032, -65165, 11335);
          ;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          bvec3 _GLF_SWITCH_4_6v[29];
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          ;
          if(_GLF_DEAD(false))
           barrier();
          (mat3x2(-821.189, 7.4, -25.75, -7.4, 94.93, -7.4) + 2.9);
          max(uvec4(35986u, 169389u, 26030u, 46347u), 860u);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          matrixCompMult(mat4x3(-2873.0552, 9.3, -80.24, -6.2, -2.8, -2.2, 9.9, -8.6, 1035.0379, 4300.7369, -3712.9656, 84.13), mat4x3(9.1, 6.2, -969.277, -6.1, 288.359, -7.4, -40.05, 0.8, 8818.4752, 396.002, 4.0, 4.5));
          if(_GLF_DEAD(false))
           barrier();
         }
         ;
         {
          ;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          mat2(250.878, 113.325, 610.873, 3344.8325);
          mat4(3.9, 3360.7546, -49.53, -6167.9242, -8.0, 56.68, -1109.3355, -18.76, -5.3, _GLF_IDENTITY(34.63, max(34.63, 34.63)), -0.0, -534.015, 98.07, 5.7, -853.763, -0.4);
          ivec4 _GLF_SWITCH_4_7v, _GLF_SWITCH_4_8v[46], _GLF_SWITCH_4_9v;
          _GLF_SWITCH_4_3v;
          mat4x3(582.151, 9315.1523, 68.18, -20.89, 581.637, -7056.7548, -3894.3542, -5455.5531, -8.5, 699.228, 97.88, 8709.7611);
          mat3(7.7, -0.2, 6628.1344, -76.99, -465.630, 73.08, -91.44, 6.7, -5.5);
          ivec2 _GLF_SWITCH_4_10v, _GLF_SWITCH_4_11v, _GLF_SWITCH_4_12v;
          if(_GLF_DEAD(false))
           barrier();
          bvec2(false, true);
         }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           while(_GLF_SWITCH_4_3v)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             bool _GLF_SWITCH_4_13v, _GLF_SWITCH_4_14v, _GLF_SWITCH_4_15v;
             mat4x2 _GLF_SWITCH_4_16v, _GLF_SWITCH_4_17v;
             mat2(-7.3, -55.30, 7.0, 602.860);
             ;
             if(_GLF_DEAD(false))
              barrier();
             (_GLF_SWITCH_4_0v --);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             (mat3x2(909.888, 2021.3934, 21.90, -745.760, -7082.9345, -7308.0893) * mat4x3(-139.276, 4060.9389, -39.51, -6.9, 6.8, -9453.6332, 3.3, 2.3, 2.9, 77.00, 5.9, -483.930));
             if(_GLF_DEAD(false))
              barrier();
             floatBitsToInt(-84.00);
             (-4.6 + mat2x3(5.3, 1.9, -312.488, 9.6, 7804.4568, -599.219));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             mat2x3 _GLF_SWITCH_4_18v[26], _GLF_SWITCH_4_19v[15];
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
      }
     case 44:
     mat2x4(-0.9, 831.390, -3.7, 144.838, -5.2, 447.392, -7.6, -88.74);
     default:
     1;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 14:
             case 57:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 91:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 83:
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
              barrier();
             case 66:
             if(_GLF_DEAD(false))
              barrier();
             case 97:
             case 92:
             barrier();
             break;
             case 22:
             ;
             default:
             1;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 58:
       case 64:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       case 66:
       case 28:
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       case 34:
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       case 27:
       if(_GLF_DEAD(false))
        barrier();
       {
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         {
          do
           {
            barrier();
           }
          while(_GLF_WRAPPED_LOOP(false));
         }
        while(false)
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          mat2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
          (mat4x3(-3.7, 3.0, 5.6, -2.2, 476.311, -5.1, 8570.2741, -27.35, 6498.5497, 552.683, 84.02, 175.943) - mat4x3(-14.81, 362.187, -6641.8752, 93.20, 8.6, -0.8, -54.38, 120.364, -2.7, 0.4, -7656.9682, 8.3));
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          else
           {
           }
          if(_GLF_DEAD(false))
           barrier();
          uvec4(21273u, 46256u, _GLF_IDENTITY(138387u, max(138387u, 138387u)), 61217u);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
           barrier();
         }
        48.57;
        if(_GLF_WRAPPED_IF_FALSE(false))
         {
         }
        else
         {
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_WRAPPED_IF_TRUE(true))
         {
          ;
          if(_GLF_DEAD(false))
           barrier();
         }
        else
         {
         }
        if(_GLF_DEAD(false))
         barrier();
        mat2x4 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v[47];
        if(_GLF_WRAPPED_IF_TRUE(true))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
           {
            switch(_GLF_SWITCH(0))
             {
              case 46:
              lessThan(vec2(986.055, 7447.7817), vec2(8066.9867, 9771.9791));
              if(_GLF_DEAD(false))
               barrier();
              case 11:
              uvec3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
              case 0:
              case 81:
              case 84:
              case 23:
              case 43:
              case 75:
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                barrier();
               }
              else
               {
               }
              break;
              case 67:
              bvec2 _GLF_SWITCH_5_2v;
              default:
              1;
             }
           }
          if((uvec2(167820u, 79182u) == uvec2(68033u, 27373u)))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
           }
          else
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            else
             {
             }
            mat4x2 _GLF_SWITCH_3_6v, _GLF_SWITCH_3_7v, _GLF_SWITCH_3_8v;
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
        else
         {
         }
        if(_GLF_DEAD(false))
         {
          do
           {
            if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), bool(bool(! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))))))))
             {
              if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
               {
               }
              else
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
             }
            else
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
           }
          while(_GLF_WRAPPED_LOOP(false));
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
       }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       case 69:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(       uvec3(38381u, 51565u, 5204u);
 (true != false); (uvec4(127828u, 29053u, 28640u, 27854u) * (117956u | uvec4(74155u, 146760u, 144884u, 187548u))))
        {
         bvec2(true, false);
         if(_GLF_DEAD(false))
          barrier();
         if(true)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             mat4x2(mat4x3(-5.0, 0.9, 647.948, 9041.7553, -390.724, -2.1, -9054.4071, 87.64, -7.9, -97.05, -35.13, -26.12));
            }
           {
            do
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  barrier();
                 }
                else
                 {
                 }
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
               barrier();
              mat2(-109.427, 1993.4831, -6956.6413, 2.9);
              if(_GLF_DEAD(false))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
            mat3x4 _GLF_SWITCH_3_9v, _GLF_SWITCH_3_10v;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
             }
            for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               barrier();
              ;
             }
            bool _GLF_SWITCH_3_11v, _GLF_SWITCH_3_12v[38], _GLF_SWITCH_3_13v[12];
            4057.8372;
           }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(true)
            {
             matrixCompMult(mat4x3(29.64, _GLF_IDENTITY(_GLF_IDENTITY(82.26, mix(float(_GLF_FUZZED(-41.07)), float(82.26), bool(true))), min(82.26, _GLF_IDENTITY(_GLF_IDENTITY(82.26, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.7) : _GLF_IDENTITY(82.26, 1.0 * (82.26)))), max(82.26, 82.26)))), -6535.3253, -4034.8821, 7.8, 8050.0469, -58.23, -7.5, -43.94, -85.53, 62.79, -876.994), mat4x3(-768.508, -6532.5004, -22.61, 3159.1814, 7767.8329, -946.673, 4.4, -4.5, -6.8, 7049.4476, 5.4, -3324.5639));
             if(_GLF_DEAD(false))
              barrier();
             ;
             ivec4 _GLF_SWITCH_3_14v[27];
             mat4x2(9.2, -982.506, 2.8, -7.1, -4.9, 34.14, 56.26, -58.14);
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           findLSB(-16671);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           notEqual(bvec2(true, false), bvec2(false, true));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           uvec2(49658u, 89228u);
           if(_GLF_DEAD(false))
            barrier();
           (mat4x3(-9.9, -31.66, -2.2, -91.62, 4284.3136, -7372.2892, -2957.9877, 650.376, -63.66, 7.9, -653.146, 686.440) * mat2x4(63.26, -1.2, 9.0, -8.5, 0.5, 167.582, 86.24, 0.3));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(           matrixCompMult(mat3(-7590.6572, _GLF_IDENTITY(80.61, float(mat3x4(_GLF_IDENTITY(80.61, (80.61) + 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0)))), 53.69, 629.565, 192.963, 5930.2783, _GLF_IDENTITY(-7.1, clamp(_GLF_IDENTITY(-7.1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-39.65), (_GLF_FUZZED(-39.65)) - _GLF_ZERO(0.0, injectionSwitch.x)) : -7.1)), -7.1, _GLF_IDENTITY(-7.1, max(-7.1, -7.1)))), 9.3, -2665.9630), mat3(9644.7247, 0.8, -75.32, -982.224, -834.129, -0.7, -1466.4995, 944.820, -989.015));
 isinf(_GLF_IDENTITY(7.8, (_GLF_IDENTITY(7.8, (7.8) - 0.0)) * 1.0)); mat4(mat3(-8.6, 0.5, 396.655, 4.1, 178.420, 839.950, -0.5, -9814.5992, -29.45)))
            {
             if(_GLF_DEAD(false))
              barrier();
             ivec3 _GLF_SWITCH_3_15v, _GLF_SWITCH_3_16v[45], _GLF_SWITCH_3_17v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             ivec4 _GLF_SWITCH_3_18v[23];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             mat2x3(4.3, -435.634, 51.13, -4.8, -7.5, 0.0);
             ivec4 _GLF_SWITCH_3_19v, _GLF_SWITCH_3_20v, _GLF_SWITCH_3_21v[97];
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               _GLF_IDENTITY(uvec2(179056u, 82263u), (uvec2(179056u, 82263u)) ^ uvec2(0u, 0u));
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat2((-4290.8114 / mat3x4(-1.0, -9.7, 906.619, -7692.5891, 5.7, -487.865, 0.2, 6.2, -0.7, -9.3, 6893.5906, -1.6)));
             -52.06;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                barrier();
              }
             else
              {
              }
             (ivec3(-19305, 42094, 60840) >> -81363);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             bvec4(true, true, false, true);
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               uvec3(77535u, 143302u, _GLF_IDENTITY(14824u, (14824u) + 0u));
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               workgroup_size;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             ;
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 & 1) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         for(uvec3 _GLF_SWITCH_3_22v[28], _GLF_SWITCH_3_23v; true; (9.1 / mat2x4(0.2, 6.9, 2143.5170, 469.831, -164.991, -47.23, -803.073, -553.422)))
          {
           for(           bvec4(true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))), true))), _GLF_IDENTITY(true, true && (true)), false);
 (ivec2(9612, 20185) != ivec2(-15744, -55992)); uvec3(114585u, 182043u, 53969u))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             bvec3 _GLF_SWITCH_3_24v[3], _GLF_SWITCH_3_25v, _GLF_SWITCH_3_26v[72];
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             mat2x3(8179.1793, 7633.9049, 665.920, 0.0, 7.3, -70.91);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             vec4 _GLF_SWITCH_3_27v, _GLF_SWITCH_3_28v, _GLF_SWITCH_3_29v;
             mat3 _GLF_SWITCH_3_30v, _GLF_SWITCH_3_31v[69];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             ivec3 _GLF_SWITCH_3_32v;
             ;
             mat3 _GLF_SWITCH_3_33v[84], _GLF_SWITCH_3_34v;
             ivec2(-69381, -57939);
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_IDENTITY(true, (true) && true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 mat2x3 _GLF_SWITCH_3_35v[8], _GLF_SWITCH_3_36v, _GLF_SWITCH_3_37v;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(false)
            {
             true;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 62:
                 ;
                 case 31:
                 mat4x2(mat4x3(81.15, 50.34, 5.6, -9221.4363, 82.57, -397.478, -7.8, -7899.1054, -8.2, -3.7, -18.63, 8.1));
                 case 0:
                 case 42:
                 case 41:
                 case 23:
                 case 78:
                 case 35:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 83:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 49:
                 barrier();
                 break;
                 if(_GLF_DEAD(false))
                  barrier();
                 default:
                 1;
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             mat3x4(vec4(-190.149, 923.672, 17.75, 4.5), mix(vec4(_GLF_IDENTITY(-3.8, max(-3.8, -3.8)), 893.574, -8.5, -194.138), _GLF_IDENTITY(vec4(1.2, 29.36, 9.0, _GLF_IDENTITY(-9288.2264, (-9288.2264) - 0.0)), min(vec4(1.2, 29.36, 9.0, _GLF_IDENTITY(-9288.2264, (-9288.2264) - 0.0)), vec4(1.2, 29.36, 9.0, _GLF_IDENTITY(-9288.2264, (-9288.2264) - 0.0)))), 885.079), vec4(-0.9, _GLF_IDENTITY(-17.15, (false ? _GLF_FUZZED(843.247) : -17.15)), 3.6, -314.869));
             if(_GLF_DEAD(false))
              barrier();
             ivec2(6790, -92115);
             (mat3x4(3982.8481, -5.9, 20.83, 715.404, 7586.0695, -829.914, 6.0, 1.5, 1056.0162, 5.3, -1821.4346, -5.0) / 7.4);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             notEqual(uvec2(177981u, 86952u), uvec2(9805u, 5799u));
             ivec2 _GLF_SWITCH_3_38v[75], _GLF_SWITCH_3_39v, _GLF_SWITCH_3_40v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             bvec4 _GLF_SWITCH_3_41v[58];
             bvec4 _GLF_SWITCH_3_42v;
             transpose(mat2x3(-7163.7681, -5377.4063, 2.6, 3.2, 3.0, -5.8));
            }
           else
            {
             do
              {
               ;
              }
             while(_GLF_WRAPPED_LOOP(false));
             (mat2(915.167, -69.40, -583.404, 9.2) + mat2(-9544.2044, 5191.9297, -8216.3538, -6.1));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             findMSB((true ? num_workgroup : subgroup_local_id));
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               switch(_GLF_SWITCH(0))
                {
                 case 4:
                 mat2x3(80.84, -4143.4352, -8.6, 8.1, 1.2, 6.4);
                 case 0:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 break;
                 default:
                 if(_GLF_DEAD(false))
                  barrier();
                 1;
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             uvec4 _GLF_SWITCH_3_43v, _GLF_SWITCH_3_44v[5], _GLF_SWITCH_3_45v[51];
             bvec4(false, false, false, false);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                    barrier();
                  }
                 barrier();
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) - 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           true;
           int _GLF_SWITCH_3_46v, _GLF_SWITCH_3_47v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(           bvec4(true, true, true, true);
 false; vec3(-63.99, -89.51, -87.51))
            {
             int(true);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             vec2 _GLF_SWITCH_3_48v[90], _GLF_SWITCH_3_49v;
             mat2x4(mat3x4(-9373.3387, -872.590, -8.6, 69.81, -0.4, 23.92, 74.97, -6288.6240, -1.0, _GLF_IDENTITY(-2.6, mix(float(_GLF_FUZZED(((-1.1 + -78.28) + vec3(-8342.5165, -68.69, 636.375).g))), float(_GLF_IDENTITY(-2.6, (false ? _GLF_FUZZED(-6.8) : _GLF_IDENTITY(-2.6, 0.0 + (-2.6))))), bool(true))), 48.08, -7.8));
             vec3 _GLF_SWITCH_3_50v;
             if(_GLF_DEAD(false))
              barrier();
             mat3x4(-7702.7301, 9.0, 4.2, 199.737, 49.53, _GLF_IDENTITY(-513.238, (true ? -513.238 : _GLF_FUZZED(53.59))), 4616.8957, -75.79, -8.1, -9999.8843, -7397.3474, -8.3);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           while(bool(750.499))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             ivec4(-26309, -42490, _GLF_IDENTITY(-41561, 0 ^ (-41561)), 81114);
             vec3(-33.39, 74.06, -722.640);
             mat3x4 _GLF_SWITCH_3_51v, _GLF_SWITCH_3_52v[15];
             mat4x2(7.0, -2.6, 12.72, 7.2, -9.8, -43.29, 46.97, -315.522);
             ivec2(-84564, 32745);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         while(true)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           switch(_GLF_SWITCH((0 & -24036)))
            {
             case 0:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                barrier();
               barrier();
              }
             break;
             if(_GLF_DEAD(false))
              barrier();
             case 23:
             ;
             default:
             1;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         mat4x3(1.9, -4.7, -9149.0744, 2.1, 462.405, 11.12, 974.976, 5.2, -84.35, _GLF_IDENTITY(39.33, (39.33) - 0.0), -0.9, 6.9);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         mat3x4 _GLF_SWITCH_3_53v, _GLF_SWITCH_3_54v[75], _GLF_SWITCH_3_55v;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       default:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))))))))
        {
         1;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           switch(_GLF_SWITCH((93360 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))
            {
             case 0:
             case 11:
             case 72:
             if(_GLF_DEAD(false))
              barrier();
             case 9:
             case 57:
             case 97:
             case 82:
             case 2:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             break;
             case 35:
             true;
             default:
             1;
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(vec3(1.0), bvec3(true), _GLF_struct_1(1, mat3(1.0), vec3(1.0), mat4x3(1.0), mat2x3(1.0), mat4(1.0), mat3x4(1.0)), _GLF_struct_2(mat4x3(1.0), ivec4(1), bvec4(true), bvec4(true), 1.0), mat2x3(1.0), vec3(1.0), ivec4(1)), gl_WorkGroupID.x);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_4.workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_17._f3.subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.2, -0.5)) : injectionSwitch)).y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat4x2(1.0), workgroup_base + subgroup_base + subgroup_local_id);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))
    {
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 16:
       if(_GLF_DEAD(false))
        barrier();
       mat2x4(-20.00, -6.9, 5.9, 630.219, 5563.8176, -28.93, -8152.9192, -30.37);
       case 0:
       case 40:
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true)))))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
       break;
       if(_GLF_DEAD(false))
        barrier();
       case 19:
       8.8;
       case 1:
       vec2 _GLF_SWITCH_5_0v;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       default:
       1;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_base + ((subgroup_local_id + 1) % _GLF_struct_replacement_17._f3.subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-37186) : int(4))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           if(_GLF_DEAD(false))
            barrier();
           case 54:
           case 92:
           case 76:
           case 21:
           case 75:
           case 81:
           case 84:
           case 61:
           case 79:
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 16:
           for(ivec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v; true; mat3(-3489.2656, 5.7, -1.9, 45.38, 1676.9622, -3.1, 324.367, 41.90, 177.049))
            {
             ;
             ivec4 _GLF_SWITCH_5_2v, _GLF_SWITCH_5_3v;
             if(_GLF_DEAD(false))
              barrier();
             vec4 _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v, _GLF_SWITCH_5_6v;
             if(_GLF_DEAD(false))
              barrier();
             not(bvec2(true, true));
             uvec3(4614u, 87269u, 113871u);
             mat4x3 _GLF_SWITCH_5_7v, _GLF_SWITCH_5_8v;
             bvec2(false, true);
             mat3 _GLF_SWITCH_5_9v[49], _GLF_SWITCH_5_10v;
             bvec4 _GLF_SWITCH_5_11v;
             if(_GLF_DEAD(false))
              barrier();
            }
           default:
           1;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 33:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     mat4x3(mat2(-6.4, 8.7, 33.44, 5.3));
     case 0:
     case 65:
     case 70:
     case 79:
     case 17:
     case 10:
     if(_GLF_DEAD(false))
      barrier();
     case 4:
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       barrier();
      }
     case 35:
     case 28:
     case 6:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 42:
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       40719u;
      }
     while(_GLF_WRAPPED_LOOP(false));
     default:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        barrier();
       1;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (_GLF_IDENTITY(~ (_injected_loop_counter --), 0 | (~ (_injected_loop_counter --))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   do
    {
     switch(_GLF_SWITCH(0))
      {
       case 25:
       if(_GLF_DEAD(false))
        barrier();
       packUnorm4x8(vec4(-65.15, -8977.6887, 91.41, -3.8));
       if(_GLF_DEAD(false))
        barrier();
       case 21:
       if(false)
        {
         mat4x2 _GLF_SWITCH_5_0v;
         mat2x4(-987.392, -9950.1296, -2768.2227, -32.76, 2.3, 8.1, 647.864, 6475.4176);
         bvec2(false, false);
         if(_GLF_DEAD(false))
          barrier();
         uvec2(91912u, 82962u);
         bvec2(false, true);
         ((uvec2(81873u, 97519u) >> subgroup_local_id) >> read);
         if(_GLF_DEAD(false))
          barrier();
         mat2x3 _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v, _GLF_SWITCH_5_3v;
        }
       else
        {
        }
       case 0:
       if(_GLF_DEAD(false))
        barrier();
       case 38:
       case 59:
       case 93:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       break;
       case 51:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       bvec2 _GLF_SWITCH_5_4v;
       default:
       1;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 1 * (int(5)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
  {
   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))))
    {
     case 78:
     {
      ivec3(-45888, 75261, -33529);
      if(_GLF_DEAD(false))
       barrier();
      if(((subgroup_base) < 137890u))
       {
        mat2x4 _GLF_SWITCH_5_0v;
        (87947 % atomicExchange(_injected_loop_counter, -6878));
        ;
        if(_GLF_DEAD(false))
         barrier();
        (uvec2(115567u, 62335u) ^ uvec2(183228u, 163482u));
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        mat2(-2.6, 2565.3005, 882.115, -9.1);
       }
      ;
      ;
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       barrier();
      uvec2(31646u, 141633u);
      for(      bvec2(false, true);
 false; uvec3(164553u, 169551u, 152337u))
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        bvec3 _GLF_SWITCH_5_1v[84], _GLF_SWITCH_5_2v;
        vec2 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v[37], _GLF_SWITCH_5_5v[80];
        (uvec2(77307u, 144754u) * min(uvec2(101549u, 49900u), uvec2(121522u, 62268u)));
        ivec2 _GLF_SWITCH_5_6v, _GLF_SWITCH_5_7v;
        uint _GLF_SWITCH_5_8v, _GLF_SWITCH_5_9v[1], _GLF_SWITCH_5_10v;
        ivec4(75712, -60196, -26460, 91203);
       }
     }
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     case 61:
     case 26:
     case 2:
     case 7:
     case 69:
     if(_GLF_DEAD(false))
      barrier();
     case 13:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, true))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, true)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 | 0) & 1)); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, false || (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((subgroup_local_id % 2) == 0) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((subgroup_local_id % 2) == 0, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (! ((subgroup_local_id % 2) == 0))), (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (! ((subgroup_local_id % 2) == 0)))) && true)) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((subgroup_local_id % 2) == 0, (_GLF_IDENTITY((subgroup_local_id % 2) == 0, _GLF_IDENTITY(! (! ((subgroup_local_id % 2) == 0)), bool(bvec4(! (! ((subgroup_local_id % 2) == 0)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false))))) && true), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), false, true))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
              }
             else
              {
               switch(_GLF_SWITCH(0))
                {
                 case 74:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 ivec3(-84137, -82276, 58657);
                 case 0:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 88:
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 47:
                     uvec3(43055u, 113545u, 69256u);
                     case 0:
                     case 13:
                     case 16:
                     case 51:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       switch(_GLF_SWITCH(0))
                        {
                         case 0:
                         case 14:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         case 32:
                         barrier();
                         break;
                         if(_GLF_DEAD(false))
                          barrier();
                         default:
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          barrier();
                         1;
                        }
                      }
                     break;
                     case 96:
                     bvec2 _GLF_SWITCH_5_0v[61], _GLF_SWITCH_5_1v;
                     case 6:
                     mat2x4 _GLF_SWITCH_5_2v, _GLF_SWITCH_5_3v;
                     default:
                     1;
                    }
                  }
                 case 43:
                 case 20:
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 case 7:
                 if(_GLF_DEAD(false))
                  barrier();
                 subgroupAll(false);
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                    barrier();
                  }
                 case 60:
                 case 25:
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 read = atomicLoad(buf[_GLF_struct_replacement_0.virtual_gid], 4, 64, 2);
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 case 34:
                 case 42:
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   switch(_GLF_SWITCH(0))
                    {
                     case 33:
                     injectionSwitch;
                     case 0:
                     case 42:
                     case 52:
                     case 84:
                     case 48:
                     case 7:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     break;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     case 39:
                     if(_GLF_DEAD(false))
                      barrier();
                     mat4(-98.37, 10.41, -4046.0669, 8.0, 39.85, _GLF_IDENTITY(-77.93, min(-77.93, _GLF_IDENTITY(-77.93, 0.0 + (_GLF_IDENTITY(-77.93, min(-77.93, -77.93)))))), 610.654, -1421.5661, 6532.9365, -14.87, 1.5, -85.62, 8.4, -8.2, -2.5, -257.962);
                     case 14:
                     uvec2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     default:
                     1;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 case 37:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                 mat2x3 _GLF_SWITCH_0_0v;
                 case 52:
                 if(true)
                  {
                   bvec3 _GLF_SWITCH_0_1v;
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     max(uvec2(63291u, 84371u), _GLF_struct_replacement_17._f3.subgroup_size);
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
                    barrier();
                   while((_GLF_IDENTITY(false && false, true && (false && false))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     mat3x4(49.67, -6.7, _GLF_IDENTITY(53.54, (53.54) / 1.0), -96.49, 88.61, -4.1, 9.1, -99.58, -8.8, -56.10, -8.6, _GLF_IDENTITY(-129.104, (true ? _GLF_IDENTITY(-129.104, _GLF_IDENTITY((-129.104) / 1.0, mix(float(_GLF_IDENTITY((-129.104) / 1.0, clamp((-129.104) / 1.0, (-129.104) / 1.0, (-129.104) / 1.0))), float(_GLF_FUZZED(-2808.5137)), bool(false)))) : _GLF_FUZZED(2.5))));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                        barrier();
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                     bvec2 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v[27];
                     bool _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v[19];
                     do
                      {
                       ;
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     ;
                     uvec2 _GLF_SWITCH_0_7v;
                    }
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     mat3(1.8, 9964.2574, -32.89, 466.365, -6.6, -5.2, 3490.6958, -2.2, 6.2);
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   {
                    ivec3 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
                    if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
                     barrier();
                    _GLF_SWITCH_0_0v;
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                          barrier();
                         }
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                       }
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    findMSB(uvec2(4478u, 111995u));
                    if(_GLF_DEAD(false))
                     barrier();
                    vec4(-1.7, 54.02, -2.7, 5359.5051).qq;
                    for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))); _injected_loop_counter --)
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        barrier();
                       }
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          barrier();
                         }
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          barrier();
                         }
                        barrier();
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))); _injected_loop_counter ++)
                     {
                      mat2x4(-95.92, -1.0, 168.195, -5.0, -5.4, -9698.5120, -5.3, 7.5);
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        barrier();
                       }
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      mat3(7.5, 28.60, -254.199, 8.7, -9.1, 7.4, 47.02, -4274.2349, -373.502);
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                       {
                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                         {
                          barrier();
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                             barrier();
                            barrier();
                           }
                         }
                       }
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    mat2(-9240.7503, 4733.1281, 8208.3288, -812.179);
                    if(_GLF_DEAD(false))
                     barrier();
                    do
                     {
                      _GLF_SWITCH_0_9v;
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   mat2x3(8.1, 71.42, _GLF_IDENTITY(-9.2, float(vec2(_GLF_IDENTITY(-9.2, clamp(_GLF_IDENTITY(-9.2, (false ? _GLF_FUZZED(4.7) : -9.2)), -9.2, -9.2)), determinant(mat2(0.0, 0.0, 0.0, 0.0))))), 889.376, 873.100, _GLF_IDENTITY(988.170, (true ? 988.170 : _GLF_FUZZED(4.8))));
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> 0))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     for(                     79326u;
 any(bvec2(false, true)); (ivec2(-82666, 8353)))
                      {
                       switch(_GLF_SWITCH(((0 << _GLF_IDENTITY(int(8), int(8))) & -17662)))
                        {
                         case 24:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         vec4(-0.0, -7.4, -2181.7358, -89.50);
                         case 27:
                         (workgroup_base + uvec2(160363u, 147105u));
                         case 0:
                         case 78:
                         if(_GLF_DEAD(false))
                          barrier();
                         case 30:
                         if(_GLF_DEAD(false))
                          barrier();
                         -20522;
                         case 43:
                         case 81:
                         case 91:
                         mat3x2(-160.052, -5.8, -2526.9156, -96.75, _GLF_IDENTITY(-8.1, (-8.1) - 0.0), -434.647);
                         break;
                         default:
                         1;
                        }
                      }
                    }
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (false), (true && (false)) || false), false, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (false), (true && (false)) || false), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(true && (false), (true && (false)) || false), false, false, false)), false, true)))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))))))
                        barrier();
                       ivec3(35659, 64376, 39483);
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   for(                   (+ mat3x4(0.0, 5.6, 6.3, 7859.6786, 6.1, 17.65, 23.99, -8.4, -6.4, -443.705, 467.525, 641.950));
 (num_workgroup == subgroup_local_id); uvec2(151207u, 42071u))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     vec3 _GLF_SWITCH_0_10v;
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     vec4 _GLF_SWITCH_0_11v;
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                        }
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     ;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                      barrier();
                     for(int _injected_loop_counter = (1 & int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   (next_virtual_gid - uvec3(15540u, 42970u, 174358u)[1]);
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                         switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0)))))
                          {
                           case 86:
                           mat4 _GLF_SWITCH_5_0v;
                           case 80:
                           mat2(-39.80, 2.6, 875.672, -3.4);
                           case 0:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           break;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           default:
                           1;
                          }
                        }
                       if(_GLF_DEAD(false))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 1:
                           case 65:
                           case 54:
                           case 42:
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           case 33:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           else
                            {
                            }
                           break;
                           if(_GLF_DEAD(false))
                            barrier();
                           default:
                           if(_GLF_DEAD(false))
                            barrier();
                           1;
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 default:
                 1;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
              }
            }
           else
            {
            }
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 36:
             (- mat2x3(-4.7, 2.8, 4.1, -4123.2834, 1.6, 525.490));
             case 0:
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               switch(_GLF_SWITCH((_GLF_IDENTITY(0 & -7498, max(0 & -7498, 0 & -7498)))))
                {
                 case 15:
                 mat4 _GLF_SWITCH_1_0v[82];
                 case 0:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     switch(_GLF_SWITCH(((0 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(8), int(8)))))
                      {
                       case 96:
                       mat3 _GLF_SWITCH_4_0v[21], _GLF_SWITCH_4_1v[86];
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       case 42:
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        barrier();
                       ivec3(89874, -22878, -88547);
                       case 0:
                       case 27:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       case 90:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       break;
                       default:
                       _GLF_IDENTITY(1, max(1, 1));
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 case 99:
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   barrier();
                  }
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 case 27:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 case 4:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 case 68:
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     do
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        barrier();
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                 subgroupAll(_GLF_IDENTITY(false, (false) || false));
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 case 64:
                 case 52:
                 case 2:
                 case 1:
                 read = atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_0.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_0.virtual_gid), max(~ (_GLF_struct_replacement_0.virtual_gid), ~ (_GLF_struct_replacement_0.virtual_gid))))))))], 4, 64, 2);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 35:
                 uvec2 _GLF_SWITCH_1_1v[55], _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v;
                 if(_GLF_DEAD(false))
                  barrier();
                 case 95:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 0:
                     case 9:
                     case 4:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 10:
                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                      barrier();
                     case 8:
                     case 75:
                     case 86:
                     case 94:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     case 5:
                     case 16:
                     barrier();
                     break;
                     default:
                     1;
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 0:
                       case 91:
                       case 2:
                       case 60:
                       case 88:
                       case 31:
                       case 39:
                       case 18:
                       if(_GLF_DEAD(false))
                        barrier();
                       case 72:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       case 47:
                       barrier();
                       break;
                       case 46:
                       if(_GLF_DEAD(false))
                        barrier();
                       vec3 _GLF_SWITCH_5_0v;
                       default:
                       if(_GLF_DEAD(false))
                        barrier();
                       1;
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))));
                 {
                  switch(_GLF_SWITCH((0 & 93440)))
                   {
                    case 64:
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    bitfieldExtract(ivec3(-56424, 6530, -14098), bitCount(-41560), -73358);
                    case 0:
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) | (0))))
                     {
                      case 19:
                      ;
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) > injectionSwitch.y))))
                         {
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            barrier();
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                               barrier();
                              barrier();
                             }
                           }
                          else
                           {
                           }
                          do
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                       }
                      else
                       {
                       }
                      case 65:
                      int _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[57];
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                         barrier();
                        do
                         {
                          barrier();
                         }
                        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                      case 0:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        else
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              barrier();
                             }
                            barrier();
                           }
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                            do
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                              barrier();
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                           }
                          barrier();
                         }
                       }
                      if(false)
                       {
                        switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), int(8)))))
                         {
                          case 40:
                          if(_GLF_DEAD(false))
                           barrier();
                          mat4x2 _GLF_SWITCH_4_0v;
                          case 56:
                          (ivec4(13182, 25341, 24167, 8408) + _GLF_SWITCH_2_0v);
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                            barrier();
                           }
                          if(_GLF_DEAD(false))
                           barrier();
                          case 0:
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                          case 93:
                          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
                           barrier();
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            bvec4(false, true, false, false);
                           }
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          bvec3 _GLF_SWITCH_1_4v;
                          if(_GLF_DEAD(false))
                           barrier();
                          for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                           {
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                 }
                                else
                                 {
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   barrier();
                                  barrier();
                                  if(_GLF_DEAD(false))
                                   barrier();
                                 }
                               }
                              barrier();
                             }
                           }
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          case 64:
                          if(_GLF_DEAD(false))
                           barrier();
                          ;
                          do
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                          if(_GLF_DEAD(false))
                           barrier();
                          case 18:
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
                           barrier();
                          case 61:
                          _GLF_IDENTITY(mat4(-4.0, _GLF_IDENTITY(-7.2, float(mat2x3(_GLF_IDENTITY(-7.2, min(-7.2, -7.2)), 1.0, sqrt(0.0), 0.0, 1.0, 1.0))), -81.71, 8.6, 2.5, -941.814, 0.2, -3443.7205, _GLF_IDENTITY(-2.5, float(mat4x2(-2.5, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, abs(0.0), abs(0.0), 1.0))), 220.057, -133.221, -2.8, -4906.4611, 2799.3846, -98.07, 1.7), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(-4.0, _GLF_IDENTITY(-7.2, float(mat2x3(_GLF_IDENTITY(-7.2, min(-7.2, -7.2)), 1.0, sqrt(0.0), 0.0, 1.0, 1.0))), -81.71, 8.6, 2.5, -941.814, 0.2, -3443.7205, _GLF_IDENTITY(-2.5, float(mat4x2(-2.5, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, abs(0.0), abs(0.0), 1.0))), 220.057, -133.221, -2.8, -4906.4611, 2799.3846, -98.07, 1.7)));
                          if(_GLF_DEAD(false))
                           barrier();
                          case 15:
                          mat2(93.58, -36.81, 189.858, 2638.7608);
                          break;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          case 91:
                          if(_GLF_DEAD(false))
                           barrier();
                          mat3 _GLF_SWITCH_4_1v;
                          if(_GLF_DEAD(false))
                           barrier();
                          case 10:
                          if(_GLF_DEAD(false))
                           barrier();
                          vec4(-9.5, 913.841, 9.0, -1.8);
                          default:
                          if(_GLF_DEAD(false))
                           barrier();
                          1;
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                       }
                      else
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        else
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                          -82.66;
                         }
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                         barrier();
                        (mat3(9.8, -920.682, -5.1, -1.9, 4.4, _GLF_IDENTITY(5.7, clamp(5.7, 5.7, 5.7)), 9.5, -0.7, -118.565) == mat3(-3.2, -273.796, -5.2, -8195.2129, -602.967, -3.8, -4.9, 77.94, 79.08));
                        if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                         {
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            barrier();
                           }
                          switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                           {
                            case 30:
                            vec2(-5.6, -446.648);
                            case 0:
                            case 49:
                            case 56:
                            case 91:
                            case 76:
                            do
                             {
                              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                               }
                              else
                               {
                                barrier();
                                if(_GLF_DEAD(false))
                                 barrier();
                               }
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                            break;
                            case 8:
                            bvec4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                            default:
                            1;
                           }
                         }
                        vec2 _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v[85], _GLF_SWITCH_1_7v;
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        barrier();
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                      case 48:
                      if(_GLF_DEAD(false))
                       {
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          barrier();
                         }
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      while(true)
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(false))
                         {
                          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                             {
                              barrier();
                              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                               barrier();
                              if(_GLF_DEAD(false))
                               barrier();
                              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))), true, false, false)))))
                               barrier();
                              if(_GLF_WRAPPED_IF_FALSE(false))
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                               }
                              else
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                  do
                                   {
                                    switch(_GLF_SWITCH((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))
                                     {
                                      case 20:
                                      float _GLF_SWITCH_5_0v[73], _GLF_SWITCH_5_1v;
                                      case 0:
                                      case 72:
                                      if(_GLF_DEAD(false))
                                       barrier();
                                      barrier();
                                      break;
                                      if(_GLF_DEAD(false))
                                       barrier();
                                      case 37:
                                      bvec3 _GLF_SWITCH_5_2v, _GLF_SWITCH_5_3v[98];
                                      if(_GLF_DEAD(false))
                                       barrier();
                                      case 23:
                                      if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                       barrier();
                                      mat4x2 _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v, _GLF_SWITCH_5_6v;
                                      default:
                                      1;
                                     }
                                   }
                                  while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                                 }
                               }
                             }
                           }
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                            barrier();
                           }
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                         }
                        ;
                        mat4 _GLF_SWITCH_1_8v;
                        if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                         barrier();
                       }
                      (ivec3(96568, 44461, -3223) >> 21720)[1];
                      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_DEAD(false))
                       barrier();
                      while(false)
                       {
                        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))))); _injected_loop_counter --)
                             {
                              barrier();
                             }
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                           }
                          else
                           {
                           }
                         }
                        do
                         {
                          switch(_GLF_SWITCH((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (false ? _GLF_FUZZED(13672) : _GLF_IDENTITY(int(8), int(8)))))))))))
                           {
                            case 68:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              switch(_GLF_SWITCH(_GLF_IDENTITY(0, 0 | (0))))
                               {
                                case 87:
                                matrixCompMult(mat2(-5853.2225, _GLF_IDENTITY(6159.5512, float(_GLF_IDENTITY(mat4(6159.5512, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(6159.5512, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), -1448.4843, -12.08), mat2(-647.516, -9.2, 1.6, -6886.5236));
                                case 36:
                                bvec2(true, true);
                                case 0:
                                do
                                 {
                                  barrier();
                                  if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
                                   {
                                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (60054 & 0)); _injected_loop_counter --)
                                     {
                                      if(_GLF_DEAD(false))
                                       barrier();
                                      if(_GLF_DEAD(false))
                                       barrier();
                                     }
                                    barrier();
                                   }
                                  if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
                                   barrier();
                                 }
                                while(_GLF_WRAPPED_LOOP(false));
                                if(_GLF_DEAD(false))
                                 barrier();
                                break;
                                if(_GLF_DEAD(false))
                                 barrier();
                                default:
                                1;
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 barrier();
                               }
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                             }
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              barrier();
                             }
                            _GLF_struct_25 _GLF_struct_replacement_25;
                            case 0:
                            case 5:
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                              barrier();
                             }
                            int _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v;
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_WRAPPED_IF_TRUE(true))
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                               }
                              else
                               {
                               }
                              if(_GLF_DEAD(false))
                               barrier();
                              if(_GLF_DEAD(false))
                               barrier();
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              barrier();
                             }
                            if(_GLF_DEAD(false))
                             barrier();
                            for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                             {
                              bvec3(true, false, true);
                             }
                            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                             }
                            else
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              if(_GLF_DEAD(false))
                               {
                                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                 {
                                  if(_GLF_DEAD(false))
                                   barrier();
                                  if(_GLF_DEAD(false))
                                   barrier();
                                 }
                                barrier();
                               }
                             }
                            if(_GLF_DEAD(false))
                             barrier();
                            uvec2 _GLF_SWITCH_1_11v[49], _GLF_SWITCH_1_12v[20];
                            do
                             {
                              ;
                              if(_GLF_DEAD(false))
                               barrier();
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                            vec2 _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v, _GLF_SWITCH_1_15v;
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_WRAPPED_IF_TRUE(true))
                               {
                                barrier();
                               }
                              else
                               {
                               }
                             }
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                               barrier();
                              do
                               {
                                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                 barrier();
                               }
                              while(_GLF_WRAPPED_LOOP(false));
                              if(_GLF_DEAD(false))
                               barrier();
                              barrier();
                             }
                            if(_GLF_DEAD(false))
                             barrier();
                            ((bvec3(true, false, false) != bvec3(true, false, _GLF_IDENTITY(false, (false) && true))) ? uvec4(135150u, 175850u, 169350u, 147797u) : uvec4(41732u, 93854u, 170589u, 115014u));
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            bvec4 _GLF_SWITCH_1_16v[79], _GLF_SWITCH_1_17v[29];
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            break;
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                               barrier();
                              switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), int(3)))))
                               {
                                case 0:
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 barrier();
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                  if(_GLF_DEAD(false))
                                   barrier();
                                  if(_GLF_DEAD(false))
                                   {
                                    if(_GLF_DEAD(false))
                                     barrier();
                                    barrier();
                                   }
                                  barrier();
                                 }
                                case 21:
                                case 67:
                                if(_GLF_DEAD(false))
                                 {
                                  if(_GLF_DEAD(false))
                                   barrier();
                                  barrier();
                                 }
                                barrier();
                                break;
                                case 25:
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   barrier();
                                  barrier();
                                 }
                                ;
                                default:
                                1;
                                if(_GLF_DEAD(false))
                                 barrier();
                               }
                             }
                            case 96:
                            mat4x3 _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
                            default:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              for(int _injected_loop_counter = ((0 | 0) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), 0 ^ (int(6))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                               {
                                barrier();
                               }
                             }
                            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
                             {
                              1;
                             }
                           }
                         }
                        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       }
                      case 10:
                      ;
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                         {
                          barrier();
                         }
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      vec4 _GLF_SWITCH_1_18v, _GLF_SWITCH_1_19v, _GLF_SWITCH_1_20v[67];
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(false))
                       barrier();
                      ;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      case 74:
                      if(_GLF_DEAD(false))
                       {
                        do
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          barrier();
                          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      if(_GLF_DEAD(false))
                       {
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter ++)
                         {
                          barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                       }
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       vec4 _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v, _GLF_SWITCH_1_23v[4];
                       vec2 _GLF_SWITCH_1_24v, _GLF_SWITCH_1_25v, _GLF_SWITCH_1_26v;
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         ivec2(39183, 35770);
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       uvec4 _GLF_SWITCH_1_27v, _GLF_SWITCH_1_28v;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       ;
                      }
                      break;
                      default:
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                         }
                        else
                         {
                         }
                        barrier();
                       }
                      1;
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, false, false))))))) && true)))
                       barrier();
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        barrier();
                       }
                     }
                    else
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                         }
                        else
                         {
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            barrier();
                           }
                          else
                           {
                           }
                         }
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    break;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      barrier();
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    case 40:
                    if(_GLF_DEAD(false))
                     barrier();
                    ivec2(59100, 66608).sts;
                    case 91:
                    if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
                     barrier();
                    mat4x2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v[84];
                    default:
                    if(_GLF_DEAD(false))
                     barrier();
                    1;
                   }
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                   }
                 }
                 default:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 1;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)))) && true), (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             break;
             if(_GLF_DEAD(false))
              barrier();
             case 5:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               mat2x4(-679.840, -46.56, -1.3, 99.55, 3.3, -8262.9302, -51.83, -7472.3495);
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             default:
             1;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
      }
     case 11:
     case 63:
     if(_GLF_DEAD(false))
      barrier();
     case 17:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     break;
     case 89:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     mat4 _GLF_SWITCH_5_11v;
     case 79:
     {
      ivec4(-51937, -11535, 27545, -83532);
      while(true)
       {
        if(_GLF_DEAD(false))
         barrier();
        (num_workgroup | uvec3(162830u, 198717u, 132639u));
        mat3x4(5702.2615, -6793.9142, -36.57, -135.096, -10.82, -403.883, 3.4, -65.19, -604.635, 0.5, 7.5, -5852.4860);
        ;
        mat2x3 _GLF_SWITCH_5_12v, _GLF_SWITCH_5_13v[96];
        mat2x4 _GLF_SWITCH_5_14v, _GLF_SWITCH_5_15v;
       }
      if(false)
       {
        bvec2 _GLF_SWITCH_5_16v, _GLF_SWITCH_5_17v;
        ivec4(73388, -73693, 80279, 6636).qq;
        ;
        uvec3(177044u, 125082u, 121858u);
        (+ ivec4(22915, 65583, 16844, -92968));
        int _GLF_SWITCH_5_18v;
        bvec3 _GLF_SWITCH_5_19v, _GLF_SWITCH_5_20v, _GLF_SWITCH_5_21v[28];
        if(_GLF_DEAD(false))
         barrier();
        mat3(-47.77, -6080.5307, 256.289, -81.14, 278.817, -7.4, 6.0, -5.9, -6.9);
        ;
       }
      uvec3 _GLF_SWITCH_5_22v, _GLF_SWITCH_5_23v[77], _GLF_SWITCH_5_24v;
      {
       ivec3 _GLF_SWITCH_5_25v[19];
       mat2(-88.36, 8858.3096, 9.9, 89.12);
       ;
       transpose(mat3x4(-1.1, 9705.5150, 134.277, 6.1, 229.688, 2.2, -6.9, 78.22, -443.627, -5.3, 4.0, -70.39));
       if(_GLF_DEAD(false))
        barrier();
       cosh(vec3(-177.399, 9.4, 462.591));
       bvec4(false, true, false, false);
       if(_GLF_DEAD(false))
        barrier();
       ivec3(72165, -6613, -74181);
      }
      bvec2(true, false);
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       barrier();
      outerProduct(vec3(-710.242, -9.3, 8264.9710), vec4(1.8, 3869.1724, -31.22, -7310.4877));
      if(_GLF_DEAD(false))
       barrier();
      do
       {
        (uvec2(94034u, 86740u) , ivec4(15415, 78020, -55218, -80398));
        ivec4(35387, -2737, -70512, -17416);
        -8237.7544;
        ;
       }
      while(false);
      if(_GLF_DEAD(false))
       barrier();
     }
     if(_GLF_DEAD(false))
      barrier();
     default:
     1;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_struct_replacement_0.virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))))))
      {
       switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), int(7)))))
        {
         case 63:
         (mat4x2(-6856.1252, -526.091, -651.364, -677.909, -99.04, -44.70, -306.243, -450.807) - 3.1);
         case 0:
         if(_GLF_DEAD(false))
          barrier();
         case 99:
         case 44:
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         break;
         default:
         1;
        }
      }
     else
      {
       do
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sinh(3174.0717)) : injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sinh(3174.0717)) : injectionSwitch.y))))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sinh(3174.0717)) : injectionSwitch.y)))))))) || false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
