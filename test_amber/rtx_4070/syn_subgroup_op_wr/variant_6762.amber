#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 ivec4 _f0;
} ;

struct _GLF_struct_10 {
 mat4 _f0;
 uint _f1;
 bool _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
 mat2x4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 bvec2 _f1;
 bvec4 _f2;
 mat4x2 _f3;
 mat2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_12 {
 _GLF_struct_8 _f0;
 float _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 uint _f4;
 bvec3 _f5;
 _GLF_struct_11 _f6;
} ;

struct _GLF_struct_13 {
 mat2x4 _f0;
 _GLF_struct_12 _f1;
 uint workgroup_base;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 uint _f1;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 mat2 _f1;
 mat3x4 _f2;
 vec2 _f3;
 mat3 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 vec2 _f1;
 int _f2;
} ;

struct _GLF_struct_6 {
 bool _f0;
 mat4x2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 vec2 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 bvec4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_7 {
 uint subgroup_local_id;
 mat3 _f0;
 mat2 _f1;
 mat2 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_6 _f4;
 uint _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 uint workgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(gl_SubgroupInvocationID, mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat2(1.0), mat2(1.0), _GLF_struct_2(_GLF_struct_1(mat3(1.0), bvec4(true), ivec3(1)), mat4x3(1.0)), _GLF_struct_6(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), mat4x2(1.0), _GLF_struct_3(mat4(1.0), vec2(1.0), 1), _GLF_struct_4(vec4(1.0), mat2(1.0), mat3x4(1.0), vec2(1.0), mat3(1.0), _GLF_IDENTITY(ivec4(1), (ivec4(1)) / ivec4(1, 1, 1, 1))), vec2(1.0), _GLF_struct_5(uvec4(1u), 1u)), 1u, mat3x4(1.0));
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)))) | ((_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x))))) | (gl_NumWorkGroups.x)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))), uint(uvec2((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u))))))), 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, (0u | 0u)), max(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, (0u | 0u)), (uvec2(gl_NumWorkGroups.x, (0u | 0u))) / uvec2(1u, 1u)), uvec2(gl_NumWorkGroups.x, (0u | 0u))))))) | (gl_NumWorkGroups.x)), (false ? _GLF_FUZZED(64895u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(58968u, 198032u, 64600u)))))), ~ (~ (gl_NumWorkGroups))))), (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, true)), false || (bool(bvec4((false), true, false, true))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)), (_injected_loop_counter ++) | 0)), (true ? ~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0)) : _GLF_FUZZED(31056))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))) || false)))), true && _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(false))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(false))))), true, false, true)))))), (((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(false))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(false))))), true, false, true))))))) && true))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.4))), max(1.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(-3.1, -6.8, 82.62, 755.021, 9.2, -757.763, 79.32, 0.7, 94.85, -9.3, -9.4, 5.1, -179.914, -3.0, -3993.9607, 1.0)) : transpose(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u), (false ? _GLF_FUZZED(uvec3(35337u, _GLF_IDENTITY(61782u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(61782u, (true ? 61782u : _GLF_FUZZED(num_workgroup))), (1u ^ 1u)), clamp(uvec2(_GLF_IDENTITY(61782u, (true ? 61782u : _GLF_FUZZED(num_workgroup))), (1u ^ 1u)), uvec2(_GLF_IDENTITY(61782u, (true ? 61782u : _GLF_FUZZED(num_workgroup))), (1u ^ 1u)), uvec2(_GLF_IDENTITY(61782u, (true ? 61782u : _GLF_FUZZED(num_workgroup))), (1u ^ 1u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(61782u, (true ? 61782u : _GLF_FUZZED(num_workgroup))), (1u ^ 1u)), clamp(uvec2(_GLF_IDENTITY(61782u, (true ? 61782u : _GLF_FUZZED(num_workgroup))), (1u ^ 1u)), uvec2(_GLF_IDENTITY(61782u, (true ? 61782u : _GLF_FUZZED(num_workgroup))), (1u ^ 1u)), uvec2(_GLF_IDENTITY(61782u, (true ? 61782u : _GLF_FUZZED(num_workgroup))), (1u ^ 1u)))))) - 0u)), 95541u)) : _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), max(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), 0u, 0u)) | (uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), (true ? uvec3(0u, 1u, 1u) : _GLF_FUZZED(uvec3(199205u, 86782u, 8372u)))))), max(0u, 0u)), 0u)), 0u, 0u))), uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u)))) - uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u)), clamp(_GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), max(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), 0u, 0u)) | (uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), (true ? uvec3(0u, 1u, 1u) : _GLF_FUZZED(uvec3(199205u, 86782u, 8372u)))))), max(0u, 0u)), 0u)), 0u, 0u))), uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u)))) - uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u)), _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), max(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), 0u, 0u)) | (uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), (true ? uvec3(0u, 1u, 1u) : _GLF_FUZZED(uvec3(199205u, 86782u, 8372u)))))), max(0u, 0u)), 0u)), 0u, 0u))), uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u)))) - uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u)), _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), max(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), 0u, 0u)) | (uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), (true ? uvec3(0u, 1u, 1u) : _GLF_FUZZED(uvec3(199205u, 86782u, 8372u)))))), max(0u, 0u)), 0u)), 0u, 0u))), uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u)))) - uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) << uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) / 1u)) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 0u), ((gl_WorkGroupSize) << uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED((uvec3(41054u, 18565u, 139315u) + (subgroup_size + 71668u))) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))))), uvec3(uvec3(gl_WorkGroupSize)))) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (true ? 0u : _GLF_FUZZED(subgroup_size)))) / 1u)) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (true ? 0u : _GLF_FUZZED(subgroup_size)))) / 1u)) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 0u))), ((gl_WorkGroupSize) << uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)))))) >> uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((subgroup_size % uvec3(74464u, 51705u, 161900u))) : (gl_WorkGroupSize))), _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))), 0u), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))), 0u), (uvec3(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))), 0u)) / uvec3(1u, 1u, 1u)), 1u), (uvec4(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))), 0u), (uvec3(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))), 0u)) / uvec3(1u, 1u, 1u)), 1u)) ^ uvec4(0u, 0u, 0u, 0u))))))) << uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)))), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u)), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), ~ (~ ((~ (0u))))), clamp((~ (0u)), (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))), (~ (0u))))), 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), max(uvec4(gl_WorkGroupSize, 0u), uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), max(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (~ ((gl_WorkGroupSize))))))), 0u), uvec4(gl_WorkGroupSize, 0u)))))), max((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(gl_WorkGroupSize, 0u)), min((uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY((uvec4(gl_WorkGroupSize, 0u)), (_GLF_IDENTITY((uvec4(gl_WorkGroupSize, 0u)), uvec4(0u, 0u, 0u, 0u) + ((uvec4(gl_WorkGroupSize, 0u))))) ^ uvec4(0u, 0u, 0u, 0u)))), uvec4(0u, 0u, 0u, 0u) ^ (~ (uvec4(gl_WorkGroupSize, 0u)))))), max(uvec4(gl_WorkGroupSize, 0u), _GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) << uvec4(0u, 0u, 0u, 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), max(uvec4(gl_WorkGroupSize, 0u), uvec4(gl_WorkGroupSize, 0u)))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), max(uvec4(gl_WorkGroupSize, 0u), uvec4(gl_WorkGroupSize, 0u))))))))))) / (uvec3(1u, 1u, 1u) | _GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, (6u) + 0u)), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(_GLF_IDENTITY(6u, (6u) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)))))))), (false ? _GLF_FUZZED(uvec3(22934u, 183116u, 190135u)) : ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(_GLF_IDENTITY(6u, (6u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) << uvec3(0u, _GLF_IDENTITY(0u, (0u) * 1u), 0u))) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)), 1u)))), max(~ (~ (gl_WorkGroupSize)), _GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), clamp(~ (~ (gl_WorkGroupSize)), ~ (~ (gl_WorkGroupSize)), ~ (~ (gl_WorkGroupSize)))))))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, (0u) << 0u))))), max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), max((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))) << uvec3(_GLF_IDENTITY(0u, (0u) << (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) ^ 0u)))), 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, (0u) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), (true ? float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(0.2)))) > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, (0u) << 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), (true ? float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(0.2)))) > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, (0u) << 0u))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), (true ? float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(0.2)))) > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, (0u) << 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), (true ? float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(0.2)))) > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, (0u) << 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), (true ? float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(0.2)))) > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, (0u) << 0u)))))) | uvec3(0u, 0u, 0u)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)), 0u)))))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), clamp((0u) | (0u), (0u) | (0u), (0u) | (0u))))))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(174954u, 21260u, 164887u), uvec3(0u, 0u, 0u) ^ (uvec3(174954u, 21260u, 164887u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) << 0u))), 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(uvec2(37630u, 35021u), atomicCompSwap(subgroup_size, num_workgroup, num_workgroup))) : (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(uvec2(37630u, 35021u), atomicCompSwap(subgroup_size, num_workgroup, num_workgroup))) : (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(uvec2(37630u, 35021u), atomicCompSwap(subgroup_size, num_workgroup, num_workgroup))) : (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(uvec2(37630u, 35021u), atomicCompSwap(subgroup_size, num_workgroup, num_workgroup))) : (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))))))) - uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u))), (false ? _GLF_FUZZED(uvec3(uvec2(37630u, 35021u), atomicCompSwap(subgroup_size, num_workgroup, num_workgroup))) : (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, 0u, 0u))) - uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(uvec2(37630u, 35021u), atomicCompSwap(subgroup_size, num_workgroup, num_workgroup))) : (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(uvec2(37630u, 35021u), atomicCompSwap(subgroup_size, num_workgroup, num_workgroup))) : (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(uvec2(37630u, 35021u), atomicCompSwap(subgroup_size, num_workgroup, num_workgroup))) : (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))))))) - uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u))), (false ? _GLF_FUZZED(uvec3(uvec2(37630u, 35021u), atomicCompSwap(subgroup_size, num_workgroup, num_workgroup))) : (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u))), (false ? _GLF_FUZZED(uvec3(uvec2(37630u, 35021u), atomicCompSwap(subgroup_size, num_workgroup, num_workgroup))) : (gl_WorkGroupSize) << uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) | 0u))), 0u)))) : _GLF_FUZZED(uvec3(126206u, 90361u, 184303u)))))) ^ uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))) - uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0), injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize))) << uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(119008u, 104393u, 143915u)) : uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(112888u, 164718u, 84520u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(112888u, 164718u, 84520u)), (_GLF_FUZZED(uvec3(112888u, 164718u, 84520u))) * (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u)))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))), (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)))) | (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u))), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)))))))) : _GLF_FUZZED(uvec3(187656u, 137604u, _GLF_IDENTITY(24052u, (24052u) << 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u)), (gl_WorkGroupSize) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u) ^ (0u))) >> 0u), 0u)))))) ^ (uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_size)))))), uvec3(5u)))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, float(vec3(0.0, cos(0.0), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.6)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true)))), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0)))), float(_GLF_FUZZED((3.0))), bool(false))), 0.0)))) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.6)), float(0.0), bool(true)))))), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(83.94))))))).x);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), 0, 1))), 0 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), int(ivec3((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), 0, 1)))))) >> 0)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))), ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), bool(bvec2(! (_GLF_IDENTITY(false, false || (false))), false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(mat2x4(1.0), _GLF_struct_12(_GLF_struct_8(mat2(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, false))), true, false))), bvec4(true), mat4x2(1.0), mat2(1.0), mat2(1.0)), 1.0, _GLF_struct_9(vec4(1.0), mat2x4(1.0), bvec3(true)), _GLF_struct_10(_GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(mat3(-7510.5061, -5.8, -992.735, 65.79, -147.643, -7.0, -75.95, 6.6, 9.4))))), 1u, true, _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u)))), 1u, bvec3(true), _GLF_struct_11(ivec4(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) + 0)))))), _GLF_struct_replacement_0.workgroup_size * workgroup_id);
 uint virtual_gid = _GLF_struct_replacement_13.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), min(uvec4(subgroup_id, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), (uvec4(subgroup_id, 1u, 0u, 0u)) * uvec4(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, (1u) >> 0u), 1u)), 1u, 1u)))))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)) * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)) * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)) * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)) * subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)) * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)) * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)) * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), (subgroup_size) | (subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), min((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))) * _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u))))))) + 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u)))) * subgroup_size) | (subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size)) + _GLF_struct_replacement_7.subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_base + subgroup_id * subgroup_size, max(_GLF_struct_replacement_13.workgroup_base + subgroup_id * subgroup_size, _GLF_struct_replacement_13.workgroup_base + subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, (_GLF_struct_replacement_7.subgroup_local_id) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, (_GLF_struct_replacement_7.subgroup_local_id) >> 0u), (_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, (_GLF_struct_replacement_7.subgroup_local_id) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, (_GLF_struct_replacement_7.subgroup_local_id) >> 0u), (_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, (_GLF_struct_replacement_7.subgroup_local_id) >> 0u)) * 1u))), _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, (_GLF_struct_replacement_7.subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_struct_replacement_7.subgroup_local_id, _GLF_struct_replacement_7.subgroup_local_id), min(clamp(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, (_GLF_struct_replacement_7.subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_struct_replacement_7.subgroup_local_id, _GLF_struct_replacement_7.subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, (_GLF_struct_replacement_7.subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_struct_replacement_7.subgroup_local_id, _GLF_struct_replacement_7.subgroup_local_id))))) >> _GLF_IDENTITY(0u, (0u) + (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), max((_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, (_GLF_struct_replacement_7.subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_struct_replacement_7.subgroup_local_id, _GLF_struct_replacement_7.subgroup_local_id))) >> _GLF_IDENTITY(0u, (0u) + (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, (_GLF_struct_replacement_7.subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_struct_replacement_7.subgroup_local_id, _GLF_struct_replacement_7.subgroup_local_id))) >> _GLF_IDENTITY(0u, (0u) + (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))))))) + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))))], uint(1), 4, 64, 4);
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) - 0u)))], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(13849, 0 ^ (13849))) : 0)), 0, 0), ivec3(ivec4(ivec3(0, 0, 0), 0)))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(0, 0, 0), ivec3(ivec4(ivec3(0, 0, 0), 0))))), (_GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(0, 0, 0), ivec3(ivec4(ivec3(0, 0, 0), 0))))), ((int(_GLF_IDENTITY(ivec3(0, 0, 0), ivec3(ivec4(ivec3(0, 0, 0), 0)))))) | (_GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(0, 0, 0), ivec3(ivec4(ivec3(0, 0, 0), 0))))), (false ? _GLF_FUZZED(14023) : (int(_GLF_IDENTITY(ivec3(0, 0, 0), ivec3(ivec4(ivec3(0, 0, 0), 0)))))))))) ^ 0) << 0)));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, max(_GLF_struct_replacement_7.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, (1u & 1u) * (_GLF_struct_replacement_7.subgroup_local_id + 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, max(_GLF_struct_replacement_7.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, (1u & 1u) * (_GLF_struct_replacement_7.subgroup_local_id + 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, max(_GLF_struct_replacement_7.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, (1u & 1u) * (_GLF_struct_replacement_7.subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, max(_GLF_struct_replacement_7.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, (1u & 1u) * (_GLF_struct_replacement_7.subgroup_local_id + 1))))) | (_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, max(_GLF_struct_replacement_7.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, (1u & 1u) * (_GLF_struct_replacement_7.subgroup_local_id + 1)))))), _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, max(_GLF_struct_replacement_7.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, (1u & 1u) * (_GLF_struct_replacement_7.subgroup_local_id + 1))))))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, max(_GLF_struct_replacement_7.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, (1u & 1u) * (_GLF_struct_replacement_7.subgroup_local_id + 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, max(_GLF_struct_replacement_7.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, (1u & 1u) * (_GLF_struct_replacement_7.subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, max(_GLF_struct_replacement_7.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, (1u & 1u) * (_GLF_struct_replacement_7.subgroup_local_id + 1))))) | (_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, max(_GLF_struct_replacement_7.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, (1u & 1u) * (_GLF_struct_replacement_7.subgroup_local_id + 1)))))), _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, max(_GLF_struct_replacement_7.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, (1u & 1u) * (_GLF_struct_replacement_7.subgroup_local_id + 1))))))) : _GLF_FUZZED(min(num_workgroup, virtual_gid)))))) < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.7) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = (0 ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(58459))), 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), false)))), true, false, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), false)))), true, false, false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), false)))), true, false, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), false)))), true, false, false))))))), false, true))))
      {
       subgroupAll(false);
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(sqrt(3.8)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(sqrt(3.8), clamp(sqrt(3.8), _GLF_IDENTITY(sqrt(3.8), (false ? _GLF_FUZZED(determinant(mat4(3307.1912, 9.5, 7.5, -881.780, -170.710, -8050.6008, -73.35, -1.5, 8989.4730, -1.4, -607.540, 895.256, -6.3, 2377.5975, -941.326, 24.96))) : sqrt(3.8))), sqrt(3.8)))))))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(59.98)), bool(_GLF_IDENTITY(false, false || (false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) * vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 1.0)), 1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2062.8712), (_GLF_FUZZED(-2062.8712)) - tan(0.0)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(237.891)), bvec2(true, false))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), injectionSwitch)).y)) || false, ! (! (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2062.8712), (_GLF_FUZZED(-2062.8712)) - tan(0.0)), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(493.620), _GLF_FUZZED(605.311)), bvec2(false, false)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(237.891)), bvec2(true, _GLF_IDENTITY(false, (false) || false)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec4(mat2(1.0) * (injectionSwitch), 1.0, 0.0))), vec2(mat4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), injectionSwitch)).y)) || false)))))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), true, true)), false, false))))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)), max(float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)), float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = (_GLF_IDENTITY(1 & 1, 0 | (1 & 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, false)))), (! (false)) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, false)))), (! (false)) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, false)))), (! (false)) || false)))))) && true))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0)))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.0)), bool(false))) < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true)), false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, false || (false))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, false || (false))), false), false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), true)))))) && true))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), true)))))) && true))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), true)))))) && true))), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), true)))))) && true))), false), false, false))), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(bvec2(bvec2((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false)), false)))))), true && (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, false || (false))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(false, false || (false))), false)), bvec2(bvec3(bvec2(bvec2((_GLF_IDENTITY(false, false || (false))), false)), true))), bvec2(bvec3(bvec2(bvec2((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))), false)), false))))))))))) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-747.455)), float(1.0), bool(true))), (true ? 1.0 : _GLF_FUZZED(8.2))), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 0.0)))), dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 0.0)))), dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 0.0)))), dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0 * (_GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 0.0)))), dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 0.0)))), dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 0.0)))), dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 0.0)))), dot(vec4(1.0, 0.0, abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.2))), 1.0, 1.0)))))))) | 0), ~ (~ ((int(_GLF_ONE(1.0, injectionSwitch.y)) | 0)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_IDENTITY(_GLF_FUZZED((_injected_loop_counter | -93813)), clamp(_GLF_IDENTITY(_GLF_FUZZED((_injected_loop_counter | -93813)), int(ivec3(_GLF_FUZZED((_injected_loop_counter | -93813)), 0, 0))), _GLF_FUZZED((_injected_loop_counter | -93813)), _GLF_FUZZED((_injected_loop_counter | -93813)))) : _injected_loop_counter)), clamp(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter | -93813, (_injected_loop_counter | -93813) + 0))) : _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED((_injected_loop_counter | -93813)) : _injected_loop_counter)), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, true))), false)))))) ? _GLF_FUZZED((_injected_loop_counter | -93813)) : _injected_loop_counter)), max(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED((_injected_loop_counter | -93813)) : _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), 0 ^ (~ (_injected_loop_counter))))) | -93813)) : _injected_loop_counter)))))) != _GLF_IDENTITY(0, (0) * int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4228.3599)), bool(false))))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(18.86)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))), bool(bool(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))))))))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     subgroupAll(true);
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), (true && (false)) && true)), bool(bvec4(! (_GLF_IDENTITY(true && (false), (true && (false)) && true)), true, true, false))))))))))))), (bool(bool(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))) && true))))
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.3) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.3) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.3) : injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.3) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.3) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.3) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.3) : injectionSwitch.y))))) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.3) : injectionSwitch.y))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4))))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))))), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))))), 1.0, 0.0)), vec2(mat4x2(vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, -4.4)))))), 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(8.9, -4.4)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(8.9, -4.4))))))) / sqrt(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, cos(0.0), 0.0, 0.0, 0.0, length(tan(vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))), 0.0), mix(vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | (1))], _GLF_FUZZED(-4.3)), vec3(_GLF_FUZZED(-3.7), _GLF_FUZZED(286.041), _GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[2], _GLF_IDENTITY(max((vec3(1.0, 0.0, 0.0))[2], (vec3(1.0, 0.0, 0.0))[2]), (true ? max((vec3(1.0, 0.0, 0.0))[2], _GLF_IDENTITY((vec3(1.0, 0.0, 0.0)), max((vec3(1.0, 0.0, 0.0)), (vec3(1.0, 0.0, 0.0))))[2]) : _GLF_FUZZED(fma(-5454.2534, -427.205, -218.810)))))), bvec3(false, false, true))), vec3(0.0, 0.0, 0.0) + (vec3(1.0, 0.0, 0.0))))))))), vec2(mat4x2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(8.9, -4.4)), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(8.9, -4.4))), ((false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(8.9, -4.4)))) / vec2(1.0, 1.0)))))) / sqrt(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(1.0, 0.0, 0.0))))))))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0))))))).x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
