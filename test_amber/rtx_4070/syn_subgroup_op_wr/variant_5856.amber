#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(564.812), _GLF_FUZZED(-137.331)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((! (false)))))))), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-965.511), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-96.81)), bvec2(true, false)))) - vec2(0.0, 0.0)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false)), true, false, true)))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec2(true, false))) && ((injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)), _GLF_IDENTITY(false, true && (false)), true, false)))) || _GLF_IDENTITY(false, (false) && true))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y)), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false)), true, false, true)))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec2(true, false))) && ((injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, true, false)))) && true)), _GLF_IDENTITY(false, true && (false)), true, false)))) || _GLF_IDENTITY(false, (false) && true))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), 1.0 * ((injectionSwitch.y))), (injectionSwitch.y)))) / 1.0) - _GLF_ZERO(0.0, injectionSwitch.x)))) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))) / 1.0), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec3(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false, true)))) || false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))), 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.9)), bool(false))), 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.9)), bool(false))), 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)))) * mat2(1.0))), mix(vec2((vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))), 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.9)), bool(false))), 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.9)), bool(false))), 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.9)), bool(false))), 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.9)), bool(false))), 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))))) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-163.477, 4594.2858)))) * mat2(1.0))))[0], (vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))), 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.9)), bool(false))), 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.9)), bool(false))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(length(vec3(-5.2, -40.07, -1995.3777)))))), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)))) * mat2(1.0))))[1]), vec2(_GLF_FUZZED(765.053), _GLF_FUZZED(-84.96)), bvec2(false, false))), vec2(vec3(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.9)), bool(false))), 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.9)), bool(false))), 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))) * mat2(1.0)))), log(1.0))))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((- vec2(731.472, -4.2))))), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(true && (! (_GLF_DEAD(false))), bool(bvec2(true && (! (_GLF_DEAD(false))), true)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true) && (! (_GLF_DEAD(false)))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), bool(bool(true && (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3((_GLF_DEAD(false)), true, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec4(bvec3((_GLF_DEAD(false)), true, true), false))))))))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.xy = GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2012.6349))), 1.0) * (injectionSwitch)).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), 1.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0) * (injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))) / 1.0) + 0.0), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y, 1.0)), (false ? _GLF_FUZZED(vec2(764.882, 4048.7082)) : (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))) - vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, 1.0))))), false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))))), false, false, true))), false || (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))))), false, false, true))))))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2012.6349))), 1.0) * (injectionSwitch)).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), 1.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0) * (injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))) / 1.0) + 0.0), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y, 1.0)), (false ? _GLF_FUZZED(vec2(764.882, 4048.7082)) : (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))) - vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, 1.0))))), false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))))), false, false, true))), false || (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))))), false, false, true))))))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2012.6349))), 1.0) * (injectionSwitch)).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), 1.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0) * (injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))) / 1.0) + 0.0), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y, 1.0)), (false ? _GLF_FUZZED(vec2(764.882, 4048.7082)) : (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))) - vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, 1.0))))), false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))))), false, false, true))), false || (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0), vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0))))), false, false, true))))))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))) && true), false, true, false)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)) || false)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (false) || false))))), true, true, false))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))))), true, true, false))), false, false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (false) || false))))), true, true, false))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))))), true, true, false))), false, false, false)))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (false) || false))))), true, true, false))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))))), true, true, false))), false, false, false)))))), bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (false) || false))))), true, true, false))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))))), true, true, false))), false, false, false)))))), true, false, false))), false, false, true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false)))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), true, false, false))))))) && true, ((_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bool((false))))) && true) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 1.0)))).y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false, false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec4(_GLF_DEAD(false), false, false, false))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(determinant(outerProduct(vec3(-44.74, 9.7, -233.440), vec3(-6068.3058, _GLF_IDENTITY(-4.3, (-4.3) * 1.0), -7.6)))) : injectionSwitch.x)) > injectionSwitch.y)) || false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))), ! (! (bool(bvec3(false, false, true))))), (bool(bvec3(false, false, true))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.4))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(4127.3265))))))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(4127.3265))))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(4127.3265))))))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(4127.3265))))))).x > injectionSwitch.y, false, true, false)))))), true, false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, false || (false)))) && true)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))))))), ((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true))))))))) || false), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))))))), ((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true))))))))) && true), ((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), bool(bvec4(((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))))))))) || false), false, true)), true, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x = _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(173875u)))) ^ 0u, max((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(173875u)))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(173875u)))), clamp((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(173875u)))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(173875u)))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(173875u)))))) ^ 0u))), ~ (~ (GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x = _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) : _GLF_FUZZED(subgroup_id)))), max(clamp(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(subgroup_id)))), clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), max(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id)))))), subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(subgroup_id), ~ (~ (true ? _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(subgroup_id)))))))))) : _GLF_FUZZED(173875u)))) ^ 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.w = num_workgroup, (GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.w = num_workgroup) | 0u), (true ? _GLF_IDENTITY(GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.w = num_workgroup, _GLF_IDENTITY((GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.w = num_workgroup), (true ? (GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.w = num_workgroup) : _GLF_FUZZED(num_workgroup))) | 0u) : _GLF_FUZZED(subgroup_local_id)));
 GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.xy.y = GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) >> 0u), 0u))), gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), clamp(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)))))))).x));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.z = workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))) && _GLF_IDENTITY(true, ! (! (true)))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), vec2(mat3x2(vec2(injectionSwitch.y, 0.0), 0.0, 1.0, 1.0, 1.0)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0), (mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.z;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), false))), true, false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, ! (_GLF_IDENTITY(! ((false) && true), bool(bvec2(! ((false) && true), false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-3.1)), bool(false))) / cos(0.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, 1.0)), mix(float(_GLF_FUZZED(93.85)), float(float(vec3(injectionSwitch.x, 1.0, 1.0))), bool(true)))))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-3.1)), bool(false))) / cos(0.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, 1.0)), mix(float(_GLF_FUZZED(93.85)), float(float(vec3(injectionSwitch.x, 1.0, 1.0))), bool(true)))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-3.1)), bool(false))) / cos(0.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, 1.0)), mix(float(_GLF_FUZZED(93.85)), float(float(vec3(injectionSwitch.x, 1.0, 1.0))), bool(true)))))) > injectionSwitch.y)) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))
  barrier();
 GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.y = _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2939.1081))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x + 1, (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x + 1, max(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x + 1, min(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x + 1, uint(uvec2(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x + 1, 0u))), GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x + 1)))), GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x + 1))) | (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, max(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id) : GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id)))).x + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4209.1634)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 815.412)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), bvec2(true, false))))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.z = _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec2(next_virtual_gid, ((1u | 1u) ^ 0u))), _GLF_IDENTITY((uint(uvec2(next_virtual_gid, ((1u | 1u) ^ 0u)))), clamp((uint(uvec2(next_virtual_gid, ((1u | 1u) ^ 0u)))), _GLF_IDENTITY((uint(uvec2(next_virtual_gid, ((1u | 1u) ^ 0u)))), ~ (~ ((uint(uvec2(next_virtual_gid, ((1u | 1u) ^ 0u))))))), _GLF_IDENTITY((uint(uvec2(next_virtual_gid, ((1u | 1u) ^ 0u)))), ((uint(uvec2(next_virtual_gid, ((1u | 1u) ^ 0u))))) >> 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (next_virtual_gid))), clamp(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), ~ (~ ((next_virtual_gid)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), ~ (~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).y)) ? next_virtual_gid : _GLF_FUZZED(num_workgroup)))))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : next_virtual_gid)))))), ~ (~ ((_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), 0u ^ (~ (next_virtual_gid)))))))))), _GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))))) | (next_virtual_gid))) << 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8756.3214)), bool(_GLF_IDENTITY(false, ! (! (false)))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), false, false, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.19)), float(injectionSwitch.y), bool(true)))) * determinant(mat3(1.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))))
  barrier();
 GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.xy.x = GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup.z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.8) : injectionSwitch.y)), injectionSwitch.y))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.8) : injectionSwitch.y)), injectionSwitch.y))), false, true, false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, abs(determinant(mat2(1.0, 1.0, 0.0, 1.0))), 1.0))).x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false)), false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_IDENTITY(false, (false) || false)), false))))), true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 0.0)))))))), false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false, true, false))) || false)))), bvec3(bvec4(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_IDENTITY(false, (false) || false)), false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.3)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, false))))))))))))) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec3(bvec3(bvec3(true, false, true))))), true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup, (_GLF_IDENTITY(GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup, (true ? GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup : _GLF_IDENTITY(_GLF_FUZZED(uvec4(55699u, 17618u, 85739u, 29898u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec4(154227u, 83348u, 6792u, 86249u)) : _GLF_FUZZED(uvec4(55699u, 17618u, 85739u, 29898u))))))) >> uvec4(0u, 0u, 0u, 0u))), (~ (_GLF_IDENTITY(GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup, _GLF_IDENTITY((GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(0u, 0u, 0u))), (_GLF_IDENTITY((GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) << 0u))) ^ ((GLF_merged3_0_2_54_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupnext_virtual_gidnum_workgroup))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, 0u + (0u)))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u)))))) ^ uvec4(0u, 0u, 0u, 0u)))).xy.x], uint(_GLF_IDENTITY(1, (1) * 1)), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(64))), (64) | (64))) >> 0)) ^ 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id[0], min(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id[0], GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id[0])), (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id[0], min(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id[_GLF_IDENTITY(0, (0) + int(_GLF_ZERO(0.0, injectionSwitch.x)))], GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id[0]))) << (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))))), GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, (true ? GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id : _GLF_FUZZED((uvec3(21675u, 186132u, _GLF_IDENTITY(138468u, _GLF_IDENTITY(uint(uvec2(138468u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(138468u, 1u)), (uint(uvec2(138468u, 1u))) * 1u), ~ (~ (uint(uvec2(138468u, 1u)))))) >> 0u))) >> subgroup_local_id))))[2])).y], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))), mix(_GLF_IDENTITY(vec3(_GLF_FUZZED(5.7), (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[1], (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[2]), clamp(_GLF_IDENTITY(vec3(_GLF_FUZZED(5.7), (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[1], (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[2]), mix(vec3(_GLF_FUZZED(9.2), (vec3(_GLF_FUZZED(5.7), (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[1], (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[2]))[1], _GLF_FUZZED(3872.0445)), vec3((vec3(_GLF_FUZZED(5.7), (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[1], (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[2]))[0], _GLF_FUZZED(97.73), (vec3(_GLF_FUZZED(5.7), (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[1], (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[2]))[2]), bvec3(true, false, true))), vec3(_GLF_FUZZED(5.7), (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[1], (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[2]), vec3(_GLF_FUZZED(5.7), (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[1], (vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[2]))), vec3((vec3(injectionSwitch, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))))[0], _GLF_FUZZED(6.9), _GLF_FUZZED(float(false))), bvec3(true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.x + _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) * 1))), max(1, 1)), 1)), ~ (~ (1))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-971.016) : 1.0))) + tan(0.0)))))))).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-871.069) : injectionSwitch.y)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))), false))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec3(bool(bvec4(false, true, true, false)), true, true))))), (! (false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true))))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(false, (false) && true))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.1)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))) && (true), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.1)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))) && (true), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.1)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))) && (true), true, true)))) || false))))))))))))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((21.95 / 5.7) - 5.2)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(23.70)), bvec2(true, false))).y, (injectionSwitch.y) * 1.0))), true, true))))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) && true)))))), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) && true)))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) * (injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) * (injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) * (injectionSwitch.y)))))))))) && true)))))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0)), (true ? float(mat3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(-8.8)))))))) || _GLF_IDENTITY(false, true && (false)))) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) && true)))))), false, false)), true))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) && true)))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) * (injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) * (injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) * (injectionSwitch.y)))))))))) && true)))))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0)), (true ? float(mat3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(-8.8)))))))) || _GLF_IDENTITY(false, true && (false)))) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) && true)))))), false, false)), true))))), false)))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, ~ (~ (GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id))) : _GLF_FUZZED(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id))), max(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, (true ? _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, (false ? _GLF_FUZZED(uvec3(171236u, 23754u, 72871u)) : GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id)) : _GLF_FUZZED(uvec3(31240u, 33011u, 50541u))))) | (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, (GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id) | (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, max(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id, (GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id) >> uvec3(0u, 0u, 0u)))))))))).y], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), true, false), true))))), true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_DEAD(false)) || false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, round(length(normalize(1.0))))), 1.0, 1.0, cos(0.0)))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false) && true), bool(bvec2(_GLF_IDENTITY(! ((false) && true), bool(bool(! ((false) && true)))), true)))), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! ((false) && true), bool(bvec2(_GLF_IDENTITY(! ((false) && true), bool(bool(! ((false) && true)))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((! (_GLF_IDENTITY(! _GLF_IDENTITY(((false) && true), bool(bvec4(((false) && true), true, true, true))), bool(bvec2(_GLF_IDENTITY(! ((false) && true), bool(bool(! ((false) && true)))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! ((false) && true), bool(bvec2(_GLF_IDENTITY(! ((false) && true), bool(bool(! ((false) && true)))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false) && true), bool(bvec2(_GLF_IDENTITY(! ((false) && true), bool(bool(! ((false) && true)))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! ((false) && true), bool(bvec2(_GLF_IDENTITY(! ((false) && true), bool(_GLF_IDENTITY(bool(! ((false) && true)), (_GLF_IDENTITY(bool(! ((false) && true)), bool(bvec3(bool(! ((false) && true)), true, true)))) || false))), true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((! (_GLF_IDENTITY(! _GLF_IDENTITY(((false) && true), bool(bvec4(((false) && true), true, true, true))), bool(bvec2(_GLF_IDENTITY(! ((false) && true), bool(bool(! ((false) && true)))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-604.731)), bool(false))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.y, _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.y), 0u ^ ((GLF_merged3_0_1_17_1_1_11_2_1_12subgroup_local_idvirtual_gidworkgroup_id.y))) << 0u)], read, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) * 1), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))) | (4)), 4, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) / 1))))), 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.2), _GLF_FUZZED(_GLF_IDENTITY(2.7, mix(float(2.7), float(_GLF_FUZZED(vec3(-283.994, -5131.3229, 181.459).s)), bool(false))))), bvec2(false, false))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((-8.8 / -9.1)))), 0.0) + (injectionSwitch)))).y, true, false, false)), true && _GLF_IDENTITY((bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), _GLF_IDENTITY(max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((_GLF_IDENTITY(171074u, 0u ^ (171074u)) % 38455u)))), float(-53.85), bool(true))))), (false ? _GLF_FUZZED(-65.41) : _GLF_IDENTITY(max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true))))), (max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float((171074u % 38455u)))), float(mat2x3(float(_GLF_FUZZED(float((171074u % 38455u)))), 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(-53.85), bool(true)))))) - 0.0))))), bool(true)))), (float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_IDENTITY(_GLF_FUZZED(float((171074u % 38455u))), clamp(_GLF_FUZZED(float((171074u % 38455u))), _GLF_FUZZED(float((171074u % 38455u))), _GLF_IDENTITY(_GLF_FUZZED(float((171074u % 38455u))), max(_GLF_FUZZED(float((171074u % 38455u))), _GLF_FUZZED(float((171074u % 38455u)))))))), float(-53.85), bool(true))))))), bool(true))))) / 1.0), float(injectionSwitch.y), bool(true))), true, false, false))), false || (_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), _GLF_IDENTITY(max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((_GLF_IDENTITY(171074u, 0u ^ (171074u)) % 38455u)))), float(-53.85), bool(true))))), (false ? _GLF_FUZZED(-65.41) : _GLF_IDENTITY(max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true))))), (max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float((171074u % 38455u)))), float(mat2x3(float(_GLF_FUZZED(float((171074u % 38455u)))), 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(-53.85), bool(true)))))) - 0.0))))), bool(true)))), (float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_IDENTITY(_GLF_FUZZED(float((171074u % 38455u))), clamp(_GLF_FUZZED(float((171074u % 38455u))), _GLF_FUZZED(float((171074u % 38455u))), _GLF_IDENTITY(_GLF_FUZZED(float((171074u % 38455u))), max(_GLF_FUZZED(float((171074u % 38455u))), _GLF_FUZZED(float((171074u % 38455u)))))))), float(-53.85), bool(true))))))), bool(true))))) / 1.0), float(injectionSwitch.y), bool(true))), true, false, false))), true && ((bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), _GLF_IDENTITY(max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((_GLF_IDENTITY(171074u, 0u ^ (171074u)) % 38455u)))), float(-53.85), bool(true))))), (false ? _GLF_FUZZED(-65.41) : _GLF_IDENTITY(max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true))))), (max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float((171074u % 38455u)))), float(mat2x3(float(_GLF_FUZZED(float((171074u % 38455u)))), 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(-53.85), bool(true)))))) - 0.0))))), bool(true)))), (float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_IDENTITY(_GLF_FUZZED(float((171074u % 38455u))), clamp(_GLF_FUZZED(float((171074u % 38455u))), _GLF_FUZZED(float((171074u % 38455u))), _GLF_IDENTITY(_GLF_FUZZED(float((171074u % 38455u))), max(_GLF_FUZZED(float((171074u % 38455u))), _GLF_FUZZED(float((171074u % 38455u)))))))), float(-53.85), bool(true))))))), bool(true))))) / 1.0), float(injectionSwitch.y), bool(true))), true, false, false)))))))))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.2), _GLF_FUZZED(2.7)), bvec2(false, false))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, true, _GLF_IDENTITY(false, ! (! (false))), false)), true && (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), _GLF_IDENTITY(max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true))))), (false ? _GLF_FUZZED(-65.41) : _GLF_IDENTITY(max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true))))), (max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true)))))) - 0.0))))), bool(true)))), (float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true))))))), bool(true))))) / 1.0), float(injectionSwitch.y), bool(true))), (false ? _GLF_FUZZED(-9969.0104) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), _GLF_IDENTITY(max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true))))), (false ? _GLF_FUZZED(-65.41) : _GLF_IDENTITY(max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true))))), (max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true)))))) - 0.0))))), bool(true)))), (float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true))))))), bool(true))))) / 1.0), float(injectionSwitch.y), bool(true))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), _GLF_IDENTITY(max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true))))), (false ? _GLF_FUZZED(-65.41) : _GLF_IDENTITY(max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true))))), (max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true)))))) - 0.0))))), bool(true)))), (float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(_GLF_FUZZED(-53.85), max(_GLF_FUZZED(-53.85), _GLF_FUZZED(_GLF_IDENTITY(-53.85, mix(float(_GLF_FUZZED(float((171074u % 38455u)))), float(-53.85), bool(true))))))), bool(true))))) / 1.0), float(injectionSwitch.y), bool(true))))))), true, false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)))))) || false)), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((mat4x2(-52.91, -7924.2457, -237.741, -6.1, -9.4, 2.0, 13.95, 4646.7714) * vec4(-1.2, 1454.0878, 8971.9827, -5.9))))).x > injectionSwitch.y)))) || false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / sqrt(abs(1.0))))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-22.95))))).x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(239.374))) > injectionSwitch.y)) || (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-22.95))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-22.95))))).x > injectionSwitch.y)) && true)))) && true, false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-22.95))), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-22.95))) : _GLF_IDENTITY(_GLF_FUZZED((-4.5)), min(_GLF_FUZZED((-4.5)), _GLF_FUZZED((-4.5)))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), (true ? 1.0 : _GLF_FUZZED(-22.95))))).x > injectionSwitch.y)) && true)))) && true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))))) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
