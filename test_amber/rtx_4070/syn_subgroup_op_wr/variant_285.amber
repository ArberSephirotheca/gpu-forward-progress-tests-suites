#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 0u), (uvec2(gl_NumWorkGroups.x, 0u)) - uvec2(0u, 0u)), ~ (~ (uvec2(gl_NumWorkGroups.x, 0u)))))), 1u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 0u), _GLF_IDENTITY(uvec2(uvec4(uvec2(gl_NumWorkGroups.x, 0u), 0u, 1u)), clamp(uvec2(uvec4(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u), 0u), 0u, 1u)), uvec2(uvec4(uvec2(gl_NumWorkGroups.x, 0u), 0u, 1u)), uvec2(uvec4(uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (0u)))))))), 0u, 1u))))))), 1u, 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u | (gl_NumWorkGroups.x)), uint(uvec2(gl_NumWorkGroups.x, 0u))), 1u, 1u)), 0u ^ _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 0u), (_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 0u), uvec2(uvec3(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 0u), (uvec2(gl_NumWorkGroups.x, 0u)) >> uvec2(0u, 0u)), 0u)))) / uvec2(1u, 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), max(uvec2(1u, 1u), uvec2(1u, 1u)))), min(uint(_GLF_IDENTITY(uvec2(1u, 1u), max(uvec2(1u, 1u), uvec2(1u, 1u)))), uint(_GLF_IDENTITY(uvec2(1u, 1u), max(uvec2(1u, 1u), uvec2(1u, 1u))))))), 1u))), _GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), _GLF_IDENTITY(uvec2(uvec3(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))) + (uvec2(uvec3(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)))))), max(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (0u) - 0u))), uint(uvec2(gl_NumWorkGroups.x, 0u))))), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), _GLF_IDENTITY(uvec2(uvec3(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))) + (uvec2(uvec3(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(32081u))), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)))))), max(_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (0u) - 0u))), (uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u), uint(uvec2(gl_NumWorkGroups.x, 0u))))), 1u, 1u), 1u), (uvec4(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(uvec3(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))) + (uvec2(uvec3(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)))), (_GLF_IDENTITY(uvec2(uvec3(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))) + (uvec2(uvec3(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u))))) ^ uvec2(0u, 0u)))), max(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (0u) - 0u))), uint(uvec2(gl_NumWorkGroups.x, 0u))))), 1u, 1u), 1u)) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), max((uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 0u)), _GLF_IDENTITY(max(uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u))), (max(uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u)))) | (max(uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u))))))), 1u, 1u))), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 0u)), (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 0u)), 0u ^ (uint(uvec2(gl_NumWorkGroups.x, 0u)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), (uint(uvec4(_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u ^ (uint(uvec2(gl_NumWorkGroups.x, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u)), 0u ^ (uint(uvec2(gl_NumWorkGroups.x, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)))))) / 1u), max(uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u))))), 1u, 1u))), ((_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(22350u, 167837u, 142128u)))).x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u)), clamp(_GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u)), ~ (~ (uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u))))), _GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u)), min(uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u)), uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u)))), uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u)))))), max(uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size))))), 0u)), uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) | uvec3(0u, 0u, 0u))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) | uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) | uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) | uvec3(0u, 0u, 0u))))), uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) | uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) | uvec3(0u, 0u, 0u)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (true ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED((-- subgroup_id)))))), 0u))))), 1u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 0u), uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u)))), max(uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size))), 0u))))), 1u, 1u))))))) << 0u)))) * 1u, 0u + ((_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), _GLF_IDENTITY(uvec2(uvec3(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), (false ? _GLF_FUZZED((subgroup_id - GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size)) : uvec2(8u))), uvec2(8u))) + (uvec2(uvec3(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)))))), max(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (0u) - 0u))), uint(uvec2(gl_NumWorkGroups.x, 0u))))), 1u, 1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), _GLF_IDENTITY(uvec2(uvec3(uvec2(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))) + (uvec2(uvec3(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_IDENTITY(_GLF_FUZZED(32081u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(32081u))))), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)))))), max(_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (0u) - 0u))), (uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u), uint(uvec2(gl_NumWorkGroups.x, 0u))))), 1u, 1u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), _GLF_IDENTITY(uvec2(uvec3(uvec2(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))) + (uvec2(uvec3(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_IDENTITY(_GLF_FUZZED(32081u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(32081u))))), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)))))), max(_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (0u) - 0u))), (uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u), uint(uvec2(gl_NumWorkGroups.x, 0u))))), 1u, 1u), 1u))), (uvec4(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(uvec3(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))) + (uvec2(uvec3(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53297u) : 0u))), 0u)))), (_GLF_IDENTITY(uvec2(uvec3(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(53297u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(53297u), clamp(_GLF_FUZZED(53297u), _GLF_FUZZED(53297u), _GLF_FUZZED(53297u)))), (uint(_GLF_IDENTITY(_GLF_FUZZED(53297u), clamp(_GLF_FUZZED(53297u), _GLF_FUZZED(53297u), _GLF_FUZZED(53297u))))) << 0u))) : 0u))), 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))) + (uvec2(uvec3(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(53297u) : 0u), (true ? (false ? _GLF_FUZZED(53297u) : 0u) : _GLF_FUZZED(subgroup_local_id))))), 0u))))) ^ uvec2(0u, 0u)))), max(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (0u) - 0u))), uint(uvec2(gl_NumWorkGroups.x, 0u))))), 1u, 1u), 1u)) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), max((uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 0u)), _GLF_IDENTITY(max(uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u))), (max(uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u)))) | (max(uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u))))))), 1u, 1u))), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 0u)), (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 0u)), 0u ^ (uint(uvec2(gl_NumWorkGroups.x, 0u)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), (uint(uvec4(_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), uint(uvec3((0u) | (0u), 0u, 0u)))))), 0u ^ (uint(uvec2(gl_NumWorkGroups.x, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u)), 0u ^ (uint(uvec2(gl_NumWorkGroups.x, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(157248u))), 0u, 0u)))))))) / 1u), _GLF_IDENTITY(max(uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u))), 0u ^ (_GLF_IDENTITY(max(uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u))), (max(uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u)))) >> 0u))))), 1u, 1u))), ((_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(22350u, 167837u, 142128u)))).x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u) | (uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(22904u, 141628u, 178790u)))).x, 0u)), clamp(_GLF_IDENTITY(uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 0u), (false ? _GLF_FUZZED(uvec2(41683u, 117904u)) : uvec2(gl_NumWorkGroups.x, 0u)))), ~ _GLF_IDENTITY((~ (uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u)))), (_GLF_IDENTITY((~ (uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u)))), (uvec2(0u, 0u) & uvec2(42526u, 10855u)) | ((~ (uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u))))))) | ((~ (uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u))))))), _GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u)), min(uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u)), uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u)))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 0u), uvec2(uvec4(uvec2(gl_NumWorkGroups.x, 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size))))), 0u)), uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) ^ (uint(-9.4) & 0u))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) | uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(1u, (1u) / 1u), 1u)), 1u), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) | uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) ^ (uvec3(7028u, 174638u, 185622u) & uvec3(0u, 0u, 0u))), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) | uvec3(0u, 0u, 0u))))), uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) | uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)).x, 1u, 1u), (false ? _GLF_FUZZED(uvec3(159811u, 156078u, 55348u)) : uvec3(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)).x, 1u, 1u)))) | uvec3(0u, 0u, 0u)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (true ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED((-- subgroup_id)))))), 0u))))), 1u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 0u), uvec2(0u, 0u) | (uvec2(gl_NumWorkGroups.x, 0u)))), max(uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))), (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size))), 0u))))), 1u, 1u))))))) << 0u)))) * 1u)))), uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x))) << 0u), 0u))), 1u, 1u)))))) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.x = num_workgroup, (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.x = num_workgroup) - 0u);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((float(false))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(23.79)), bvec2(true, false))).y, mix(float(_GLF_FUZZED(2529.3648)), float(injectionSwitch.y), bool(true)))), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false)))) && true))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false)))) && true)))))) && true, (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false)))) && true))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false)))) && true)))))) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false)))) && true))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false)))) && true)))))) && true, false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false)))) && true))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false)))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))))))))) && true))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(885.193), _GLF_FUZZED(5.4)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y, false)))) && true))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false)))) && true)))))) && true, (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false)))) && true))), false || (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false)))) && true))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false)))) && true))))))))) && true) || false)) && true)), _GLF_IDENTITY(true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(6.8, 801.297)) : mat2(1.0) * (injectionSwitch)))).y)), (_GLF_IDENTITY(true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(6.8, 801.297)) : mat2(1.0) * (injectionSwitch)))).y)), (true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(6.8, 801.297)) : mat2(1.0) * (injectionSwitch)))).y))) || false)) && true))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), true, true))))))) && true, ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), true, true))))))) && true) || false))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), true, true))))))) && true, ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), true, true))))))) && true) || false))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), true, true))))))) && true, ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), true, true))))))) && true) || false))), true)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(1.6, 7.0)) : injectionSwitch)).y, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), true, true))))))) && true, ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED((mat4x2(mat4x3(-1.6, 57.34, -917.427, -6.1, 99.08, -1.5, -1.9, -691.456, 5.6, 3.1, -8656.1764, -9.5)) * vec4(6994.1757, -6205.7377, -3442.4420, -55.81))))).y, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true))))))) && true) || false))), true, false, false)), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), true, true))))))) && true, ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)), true, true))))))) && true) || false))), true, false, false))) || false))) && true), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true))), true && (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size, uvec2(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size[0], GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size[1])).y * workgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id), clamp(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id), ~ (~ _GLF_IDENTITY((~ (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id)), clamp((~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size, (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size) << uvec2(0u, 0u)).y * workgroup_id)), _GLF_IDENTITY((~ (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id)), ((~ (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id))) | 0u), (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size, uvec2(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size[0], GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size[1])).y * workgroup_id)))))), ~ (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id), ~ (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id))), uint(uvec2(_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id), ((GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id)) >> 0u), clamp(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id), ~ (~ (~ _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id), (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id), (false ? _GLF_FUZZED(subgroup_local_id) : (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id)))) ^ 0u)))), ~ (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size, (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size) >> uvec2(0u, 0u)).y * workgroup_id, min(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id, GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id))))), 1u)))));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8492.6186, -4926.2487)) : injectionSwitch)).x)) + sin(0.0))))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec2(2u, 0u)))), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) << 0u)) | 0u))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) << _GLF_IDENTITY(uint(2u), uint(2u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1), clamp((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) | (subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u) | (subgroup_local_id)) + 1))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))))) % subgroup_size)) << 0u);
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0, (false ? _GLF_FUZZED(795.605) : (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) - 0.0))) / 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 0.0))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 0.0))), (false ? _GLF_FUZZED(343.510) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 0.0))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))))) / _GLF_IDENTITY(exp(0.0), float(vec2(exp(0.0), length(tan(0.0)))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 0.0)))) / exp(0.0)) > injectionSwitch.y))) && true), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0)))))).x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(log(9.3)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0, 1.0, 0.0)), clamp(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0), 1.0)), 0.0)), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(18.95)), vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, injectionSwitch.x), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(18.95)), vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, injectionSwitch.x), float(float(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(18.95)), vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, injectionSwitch.x)))), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat3x4(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(18.95)), vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, injectionSwitch.x), float(float(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(18.95)), vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, injectionSwitch.x)))), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)) * mat3(1.0))))), 1.0, 1.0, 0.0, 1.0, 0.0)))))) / exp(0.0)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-441.752))), injectionSwitch.y, injectionSwitch.y)))))))))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, _GLF_IDENTITY(false, true && (false)), false)))))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = (0 ^ (1 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   for(int _injected_loop_counter = (1 & ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((int(6)), (0 | 0) ^ (_GLF_IDENTITY((int(6)), min((int(6)), (int(6))))))), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 16.48)))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, _GLF_IDENTITY(8.9, min(_GLF_IDENTITY(8.9, float(_GLF_IDENTITY(vec2(8.9, 1.0), mat2(1.0) * (vec2(8.9, 1.0))))), 8.9)))))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)))), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (_GLF_IDENTITY(true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - 0.0), 16.48)), mix(vec2(_GLF_FUZZED(97.75), _GLF_FUZZED((false ? 2.9 : -134.931))), vec2((true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - 0.0), 16.48)))[0], (true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - 0.0), 16.48)))[1]), bvec2(_GLF_IDENTITY(true, true && (true)), true))))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)))), clamp(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - 0.0), 16.48))))), vec2(1.0, 1.0) * (_GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - 0.0), 16.48))))), min((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - 0.0), 16.48))))), (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - 0.0), 16.48)))))))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9))), max(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9))), max((true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9))))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))))).x, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1916.9366, -26.75)) : injectionSwitch)))) : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - 0.0), 16.48)))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (_GLF_FUZZED(vec2(-1.4, 8.9)))))).x)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - 0.0), 16.48)))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (_GLF_FUZZED(vec2(-1.4, 8.9)))))).x)))), max(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - 0.0), 16.48)))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (_GLF_FUZZED(vec2(-1.4, 8.9)))))).x)))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - 0.0), 16.48)))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (_GLF_FUZZED(vec2(-1.4, 8.9)))))).x))))))) ^ 0), int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(93.86, (93.86) - 0.0), (93.86) - 0.0), _GLF_IDENTITY(16.48, (false ? _GLF_FUZZED(609.812) : _GLF_IDENTITY(16.48, mix(float(_GLF_FUZZED(9429.0888)), float(16.48), bool(true)))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(93.86, (93.86) - 0.0), (93.86) - 0.0), _GLF_IDENTITY(16.48, (false ? _GLF_FUZZED(609.812) : _GLF_IDENTITY(16.48, mix(float(_GLF_FUZZED(9429.0888)), float(16.48), bool(true)))))), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(_GLF_IDENTITY(93.86, (93.86) - 0.0), (93.86) - 0.0), _GLF_IDENTITY(16.48, (false ? _GLF_FUZZED(609.812) : _GLF_IDENTITY(16.48, mix(float(_GLF_FUZZED(9429.0888)), float(16.48), bool(true)))))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(93.86, (93.86) - 0.0), (93.86) - 0.0), _GLF_IDENTITY(16.48, (false ? _GLF_FUZZED(609.812) : _GLF_IDENTITY(16.48, mix(float(_GLF_FUZZED(9429.0888)), float(16.48), bool(true))))))))))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)))))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(_GLF_IDENTITY(93.86, (93.86) * 1.0), (93.86) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), 16.48)))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - 0.0), 16.48)))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)))), ~ (~ (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - 0.0), 16.48)))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-1.4, 8.9)), (true ? _GLF_FUZZED(vec2(-1.4, 8.9)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(93.86, (93.86) - 0.0), 16.48))))))) * mat2(1.0)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 8.9)))).x)))))))))); _injected_loop_counter --)
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             return;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       else
                        {
                        }
                      }
                     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(false))));
                     if(_GLF_DEAD(false))
                      return;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
                }
              }
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, cos(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))))
                      {
                       do
                        {
                         return;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           return;
                          }
                        }
                       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), ! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), ! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), ! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y) || false)))))), ! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true), false))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))))))))), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(0.0, 1.0, 1.0)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)), max((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0))) / 1.0))) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(0.0, 1.0, 1.0)))) > injectionSwitch.y)))))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))))))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(0.0, 1.0, 1.0)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)) + _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(mat3x4(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(0.0, 1.0, 1.0)))) > injectionSwitch.y)))))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) + vec2(0.0, 0.0)))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))))))), true), true)), true)))))));
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))))))), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)))) || false) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))))) || false)), true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (true) && true)))))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
              break;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) ^ 0)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) | (1))), 4, 64, 4);
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true)))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), (mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)))))))
                break;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                }
               if(_GLF_DEAD(false))
                break;
              }
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              continue;
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            break;
          }
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
  }
 else
  {
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter < 1)), (_injected_loop_counter < 1) && true)); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) | 0) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bool(_GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(bool(bvec3(false, true, true)), true, false))))))) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))), _GLF_IDENTITY((subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((subgroup_size))) | _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(subgroup_id)))))
            {
             if(_GLF_DEAD(false))
              continue;
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) << 0));
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))))
                {
                 subgroupAll(false);
                }
               else
                {
                }
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (float(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0))) - 0.0)), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(84.13)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-807.937)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))), _GLF_IDENTITY(bool(true), (bool(true)) && true))), 1.0), (_GLF_IDENTITY(true ? clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(84.13)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(6354.1828) : max(1.0, 1.0))), max(1.0, 1.0))))), bool(true))), 1.0) : _GLF_FUZZED(53.44), (true ? clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(84.13)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(6354.1828) : max(1.0, 1.0))), max(1.0, 1.0))))), bool(true))), 1.0) : _GLF_FUZZED(53.44)) / 1.0)))), 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (float(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0))) - 0.0)), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(84.13)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-807.937)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))), _GLF_IDENTITY(bool(true), (bool(true)) && true))), 1.0), (_GLF_IDENTITY(true ? clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(84.13)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(6354.1828) : max(1.0, 1.0))), max(1.0, 1.0))))), bool(true))), 1.0) : _GLF_FUZZED(53.44), (true ? clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(84.13)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(6354.1828) : max(1.0, 1.0))), max(1.0, 1.0))))), bool(true))), 1.0) : _GLF_FUZZED(53.44)) / 1.0)))), 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), injectionSwitch)))).y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(753.406, 2689.9550)) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (float(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0))) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(84.13)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-807.937)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))), _GLF_IDENTITY(bool(true), (bool(true)) && true))), 1.0), (_GLF_IDENTITY(true ? clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(84.13)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(6354.1828) : max(1.0, 1.0))), max(1.0, 1.0))))), bool(true))), 1.0) : _GLF_FUZZED(53.44), (true ? clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(84.13)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(6354.1828) : max(1.0, 1.0))), max(1.0, 1.0))))), bool(true))), 1.0) : _GLF_FUZZED(53.44)) / 1.0))), 0.0 + (_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(84.13)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-807.937)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))), _GLF_IDENTITY(bool(true), (bool(true)) && true))), 1.0), (_GLF_IDENTITY(true ? clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(84.13)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(6354.1828) : max(1.0, 1.0))), max(1.0, 1.0))))), bool(true))), 1.0) : _GLF_FUZZED(53.44), (true ? clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(84.13, min(84.13, 84.13)))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true))))))) ? _GLF_FUZZED(6354.1828) : max(1.0, 1.0))), max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), bool(true))), 1.0) : _GLF_FUZZED(53.44)) / 1.0)))))), 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))))))).y))) && true)))))
                {
                }
               else
                {
                 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, clamp(read, _GLF_IDENTITY(read, (false ? _GLF_FUZZED(workgroup_base) : read)), _GLF_IDENTITY(read, uint(uvec2(read, 0u))))), 4, 64, 4);
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               subgroupAll(true);
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ _GLF_IDENTITY(1, (1) + (0 << _GLF_IDENTITY(int(2), int(2)))))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
                        return;
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            return;
                          }
                        }
                       if(_GLF_DEAD(false))
                        break;
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  continue;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, true, true, false)))); _injected_loop_counter ++)
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
              }
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
