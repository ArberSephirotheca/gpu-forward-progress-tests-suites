#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_17 {
 ivec2 _f0;
 bvec2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
 int _f1;
 vec4 _f2;
 mat2x3 _f3;
 mat4x3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_15 {
 uint _f0;
 mat3x2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_14 {
 ivec3 _f0;
 bvec4 _f1;
 ivec2 _f2;
 mat4x3 _f3;
 mat3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_13 {
 mat4x3 _f0;
 mat2 _f1;
 float _f2;
 ivec4 _f3;
 uint _f4;
} ;

struct _GLF_struct_18 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 vec4 _f4;
 _GLF_struct_17 _f5;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
 ivec2 _f1;
 uvec4 _f2;
 mat4x2 _f3;
 mat4x2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 mat2x4 _f1;
 uint _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_9 {
 uint _f0;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 uint _f1;
 mat4 _f2;
 mat3 _f3;
 bvec2 _f4;
 vec2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_8 {
 uint workgroup_id;
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 float _f2;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 mat4x3 _f1;
 mat3 _f2;
 vec4 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 ivec2 _f1;
 uvec4 _f2;
 ivec2 _f3;
 _GLF_struct_4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_19 {
 _GLF_struct_5 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 ivec3 _f3;
 _GLF_struct_12 _f4;
 int _f5;
 _GLF_struct_18 _f6;
} ;

struct _GLF_struct_3 {
 uint workgroup_size;
 bool _f0;
 uint _f1;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 bvec3 _f1;
 int _f2;
 mat4x3 _f3;
 float _f4;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_2 {
 uint subgroup_local_id;
 bvec2 _f0;
 _GLF_struct_1 _f1;
 vec4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), true))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), true)))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false), ! (! ((false)))) && true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true))), false || (! ((_GLF_IDENTITY(false, (false) && true))))), ! (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), true, true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(gl_SubgroupInvocationID, _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))))), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), false)))))))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), false)))))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), false)))))))))), true))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), false)))))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), false)))))))))), true))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), false)))))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), false)))))))))), true))), true, true)), true)))), false, true)))), _GLF_struct_1(vec4(1.0), _GLF_struct_0(bvec3(true), bvec3(true), 1, mat4x3(1.0), 1.0)), _GLF_IDENTITY(vec4(1.0), min(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), exp(0.0), 1.0, 1.0, 1.0, 1.0)))), mat4(1.0) * (vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), float(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-216.930)), float(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))), 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), exp(0.0), 1.0, 1.0, 1.0, 1.0)))))), (vec4(1.0)) * mat4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (false) && true))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(gl_WorkGroupSize.x, true, _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_5(uvec3(1u), _GLF_IDENTITY(ivec2(1), max(ivec2(1), _GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))))), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), 0u + (_GLF_IDENTITY(1u, 0u ^ (1u))))))), ivec2(1), _GLF_struct_4(uvec3(1u), mat4x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-94.84)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))), bool(true)))), _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat4(mat3(1.0)), (false ? _GLF_FUZZED(mat4(4192.9912, -9.4, -2267.9992, 725.338, -2.4, 5345.1308, -7547.8060, -8688.4875, 2.4, -45.73, 4.4, -7.2, -627.309, -5.9, -934.089, -93.80)) : mat4(mat3(1.0)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(-5665.1684, -2566.2437, _GLF_IDENTITY(-80.18, float(_GLF_IDENTITY(mat4(-80.18, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0), (true ? _GLF_IDENTITY(mat4(-80.18, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) + 0.0), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 0.0, 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(608.324) : 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((mat4(-80.18, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(mat4(-232.508, 3.3, -564.607, 844.391, 1557.3371, -499.813, 2.7, 8804.0121, -83.57, -75.98, 145.511, -7.3, -2973.0020, -0.2, 5.3, -34.79)) : (mat4(-80.18, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(mat4(3.3, -3216.3014, 5878.7926, -8295.8647, 4.2, 2449.6686, -246.165, -5192.9238, 783.602, -440.434, -659.818, -46.09, 55.62, _GLF_IDENTITY(-9158.0761, (false ? _GLF_FUZZED(-13.13) : _GLF_IDENTITY(-9158.0761, (false ? _GLF_FUZZED(462.530) : _GLF_IDENTITY(-9158.0761, max(-9158.0761, -9158.0761)))))), 4446.6204, -5047.1513)))))), -27.06, -99.97, 1322.6801, 736.871, 1.3, 3.7, -15.72, -9.2, -6.4, -17.03, 13.44, 5086.5057, 4.5), transpose(transpose(mat4(-5665.1684, -2566.2437, _GLF_IDENTITY(-80.18, float(_GLF_IDENTITY(mat4(-80.18, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0), (true ? _GLF_IDENTITY(mat4(-80.18, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) + 0.0), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 0.0, 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(608.324) : 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((mat4(-80.18, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(mat4(-232.508, 3.3, -564.607, 844.391, 1557.3371, -499.813, 2.7, 8804.0121, -83.57, -75.98, 145.511, -7.3, -2973.0020, -0.2, 5.3, -34.79)) : (mat4(-80.18, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(mat4(3.3, -3216.3014, 5878.7926, -8295.8647, 4.2, 2449.6686, -246.165, -5192.9238, 783.602, -440.434, -659.818, -46.09, 55.62, _GLF_IDENTITY(-9158.0761, (false ? _GLF_FUZZED(-13.13) : _GLF_IDENTITY(-9158.0761, (false ? _GLF_FUZZED(462.530) : _GLF_IDENTITY(-9158.0761, max(-9158.0761, -9158.0761)))))), 4446.6204, -5047.1513)))))), -27.06, -99.97, 1322.6801, 736.871, 1.3, 3.7, -15.72, -9.2, -6.4, -17.03, 13.44, 5086.5057, 4.5))))) : mat4(_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(true, ! (! (true))) ? mat3(1.0) : _GLF_FUZZED(mat3(0.8, -858.729, _GLF_IDENTITY(62.43, max(_GLF_IDENTITY(62.43, float(_GLF_IDENTITY(mat2x3(62.43, 1.0, abs(0.0), 1.0, sqrt(_GLF_IDENTITY(0.0, (0.0) * 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)), (mat2x3(62.43, 1.0, abs(0.0), 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x))) * mat2(1.0)))), _GLF_IDENTITY(62.43, (false ? _GLF_FUZZED(78.69) : 62.43)))), -92.68, 66.27, 72.88, -184.563, _GLF_IDENTITY(-4.9, (true ? _GLF_IDENTITY(-4.9, float(vec3(-4.9, tan(0.0), cos(0.0)))) : _GLF_FUZZED(-0.0))), -5.6)))))))))))) : _GLF_FUZZED(mat3(-6.6, 354.134, -7.7, 668.742, 3293.7116, 1.7, -5052.6573, 5.6, _GLF_IDENTITY(7.7, clamp(7.7, 7.7, _GLF_IDENTITY(7.7, mix(float(7.7), float(_GLF_FUZZED(30.90)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(mat3(mat4x3(_GLF_IDENTITY((true ? _GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(-5665.1684, -2566.2437, -80.18, _GLF_IDENTITY(-27.06, 1.0 * (-27.06)), -99.97, 1322.6801, 736.871, 1.3, 3.7, -15.72, -9.2, -6.4, -17.03, 13.44, 5086.5057, 4.5), (mat4(-5665.1684, -2566.2437, -80.18, _GLF_IDENTITY(-27.06, 1.0 * (-27.06)), -99.97, 1322.6801, 736.871, 1.3, 3.7, -15.72, -9.2, -6.4, -17.03, 13.44, 5086.5057, 4.5)) * mat4(1.0))) : mat4(mat3(1.0))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((false ? _GLF_FUZZED(mat4(-5665.1684, _GLF_IDENTITY(-2566.2437, (-2566.2437) / 1.0), -80.18, -27.06, -99.97, 1322.6801, 736.871, 1.3, 3.7, -15.72, -9.2, -6.4, -17.03, 13.44, 5086.5057, 4.5)) : mat4(mat3(1.0)))))))) : _GLF_FUZZED(mat3(-6.6, 354.134, -7.7, 668.742, 3293.7116, 1.7, -5052.6573, 5.6, 7.7))), mat3(mat3x4((_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat4(mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(37.37)), bool(false))))), (false ? _GLF_FUZZED(mat4(-5665.1684, -2566.2437, -80.18, -27.06, -99.97, _GLF_IDENTITY(1322.6801, mix(float(1322.6801), float(_GLF_FUZZED(5190.7693)), bool(false))), 736.871, 1.3, 3.7, -15.72, -9.2, -6.4, -17.03, 13.44, 5086.5057, 4.5)) : _GLF_IDENTITY(mat4(mat3(1.0)), transpose(transpose(_GLF_IDENTITY(mat4(mat3(1.0)), transpose(transpose(mat4(mat3(1.0)))))))))))) : _GLF_FUZZED(mat3(-6.6, 354.134, -7.7, 668.742, 3293.7116, 1.7, -5052.6573, 5.6, 7.7)))))))), (_GLF_IDENTITY(mat3(mat4x3(_GLF_IDENTITY((true ? _GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat4(-5665.1684, -2566.2437, -80.18, -27.06, -99.97, 1322.6801, 736.871, 1.3, 3.7, -15.72, -9.2, -6.4, _GLF_IDENTITY(-17.03, min(-17.03, -17.03)), 13.44, 5086.5057, 4.5)) : mat4(mat3(1.0)), (false ? _GLF_FUZZED(mat4(-5665.1684, -2566.2437, -80.18, -27.06, -99.97, 1322.6801, 736.871, 1.3, 3.7, -15.72, -9.2, -6.4, _GLF_IDENTITY(-17.03, min(-17.03, -17.03)), 13.44, 5086.5057, 4.5)) : mat4(mat3(1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) : _GLF_FUZZED(mat3(-6.6, 354.134, -7.7, 668.742, 3293.7116, _GLF_IDENTITY(1.7, clamp(_GLF_IDENTITY(1.7, 1.0 * (_GLF_IDENTITY(1.7, float(vec4(1.7, length(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 0.0, 0.0))))), 1.7, 1.7)), -5052.6573, 5.6, 7.7))), mat3(mat3x4((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0)), (false ? _GLF_FUZZED(mat4(-5665.1684, -2566.2437, -80.18, -27.06, -99.97, _GLF_IDENTITY(1322.6801, mix(float(1322.6801), float(_GLF_FUZZED(_GLF_IDENTITY(5190.7693, min(5190.7693, 5190.7693)))), bool(false))), 736.871, 1.3, 3.7, -15.72, -9.2, _GLF_IDENTITY(-6.4, _GLF_IDENTITY(max(-6.4, -6.4), (_GLF_IDENTITY(max(-6.4, -6.4), mix(float(_GLF_FUZZED(8.4)), float(max(-6.4, -6.4)), bool(true)))) / 1.0)), -17.03, 13.44, 5086.5057, 4.5)) : mat4(mat3(1.0)))))) : _GLF_FUZZED(mat3(-6.6, 354.134, -7.7, 668.742, 3293.7116, 1.7, -5052.6573, 5.6, 7.7)))))))), (_GLF_IDENTITY(true, (true) || false) ? mat3(mat4x3(_GLF_IDENTITY((true ? _GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat4(mat3(1.0)), (false ? _GLF_FUZZED(mat4(-5665.1684, -2566.2437, -80.18, -27.06, -99.97, 1322.6801, 736.871, 1.3, 3.7, -15.72, -9.2, -6.4, -17.03, 13.44, _GLF_IDENTITY(5086.5057, max(_GLF_IDENTITY(5086.5057, max(5086.5057, 5086.5057)), 5086.5057)), 4.5)) : mat4(mat3(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(mat3(1.0)), (false ? _GLF_FUZZED(mat4(-5665.1684, -2566.2437, -80.18, -27.06, -99.97, 1322.6801, 736.871, 1.3, 3.7, -15.72, -9.2, -6.4, -17.03, 13.44, _GLF_IDENTITY(5086.5057, max(_GLF_IDENTITY(5086.5057, max(5086.5057, 5086.5057)), 5086.5057)), 4.5)) : mat4(mat3(1.0)))), (_GLF_IDENTITY(mat4(mat3(1.0)), (false ? _GLF_FUZZED(mat4(-5665.1684, -2566.2437, -80.18, -27.06, -99.97, 1322.6801, 736.871, 1.3, 3.7, -15.72, -9.2, -6.4, -17.03, 13.44, _GLF_IDENTITY(5086.5057, max(_GLF_IDENTITY(5086.5057, max(5086.5057, 5086.5057)), 5086.5057)), 4.5)) : mat4(mat3(1.0))))) * mat4(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(mat3(-6.6, 354.134, _GLF_IDENTITY(-7.7, mix(float(_GLF_FUZZED(5486.3839)), _GLF_IDENTITY(float(-7.7), clamp(float(-7.7), float(-7.7), _GLF_IDENTITY(float(-7.7), min(float(-7.7), float(-7.7))))), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(true), true)), bvec2(bvec4(bvec2(bvec2(bool(true), true)), false, true))))))))), 668.742, 3293.7116, 1.7, -5052.6573, 5.6, 7.7))), mat3(mat3x4((true ? _GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0)), (false ? _GLF_FUZZED(mat4(-5665.1684, -2566.2437, -80.18, -27.06, -99.97, _GLF_IDENTITY(1322.6801, mix(float(1322.6801), float(_GLF_IDENTITY(_GLF_FUZZED(5190.7693), max(_GLF_FUZZED(5190.7693), _GLF_FUZZED(5190.7693)))), bool(false))), 736.871, 1.3, 3.7, -15.72, -9.2, -6.4, -17.03, 13.44, 5086.5057, _GLF_IDENTITY(4.5, clamp(_GLF_IDENTITY(4.5, clamp(4.5, _GLF_IDENTITY(4.5, min(4.5, 4.5)), _GLF_IDENTITY(4.5, mix(float(4.5), float(_GLF_FUZZED(57.62)), bool(_GLF_IDENTITY(false, ! (! (false)))))))), 4.5, 4.5)))) : mat4(mat3(1.0)))))) : _GLF_FUZZED(mat3(-6.6, 354.134, -7.7, _GLF_IDENTITY(668.742, (_GLF_IDENTITY(true ? 668.742 : _GLF_FUZZED(50.94), (true ? 668.742 : _GLF_FUZZED(50.94)) + 0.0))), 3293.7116, 1.7, -5052.6573, 5.6, 7.7)))))))) : _GLF_FUZZED(mat3(-1098.9820, -3152.1938, 2102.7541, -9335.7983, 83.35, 6.7, -8.9, 192.914, 8365.5720))))) * mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), vec4(_GLF_IDENTITY(1.0, exp(0.0) * (_GLF_IDENTITY(1.0, (1.0) - 0.0)))), mat4(1.0)), vec3(1.0)), _GLF_struct_8(gl_WorkGroupID.x, _GLF_struct_6(vec2(1.0), mat4x2(1.0)), _GLF_struct_7(_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), _GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))), ivec3(1))), _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(mat4(1.0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat3(mat3x4(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))) : _GLF_FUZZED((mat3x2(66.11, 98.67, 9.1, -99.36, -36.78, 6.0) * vec3(45.43, 1.3, -102.357))))).x < injectionSwitch.y) && true))) ? mat4(1.0) : _GLF_FUZZED(mat4(5.9, 7312.0067, -29.55, 40.38, 9.1, -5.1, 272.560, -1.8, 265.981, 0.3, -7785.4957, -3.8, 62.71, -473.057, -4.2, -911.731)))), mat3(1.0), bvec2(true), vec2(1.0), uvec2(1u)), 1.0), _GLF_struct_9(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) >> 0u)), (~ (1u)) / 1u))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), min(~ (1u), _GLF_IDENTITY(~ (1u), (~ (1u)) / 1u)))), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), min(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u), (~ (1u)) / 1u))), (_GLF_IDENTITY(~ (1u), min(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (~ (1u)) ^ 0u), (~ (1u)) / 1u)))) / (1u & 1u))), 0u | (~ (_GLF_IDENTITY(~ (1u), min(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (~ (1u)) / 1u), (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ (1u)) / 1u, (_GLF_IDENTITY((~ (1u)) / 1u, uint(uint((~ (1u)) / 1u)))) - (0u | 0u)))) - 0u)))))))))) / 1u), (1u) | (_GLF_IDENTITY(1u, (1u) / 1u)))), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) + 0), 1, 1, 0)), (int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 0))) | (int(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0)))))), _GLF_struct_12(bvec3(true), _GLF_struct_10(mat3x2(1.0), mat2x4(1.0), 1u, uvec2(1u)), _GLF_struct_11(_GLF_IDENTITY(vec4(1.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, abs(log(1.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3(float(mat3x4(1.0, 1.0, abs(log(1.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), _GLF_IDENTITY(float(mat3(1.0 * (1.0), sin(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), round(length(normalize(1.0))), 1.0, 1.0, 0.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), round(length(normalize(1.0))))), max(float(mat3(1.0 * (1.0), sin(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), round(length(normalize(1.0))), 1.0, 1.0, 0.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), round(length(normalize(1.0))))), float(mat3(1.0 * (1.0), sin(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), round(length(normalize(1.0))), 1.0, 1.0, 0.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), round(length(normalize(1.0))))))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true))))))))))) / vec4(1.0, 1.0, 1.0, 1.0)), ivec2(1), uvec4(_GLF_IDENTITY(1u, ~ (~ (1u)))), mat4x2(1.0), mat4x2(1.0), mat3x4(1.0)), mat4(1.0)), 1, _GLF_struct_18(_GLF_struct_13(mat4x3(1.0), mat2(1.0), 1.0, ivec4(1), 1u), _GLF_struct_14(ivec3(1), bvec4(true), ivec2(1), mat4x3(1.0), mat3(1.0), mat2(1.0)), _GLF_struct_15(1u, mat3x2(1.0), mat2x4(1.0)), _GLF_struct_16(bvec4(_GLF_IDENTITY(true, true && (true))), 1, vec4(1.0), mat2x3(1.0), mat4x3(1.0), mat4x2(1.0)), vec4(1.0), _GLF_struct_17(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 1))), 1))))) | (1))))), max(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), (false ? _GLF_FUZZED(-85320) : (1))), ((1)) << 0)) | 0)), (~ _GLF_IDENTITY((~ (1)), min((~ (1)), _GLF_IDENTITY((~ (1)), ~ (~ ((~ (1)))))))) / 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) >> 0))) | (1))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)) | (~ (1)), ((~ (1)) | (~ (1))) | 0))))), clamp((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))) | 0)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)), 0 | ((~ (1)))) | (~ (1)))))), ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))))))) << 0), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 ^ (1))))))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | (_GLF_IDENTITY(1, (1) | (1)))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), _GLF_IDENTITY((_GLF_IDENTITY((~ (1)), ((~ (1))) ^ 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((~ (1)), ((~ (1))) ^ 0)), ((_GLF_IDENTITY((~ (1)), ((~ (1))) ^ 0))) | ((_GLF_IDENTITY((~ (1)), ((~ (1))) ^ 0))))))) << _GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(1), int(1))))))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | (1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), ((~ (1))) ^ 0)) << 0))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | (1))))), max(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), ((~ (1))) ^ 0)) << 0))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | (1))))), ~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), ((~ (1))) ^ 0)) << 0))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | (1))))))))))))) << ivec2(0, 0)))), bvec2(true), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-56.99)))), float(_GLF_FUZZED(6103.7625)), bool(false)))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_struct_replacement_3.workgroup_size * _GLF_struct_replacement_19._f1.workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     return;
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), uint(uvec2(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), 0u)))) / 1u), uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), uint(uvec2(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), 0u)))) / 1u), uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)))), 0u ^ (_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), uint(uvec2(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), 0u)))) / 1u), uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u))))))) << 0u)), 0u, 0u, (1u & 1u)), ~ (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), uint(uvec2(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), 0u)))) / 1u), uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u))))), 0u, 0u, (1u & 1u)), ~ (~ (uvec4(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), uint(uvec2(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), 0u)))) / 1u), uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u))))), 0u, 0u, (1u & 1u))))))))), clamp(uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u))), 0u, 0u, (1u & 1u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)), (true ? uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u)) : _GLF_FUZZED(workgroup_base)))), 0u, 0u, (1u & 1u))), uint(uvec2(uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u))), 0u, 0u, (1u & 1u))), 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u))), 0u, 0u, (1u & 1u)), (uvec4(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u))), 0u, 0u, (1u & 1u))) / uvec4(1u, 1u, 1u, 1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_2.subgroup_local_id, 1u, 1u))), 0u, 0u, (1u & 1u))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1]))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, true && (true)), true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_local_id, ~ (~ (_GLF_struct_replacement_2.subgroup_local_id))) + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_local_id, ~ (~ (_GLF_struct_replacement_2.subgroup_local_id))) + 1) % subgroup_size)) | 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u), max(next_virtual_gid, next_virtual_gid))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-603.187))))))], uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_local_id + 1 < subgroup_size, (_GLF_struct_replacement_2.subgroup_local_id + 1 < subgroup_size) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (bool(bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(vec2(-0.3, 9.8).s)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(false))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
             if(_GLF_DEAD(false))
              return;
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
          return;
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-287.407), _GLF_FUZZED(26.92)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(injectionSwitch[1], 1.0, 0.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), mix(vec2((vec2(vec4(injectionSwitch, 1.0, 0.0)))[0], (vec2(vec4(injectionSwitch, 1.0, 0.0)))[1]), vec2(_GLF_FUZZED((false ? -1625.4766 : 9.3)), _GLF_FUZZED(2.1)), bvec2(false, false)))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-8175.3705, -4.2))))).y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))) || false))), false, true))), false, true))), true))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-9.5, min(-9.5, _GLF_IDENTITY(-9.5, max(-9.5, -9.5))))) : injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.3)), bool(false))), 0.0, 0.0, 1.0)))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true))) || false))))), false, true))), false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true))))), true, _GLF_IDENTITY(false, (false) && true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec3(0.0, 0.0, 0.0))))) && true))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false))), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), false || ((false)))) && true))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-452.472), _GLF_FUZZED(2.1)), bvec2(_GLF_IDENTITY(false, true && (false)), false))).y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(491.631), _GLF_FUZZED((_GLF_IDENTITY(- 9012.4913, float(mat3(- 9012.4913, abs(1.0), sqrt(1.0), sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)))))), bvec2(false, false))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(491.631), _GLF_FUZZED((- 9012.4913))), bvec2(false, false))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), false, true, true))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)).y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.4)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)) ? _GLF_FUZZED(-0.6) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) / vec2(1.0, 1.0)))).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
