#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_9 {
 uint _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 vec3 _f1;
 uint workgroup_base;
 mat4 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 uint subgroup_id;
 bvec3 _f2;
} ;

struct _GLF_struct_2 {
 uint _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 vec4 _f1;
 vec2 _f2;
 uint _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 _GLF_struct_1 _f1;
 ivec4 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_6 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(bvec2(true), _GLF_struct_1(_GLF_struct_0(uvec3(1u), vec4(1.0), vec2(1.0), 1u)), ivec4(1), _GLF_struct_3(_GLF_struct_2(1u, uvec3(1u))), _GLF_struct_6(_GLF_struct_4(uvec2(1u)), _GLF_struct_5(mat2x3(1.0), mat3x2(1.0)), gl_SubgroupID, bvec3(true)));
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.z = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_10(uvec2(1u), vec3(1.0), workgroup_size * workgroup_id, mat4(1.0), _GLF_struct_8(bvec3(true), vec3(1.0)), _GLF_struct_9(1u, uvec3(1u))));
 uint subgroup_base = _GLF_struct_replacement_7._f4.subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.z;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.y = subgroup_base;
 uint virtual_gid = _GLF_struct_replacement_11._f0.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.y + subgroup_local_id;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.w = virtual_gid;
 uint next_virtual_gid = _GLF_struct_replacement_11._f0.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.y + ((subgroup_local_id + 1) % GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.z);
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.x = next_virtual_gid;
 uint read = 0;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.x], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   read = atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.w], 4, 64, 2);
  }
 else
  {
   subgroupAll(false);
   read = atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.w], 4, 64, 2);
  }
 subgroupBarrier();
 atomicStore(checker[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.w], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
