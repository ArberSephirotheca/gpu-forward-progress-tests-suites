#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
          {
           return;
          }
        }
       return;
      }
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u);
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))))) * workgroup_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> ((0u | 0u) ^ 0u)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / 1u)) >> 0u) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size + subgroup_local_id) ^ 0u);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)), ! (! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y) || false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)), ! (! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))))), true, true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, false || (false))))))))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackHalf2x16(subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6689.4493, -9.3)) : injectionSwitch)), max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(int(int(0)))), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, ((0) | 0) * 1))); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false), false)))), true, false))))), true && (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false), false)))), true, false)))))))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | _GLF_IDENTITY(0, 0 ^ (0)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 0 ^ (0))); _injected_loop_counter --)
                {
                 return;
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
                  {
                   return;
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   continue;
                  }
                }
              }
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true)))))))
        {
         return;
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       do
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        break;
      }
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != (1 & 1)); _injected_loop_counter ++)
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) - 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       continue;
      }
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
          return;
         return;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))));
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1 | 1, max(1 | 1, 1 | 1)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true))), true, false)), (bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true))), true, false))) || false)))))))
            break;
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5408.7611)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        return;
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), true, true, true))))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))));
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(bvec4(bvec2(false || (false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false || _GLF_IDENTITY((false), ! (! ((false)))), false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, false || (false))), false, true))), false)), bvec2(bvec4(bvec2(bvec2(false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(! ((false))))))))), ! (! ((_GLF_IDENTITY(false, false || (false)))))), false)), false, false)))), false, true))))))))) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  {
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, true && ((true) || false))), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) || false)))), true && (! (true)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), ! (! ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))))) || false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))))))))) && true)), (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(true, false, false)), false, false, true)), (bool(bvec4(bool(bvec3(true, false, false)), false, false, true))) || false)), (bool(bvec3(true, false, false))) && true))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true))), true, true)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), ! (! ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))))))) && true), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false)))) || false))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              return;
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(mod(860.131, atan(-20.12)))))))))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, true)), true && (bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), false, true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true)), true && (bool(bvec3(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (false), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(! (false), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))), false, true)))))), ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, true)), true && (bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), false, true))))))) || false)) || false)))))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, log(1.0), 0.0, 1.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, log(1.0), 0.0, 1.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(966.771), (injectionSwitch)[1]), bvec2(false, true))).x, 1.0, 0.0, log(1.0), 0.0, 1.0))))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), (false || (injectionSwitch.x > injectionSwitch.y)) && true))))))));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(3.3))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true, _GLF_IDENTITY(true, ! (! (true))), false))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
      {
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(false))
        continue;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, false))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))))))) || false))))
    return;
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true)))))
        return;
      }
     else
      {
      }
     do
      {
       atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) >> 0), 4);
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
        return;
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_injected_loop_counter < 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))), ! (! (bool(bool(bool(_injected_loop_counter < 1)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))) || _GLF_IDENTITY(false, false || (false))))))), (! (bool(bool(bool(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 | (0))), max(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 | (0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 | (0)))))))))))) || false)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))) || _GLF_IDENTITY(false, false || (false))))))), (! (bool(bool(bool(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 | (0))), max(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 | (0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 | (0)))))))))))) || false)), false || ((_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))) || _GLF_IDENTITY(false, false || (false))))))), (! (bool(bool(bool(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 | (0))), max(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 | (0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 | (0)))))))))))) || false)))), false, false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (bool(bool(bool(_injected_loop_counter < 1)))), (! (bool(bool(bool(_injected_loop_counter < 1))))) && true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) || (bool(bool(_injected_loop_counter < 1))))), ! (! (bool(bool(bool(_injected_loop_counter < 1))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1)))))))))))), ((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1))))))))))))) || false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) < 1)), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) < 1)), (bool(bool(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) < 1))) && true))))), (! (bool(bool(bool(_injected_loop_counter < 1))))) && true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) || (bool(bool(_injected_loop_counter < 1))))), ! (! (bool(bool(bool(_injected_loop_counter < 1))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) << 0)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1)))))))))))), ((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (bool(bool(bool(_injected_loop_counter < 1)))), bool(bvec3(! (bool(bool(bool(_injected_loop_counter < 1)))), false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), bool(bvec2(bool(bool(_injected_loop_counter < 1)), false))))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1))))))))))))) || false)))) || false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (bool(bool(bool(_injected_loop_counter < 1)))), (! (bool(bool(bool(_injected_loop_counter < 1))))) && true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) || (bool(bool(_injected_loop_counter < 1))))), ! (! (bool(bool(bool(_injected_loop_counter < 1))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1)))))))))))), ((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1))))))))))))) || false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (bool(bool(bool(_injected_loop_counter < 1)))), (! (bool(bool(bool(_injected_loop_counter < 1))))) && true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) || (bool(bool(_injected_loop_counter < 1))))), ! (! (bool(bool(bool(_injected_loop_counter < 1))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1)))))))))))), ((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1))))))))))))) || false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (bool(bool(bool(_injected_loop_counter < 1)))), (! (bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) < 1))))) && true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) || (bool(bool(_injected_loop_counter < 1))))), ! (! (bool(bool(bool(_injected_loop_counter < 1))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), false || (_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), false || (bool(bool(_injected_loop_counter < 1)))))))), bool(bvec2((bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), false || (_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), false || (bool(bool(_injected_loop_counter < 1)))))))), true))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1 * (_injected_loop_counter), clamp(1 * (_injected_loop_counter), 1 * (_injected_loop_counter), 1 * (_injected_loop_counter)))), _injected_loop_counter)) < 1))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1)))))))))), true && (! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), true && (bool(bool(_injected_loop_counter < 1)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), true && (bool(bool(_injected_loop_counter < 1))))))))))) || false)), false || (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(bool(_injected_loop_counter < 1)))))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter))) ^ 0) < 1))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter))) ^ 0) < 1))), ! (! (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter))) ^ 0) < 1)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1))))))) && true)))))))) || false)))) || false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) < 1)), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter, (true ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) : _GLF_FUZZED(_injected_loop_counter))) < 1)), (bool(bool(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) < 1))) && true))))), (! (bool(bool(bool(_injected_loop_counter < 1))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) || (bool(bool(_injected_loop_counter < 1))))), ! (! (bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) || (bool(bool(_injected_loop_counter < 1)))))))), ! (! (bool(bool(bool(_injected_loop_counter < 1))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) << 0)), _injected_loop_counter)) < 1), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) << 0)), _injected_loop_counter)) < 1), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) << 0)), _injected_loop_counter)) < 1), ! (! (bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) << 0)), _injected_loop_counter)) < 1)))))), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1)))))))), (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < _GLF_IDENTITY(1, 0 | (1))))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1))))))))) || false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter), (max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) >> 0)) < 1) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter), (max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) >> 0)) < 1) || false)))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(bool(bool(_injected_loop_counter < 1)))) || false)), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(! (bool(bool(bool(_injected_loop_counter < 1)))), ! (! (! (bool(bool(bool(_injected_loop_counter < 1))))))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (bool(bool(bool(_injected_loop_counter < 1)))), bool(bvec3(! (bool(bool(bool(_injected_loop_counter < 1)))), false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), bool(bvec2(bool(bool(_injected_loop_counter < 1)), false))))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1))))))))))))) || false, ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (bool(bool(bool(_injected_loop_counter < 1)))), bool(bvec3(! (bool(bool(bool(_injected_loop_counter < 1)))), false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), bool(bvec2(bool(bool(_injected_loop_counter < 1)), false))))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1))))))))))))) || false, (_GLF_IDENTITY(((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (bool(bool(bool(_injected_loop_counter < 1)))), bool(bvec3(! (bool(bool(bool(_injected_loop_counter < 1)))), false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), bool(bvec2(bool(bool(_injected_loop_counter < 1)), false))))) || false)), false || (! (bool(bool(bool(_injected_loop_counter < 1))))))))))))) || false, (((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (bool(bool(bool(_injected_loop_counter < 1)))), bool(bvec3(! (bool(bool(bool(_injected_loop_counter < 1)))), false, false))))), false || (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)) || false))))), bool(bvec3(! (bool(bool(bool(_injected_loop_counter < 1)))), false, false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), (bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), bool(bvec2(bool(bool(_injected_loop_counter < 1)), false))))) || false)), _GLF_IDENTITY(false || (! (bool(bool(bool(_injected_loop_counter < 1))))), (false || (! _GLF_IDENTITY((bool(bool(bool(_injected_loop_counter < 1)))), bool(bvec4((bool(bool(bool(_injected_loop_counter < 1)))), true, true, false))))) || false))))))))) || false) && true)) && true)))))))) || false)) && true)) && true))))))), false || _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter)), 0 | (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(ivec2(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 1))))))), _GLF_IDENTITY(((_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter)), 0 | (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1)))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter)), 0 | (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1)))))) && true))) || false))), bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(tan(0.0)), determinant(mat2(0.0, abs(0.0), 1.0, 0.0)), 1.0, 1.0, 0.0, 1.0))))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! _GLF_IDENTITY(((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))))))))), (((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false))))))))))))) || _GLF_IDENTITY(false, ! (! (false)))))), false, false, true))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) < 1)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter)), 0 | (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(ivec2(ivec2(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))))))), 1))))))), _GLF_IDENTITY(((_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter)), 0 | (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), _GLF_IDENTITY(bool(bool(bool(_injected_loop_counter < 1))), ! (_GLF_IDENTITY(! (bool(bool(bool(_injected_loop_counter < 1)))), (! (bool(bool(bool(_injected_loop_counter < 1))))) || false)))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter), min(clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter), clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter)))), 0 | (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))))) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) < 1), bool(bool(bool(_injected_loop_counter < 1)))))) && true))) || false))), bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(float(mat2(exp(0.0), 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(608.714) : _GLF_IDENTITY(float(mat2(exp(0.0), 0.0, 0.0, 0.0)), clamp(float(mat2(exp(0.0), 0.0, 0.0, 0.0)), float(mat2(exp(0.0), 0.0, 0.0, 0.0)), float(mat2(exp(0.0), 0.0, 0.0, 0.0))))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(tan(0.0)), mix(float(_GLF_IDENTITY(sqrt(tan(0.0)), (sqrt(tan(0.0))) - 0.0)), float(_GLF_FUZZED(292.036)), bool(false))), _GLF_IDENTITY(determinant(mat2(0.0, abs(0.0), 1.0, 0.0)), (determinant(mat2(0.0, _GLF_IDENTITY(abs(0.0), (true ? _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))) : _GLF_FUZZED(-0.4))), 1.0, 0.0))) * 1.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 0.0, 1.0)))), int(ivec4(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(float(mat2(exp(0.0), 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(608.714) : _GLF_IDENTITY(float(mat2(exp(0.0), 0.0, 0.0, 0.0)), clamp(float(mat2(exp(0.0), 0.0, 0.0, 0.0)), float(mat2(exp(0.0), 0.0, 0.0, 0.0)), float(mat2(exp(0.0), 0.0, 0.0, 0.0))))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(tan(0.0)), mix(float(_GLF_IDENTITY(sqrt(tan(0.0)), (sqrt(tan(0.0))) - 0.0)), float(_GLF_FUZZED(292.036)), bool(false))), _GLF_IDENTITY(determinant(mat2(0.0, abs(0.0), 1.0, 0.0)), (determinant(mat2(0.0, _GLF_IDENTITY(abs(0.0), (true ? _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))) : _GLF_FUZZED(-0.4))), 1.0, 0.0))) * 1.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 0.0, 1.0)))), (0 << _GLF_IDENTITY(int(1), int(1))), 1, 0)))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), ! (! (bool(bool(_injected_loop_counter < 1)))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY(((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))))))))), (((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false))))))))))))) || _GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY(((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))))))))), (((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false))))))))))))) || _GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY(((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))))))))), (((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false))))))))))))) || _GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! (! _GLF_IDENTITY(((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))))))))), (((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, (_GLF_IDENTITY((_injected_loop_counter) - 0, min(_GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | ((_injected_loop_counter) - 0)), (_injected_loop_counter) - 0))) - (0 | 0))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _injected_loop_counter))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter < 1), bool(bool(bool(_injected_loop_counter < 1)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))), _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)) < 1), bool(bool(bool(_injected_loop_counter < 1))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))), false))))))))))))) || _GLF_IDENTITY(false, ! (! (false))))), false, true, false)))) || false)) || false)), false, _GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
          return;
         if(_GLF_DEAD(false))
          break;
         subgroupAll(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)) || false) && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))))));
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.1)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.1)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), max(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.1)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.1)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))))))) - abs(vec4(0.0, 0.0, 0.0, 0.0)))))))))
              continue;
             break;
            }
           if(_GLF_DEAD(false))
            continue;
           break;
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))
          continue;
         break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        break;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), true, false))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(next_virtual_gid)))) | 0u)], read, 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, 0 | (64)))))), 4);
     subgroupAll(_GLF_IDENTITY(true, true && (true)));
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true)))))))
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(0 ^ ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, ~ (~ (7)))))), int(_GLF_IDENTITY(7, _GLF_IDENTITY((false ? _GLF_FUZZED(-86249) : 7), ~ (~ ((false ? _GLF_FUZZED(-86249) : 7)))))))), _GLF_IDENTITY(~ (~ (0 ^ _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (7), 0 | (~ (7)))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (7), 0 | (~ (7)))), ((_GLF_IDENTITY(~ (7), 0 | (~ (7))))) ^ 0))))), 0 | (int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), max(int(7), int(7))))), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), max(int(7), int(7))))))), int(7))), (((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (7), 0 | (~ (7)))))), 0 | (int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), max(int(7), int(7))))), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), max(int(7), int(7))))))), int(7)))) >> 0))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (true ? _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7)))))) : _GLF_FUZZED(90573)))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))))) | (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))))))) | 0)) >> 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec3(int(7), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), 0))), int(_GLF_IDENTITY(7, (7) ^ 0))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (true ? _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7)))))) : _GLF_FUZZED(90573)))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))))) | (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))))))) | 0)) >> 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec3(int(7), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), 0))), int(_GLF_IDENTITY(7, (7) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (true ? _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7)))))) : _GLF_FUZZED(90573)))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))))) | (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))))))) | 0)) >> 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec3(int(7), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), 0))), int(_GLF_IDENTITY(7, (7) ^ 0))), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (true ? _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7)))))) : _GLF_FUZZED(90573)))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))))) | (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))))))) | 0)) >> 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec3(int(7), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), 0))), int(_GLF_IDENTITY(7, (7) ^ 0))), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (true ? _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7)))))) : _GLF_FUZZED(90573)))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))))) | (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))))))) | 0)) >> 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec3(int(7), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), 0))), int(_GLF_IDENTITY(7, (7) ^ 0))), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (true ? _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7)))))) : _GLF_FUZZED(90573)))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))))) | (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))))))) | 0)) >> 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec3(int(7), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), 0))), int(_GLF_IDENTITY(7, (7) ^ 0)))))))))), ((~ (0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) | 0)) ^ 0)), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (true ? _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7)))))) : _GLF_FUZZED(90573)))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 1 * (1)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), _GLF_IDENTITY(int(7), 0 | (int(7)))))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, 0 ^ (7)), _GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, clamp(7, 7, 7)))))))))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), _GLF_IDENTITY((false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(ivec4(_GLF_IDENTITY(7, clamp(7, 7, 7)), 0, ((1 ^ 1) >> _GLF_IDENTITY(int(2), int(2))), 0)))), clamp(int(7), int(7), int(7))))), ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(ivec4(_GLF_IDENTITY(7, clamp(7, 7, 7)), 0, ((1 ^ 1) >> _GLF_IDENTITY(int(2), int(2))), 0)))), clamp(int(7), int(7), int(7)))))) | 0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(ivec4(_GLF_IDENTITY(7, clamp(7, 7, 7)), 0, ((1 ^ 1) >> _GLF_IDENTITY(int(2), int(2))), 0)))), clamp(int(7), int(7), int(7))))), ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(ivec4(_GLF_IDENTITY(7, clamp(7, 7, 7)), 0, ((1 ^ 1) >> _GLF_IDENTITY(int(2), int(2))), 0)))), clamp(int(7), int(7), int(7)))))) | 0)))))))), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), clamp(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), ~ (~ (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))) | (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) | 0), int(7), int(7))))))))))) | (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (false ? _GLF_FUZZED(-8060) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) | (_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))))))) | 0)) >> 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec3(int(7), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), 0))), int(_GLF_IDENTITY(7, (7) ^ 0))))))) * int(_GLF_ONE(1.0, injectionSwitch.y))), (~ (~ (0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(int(7), int(7))), 1), (_GLF_IDENTITY(ivec2((1 << _GLF_IDENTITY(int(7), int(7))), 1), (_GLF_IDENTITY(ivec2((1 << _GLF_IDENTITY(int(7), int(7))), 1), (ivec2((1 << _GLF_IDENTITY(int(7), int(7))), 1)) | ivec2(0, 0))) | _GLF_IDENTITY((ivec2((_GLF_IDENTITY(1, (0 | 0) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) | (1)))) << _GLF_IDENTITY(int(7), int(7))), 1)), ((ivec2((_GLF_IDENTITY(1, (0 | 0) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) | (1)))) << _GLF_IDENTITY(int(7), int(7))), 1))) | ivec2(0, 0)))) >> ivec2(0, 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(min(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | 0)), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) - 0)))) ^ 0)), _GLF_IDENTITY(clamp(min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 1 * (_GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)), max(min(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec2(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0))))), (clamp(min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 1 * (_GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)), max(min(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec2(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)))))) | (clamp(min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 1 * (_GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)), max(min(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec2(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0))))))))))))) << 0)) + _GLF_IDENTITY(0, (0) | (0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, (6) << 0)))) + 0)), int(6)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 ^ (6))), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) << 0), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), 0 | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))), max(max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6)))))) | (_GLF_IDENTITY(max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))), min(max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6)))))))))))) >> 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (_GLF_IDENTITY(int(6), (int(6)) ^ 0)))), int(6)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, ~ (~ (_GLF_IDENTITY(6, (6) | (6)))))), int(6)), max(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6)))), 0 << _GLF_IDENTITY(int(6), int(6))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 ^ (int(6)))), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))), 0 | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6)))))))) >> 0)))), max((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6)))), 0 << _GLF_IDENTITY(int(6), int(6))))), 0 | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6)))))))) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), 0 | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6)))))))) >> 0), (false ? _GLF_FUZZED(bitfieldInsert(-33459, _injected_loop_counter, 12754, _injected_loop_counter)) : _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), 0 | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6)))))))) >> 0), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), 0 | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6)))))))) >> 0)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), 0 | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6)))))))) >> 0)))))))), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0)), 0)) << _GLF_IDENTITY(int(6), int(6))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(0, 0 + (0)) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, (6) + 0))))), 0 << _GLF_IDENTITY(int(6), int(6))))), 0 | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6)))))))) >> 0))))) | 0)))) / 1) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec3(int(1), 1, 1)), max(int(ivec3(int(1), 1, 1)), int(ivec3(int(1), 1, 1))))), (int(1)) / 1), int(1))), _GLF_IDENTITY((int(1)) | 0, clamp(_GLF_IDENTITY((int(1)) | 0, min((int(1)) | 0, _GLF_IDENTITY((int(1)) | 0, int(ivec3((int(1)) | 0, 1, 0))))), _GLF_IDENTITY((int(1)) | 0, 0 | ((int(1)) | 0)), (int(1)) | 0))))), ~ (~ (((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, ~ (~ (0))), 0, 1))) << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | 0)))), (_GLF_IDENTITY((0) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | 0)))), max((0) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | 0)))), (0) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | 0))))))) / 1)) << _GLF_IDENTITY(int(6), int(6)))))) >> 0)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) | (1))), _GLF_IDENTITY(int(1), (int(1)) | _GLF_IDENTITY(0, (0) | (0))))))))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), false))))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             do
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.1, -0.3)))).y))))))
              {
               if(_GLF_DEAD(false))
                break;
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(5), int(5))) & -56307); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
