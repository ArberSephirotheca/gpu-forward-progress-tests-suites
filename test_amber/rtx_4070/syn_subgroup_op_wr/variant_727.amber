#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 mat3 _f0;
 mat3x4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_10 {
 uint num_workgroup;
 mat2x3 _f0;
 vec2 _f1;
 _GLF_struct_8 _f2;
 uvec4 _f3;
 mat2x3 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
 ivec2 _f1;
 bvec3 _f2;
 bvec2 _f3;
 uvec4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 uint _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 vec3 _f1;
 vec4 _f2;
 mat4 _f3;
 vec3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 mat4x3 _f1;
 vec3 _f2;
 mat3 _f3;
 int _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_1 {
 bool _f0;
 bvec2 _f1;
 mat3x4 _f2;
 bool _f3;
 ivec2 _f4;
 uvec4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_0 {
 float _f0;
 mat3x2 _f1;
 ivec2 _f2;
 mat4x2 _f3;
 mat3 _f4;
 uvec2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 ivec2 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_11 {
 float _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_7 _f2;
 uvec2 _f3;
 ivec3 _f4;
 mat2x3 _f5;
 _GLF_struct_10 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true))), false, true, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true, true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), abs(1.0), abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), abs(1.0), abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), abs(1.0), abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), false, false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0)))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(-9.7) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-60.21) : 1.0)), min(1.0, 1.0))) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(6227.8279)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(6227.8279)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))) - log(1.0)))), (1.0) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(mat4x3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(4.8, 0.0 + (4.8))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), sqrt(exp(0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))))) : _GLF_FUZZED(317.775), (true ? _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(-9.7) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(6227.8279)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))))), (1.0) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), min(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))) - tan(0.0))), float(mat4x3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.8))))), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? vec2(1.0, 0.0) : _GLF_FUZZED((injectionSwitch * mat2(-3.4, 2246.5626, -0.4, -1950.5136))))))), 0.0, 1.0, determinant(mat4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9568.4274) : 1.0)))), sqrt(exp(0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (true ? _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) : _GLF_FUZZED(-7125.0032))), 1.0)))))) : _GLF_FUZZED(317.775)) + 0.0))), _GLF_struct_4(_GLF_struct_0(1.0, mat3x2(1.0), ivec2(1), mat4x2(1.0), _GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(93.06))), 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), uvec2(1u), vec2(1.0)), _GLF_struct_1(true, bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, _GLF_IDENTITY(((true) || false) && true, bool(bool(((true) || false) && true)))), false, false, _GLF_IDENTITY(false, true && (false)))), false || (bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY((true) || false, _GLF_IDENTITY(((true) || false), false || (((true) || false))) && true), false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(false, bool(bvec2(false, true)))))), false || ((bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(false, bool(bvec2(false, true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))))))), ((true) || false) && _GLF_IDENTITY(true, (true) && true)), false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) && true), false, false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(! (false), false, true)), _GLF_IDENTITY(true, true && (true)), false)), (bool(bvec3(bool(bvec3(! (false), false, true)), _GLF_IDENTITY(true, true && (true)), false))) && true)))))))))))), ((true) || false) && _GLF_IDENTITY(true, (true) && true)), false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) && true), false, false, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))))))), ((true) || false) && _GLF_IDENTITY(true, (true) && true)), false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) && true), false, false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))))))), ((true) || false) && _GLF_IDENTITY(true, (true) && true)), false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) && true), false, false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))))))), ((true) || false) && _GLF_IDENTITY(true, (true) && true)), false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))))), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, ((true) || false) || false)) && true)) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) && true), false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, true && ((true) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(! (false), false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(true, true && (true)), false)), (bool(bvec3(bool(bvec3(! (false), false, true)), _GLF_IDENTITY(true, true && (true)), false))) && true)))))))))))), ((true) || false) && _GLF_IDENTITY(true, (true) && true)), false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) || false, ((true) || false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), ((true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(_GLF_IDENTITY(bool(! ((false) || false)), ! (! (bool(! ((false) || false))))))))))) && true)) && true), false, false, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))))))))))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), mat3x4(1.0), true, ivec2(1), uvec4(1u), mat3x4(1.0)), ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(23576) : 1))), _GLF_struct_2(mat2x4(1.0), mat4x3(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-416.670)), float(1.0), bool(true))))), vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) + length(vec4(0.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0)))), max(min(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(_GLF_FUZZED(-4.0), min(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + length(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-540.887)), bool(false))))), 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) * vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(4946.5548)), bool(false))), 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2679.9192) : 1.0)), (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + length(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-540.887)), bool(false))))), 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) * vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(4946.5548)), bool(false))), 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2679.9192) : 1.0)), (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + length(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-540.887)), bool(false))))), 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) * vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(4946.5548)), bool(false))), 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2679.9192) : 1.0)), (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) * vec4(1.0, 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + length(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec4(mat2x4(vec4(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), 1.0, 0.0, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), mat4(1.0) * (vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0))), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), min(0.0, 0.0)))), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0))), vec4(0.0, 0.0, 0.0, 0.0)))) * vec4(1.0, 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))))))) * 1.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) * mat4(1.0), max(_GLF_IDENTITY((_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) * mat4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * ((_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) * mat4(1.0))), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) * mat4(1.0))))) * vec4(1.0, 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, max(_GLF_IDENTITY((0.0) - 0.0, (false ? _GLF_FUZZED(sqrt(1.3)) : (0.0) - 0.0)), (0.0) - 0.0))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * abs(1.0))) - 0.0))))), 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) * vec4(1.0, 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + length(vec4(0.0, 0.0, 0.0, 0.0)), min((1.0) + length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(dot(-1.6, -4.0)) : 0.0)))), (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) * _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0))))), min(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(clamp(658.285, 83.77, 638.868)) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) * vec4(1.0, 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + length(vec4(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY((1.0) + length(vec4(0.0, 0.0, 0.0, 0.0)), mix(float((1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-1406.9507)), bool(false)))), float(_GLF_FUZZED(-46.76)), bool(false))))))))))))) - 0.0)), mat3(1.0), 1, ivec4(1)), _GLF_struct_3(ivec2(1), vec3(1.0), vec4(1.0), mat4(1.0), vec3(1.0), mat3x4(1.0))), _GLF_struct_7(_GLF_struct_5(ivec3(1), 1u), _GLF_struct_6(vec2(1.0), ivec2(1), bvec3(true), bvec2(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(bvec2((true), true))))), uvec4(1u), ivec4(1))), uvec2(1u), ivec3(1), mat2x3(1.0), _GLF_struct_10(gl_NumWorkGroups.x, mat2x3(1.0), vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(10.11) : 1.0)), 0.0, 1.0, 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) + 0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(803.533) : 1.0))))), transpose(transpose(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), 1.0))), _GLF_struct_8(uvec2(1u), bvec4(true)), uvec4(1u), mat2x3(1.0), _GLF_struct_9(mat3(1.0), mat3x4(1.0), mat4(1.0))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true)))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false || ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(false)) || false)))))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false, false))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))) && true), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), _GLF_IDENTITY((uint(subgroup_id * subgroup_size)) >> 0u, clamp(_GLF_IDENTITY((uint(subgroup_id * subgroup_size)) >> 0u, uint(uvec3((uint(subgroup_id * subgroup_size)) >> 0u, 0u, 1u))), (uint(subgroup_id * subgroup_size)) >> 0u, (uint(subgroup_id * subgroup_size)) >> 0u)))))))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | (subgroup_id * subgroup_size))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (46113u & 0u))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))), subgroup_id * subgroup_size))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))) || false, true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u);
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = 0;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(subgroup_local_id))))), min(_GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(subgroup_local_id)))))))) >> 0u)) * 1u), (true ? uint(1) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : uint(1), _GLF_IDENTITY(min(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : uint(1), max(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) / 1u))))) + 0u) : uint(1), _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : uint(1), min(false ? _GLF_FUZZED(subgroup_size) : uint(1), _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : uint(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : uint(1), 0u + (false ? _GLF_FUZZED(subgroup_size) : uint(1)))) >> 0u))))), _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : uint(1), _GLF_IDENTITY(uint(uint(false ? _GLF_FUZZED(subgroup_size) : uint(1))), ~ (~ (uint(uint(false ? _GLF_FUZZED(subgroup_size) : uint(1)))))))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1))))), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))))) ^ 0u), max(false ? _GLF_FUZZED(subgroup_size) : uint(1), false ? _GLF_FUZZED(subgroup_size) : uint(1))), _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : uint(1), uint(uint(false ? _GLF_FUZZED(subgroup_size) : uint(1))))), (true ? min(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u))), max(false ? _GLF_FUZZED(subgroup_size) : uint(1), false ? _GLF_FUZZED(subgroup_size) : uint(1))), _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) << 0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(85308) : _GLF_IDENTITY(1, 0 | (1)))), (1) - 0)))), uint(uint(false ? _GLF_FUZZED(subgroup_size) : uint(1))))) : _GLF_FUZZED(41288u))), _GLF_IDENTITY(min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), (subgroup_size))), (subgroup_size), (subgroup_size))) | 0u), _GLF_IDENTITY(~ (~ (subgroup_size)), 0u | (~ (~ (subgroup_size)))))) : uint(1), max(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) ^ 0u) : uint(1), false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(1), (uint(1)) >> (_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | (1u ^ 1u)))))), _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : uint(1), uint(uint(false ? _GLF_FUZZED(subgroup_size) : uint(1))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, false))))))) ? _GLF_FUZZED(subgroup_size) : uint(1), max(false ? _GLF_FUZZED(subgroup_size) : uint(1), false ? _GLF_FUZZED(subgroup_size) : uint(1))), _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(1), uint(uint(_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))))))), uint(uint(false ? _GLF_FUZZED(subgroup_size) : uint(1)))))) + 0u))))))) >> 0u), 4, 64, 4);
 if((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) + 0u) % 2) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)))))), true, true)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, (true) && true)))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), false, true, true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0)))))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u | (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 | (2))))), atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), atomicLoad(buf[virtual_gid], 4, 64, 2)));
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   subgroupAll(_GLF_IDENTITY(false, true && (false)));
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), 4, 64, _GLF_IDENTITY(2, (2) << 0));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)))))) * (1u | 1u))], _GLF_IDENTITY(read, min(read, read)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-67.46)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
