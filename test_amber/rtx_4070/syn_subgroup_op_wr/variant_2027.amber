#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uvec4 GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup;
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 uvec3 GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gid;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup.xyz = GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gid;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.x = subgroup_id;
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) ^ (1 & 1))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 7:
                         ivec4 _GLF_SWITCH_7_0v[53];
                         case 0:
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               do
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 5:
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       (- injectionSwitch);
                                      }
                                     else
                                      {
                                      }
                                    }
                                   case 0:
                                   case 27:
                                   case 14:
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   else
                                    {
                                    }
                                   case 11:
                                   case 55:
                                   case 38:
                                   case 29:
                                   case 63:
                                   case 61:
                                   case 45:
                                   barrier();
                                   break;
                                   default:
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     1;
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                          }
                         do
                          {
                           do
                            {
                             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 0:
                                   case 47:
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   break;
                                   case 1:
                                   (injectionSwitch + (injectionSwitch));
                                   case 67:
                                   _injected_loop_counter;
                                   default:
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     1;
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         break;
                         default:
                         1;
                        }
                      }
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0)))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.y = subgroup_size;
 do
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(-6521) : int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.y;
          }
        }
      }
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup.w = num_workgroup;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   switch(_GLF_SWITCH(0))
    {
     case 32:
     if((ivec2(-7650, 4756) == ivec2(99481, -91825)))
      {
       mat3x2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v[43];
       do
        {
         if((mat2(-25.34, 4.6, -8.3, 32.99) == (+ mat2(8.2, 4974.0400, -4.2, -1046.2724))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             min(ivec4(73724, -19026, -79261, 37437), _injected_loop_counter).pst;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             ;
            }
           float _GLF_SWITCH_6_2v, _GLF_SWITCH_6_3v[56];
           ;
           subgroup_local_id;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       int _GLF_SWITCH_6_4v;
      }
     else
      {
       bvec3(true, false, true);
       mat2 _GLF_SWITCH_6_5v, _GLF_SWITCH_6_6v;
       mat2 _GLF_SWITCH_6_7v[57], _GLF_SWITCH_6_8v;
       -47359;
       mat4x3(-770.891, 8.0, -6.2, -4.2, -4.2, 0.6, 201.556, -8861.4722, -6.6, -6.3, 0.2, 6.6);
       uint _GLF_SWITCH_6_9v, _GLF_SWITCH_6_10v, _GLF_SWITCH_6_11v;
      }
     case 21:
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     for(mat3x4 _GLF_SWITCH_6_12v, _GLF_SWITCH_6_13v, _GLF_SWITCH_6_14v; (mat2(79.90, 83.53, 4.8, -2.6) != mat2(7.6, 3681.6228, -83.73, -9661.4843)); uvec2(63884u, 117645u))
      {
       bvec3 _GLF_SWITCH_6_15v[64], _GLF_SWITCH_6_16v[39], _GLF_SWITCH_6_17v;
       mat3 _GLF_SWITCH_6_18v, _GLF_SWITCH_6_19v[52], _GLF_SWITCH_6_20v;
       if(_GLF_DEAD(false))
        barrier();
       {
       }
       ivec4 _GLF_SWITCH_6_21v;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     case 0:
     case 88:
     case 14:
     case 69:
     case 17:
     GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.w = workgroup_size;
     break;
     case 57:
     vec2 _GLF_SWITCH_6_22v[37];
     case 38:
     while((mat2x4(-8.3, 54.44, -6.3, -5.5, 7.8, -33.99, 1941.4035, 0.8) != mat2x4((false ? mat4(508.439, 9475.7261, -2.2, 7.1, -28.00, 447.819, -9.0, -27.48, 911.489, 55.31, 3629.8359, 442.095, 35.01, 4751.7466, -396.451, 3.1) : mat4(3.6, -76.47, -8739.2944, 4.5, -7478.2285, 6.5, 7.3, -8.2, 14.57, 119.956, 6.2, -1475.8970, 1.6, 91.75, 577.588, -0.3)))))
      {
       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 | (_GLF_IDENTITY(int(7), (int(7)) ^ 0)))))))
        {
         case 47:
         GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
         case 0:
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         case 86:
         case 1:
         subgroup_id;
         mat4x3(59.44, 9811.7439, -9.0, 3281.0364, -6.5, -3.1, -8.7, -2204.8751, -883.849, -558.925, -69.59, -81.38);
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           (ivec2(86868, 56537));
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           bvec3(false, false, false);
           (mat4x2(-2421.2950, -82.01, 9.2, 291.520, 593.909, 8.4, -125.984, -4.7) + mat4x2(-8.7, 5.1, -1024.4061, -5.1, 8030.0609, -0.9, -8.8, -8.2));
           max((injectionSwitch + 6744.8481), vec2(21.50, -30.59));
           uint _GLF_SWITCH_6_23v, _GLF_SWITCH_6_24v, _GLF_SWITCH_6_25v;
           ivec4(-85684, -54207, 63276, -44744);
           do
            {
             subgroup_id;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         (+ mat4(1631.3492, 8464.4998, -6.8, 9083.0343, 4258.0344, 76.38, -7.8, 0.9, -5.0, -336.358, -7.6, 3.0, 22.81, -2.0, 11.28, 9.4));
         mat2x3(-4.7, -8558.6890, -20.36, 3.8, -5.7, -9351.9000);
         mat3x2 _GLF_SWITCH_6_26v[38], _GLF_SWITCH_6_27v;
         mat4x2 _GLF_SWITCH_6_28v, _GLF_SWITCH_6_29v;
         break;
         case 23:
         clamp(mod(vec3(-6.5, -7894.3727, 0.8), vec3(8582.3548, 1732.3486, 4637.1989)), 7823.9370, mix(-8.5, -4.8, false));
         case 54:
         ivec2 _GLF_SWITCH_7_0v[92];
         default:
         1;
        }
      }
     default:
     1;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = workgroup_id;
      }
    }
  }
 else
  {
  }
 uint workgroup_base = GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.w * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) ^ 0)))); _injected_loop_counter --)
  {
   switch(_GLF_SWITCH(0))
    {
     case 96:
     mat3x2(-549.433, 2.7, 4.9, 0.5, 5.9, 5.7);
     case 0:
     case 67:
     case 44:
     case 21:
     GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.z = workgroup_base;
     case 94:
     case 9:
     case 95:
     case 19:
     if(_GLF_DEAD(false))
      barrier();
     break;
     default:
     1;
    }
  }
 uint virtual_gid = GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.z + GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.x * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup.xyz.z = virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 do
  {
   switch(_GLF_SWITCH(_GLF_IDENTITY(0, min(0, 0))))
    {
     case 74:
     uint _GLF_SWITCH_7_0v;
     case 0:
     case 81:
     case 25:
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 93:
                     mat3x4 _GLF_SWITCH_1_0v;
                     case 86:
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       for(mat2x4 _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v; (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id == (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id << workgroup_base)); uvec2(135399u, 13057u))
                        {
                         for(                         bvec3(true, false, true);
 (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id == uvec2(61076u, 115953u)); (+ ivec3(15115, -31648, -68085)))
                          {
                          }
                         do
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec3(0, 0, 1)))) - 0)); _injected_loop_counter --)
                            {
                             (round(9.1) - mat3x4(2414.0512, -5.1, -276.850, 2776.2564, -1.8, -88.05, -7773.2919, -9.7, 2.6, -89.40, -5.1, -363.696));
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               switch(_GLF_SWITCH(0))
                                {
                                 case 0:
                                 case 33:
                                 case 17:
                                 case 39:
                                 case 61:
                                 case 92:
                                 case 77:
                                 case 64:
                                 case 25:
                                 for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))
                                    {
                                     switch(_GLF_SWITCH(0))
                                      {
                                       case 0:
                                       case 60:
                                       if(false)
                                        {
                                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
                                          {
                                           GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size;
                                          }
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           mat4x2(0.0, 22.79, -90.57, -8.2, -7967.9889, 951.790, -96.13, 44.04);
                                          }
                                         else
                                          {
                                          }
                                         ((8.1 - mat2(-5.8, -1.9, -551.226, 0.6)) / mat2(40.60, 8.5, -0.1, 2.0));
                                         mat3 _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v[27];
                                         do
                                          {
                                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                {
                                                }
                                               else
                                                {
                                                 mat4x3(-1.4, -8.8, -7.6, 11.96, 8.5, -0.0, -17.15, 2935.7456, 540.563, 318.760, -649.597, 3.4);
                                                }
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                         mat3 _GLF_SWITCH_1_7v[52];
                                         mat3x2(-1.4, 8.1, 5093.0162, 46.22, -1.0, -89.55);
                                        }
                                       else
                                        {
                                         bvec4 _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v[14], _GLF_SWITCH_1_10v;
                                        }
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                        }
                                       break;
                                       case 5:
                                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (76255 & int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
                                        {
                                         do
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                {
                                                }
                                               else
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                  {
                                                   barrier();
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                              }
                                             if(_GLF_DEAD(false))
                                              {
                                               switch(_GLF_SWITCH((0 | 0)))
                                                {
                                                 case 82:
                                                 (ivec2(-21852, -20049) << 90912);
                                                 case 0:
                                                 do
                                                  {
                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                    {
                                                     switch(_GLF_SWITCH(0))
                                                      {
                                                       case 20:
                                                       mat2x3(178.716, 4190.2950, 53.87, 239.631, 7.5, -445.131);
                                                       case 9:
                                                       transpose(mat4x3(-4.9, -105.003, 5.4, 9.7, -215.671, -9.4, -1.4, -233.324, 9709.4310, 70.97, 1.7, 962.215))[2];
                                                       case 0:
                                                       barrier();
                                                       break;
                                                       case 18:
                                                       ivec4 _GLF_SWITCH_8_0v[9], _GLF_SWITCH_8_1v[77];
                                                       case 73:
                                                       bvec4(true, false, true, false);
                                                       default:
                                                       do
                                                        {
                                                         1;
                                                        }
                                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                      }
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(false));
                                                 break;
                                                 default:
                                                 1;
                                                }
                                              }
                                            }
                                           else
                                            {
                                             _GLF_SWITCH_1_0v;
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                        }
                                       default:
                                       do
                                        {
                                         do
                                          {
                                           if(_GLF_DEAD(false))
                                            barrier();
                                           do
                                            {
                                             switch(_GLF_SWITCH(0))
                                              {
                                               case 0:
                                               case 62:
                                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                {
                                                 1;
                                                }
                                               else
                                                {
                                                }
                                               break;
                                               default:
                                               1;
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 break;
                                 case 16:
                                 do
                                  {
                                   (bvec4(false, false, false, false) == bvec4(true, true, false, false));
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                 case 80:
                                 uvec3(subgroup_id, uvec2(52634u, 143408u));
                                 default:
                                 1;
                                }
                              }
                             else
                              {
                              }
                            }
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(true)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 bvec4(true, false, true, true);
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   do
                                    {
                                     barrier();
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                  }
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                    }
                                   else
                                    {
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                            {
                                            }
                                           else
                                            {
                                             if(_GLF_DEAD(false))
                                              barrier();
                                            }
                                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                            barrier();
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                               bvec4 _GLF_SWITCH_1_11v, _GLF_SWITCH_1_12v;
                              }
                             else
                              {
                               do
                                {
                                 do
                                  {
                                   do
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       if(_GLF_DEAD(false))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           barrier();
                                          }
                                        }
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                        {
                                         barrier();
                                        }
                                       if(_GLF_DEAD(false))
                                        {
                                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                          {
                                           barrier();
                                          }
                                        }
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               (-207.037 + outerProduct(vec4(-2603.7447, -5165.9457, 46.99, 5.0), vec3(-746.863, -24.55, -2.0)));
                               do
                                {
                                 mat2(-8.5, -2.7, 0.4, -0.1);
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               mat4 _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v;
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                {
                                 ;
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                }
                               uvec4 _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v[55];
                               mat4x2 _GLF_SWITCH_1_17v, _GLF_SWITCH_1_18v[26];
                               uvec4 _GLF_SWITCH_1_19v;
                              }
                            }
                           else
                            {
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           bvec4(false, true, true, true);
                           bvec4(true, false, false, true);
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
                            {
                             vec4(-969.591, -6.9, -6.6, -1852.7400);
                            }
                           else
                            {
                            }
                          }
                         while(true);
                         mat4(-9073.5135, 0.8, -54.89, -610.828, -379.968, 0.5, 0.8, 8.9, 334.100, 513.505, 691.790, -113.744, 9.1, -132.197, 5.7, -58.37);
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                     case 0:
                     case 79:
                     case 36:
                     case 68:
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 42:
                           bvec3 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v[70];
                           case 19:
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                             else
                              {
                              }
                            }
                           mat3(-724.770, 6664.1262, -4618.4015, 5241.3009, -7.4, 81.66, -423.746, -362.754, 5.1);
                           case 0:
                           case 79:
                           case 69:
                           case 85:
                           case 11:
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                  {
                                   case 82:
                                   (mat2x3(-5.3, 801.471, 5756.8815, -1541.5910, 534.749, -7.9) + 7.9);
                                   case 42:
                                   vec2 _GLF_SWITCH_8_0v;
                                   case 0:
                                   case 7:
                                   case 62:
                                   case 54:
                                   case 78:
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                    }
                                   else
                                    {
                                     barrier();
                                    }
                                   break;
                                   default:
                                   1;
                                  }
                                }
                              }
                            }
                           else
                            {
                            }
                           break;
                           case 90:
                           bvec2 _GLF_SWITCH_7_2v[39];
                           default:
                           1;
                          }
                        }
                       else
                        {
                        }
                      }
                     break;
                     case 7:
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if((faceforward(-9.0, 32.18, -3.1) < -50.45))
                        {
                        }
                       else
                        {
                         if(false)
                          {
                           ;
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             for(uint _GLF_SWITCH_1_20v, _GLF_SWITCH_1_21v[40], _GLF_SWITCH_1_22v; ((_GLF_SWITCH_1_0v --) == mat3x4(49.96, -96.93, 3818.8671, 1.8, 2.5, -5.9, -6.4, -31.37, -16.81, -2276.8309, -41.86, -80.91)); _GLF_SWITCH_1_0v)
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 0:
                                   case 67:
                                   case 20:
                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       switch(_GLF_SWITCH((1 ^ 1)))
                                        {
                                         case 0:
                                         case 29:
                                         case 64:
                                         case 51:
                                         case 16:
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) - 0)); _injected_loop_counter --)
                                            {
                                             barrier();
                                            }
                                          }
                                         if(_GLF_DEAD(false))
                                          barrier();
                                         break;
                                         default:
                                         1;
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   break;
                                   default:
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     1;
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               do
                                {
                                 workgroup_size;
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   do
                                    {
                                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                      {
                                       switch(_GLF_SWITCH(0))
                                        {
                                         case 17:
                                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))))); _injected_loop_counter --)
                                          {
                                           ;
                                          }
                                         if(_GLF_DEAD(false))
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             if(_GLF_DEAD(false))
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                {
                                                 barrier();
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                           do
                                            {
                                             barrier();
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                         case 0:
                                         case 26:
                                         case 67:
                                         case 75:
                                         case 8:
                                         case 41:
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          {
                                           do
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                {
                                                }
                                               else
                                                {
                                                 barrier();
                                                }
                                              }
                                             else
                                              {
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                          }
                                         case 43:
                                         case 92:
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           switch(_GLF_SWITCH(0))
                                            {
                                             case 79:
                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                {
                                                }
                                               else
                                                {
                                                 atan((7.0 + vec2(5.5, -762.489)), injectionSwitch);
                                                }
                                              }
                                             case 0:
                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                {
                                                }
                                               else
                                                {
                                                 (mat4(-6818.3212, 4740.8489, 4.5, -365.142, 21.45, -88.03, 1.0, 2893.4157, 1478.2636, -9830.2593, 5.6, 6.9, -65.36, 9254.7091, 76.21, 29.05) + mat4(-689.796, 7.3, -6437.8613, 546.243, 4836.4428, 93.29, 54.74, 8.2, 274.652, 4.7, 9135.5389, 7.7, -1.0, 481.049, 5.6, 9.9));
                                                }
                                              }
                                             break;
                                             case 95:
                                             for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                              {
                                               ivec3(10530, 81395, 28759);
                                              }
                                             case 74:
                                             mat3x4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
                                             default:
                                             1;
                                            }
                                          }
                                         else
                                          {
                                          }
                                         break;
                                         case 15:
                                         43521u;
                                         case 53:
                                         ivec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
                                         default:
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))))
                                            {
                                             case 30:
                                             -757.306;
                                             case 14:
                                             (_injected_loop_counter / ivec4(-60864, -27668, -59943, -73405));
                                             case 0:
                                             case 38:
                                             case 73:
                                             1;
                                             break;
                                             case 54:
                                             vec4(55.18, 0.9, -0.5, 767.456);
                                             default:
                                             1;
                                            }
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                               else
                                {
                                }
                              }
                            }
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 43:
                               uvec2(81990u, 27733u);
                               case 38:
                               do
                                {
                                 mat4x2(2.3, 369.504, -2.5, -5380.1648, 70.11, 4139.0569, 477.482, 378.994);
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))));
                               case 0:
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0))))))); _injected_loop_counter --)
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   mat2x4(1658.8405, 6.6, 905.727, 9038.0065, -7.0, 2.3, -2.0, -2239.0778);
                                  }
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               break;
                               default:
                               1;
                              }
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 0:
                             case 19:
                             case 15:
                             ;
                             case 87:
                             case 84:
                             case 44:
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               while(true)
                                {
                                 workgroup_base;
                                 vec4 _GLF_SWITCH_1_23v, _GLF_SWITCH_1_24v, _GLF_SWITCH_1_25v[66];
                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       switch(_GLF_SWITCH(0))
                                        {
                                         case 0:
                                         case 49:
                                         case 4:
                                         barrier();
                                         break;
                                         default:
                                         1;
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 mat2 _GLF_SWITCH_1_26v, _GLF_SWITCH_1_27v;
                                }
                              }
                             case 14:
                             mat3x2 _GLF_SWITCH_1_28v, _GLF_SWITCH_1_29v;
                             case 34:
                             case 82:
                             if(_GLF_DEAD(false))
                              barrier();
                             case 63:
                             bool _GLF_SWITCH_1_30v, _GLF_SWITCH_1_31v, _GLF_SWITCH_1_32v;
                             break;
                             case 93:
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               notEqual(bvec2(true, true), bvec2(false, true));
                              }
                             default:
                             1;
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                     case 23:
                     mat4x3 _GLF_SWITCH_1_33v[38];
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     default:
                     do
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 58:
                         mat3x4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                         case 55:
                         bvec3(false, false, false);
                         case 0:
                         case 59:
                         case 35:
                         case 98:
                         case 65:
                         case 49:
                         case 7:
                         case 34:
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           1;
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         break;
                         default:
                         1;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     break;
     case 47:
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))); _injected_loop_counter ++)
      {
       vec3(1.8, -281.206, -5446.8978);
      }
     case 76:
     for(     transpose(mat3x2(-1032.4196, -29.50, -84.13, -122.096, -22.47, 72.85));
 (packUnorm4x8(vec4(7914.2658, -40.93, -6776.9633, -6.6)) < num_workgroup); mat3x4(5358.5316))
      {
       bvec3(true, false, false);
      }
     default:
     1;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 43:
           for(mat3x2 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v; false; -46924)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               ;
              }
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  true;
                 }
               }
              else
               {
               }
              mat3x4 _GLF_SWITCH_7_2v, _GLF_SWITCH_7_3v[8], _GLF_SWITCH_7_4v;
              for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
               {
                GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
               }
              ivec3 _GLF_SWITCH_7_5v;
              for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
               {
                (int(true) + 50396);
               }
              (uvec4(88966u, 195551u, 13285u, 127108u));
              determinant((mat4(8012.7007, 4131.8491, 9.9, 7.4, 2.4, 96.64, -0.6, -832.533, -4.8, -0.1, -586.702, 0.1, 339.674, 56.40, -4.1, -4.9) - -8.7));
             }
             uvec3 _GLF_SWITCH_7_6v, _GLF_SWITCH_7_7v;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               while(bvec4(true, false, true, false)[1])
                {
                }
              }
             mat3x2(9809.5783, -56.39, -32.88, -94.99, -16.05, 305.145);
             mat3x4(mat2x3(-7288.5679, 2.4, 6057.2957, 5.7, -3.4, -7.7));
             (25090 % ivec2(1275, -93993));
            }
           case 0:
           case 68:
           case 66:
           switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0)))
            {
             case 89:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                  {
                  }
                 else
                  {
                   GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size;
                  }
                }
               else
                {
                }
              }
             else
              {
              }
             case 0:
             case 46:
             case 27:
             case 51:
             case 48:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             case 40:
             case 74:
             case 41:
             case 10:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               barrier();
              }
             case 55:
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                           do
                            {
                             do
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               else
                {
                }
              }
             break;
             case 91:
             mat4 _GLF_SWITCH_4_0v[70], _GLF_SWITCH_4_1v;
             case 52:
             mat2(-1353.5559, -74.39, 4813.9449, 46.77);
             default:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               1;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           break;
           default:
           1;
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
            }
           else
            {
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))))))))
        {
         case 0:
         case 94:
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         case 37:
         case 30:
         case 1:
         case 82:
         case 66:
         case 49:
         case 65:
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
              {
              }
             else
              {
               switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))))
                {
                 case 48:
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                  {
                   min(ivec2(-34174, -68593), ivec2(21544, -18577));
                  }
                 case 0:
                 case 88:
                 case 27:
                 case 7:
                 case 15:
                 case 33:
                 case 9:
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     do
                      {
                       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), int(2)))))
                        {
                         case 40:
                         bvec4 _GLF_SWITCH_8_0v;
                         case 0:
                         case 73:
                         case 30:
                         case 93:
                         case 94:
                         case 62:
                         case 69:
                         case 45:
                         case 75:
                         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                          {
                           do
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 29:
                               uint _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[41];
                               case 73:
                               ;
                               case 0:
                               if(_GLF_DEAD(false))
                                {
                                 do
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 52:
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     mat3x4 _GLF_SWITCH_7_0v[39], _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                                     case 0:
                                     case 5:
                                     case 29:
                                     case 93:
                                     case 49:
                                     case 96:
                                     case 43:
                                     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
                                      {
                                       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                        {
                                         case 79:
                                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                          {
                                           (++ GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size);
                                          }
                                         else
                                          {
                                          }
                                         case 0:
                                         case 35:
                                         case 68:
                                         case 26:
                                         case 6:
                                         case 41:
                                         case 42:
                                         case 1:
                                         case 97:
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          {
                                           do
                                            {
                                             barrier();
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                         for(int _injected_loop_counter = (1 ^ (0 | 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                                            {
                                            }
                                           else
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               if(_GLF_DEAD(false))
                                                {
                                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                                                  {
                                                   barrier();
                                                  }
                                                }
                                              }
                                            }
                                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))
                                            {
                                             barrier();
                                            }
                                           else
                                            {
                                            }
                                          }
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                         break;
                                         if(_GLF_DEAD(false))
                                          barrier();
                                         case 78:
                                         -36206;
                                         default:
                                         1;
                                        }
                                      }
                                     break;
                                     case 51:
                                     (((mat4(1099.3648, 30.68, -5.6, 9.0, 749.990, 490.248, 5193.8990, -103.777, -57.11, 3647.5164, 1.5, -1.8, -58.34, 8853.6933, -7.2, 69.84) != mat4(4.6, -57.55, 25.85, -3171.5020, -2.6, 6.7, -217.096, -5535.4772, -3.7, -823.558, -263.013, -458.910, -4663.3991, -2.6, 8683.3444, 71.37)) ? subgroup_id : num_workgroup) == subgroup_size);
                                     default:
                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                                      {
                                      }
                                     else
                                      {
                                       if(_GLF_DEAD(false))
                                        barrier();
                                      }
                                     do
                                      {
                                       1;
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               break;
                               case 27:
                               if(any(bvec4(false, bvec3(false, false, false))))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       185466u;
                                      }
                                    }
                                  }
                                 else
                                  {
                                  }
                                 mat4x3(mat3x2(-4.0, -0.8, 890.394, -2595.5725, 4.7, 0.0));
                                 do
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       barrier();
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 mat3x4 _GLF_SWITCH_5_2v, _GLF_SWITCH_5_3v;
                                 equal(GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gid, uvec3(156495u, 155167u, 155212u));
                                 mat2x3(1.8, -9.4, 10.29, 76.81, -7.8, -5.5);
                                }
                               default:
                               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                {
                                 1;
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         break;
                         default:
                         1;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                    }
                  }
                 break;
                 case 96:
                 float _GLF_SWITCH_8_0v[26], _GLF_SWITCH_8_1v;
                 default:
                 1;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
          }
         break;
         default:
         1;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint next_virtual_gid = GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.z + GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.x * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup.xyz.x = next_virtual_gid;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   switch(_GLF_SWITCH((0 | 0)))
    {
     case 29:
     if((false))
      {
       (ivec4(-90368, 23279, -31841, -35813) | sign((+ 61316)));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         bitfieldExtract(54643, -35747, 49521);
        }
       bvec2 _GLF_SWITCH_8_0v[56];
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         ;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         while(true)
          {
           ivec3(-77904, 70984, -61384);
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             (+ mat2x3(75.87, 668.172, -3601.2975, 6.8, 61.03, 84.07));
            }
           mat2 _GLF_SWITCH_8_1v[83];
          }
        }
       ivec3 _GLF_SWITCH_8_2v, _GLF_SWITCH_8_3v;
       GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
      }
     else
      {
       ivec4 _GLF_SWITCH_8_4v, _GLF_SWITCH_8_5v;
       (mat2(9.5, -3512.7366, 5.1, -2.3) - -5.8);
       mat4x2 _GLF_SWITCH_8_6v, _GLF_SWITCH_8_7v;
       for(       bvec4(true, false, true, false);
 true; bvec3(false, false, true))
        {
         ;
         injectionSwitch;
         while(false)
          {
           bvec2(true, true);
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))))))))
            {
            }
           else
            {
             bvec2(false, true);
            }
           ;
           mat2x4 _GLF_SWITCH_8_8v, _GLF_SWITCH_8_9v[87];
           _GLF_SWITCH_8_8v;
           bvec3(false, false, false);
           vec4(4931.8767, 8.9, 21.44, 969.117);
          }
         if(false)
          {
           min(mix(uvec3(152139u, 91434u, 65064u), uvec3(146692u, 140949u, 49974u), bvec3(false, false, false)), num_workgroup);
           bvec3(bvec4(true, true, false, true));
           ;
           mat4x3(-1.2, 8.2, 4.2, -33.25, 38.43, 6.1, 9.2, 8009.7438, -9.4, 80.02, 539.018, -5224.6621);
           vec4(3498.9649, -354.817, 6572.0775, 5.1);
           uvec3 _GLF_SWITCH_8_10v, _GLF_SWITCH_8_11v, _GLF_SWITCH_8_12v[47];
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             ;
            }
           (mat3x2(-10.07, -1.7, -59.34, -64.09, -2.4, -4268.6266) , mat4(-3.6, -5.8, -27.05, 86.15, -20.51, -9.0, -956.822, 10.47, 70.13, 9805.8867, -61.92, 0.1, 869.889, 2244.2192, -4513.8601, -1.2));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
            }
           else
            {
            }
          }
         while((atomicOr(subgroup_size, subgroup_size) < uvec3(52947u, 22667u, 181249u).t))
          {
           (-23144 - ivec2(-60999, -94809));
           bvec3(false, true, false);
          }
         {
          (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup & uvec4(177325u, 150u, 198394u, 95305u));
          mat3x2 _GLF_SWITCH_8_13v, _GLF_SWITCH_8_14v;
          do
           {
            ;
           }
          while(_GLF_WRAPPED_LOOP(false));
          _GLF_SWITCH_8_7v;
         }
         do
          {
           if(isnan(-6.2))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 (true ? mat2x4(7.0, -6135.2285, -79.79, -3496.1586, -6.8, 479.282, -6.5, -8.6) : mat2x4(384.408, -96.54, 1993.7392, 287.636, 8.0, -2.7, 83.62, 0.8));
                }
              }
             else
              {
              }
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0) | 0)); _injected_loop_counter --)
              {
               mat3x4(4.2, 79.62, -342.792, 4.0, -7.7, -8.2, 2.6, 4228.4551, -6.9, 2.5, -382.436, -9.6);
              }
             -18175;
             ivec3 _GLF_SWITCH_8_15v[43];
             max(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup, next_virtual_gid);
             do
              {
               mat4(mat2(-7370.6905, 7.8, 9.6, 2.8));
              }
             while(_GLF_WRAPPED_LOOP(false));
             for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
              {
               mat3(-2.2, 1.6, 2.9, 37.06, -499.861, 98.11, 33.48, -1.0, 41.79);
              }
            }
           else
            {
             mat2x3(3.4, 6070.8335, -56.08, 571.899, 3.8, 4.9);
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         uvec4 _GLF_SWITCH_8_16v;
        }
       if(false)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           int _GLF_SWITCH_8_17v, _GLF_SWITCH_8_18v;
           (greaterThan(ivec2(79646, 26215), _GLF_SWITCH_8_5v.qs) == bvec2(true, true));
          }
         if(any(bvec2(false, false)))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup ^ workgroup_size);
            }
           max(27311, abs(80728));
           ;
           mat2(8.3, 5637.4492, -7.9, -4.1);
           mat4(57.65, -5871.8453, 509.133, -765.184, -259.233, -3.2, 489.593, -56.72, 71.66, 9.0, -13.42, -619.262, 7692.3088, -9.1, -5.7, 0.9);
          }
         else
          {
           (ivec3(13036, -23505, -56022) / clamp(bitfieldInsert(ivec3(-66148, -34907, -71503), ivec3(40136, 93721, 62112), 73151, -85778), -32454, -57181));
           bool _GLF_SWITCH_8_19v[3], _GLF_SWITCH_8_20v, _GLF_SWITCH_8_21v[7];
           vec3(165.343, -1.3, 3.2);
           6.1;
           vec2 _GLF_SWITCH_8_22v[15], _GLF_SWITCH_8_23v, _GLF_SWITCH_8_24v[49];
           ivec2 _GLF_SWITCH_8_25v, _GLF_SWITCH_8_26v;
           mat3x4 _GLF_SWITCH_8_27v;
           for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             vec4(296.342, -9758.0163, 319.630, 1016.9314);
            }
           do
            {
             ;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while((bvec2(false, true) != bvec2(false, false)))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             ivec4(-47504, 65094, -47648, -33350);
            }
           else
            {
            }
          }
         (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id * (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id & num_workgroup));
         ;
         int _GLF_SWITCH_8_28v, _GLF_SWITCH_8_29v[61];
        }
       else
        {
         for(         outerProduct(vec3(9603.1457, 4242.9730, -679.691), injectionSwitch);
 (27409 != 15588); false)
          {
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           tan(injectionSwitch);
          }
         else
          {
          }
         if(false)
          {
           bool _GLF_SWITCH_8_30v, _GLF_SWITCH_8_31v, _GLF_SWITCH_8_32v[41];
           ivec4 _GLF_SWITCH_8_33v;
           uint _GLF_SWITCH_8_34v;
           do
            {
             floatBitsToUint(injectionSwitch);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
           (- mat2(7.6, 628.118, 8.2, 6.6));
           (mat2x4(3.0, 99.88, 5.5, -4325.8933, 6928.8544, 38.51, 7.1, -5115.6409) - (+ mat2x4(6.6, 26.67, 1580.3444, -138.289, -2.3, -44.40, -77.41, -4.6)));
           bvec2(true, true);
           float _GLF_SWITCH_8_35v;
          }
        }
       {
        for(bool _GLF_SWITCH_8_36v[26], _GLF_SWITCH_8_37v, _GLF_SWITCH_8_38v[26]; (_GLF_SWITCH_8_6v == mat4x2(-90.18, 3396.7134, 8205.2674, -47.20, 0.2, 191.824, -4.6, 7.1)); _GLF_SWITCH_8_4v)
         {
          mat3x4 _GLF_SWITCH_8_39v[95], _GLF_SWITCH_8_40v, _GLF_SWITCH_8_41v;
          ivec3(55484, -14366, 13354);
          ivec4 _GLF_SWITCH_8_42v;
          vec4 _GLF_SWITCH_8_43v;
          mat2 _GLF_SWITCH_8_44v;
          mat4x2 _GLF_SWITCH_8_45v;
          bvec2(false, false);
         }
        ivec4(938, 42356, -43440, -74038);
        mat3 _GLF_SWITCH_8_46v, _GLF_SWITCH_8_47v;
        while(false)
         {
          for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)))); _injected_loop_counter --)
           {
            (++ (_GLF_SWITCH_8_47v));
           }
          GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup;
          vec4(-8.0, 8.0, 1295.7544, -359.582);
          floatBitsToUint(72.02);
          mat2(6.0, -96.10, 64.75, 6.4);
          -68.47;
          _GLF_SWITCH_8_7v;
          floatBitsToUint(-7.8);
         }
        if(_GLF_WRAPPED_IF_FALSE(false))
         {
         }
        else
         {
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            (roundEven(-3.5) / mat4(9.3, -71.31, -3.3, 1.7, 316.759, 64.16, -836.663, 740.750, -7.5, 7.3, -392.779, 2133.5138, -3.8, -0.5, 106.136, -64.35));
           }
          else
           {
           }
         }
        {
         injectionSwitch;
         mat2(27.23, 66.96, 53.37, 2.8);
         ;
        }
        mat3x4(2.3, 574.997, -99.41, 7.8, 5.2, 48.34, 803.318, 1.1, -966.816, -1.6, -79.95, 57.06);
       }
      }
     case 79:
     max(vec4(-1366.7704, 0.4, 9.7, 6.9), vec4(-11.30, -495.510, -1.2, -31.03));
     case 0:
     case 63:
     case 41:
     case 52:
     case 82:
     case 76:
     case 36:
     case 43:
     do
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 55:
         case 60:
         case 36:
         case 83:
         case 78:
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           atomicStore(buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup.xyz.x], uint(1), 4, 64, 4);
          }
         else
          {
          }
         break;
         case 84:
         ivec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
         default:
         1;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     break;
     default:
     1;
    }
  }
 else
  {
  }
 uint read = atomicLoad(buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup.xyz.z], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, clamp(1, 1, 1))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       switch(_GLF_SWITCH(((0 >> _GLF_IDENTITY(int(4), int(4))) | 0)))
        {
         case 0:
         GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup.xyz.y = read;
         break;
         case 89:
         if((5361.4969 != 7735.8135))
          {
           vec3 _GLF_SWITCH_8_0v;
           uint _GLF_SWITCH_8_1v, _GLF_SWITCH_8_2v;
           (mat3x4(-2855.0920, -870.211, -571.947, -1.5, -7437.5050, 438.358, -0.4, -731.054, -3.4, -35.11, -12.42, -518.902) + mat3x4(3.2, 5.5, -4.3, 4.2, -789.929, -3.2, 1.9, 9157.2492, 40.25, -71.27, 0.5, 6838.5505));
           float _GLF_SWITCH_8_3v;
           GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
           mat3 _GLF_SWITCH_8_4v, _GLF_SWITCH_8_5v;
          }
         default:
         1;
        }
      }
     else
      {
      }
    }
  }
 if(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     atomicStore(checker[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup.xyz.z], GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup.xyz.y, 4, 64, 4);
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))))); _injected_loop_counter ++)
          {
           subgroupAll(false);
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
            }
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(checker[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup.xyz.z], GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup.xyz.y, 4, 64, 4);
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     switch(_GLF_SWITCH(0))
      {
       case 10:
       if(((subgroup_id & virtual_gid) < 148352u))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           mat4x2(89.26, -81.57, -5.2, 6.9, -4.0, 4.3, 92.57, 9200.7959);
          }
         else
          {
          }
         uvec2(85122u, 122855u);
         ivec2 _GLF_SWITCH_6_0v;
         do
          {
           lessThan(ivec4(-85352, 92129, 86071, -55114), ivec4(-93379, -82624, 30569, -32836));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       case 35:
       do
        {
         uint _GLF_SWITCH_6_1v;
         ivec2(7555, 92927).stss;
         GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup;
         vec3 _GLF_SWITCH_6_2v;
         uvec4 _GLF_SWITCH_6_3v;
         mat2(8.3, 8984.5832, 8.2, 0.6);
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           vec4(-64.08, 49.29, -4.8, 7614.7527);
          }
         ivec3 _GLF_SWITCH_6_4v, _GLF_SWITCH_6_5v;
         6.6;
        }
       while(false);
       case 0:
       case 1:
       case 69:
       case 56:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 + (int(_GLF_ZERO(0.0, injectionSwitch.x))))))
            {
             case 64:
             (vec4(-607.579, 3.9, 6.2, 4.9));
             case 0:
             case 62:
             case 23:
             case 58:
             case 68:
             case 45:
             if(_GLF_DEAD(false))
              barrier();
             case 18:
             case 43:
             case 14:
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 do
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(_injected_loop_counter) : int(6))))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                    {
                     subgroupAll(true);
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             break;
             case 87:
             workgroup_id;
             case 90:
             2583;
             default:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               1;
              }
            }
          }
         else
          {
          }
        }
       break;
       case 17:
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         _injected_loop_counter;
        }
       case 88:
       mat4 _GLF_SWITCH_6_6v[51];
       default:
       1;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 2:
                 int _GLF_SWITCH_3_0v[40], _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                 case 0:
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 9:
                         uvec2 _GLF_SWITCH_7_0v;
                         case 50:
                         (max(uvec4(32308u, 108470u, 53958u, 114732u), (read & GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size)) * (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup ++).x);
                         case 0:
                         case 63:
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             barrier();
                            }
                          }
                         case 82:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               do
                                {
                                 barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                              }
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                            }
                          }
                         break;
                         case 79:
                         (vec3(3777.1537, 2.1, 888.884));
                         case 52:
                         mat2x4(-479.704, 539.168, -58.26, 33.82, 9.8, -91.74, -732.380, -7519.6696);
                         default:
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           1;
                          }
                         else
                          {
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 break;
                 default:
                 1;
                }
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = (1 ^ ((0 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(0), int(0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 93:
         do
          {
           uvec3(139004u, 146369u, 12225u);
          }
         while(_GLF_WRAPPED_LOOP(false));
         case 0:
         case 9:
         case 46:
         case 7:
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           switch(_GLF_SWITCH(0))
            {
             case 40:
             uvec2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 0:
                         case 18:
                         case 7:
                         case 85:
                         case 83:
                         case 88:
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                            {
                            }
                           else
                            {
                             do
                              {
                               do
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 0:
                                   case 17:
                                   case 99:
                                   barrier();
                                   break;
                                   case 29:
                                   vec3 _GLF_SWITCH_4_0v;
                                   case 55:
                                   GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.r;
                                   default:
                                   do
                                    {
                                     do
                                      {
                                       switch(_GLF_SWITCH(0))
                                        {
                                         case 19:
                                         bvec2 _GLF_SWITCH_8_0v;
                                         case 0:
                                         case 24:
                                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                                          {
                                           1;
                                          }
                                         break;
                                         case 34:
                                         ;
                                         default:
                                         1;
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                          }
                         break;
                         default:
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             for(int _injected_loop_counter = (53426 & _GLF_IDENTITY(0, clamp(0, 0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                            }
                          }
                         1;
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 14:
                       mat3x4 _GLF_SWITCH_5_0v[22];
                       case 0:
                       case 79:
                       barrier();
                       break;
                       case 30:
                       vec3(8.1, 9.4, 1.6);
                       default:
                       1;
                      }
                    }
                  }
                }
              }
             case 92:
             uvec2 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = ((0 | 1) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                }
              }
             do
              {
               switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) ^ 0)))
                {
                 case 0:
                 case 84:
                 case 17:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             case 0:
             case 13:
             case 91:
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     switch(_GLF_SWITCH(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))))
                      {
                       case 16:
                       ivec2(ivec3(82488, 39885, -68027));
                       case 70:
                       if(_GLF_DEAD(false))
                        barrier();
                       mat3x4 _GLF_SWITCH_7_0v[68];
                       case 0:
                       case 54:
                       case 33:
                       case 81:
                       case 45:
                       case 89:
                       case 92:
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                       break;
                       default:
                       1;
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                  }
                }
              }
             else
              {
              }
             case 75:
             case 14:
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             case 34:
             case 15:
             case 71:
             case 11:
             case 59:
             for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               do
                {
                 do
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 7:
                     ivec2 _GLF_SWITCH_8_0v, _GLF_SWITCH_8_1v, _GLF_SWITCH_8_2v;
                     case 0:
                     case 75:
                     case 43:
                     do
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         do
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               else
                                {
                                }
                              }
                             else
                              {
                               do
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                    {
                                     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                      {
                                       case 47:
                                       mat3x2((-0.7 - mat2x3(-4279.8022, 964.733, 97.66, -7119.5752, 4.4, -5.5)));
                                       case 65:
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gidnum_workgroup.rb;
                                          }
                                        }
                                       else
                                        {
                                        }
                                       case 0:
                                       case 58:
                                       case 27:
                                       case 15:
                                       case 12:
                                       barrier();
                                       break;
                                       case 29:
                                       ivec4(88407, 18152, 75025, -40183);
                                       case 72:
                                       ivec2 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v;
                                       default:
                                       1;
                                      }
                                    }
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                               if(_GLF_DEAD(false))
                                barrier();
                               switch(_GLF_SWITCH(((0 >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(6), int(6)))))
                                {
                                 case 48:
                                 mat4x3(257.205, -77.74, -59.10, 62.77, 1140.8945, -337.786, 499.473, -1.7, -2.0, -29.06, -4.6, 172.556);
                                 case 10:
                                 float _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                                 case 0:
                                 case 24:
                                 case 85:
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                      {
                                       barrier();
                                      }
                                    }
                                  }
                                 case 27:
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 case 20:
                                 do
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     switch(_GLF_SWITCH((0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))
                                      {
                                       case 75:
                                       mat2x4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v;
                                       case 0:
                                       case 52:
                                       case 34:
                                       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
                                        barrier();
                                       case 35:
                                       case 93:
                                       case 26:
                                       case 96:
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         do
                                          {
                                           barrier();
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                       else
                                        {
                                        }
                                       break;
                                       case 17:
                                       if(_GLF_DEAD(false))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                                          {
                                          }
                                         else
                                          {
                                           barrier();
                                          }
                                        }
                                       uvec4 _GLF_SWITCH_7_2v, _GLF_SWITCH_7_3v[59], _GLF_SWITCH_7_4v;
                                       case 53:
                                       uvec4(76178u, 12945u, 148725u, 7536u);
                                       default:
                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                        {
                                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
                                          {
                                           1;
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 case 1:
                                 case 61:
                                 case 65:
                                 case 88:
                                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                  {
                                   case 51:
                                   transpose((5404.4506 - mat2(-542.301, 89.94, -8101.6744, -3584.1098)));
                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), _GLF_IDENTITY(int(4), (int(4)) + 0))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
                                    {
                                     if(_GLF_DEAD(false))
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           barrier();
                                          }
                                        }
                                      }
                                    }
                                   case 0:
                                   case 11:
                                   case 25:
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                       if(_GLF_DEAD(false))
                                        barrier();
                                      }
                                     else
                                      {
                                       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                                        barrier();
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                            {
                                             switch(_GLF_SWITCH(0))
                                              {
                                               case 95:
                                               do
                                                {
                                                 mat4x2((sinh(_GLF_SWITCH_4_1v) + mat2(-3.5, -933.010, -12.59, 70.30)));
                                                }
                                               while(_GLF_WRAPPED_LOOP(false));
                                               case 0:
                                               case 96:
                                               case 44:
                                               case 2:
                                               case 25:
                                               case 51:
                                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                {
                                                 if(_GLF_DEAD(false))
                                                  barrier();
                                                }
                                               case 19:
                                               case 76:
                                               case 42:
                                               case 72:
                                               do
                                                {
                                                 barrier();
                                                }
                                               while(_GLF_WRAPPED_LOOP(false));
                                               break;
                                               default:
                                               1;
                                              }
                                            }
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                    }
                                   break;
                                   default:
                                   1;
                                  }
                                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                                  barrier();
                                 break;
                                 default:
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                    {
                                     for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
                                      {
                                       switch(_GLF_SWITCH(0))
                                        {
                                         case 22:
                                         do
                                          {
                                           ;
                                          }
                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                         case 0:
                                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                          {
                                           if(_GLF_DEAD(false))
                                            barrier();
                                          }
                                         1;
                                         break;
                                         case 38:
                                         (++ GLF_merged3_0_1_16_1_1_4_2_1_11next_virtual_gidreadvirtual_gid);
                                         case 76:
                                         mat4(-0.0, 4.1, -817.379, 2100.0018, -28.38, 7.8, -818.596, -3.9, -544.851, 161.049, -0.3, -9.3, -85.33, -76.43, 2523.2594, -281.653);
                                         default:
                                         1;
                                        }
                                      }
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         for(int _injected_loop_counter = ((int(_GLF_ZERO(0.0, injectionSwitch.x)) & -12570) & -57394); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               do
                                {
                                 switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | 0)))))
                                  {
                                   case 28:
                                   do
                                    {
                                     (vec2(8150.7047, -2024.8925) - injectionSwitch);
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                                   case 15:
                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                    {
                                     do
                                      {
                                       ((88.15 + mat4x3(89.35, 64.00, 28.41, -8.3, 835.855, 164.455, 159.350, -5.7, 8653.8327, 5.1, -73.87, -1592.8401)) == (299.127 + mat4x3(-487.709, 948.289, -3.3, 8005.2139, -241.442, 2072.3747, 4.5, 51.84, 407.839, -36.75, -118.333, -3.3)));
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                   case 0:
                                   barrier();
                                   break;
                                   case 76:
                                   true;
                                   case 89:
                                   mat2x3(4228.4077, -5.7, -42.95, 617.604, -3876.6514, -0.9);
                                   default:
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   1;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false)));
                     break;
                     case 24:
                     do
                      {
                       uvec4(31027u, 194497u, 168095u, 188004u);
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     default:
                     1;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             break;
             case 98:
             if(false)
              {
              }
             case 88:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 0:
                 case 83:
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 35:
                           do
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
                              {
                               ;
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           case 60:
                           transpose(mat2x4(-4.5, 2.8, -14.31, 392.135, -6543.3729, 56.45, 4.0, 315.844));
                           case 0:
                           case 9:
                           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                            {
                             case 0:
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                             case 97:
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 barrier();
                                }
                              }
                             else
                              {
                              }
                             case 4:
                             case 81:
                             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
                                {
                                 barrier();
                                }
                              }
                             case 79:
                             case 16:
                             case 32:
                             case 31:
                             case 87:
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   notEqual(uvec3((uvec4(174951u, 19328u, 143189u, 67217u) << uvec4(144526u, 48152u, 150221u, 180617u))), uvec3(180035u, 78442u, 5109u));
                                  }
                                }
                               else
                                {
                                }
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                               barrier();
                              }
                             break;
                             default:
                             1;
                            }
                           break;
                           case 19:
                           uvec2 _GLF_SWITCH_2_0v;
                           default:
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ (0 | 1))); _injected_loop_counter --)
                            {
                             do
                              {
                               1;
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 break;
                 default:
                 do
                  {
                   1;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                }
              }
             else
              {
              }
             default:
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 1;
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         break;
         if(_GLF_DEAD(false))
          barrier();
         case 66:
         {
          if(_GLF_DEAD(false))
           {
            do
             {
              barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
           {
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
             }
            else
             {
              ;
             }
           }
          else
           {
           }
          uvec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[56], _GLF_SWITCH_3_2v;
          ivec2 _GLF_SWITCH_3_3v;
          _GLF_SWITCH_3_0v;
          (mat3(-12.33, 7731.6239, -5693.8512, 588.638, 6.1, 2.0, 1.2, -93.79, 153.921) - mat3(-86.77, -612.520, 548.448, -621.974, -141.655, 6.8, -29.42, 1118.7068, -6534.7561));
         }
         if(_GLF_DEAD(false))
          barrier();
         default:
         do
          {
           1;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
