#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 uint subgroup_id;
 mat4x3 _f0;
 ivec3 _f1;
 int _f2;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 bvec2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 vec2 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 mat3x4 _f1;
 int _f2;
 bool _f3;
 mat2x3 _f4;
 mat2x4 _f5;
 uint _f6;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 mat4x3 _f1;
 mat2x4 _f2;
 bvec2 _f3;
 int _f4;
 uint _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 mat4 _f1;
 mat2x3 _f2;
 _GLF_struct_0 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_2 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 uint _f1;
 uint read;
 vec4 _f2;
 mat4 _f3;
 int _f4;
 mat3x2 _f5;
 uvec4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_5(mat4x2(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), ! (! (bool((true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(bvec2(bvec2(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(bvec2(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.2) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (injectionSwitch.x) + 0.0))) < injectionSwitch.y))))), ivec4(1)), _GLF_struct_6(gl_SubgroupID, mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-408.299) : 1.0)) : _GLF_FUZZED(-69.58)))) / 1.0)), ivec3(1), 1), vec2(1.0), ivec4(1));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).x, mix(float(_GLF_FUZZED(vec4(-1.6, 74.16, 52.42, 6.5).g)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).x), bool(true))) > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))[2], gl_WorkGroupID[2])), max(_GLF_IDENTITY(gl_WorkGroupID[2], max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))[2], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))[2], gl_WorkGroupID[2])))))), (gl_WorkGroupID) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-356.302) : 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-356.302), (false ? _GLF_FUZZED(-2.1) : _GLF_FUZZED(-356.302))) : 0.0, clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(-356.302), (false ? _GLF_FUZZED(-2.1) : _GLF_FUZZED(-356.302))) : 0.0, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-356.302), (false ? _GLF_FUZZED(-2.1) : _GLF_FUZZED(-356.302))) : 0.0, clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(-356.302), (false ? _GLF_FUZZED(-2.1) : _GLF_FUZZED(-356.302))) : 0.0, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-356.302), (false ? _GLF_FUZZED(-2.1) : _GLF_FUZZED(-356.302))) : 0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-356.302), (false ? _GLF_FUZZED(-2.1) : _GLF_FUZZED(-356.302))) : 0.0) / 1.0), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-356.302), (false ? _GLF_FUZZED(-2.1) : _GLF_FUZZED(-356.302))) : 0.0, clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(-356.302), (false ? _GLF_FUZZED(-2.1) : _GLF_FUZZED(-356.302))) : 0.0, false ? _GLF_IDENTITY(_GLF_FUZZED(-356.302), (false ? _GLF_FUZZED(-2.1) : _GLF_FUZZED(-356.302))) : 0.0, false ? _GLF_IDENTITY(_GLF_FUZZED(-356.302), (false ? _GLF_FUZZED(-2.1) : _GLF_FUZZED(-356.302))) : 0.0)))), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-356.302), (false ? _GLF_FUZZED(-2.1) : _GLF_FUZZED(-356.302))) : 0.0, max(false ? _GLF_IDENTITY(_GLF_FUZZED(-356.302), (false ? _GLF_FUZZED(-2.1) : _GLF_FUZZED(-356.302))) : 0.0, false ? _GLF_IDENTITY(_GLF_FUZZED(-356.302), (false ? _GLF_FUZZED(-2.1) : _GLF_FUZZED(-356.302))) : 0.0)))))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0)))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id));
 uint subgroup_base = _GLF_struct_replacement_7._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) | 0u)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false)), false)), true && _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), true, false, false))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), true, false, false))), true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false), bvec2(bvec4(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false), false, false))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_IDENTITY(true, (true) || false)))))), true, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false), bvec2(bvec4(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false), false, false)))))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))), true, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false), bvec2(bvec4(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false), false, false))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_IDENTITY(true, (true) || false)))))), true, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false), bvec2(bvec4(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false), false, false)))))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), (! (false)) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))), (! (false)) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, min(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_base))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, min(_GLF_IDENTITY((workgroup_base) | 0u, clamp((workgroup_base) | 0u, (workgroup_base) | 0u, (workgroup_base) | 0u)), (workgroup_base) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, uint(uvec2((workgroup_base) | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))) / 1u)) * 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)))) * 1u))) + subgroup_base + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true))))), false, true))))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), subgroup_local_id + 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(bvec3(true), mat4(1.0), mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0)), _GLF_struct_0(ivec2(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1))))), mat4x3(1.0), mat2x4(1.0), bvec2(true), 1, 1u, _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(true), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(true), false), false))))))))), _GLF_struct_1(mat4x2(1.0), mat3x4(1.0), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(-48923))), true, mat2x3(1.0), mat2x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5504.6361)))), _GLF_IDENTITY(1u, uint(uint(1u)))), _GLF_struct_2(uvec4(1u), bvec4(true)), mat2x3(1.0)), _GLF_IDENTITY(1u, (1u) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), ~ (_GLF_IDENTITY(~ (int(int(0))), (~ (int(int(0)))) - 0)))), (0) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), clamp(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, (0) | (0))))) / 1))), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), ~ (~ ((0) | (0))))), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0))))) / 1, int(ivec2((_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), ~ (~ ((0) | (0))))), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0))))) / 1, 1)))))))), _GLF_IDENTITY(0, int(ivec2(0, 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), 0 + ((0))))), 1, 0, 1)), (_GLF_IDENTITY(int(ivec4((0), 1, 0, 1)), min(int(ivec4((0), 1, 0, 1)), int(ivec4((0), 1, 0, 1))))) ^ 0)) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), min(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3))))))) + ivec4(0, 0, 0, 0)))))), 0 | _GLF_IDENTITY((int(_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | 0))), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0))))))), clamp((int(_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | 0))), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0))))))), (int(_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | 0))), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | 0))), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0))))))), ((int(_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | 0))), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0)))))))) * 1)))))), (false ? _GLF_FUZZED(-63817) : _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, 0 ^ (3)))))))))), (ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, 0 ^ (3)))))))))), (ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0)))) << (-97390 & 0))), ~ (~ (_GLF_IDENTITY((0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0)))), (true ? _GLF_IDENTITY((0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) ^ 0), 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0)))), 1 * ((0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), min(_GLF_IDENTITY((0), ((0)) | ((0))), (0)))), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 3 : _GLF_FUZZED(-7874))), 3))))))) + ivec4(0, 0, 0, 0)))))) : _GLF_FUZZED(-40729)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0)))), (0 << _GLF_IDENTITY(int(7), int(7))) ^ ((0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0)))))))), ~ (~ (int(_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0), int(ivec4((0), 1, 1, 0))) | (_GLF_IDENTITY(0, (0) | (1 ^ 1)))), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0)))), (0 << _GLF_IDENTITY(int(7), int(7))) ^ ((0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, 0, 0, 0))))))))))))), (_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), 0 + (0 >> _GLF_IDENTITY(int(3), int(3)))))), (ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0), max((0), (0))) | (0)), 0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))))) + ivec4(0, _GLF_IDENTITY(0, (0) / 1), 0, 0))))))))) ^ 0))))), vec4(1.0), mat4(1.0), 1, mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), uvec4(_GLF_IDENTITY(1u, 0u ^ (1u))));
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(true, false || (true)) ? 64 : _GLF_FUZZED(-23674))))), (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(true, false || (true)) ? 64 : _GLF_FUZZED(-23674)))))) | 0), (_GLF_IDENTITY(64, (64) | (64))) * 1))), _GLF_IDENTITY(4, 0 + (4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), max(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y)))))) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))))) && true))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))))), ! (! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))))))))), bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), clamp(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.38)), bool(false)))) / 1.0)))), 1.0, 0.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-981.682)), float(1.0), bool(true))), 1.0, 1.0, 0.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   _GLF_IDENTITY(_GLF_struct_replacement_4.read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) * 1)), (_GLF_struct_replacement_4.read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec4(4, 0, 1, 0))))), 64, 2)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(77950u) : 0u))) - 0u));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch)).y, injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))), true && (! (bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   subgroupAll(false);
   _GLF_IDENTITY(_GLF_struct_replacement_4.read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) - 0, (_GLF_IDENTITY((64) - 0, (false ? _GLF_FUZZED(-14859) : (64) - 0))) << 0)))), clamp(~ (~ (64)), ~ (~ (64)), ~ (~ _GLF_IDENTITY((64), (true ? _GLF_IDENTITY((64), ((64)) << 0) : _GLF_IDENTITY(_GLF_FUZZED(-96428), min(_GLF_IDENTITY(_GLF_FUZZED(-96428), (false ? _GLF_FUZZED(-94772) : _GLF_FUZZED(-96428))), _GLF_IDENTITY(_GLF_FUZZED(-96428), max(_GLF_FUZZED(-96428), _GLF_IDENTITY(_GLF_FUZZED(-96428), int(ivec3(_GLF_FUZZED(-96428), 0, 1))))))))))))), 2), ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_4.read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) ^ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2)))) / 1u)))), (~ (_GLF_IDENTITY(_GLF_struct_replacement_4.read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), uint(uvec4(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_struct_replacement_4.read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), (0 | (4)) << 0)), _GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), (64) ^ 0), 2), _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(0u, 0u, 0u), max(clamp(0u, 0u, 0u), _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), 0u), 0u ^ (clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), clamp(_GLF_IDENTITY(clamp(0u, 0u, 0u), max(clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (_GLF_IDENTITY(min(0u, 0u), max(min(0u, 0u), min(0u, 0u)))) << 0u))))), _GLF_IDENTITY(clamp(0u, 0u, 0u), _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(virtual_gid)), clamp((true ? 0u : _GLF_FUZZED(virtual_gid)), (true ? 0u : _GLF_FUZZED(virtual_gid)), (true ? 0u : _GLF_FUZZED(virtual_gid))))))) ^ (clamp(0u, 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(0u, 0u, 0u), max(clamp(0u, 0u, 0u), _GLF_IDENTITY(clamp(0u, 0u, 0u), 0u ^ (_GLF_IDENTITY(clamp(0u, 0u, 0u), max(clamp(0u, 0u, 0u), clamp(0u, 0u, 0u))))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u), max(clamp(0u, 0u, 0u), _GLF_IDENTITY(clamp(0u, 0u, 0u), 0u ^ (clamp(0u, 0u, 0u))))))), (uint(uint(_GLF_IDENTITY(clamp(0u, 0u, 0u), max(clamp(0u, 0u, 0u), _GLF_IDENTITY(clamp(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))), 0u ^ (clamp(0u, 0u, 0u)))))))) << 0u)), _GLF_IDENTITY(clamp(0u, 0u, 0u), _GLF_IDENTITY(max(clamp(0u, 0u, 0u), _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) + 0u), 0u)), 0u), 0u ^ (clamp(0u, 0u, 0u)))), (max(clamp(0u, 0u, 0u), _GLF_IDENTITY(clamp(0u, 0u, 0u), 0u ^ (clamp(0u, 0u, 0u))))) + 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.read = atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_struct_replacement_4.read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (~ (atomicLoad(buf[virtual_gid], 4, 64, 2))))) / (1u | 1u)), (_GLF_IDENTITY(_GLF_struct_replacement_4.read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((0 | 0), 0 + ((0 | 0))) + (2))), (_GLF_struct_replacement_4.read = atomicLoad(buf[virtual_gid], 4, 64, 2)) / (1u | 1u))) >> 0u)))) / 1u))) * _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(workgroup_size)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), max(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) >> 0u))), _GLF_IDENTITY(1u, min(1u, 1u)))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u + (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), clamp(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size)))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(workgroup_size), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(workgroup_size)) + 0u), true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(workgroup_size)))), (true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(workgroup_size))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.1), _GLF_FUZZED(665.308)), bvec2(false, false))).y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_4.read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
