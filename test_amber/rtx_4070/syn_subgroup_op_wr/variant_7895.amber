#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-59.85), clamp(_GLF_IDENTITY(_GLF_FUZZED(-59.85), 0.0 + (_GLF_FUZZED(-59.85))), _GLF_IDENTITY(_GLF_FUZZED(-59.85), min(_GLF_FUZZED(-59.85), _GLF_FUZZED(-59.85))), _GLF_FUZZED(-59.85))))))), ~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), mix(float(_GLF_FUZZED(-273.564)), float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))), bool(true))), 0.0, 1.0, cos(0.0), abs(0.0), 0.0))), min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-59.85))))), max(_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-59.85))))), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-59.85)))))) | (int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))), log(1.0) + (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))), max(min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))), min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)))))))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-59.85))))))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-59.85)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), _GLF_IDENTITY((0), min((0), (0))) | (0)) | 1), (true ? (0 | 1) : _GLF_FUZZED(-24953))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((0 | 1), (true ? (0 | 1) : _GLF_FUZZED(-24953)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))) - _GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(-7434.3642) : log(1.0)))), 0.0, 0.0, 1.0)), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((5.8 + 825.908))), mix(vec2((vec2((injectionSwitch)[0], _GLF_FUZZED((5.8 + 825.908))))[0], _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED((5.8 + 825.908))))[1], 0.0 + ((vec2((injectionSwitch)[0], _GLF_FUZZED((5.8 + 825.908))))[1]))), vec2(_GLF_FUZZED(65.18), _GLF_FUZZED((-4495.3713 / -362.027))), bvec2(false, false))), vec2(_GLF_FUZZED(7.4), (injectionSwitch)[1]), bvec2(false, true))).y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true && ((injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, false), false)), true))))))) && true))), true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(true && ((injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, false), false)), true))))))) && true))), true))))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(bvec3(true && ((injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, false), false)), true))))))) && true))), true))))), false, true, true))))))), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)), false, false, false)))))) && true))) ? float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(log(1.0), max(log(1.0), log(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min((1.0), (1.0))) - 0.0))))), 0.0, 0.0, 1.0), mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(log(1.0), max(log(1.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, 0.0 + ((1.0) - 0.0))), min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, cos(0.0)))))))))), 0.0, 0.0, 1.0)))) : _GLF_FUZZED(max(-0.4, 8646.4787))))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(59.63)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) : _GLF_FUZZED(4.5))), (injectionSwitch.x) - log(1.0)), 0.0, 0.0, 1.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(59.63)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) : _GLF_FUZZED(4.5))), (injectionSwitch.x) - log(1.0)), 0.0, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(59.63)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) : _GLF_FUZZED(4.5))), (injectionSwitch.x) - log(1.0)), 0.0, 0.0, 1.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(59.63)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) : _GLF_FUZZED(4.5))), (injectionSwitch.x) - log(1.0)), 0.0, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(59.63)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) : _GLF_FUZZED(4.5))), (injectionSwitch.x) - log(1.0)), 0.0, 0.0, 1.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(59.63)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) : _GLF_FUZZED(4.5))), (injectionSwitch.x) - log(1.0)), 0.0, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(59.63)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) : _GLF_FUZZED(4.5))), (injectionSwitch.x) - log(1.0)), 0.0, 0.0, 1.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(59.63)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) : _GLF_FUZZED(4.5))), (injectionSwitch.x) - log(1.0)), 0.0, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))) ? _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-4061.2558), min(_GLF_FUZZED(-4061.2558), _GLF_IDENTITY(_GLF_FUZZED(-4061.2558), min(_GLF_FUZZED(-4061.2558), _GLF_FUZZED(-4061.2558)))))), _GLF_IDENTITY(bool(false), false || (bool(false))))))), (injectionSwitch.x) - _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0)))), 0.0, 0.0, 1.0)), min(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-4061.2558), min(_GLF_FUZZED(-4061.2558), _GLF_IDENTITY(_GLF_FUZZED(-4061.2558), min(_GLF_FUZZED(-4061.2558), _GLF_FUZZED(-4061.2558)))))), _GLF_IDENTITY(bool(false), false || (bool(false))))))), (injectionSwitch.x) - _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0)))), 0.0, 0.0, 1.0)), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-4061.2558), min(_GLF_FUZZED(-4061.2558), _GLF_IDENTITY(_GLF_FUZZED(-4061.2558), min(_GLF_FUZZED(-4061.2558), _GLF_FUZZED(-4061.2558)))))), _GLF_IDENTITY(bool(false), false || (bool(false))))))), (injectionSwitch.x) - _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0)))), 0.0, 0.0, 1.0)))) : _GLF_FUZZED(max(-0.4, 8646.4787))))), mix(float(_GLF_FUZZED(4.4)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(59.63)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) : _GLF_FUZZED(4.5))), (injectionSwitch.x) - log(1.0)), 0.0, 0.0, 1.0), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(59.63)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) : _GLF_FUZZED(4.5))), (injectionSwitch.x) - _GLF_IDENTITY(log(1.0), min(_GLF_IDENTITY(log(1.0), _GLF_IDENTITY(float(mat2x3(log(1.0), 0.0, 0.0, cos(0.0), 0.0, 1.0)), clamp(float(mat2x3(log(1.0), 0.0, 0.0, cos(0.0), 0.0, 1.0)), float(mat2x3(log(1.0), 0.0, 0.0, cos(0.0), 0.0, 1.0)), float(mat2x3(log(1.0), 0.0, 0.0, cos(0.0), 0.0, 1.0))))), log(1.0)))), 0.0, 0.0, 1.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(59.63)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) : _GLF_FUZZED(4.5))), (injectionSwitch.x) - _GLF_IDENTITY(log(1.0), min(_GLF_IDENTITY(log(1.0), _GLF_IDENTITY(float(mat2x3(log(1.0), 0.0, 0.0, cos(0.0), 0.0, 1.0)), clamp(float(mat2x3(log(1.0), 0.0, 0.0, cos(0.0), 0.0, 1.0)), float(mat2x3(log(1.0), 0.0, 0.0, cos(0.0), 0.0, 1.0)), float(mat2x3(log(1.0), 0.0, 0.0, cos(0.0), 0.0, 1.0))))), log(1.0)))), 0.0, 0.0, 1.0)) * mat4(1.0))) / vec4(1.0, 1.0, 1.0, 1.0))), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))) ? float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-4061.2558), min(_GLF_FUZZED(-4061.2558), _GLF_IDENTITY(_GLF_FUZZED(-4061.2558), min(_GLF_FUZZED(-4061.2558), _GLF_FUZZED(-4061.2558)))))), bool(false))))), (injectionSwitch.x) - _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED((- 148.124)) : log(1.0))), _GLF_IDENTITY(max(log(1.0), log(1.0)), (_GLF_IDENTITY(max(log(1.0), log(1.0)), (max(log(1.0), log(1.0))) - 0.0)) - determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0)) : _GLF_FUZZED(max(-0.4, 8646.4787)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - log(1.0), clamp(_GLF_IDENTITY((injectionSwitch.x) - log(1.0), mix(_GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - log(1.0)), (true ? float((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - log(1.0)) : _GLF_FUZZED(-8242.4281))), float(_GLF_FUZZED(-7844.8471)), bool(false))), (injectionSwitch.x) - log(_GLF_IDENTITY(1.0, (1.0) * abs(1.0))), (injectionSwitch.x) - log(1.0)))), 0.0, 0.0, 1.0)), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))), true, true, false))) ? float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), max(log(1.0), _GLF_IDENTITY(log(1.0), 1.0 * (_GLF_IDENTITY(log(1.0), 0.0 + (log(1.0))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-1.0), float(mat4x3(_GLF_FUZZED(-1.0), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), max(log(1.0), log(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))), clamp(_GLF_IDENTITY(log(1.0), max(log(1.0), log(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))), _GLF_IDENTITY(log(1.0), max(log(1.0), log(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))), _GLF_IDENTITY(log(1.0), max(log(1.0), log(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), 1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), max(_GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), _GLF_IDENTITY(log(1.0), max(log(1.0), _GLF_IDENTITY(log(1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), determinant(mat2(sqrt(0.0), 0.0, 1.0, 0.0)), 0.0), (vec3(_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), determinant(mat2(sqrt(0.0), 0.0, 1.0, 0.0)), 0.0)) * mat3(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(log(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0), 1.0, 1.0)), max(float(mat4x2(log(1.0), 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-7.3, -75.92) + exp(vec2(-6.3, -641.654)))) : injectionSwitch)).y), 1.0, tan(0.0), 1.0, 1.0)), float(mat4x2(log(1.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4992.1516)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0), 1.0, 1.0)))), mix(float(_GLF_FUZZED(((1.7 / 7824.9696)))), float(_GLF_IDENTITY(float(mat4x2(log(1.0), 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch.y), 1.0, tan(0.0), 1.0, 1.0)), max(float(mat4x2(log(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0), 1.0, 1.0)), float(mat4x2(log(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0), 1.0, 1.0))))), bool(true)))), _GLF_IDENTITY(log(1.0), float(mat2x4(log(1.0), 1.0, sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-534.892)), float(1.0), bool(true))), 0.0, 1.0, 0.0)))))))))) - 0.0)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), min(_GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))))), (false ? _GLF_FUZZED(-1.0) : _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), max(log(1.0), log(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), max(_GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), _GLF_IDENTITY(log(1.0), max(log(1.0), _GLF_IDENTITY(log(1.0), min(_GLF_IDENTITY(log(1.0), _GLF_IDENTITY(float(mat4x2(log(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) * exp(0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0), 1.0, 1.0)), max(float(mat4x2(log(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.3)), bool(false))), 1.0)), float(mat4x2(log(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0), 1.0, 1.0))))), _GLF_IDENTITY(log(1.0), float(mat2x4(log(1.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 0.0)))))))))) - 0.0))))), float(_GLF_FUZZED(7.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0)) : _GLF_FUZZED(max(-0.4, 8646.4787))))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0), injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (injectionSwitch.x) - log(1.0)), 0.0, 0.0, 1.0)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) ? float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) - _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.77) : 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-800.563)), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) - 0.0), max(sin(0.0), sin(0.0)))), float(_GLF_FUZZED(733.958)), bool(false))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, abs(1.0), 1.0, sqrt(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-3.3))), min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), sqrt(0.0), cos(0.0)), (false ? _GLF_FUZZED(mat4x3(-478.468, _GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (-9.3) - 0.0), -9.3)), _GLF_IDENTITY(-9.3, float(mat4x2(-9.3, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, cos(0.0)))))), 4.1, 7.1, -265.961, -1.1, 13.74, 5.9, -74.17, 64.16, 538.424, -826.460)) : mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(log(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), float(float(float(mat2(1.0, 1.0, 1.0, 0.0)))))), 1.0))), _GLF_IDENTITY(max(log(1.0), log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0))), _GLF_IDENTITY((max(log(1.0), log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)))) - 0.0, float(mat4x2((max(log(1.0), log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)))) - 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(tan(0.0), 0.0), vec2(1.0, 1.0))), 0.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, sqrt(0.0), cos(0.0))))), _GLF_IDENTITY((float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(log(1.0), max(log(1.0), log(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, sqrt(0.0), cos(0.0)), (false ? _GLF_FUZZED(mat4x3(-478.468, -9.3, 4.1, 7.1, -265.961, -1.1, 13.74, 5.9, -74.17, 64.16, 538.424, -826.460)) : mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, sqrt(0.0), cos(0.0)))))), _GLF_IDENTITY(float(mat3x4((float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, sqrt(0.0), cos(0.0)), (false ? _GLF_FUZZED(mat4x3(-478.468, -9.3, 4.1, 7.1, -265.961, -1.1, 13.74, 5.9, _GLF_IDENTITY(-74.17, 0.0 + (-74.17)), 64.16, 538.424, -826.460)) : mat4x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, sqrt(0.0), cos(0.0)))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)), float(mat3x2(float(mat3x4((float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - _GLF_IDENTITY(_GLF_IDENTITY(log(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3448.1151) : 1.0))), max(log(1.0), log(1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), float(vec3(log(1.0), sin(0.0), 1.0))), max(log(1.0), log(1.0))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), float(vec3(log(1.0), sin(0.0), 1.0))), max(log(1.0), log(1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), float(vec3(log(1.0), sin(0.0), 1.0))), max(log(1.0), log(1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-59.52) : float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), float(vec3(log(1.0), sin(0.0), 1.0))), max(log(1.0), log(1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), float(vec3(log(1.0), sin(0.0), 1.0))), max(log(1.0), log(1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), float(vec3(log(1.0), sin(0.0), 1.0))), max(log(1.0), log(1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), float(vec3(log(1.0), sin(0.0), 1.0))), max(log(1.0), log(1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), max(_GLF_IDENTITY(log(1.0), max(_GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), log(1.0))), _GLF_IDENTITY(log(1.0), max(log(1.0), log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- 327.519))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, sqrt(0.0), cos(0.0)), (false ? _GLF_FUZZED(mat4x3(-478.468, -9.3, 4.1, 7.1, -265.961, -1.1, 13.74, 5.9, _GLF_IDENTITY(-74.17, max(-74.17, -74.17)), 64.16, 538.424, -826.460)) : mat4x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(4.7, -818.561)))))), _GLF_IDENTITY((injectionSwitch), vec2(mat4x3((injectionSwitch), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))).x) - _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0)))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5629.6474)), bool(false)))) / 1.0), 0.0, sin(0.0), 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(mat2x4(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec4(1.0, 0.0, 1.0, 1.0))), abs(0.0), 0.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(39.73))), 1.0, 1.0))), 0.0, 0.0, 0.0)))), cos(0.0)))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, sqrt(1.0))))) + length(vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0)) : _GLF_FUZZED(max(-0.4, _GLF_IDENTITY(8646.4787, max(_GLF_IDENTITY(8646.4787, (8646.4787) * 1.0), 8646.4787))))))), 0.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((17.19 / -985.846))), bool(false))), min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((17.19 / -985.846))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((17.19 / -985.846))), bool(false))), min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((17.19 / -985.846))), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((17.19 / -985.846))), bool(false))))))), 1.0))) : _GLF_FUZZED(247.203))) > injectionSwitch.y) || false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), 0.0, 0.0, 1.0)), (float(mat2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), 0.0, 0.0, 1.0))) / 1.0)), (_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), 0.0, 0.0, 1.0)), (float(mat2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), 0.0, 0.0, 1.0))) / 1.0))) * 1.0), injectionSwitch[1])).x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true)))))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true)))))))))) && true))))))))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.6))) < injectionSwitch.y)), true, true, true)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))), float(_GLF_FUZZED((+ 2.7))), bool(_GLF_IDENTITY(false, ! (! (false)))))) < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false)), (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false)), (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (! ((injectionSwitch.x < injectionSwitch.y))) && true))) && true)))))))
              {
               for(int _injected_loop_counter = ((1 | int(_GLF_ONE(1.0, injectionSwitch.y))) & (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), 0 ^ ((1 << _GLF_IDENTITY(int(6), int(6)))))) << 0)) | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), int(ivec2(1 << _GLF_IDENTITY(int(6), int(6)), 0))), int(ivec2(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), int(ivec2(1 << _GLF_IDENTITY(int(6), int(6)), 0))), 1))))), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), int(ivec2(1 << _GLF_IDENTITY(int(6), int(6)), 0)))))) / (1 | 1))) >> _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))) / 1) | 0), max((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), int(6))), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) >> 0), (1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bool(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)))))); _injected_loop_counter --)
                {
                 do
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (true)), (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, _GLF_IDENTITY(9.9, max(9.9, 9.9)), 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y)), true && (false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y)))), false, true))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (true)), (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, _GLF_IDENTITY(9.9, max(9.9, 9.9)), 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y)), true && (false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y)))), false, true))))))))))))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true))), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (true)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(19.91)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true))) < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)), 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)))) < injectionSwitch.y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, _GLF_IDENTITY(9.9, max(9.9, 9.9)), 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(_GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (_GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), mix(vec4(_GLF_IDENTITY((vec4(75.97, -852.037, 82.22, -2768.3733))[0], ((vec4(75.97, -852.037, 82.22, -2768.3733))[0]) / 1.0), _GLF_FUZZED(-345.760), _GLF_FUZZED(23.89), (vec4(75.97, -852.037, 82.22, -2768.3733))[3]), vec4(_GLF_FUZZED(5.0), (vec4(75.97, -852.037, 82.22, -2768.3733))[1], (vec4(75.97, -852.037, 82.22, -2768.3733))[2], _GLF_FUZZED(78.98)), bvec4(false, true, true, false)))) / vec4(1.0, 1.0, 1.0, 1.0)), (vec4(75.97, _GLF_IDENTITY(-852.037, max(-852.037, -852.037)), 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) / 1.0))), bool(bvec3(_GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y)), true && _GLF_IDENTITY((false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(_GLF_IDENTITY(75.97, (75.97) + 0.0), -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y))), ! (! ((false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(_GLF_IDENTITY(75.97, (75.97) + 0.0), -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y))))))), false, true))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true))), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (true)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(19.91)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true))) < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)), 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)))) < injectionSwitch.y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, _GLF_IDENTITY(9.9, max(9.9, 9.9)), 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(_GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (_GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), mix(vec4(_GLF_IDENTITY((vec4(75.97, -852.037, 82.22, -2768.3733))[0], ((vec4(75.97, -852.037, 82.22, -2768.3733))[0]) / 1.0), _GLF_FUZZED(-345.760), _GLF_FUZZED(23.89), (vec4(75.97, -852.037, 82.22, -2768.3733))[3]), vec4(_GLF_FUZZED(5.0), (vec4(75.97, -852.037, 82.22, -2768.3733))[1], (vec4(75.97, -852.037, 82.22, -2768.3733))[2], _GLF_FUZZED(78.98)), bvec4(false, true, true, false)))) / vec4(1.0, 1.0, 1.0, 1.0)), (vec4(75.97, _GLF_IDENTITY(-852.037, max(-852.037, -852.037)), 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) / 1.0))), bool(bvec3(_GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y)), true && _GLF_IDENTITY((false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(_GLF_IDENTITY(75.97, (75.97) + 0.0), -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y))), ! (! ((false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(_GLF_IDENTITY(75.97, (75.97) + 0.0), -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y))))))), false, true))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true))), false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (true)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(19.91)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true))) < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)), 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)))) < injectionSwitch.y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, _GLF_IDENTITY(9.9, max(9.9, 9.9)), 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(_GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (_GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), mix(vec4(_GLF_IDENTITY((vec4(75.97, -852.037, 82.22, -2768.3733))[0], ((vec4(75.97, -852.037, 82.22, -2768.3733))[0]) / 1.0), _GLF_FUZZED(-345.760), _GLF_FUZZED(23.89), (vec4(75.97, -852.037, 82.22, -2768.3733))[3]), vec4(_GLF_FUZZED(5.0), (vec4(75.97, -852.037, 82.22, -2768.3733))[1], (vec4(75.97, -852.037, 82.22, -2768.3733))[2], _GLF_FUZZED(78.98)), bvec4(false, true, true, false)))) / vec4(1.0, 1.0, 1.0, 1.0)), (vec4(75.97, _GLF_IDENTITY(-852.037, max(-852.037, -852.037)), 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) / 1.0))), bool(bvec3(_GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y)), true && _GLF_IDENTITY((false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(_GLF_IDENTITY(75.97, (75.97) + 0.0), -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y))), ! (! ((false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(_GLF_IDENTITY(75.97, (75.97) + 0.0), -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y))))))), false, true))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true))), false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (true)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(19.91)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true))) < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)), 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)))) < injectionSwitch.y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, _GLF_IDENTITY(9.9, max(9.9, 9.9)), 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(_GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (_GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), mix(vec4(_GLF_IDENTITY((vec4(75.97, -852.037, 82.22, -2768.3733))[0], ((vec4(75.97, -852.037, 82.22, -2768.3733))[0]) / 1.0), _GLF_FUZZED(-345.760), _GLF_FUZZED(23.89), (vec4(75.97, -852.037, 82.22, -2768.3733))[3]), vec4(_GLF_FUZZED(5.0), (vec4(75.97, -852.037, 82.22, -2768.3733))[1], (vec4(75.97, -852.037, 82.22, -2768.3733))[2], _GLF_FUZZED(78.98)), bvec4(false, true, true, false)))) / vec4(1.0, 1.0, 1.0, 1.0)), (vec4(75.97, _GLF_IDENTITY(-852.037, max(-852.037, -852.037)), 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) / 1.0))), bool(bvec3(_GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(75.97, -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y)), true && _GLF_IDENTITY((false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(_GLF_IDENTITY(75.97, (75.97) + 0.0), -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y))), ! (! ((false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec4(-5.6, -2049.5386, 9.9, 98.10), _GLF_IDENTITY(vec4(75.97, -852.037, 82.22, -2768.3733), (vec4(_GLF_IDENTITY(75.97, (75.97) + 0.0), -852.037, 82.22, -2768.3733)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch.x)) < injectionSwitch.y))))))), false, true))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true))), false)))))), true))))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
              }
             do
              {
               barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)); _injected_loop_counter ++)
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 | 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), 0u ^ (workgroup_id))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u), 0u, 1u, 0u))), _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), (false ? _GLF_FUZZED((+ num_workgroup)) : clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size), 0u + (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), uint(uvec2(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u), 0u, 1u, 0u))), _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), (false ? _GLF_FUZZED((+ num_workgroup)) : clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size), 0u + (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), uint(uvec2(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))))) + subgroup_local_id) ^ 0u);
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   do
    {
     do
      {
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0))))))) + _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(sign(58118))))) | ((1))))), (~ _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0))))))) >> 0)) + _GLF_IDENTITY(0, (_GLF_IDENTITY(true, (true) && true) ? 0 : _GLF_FUZZED(sign(58118))))) | ((1)))))) >> 0), ~ (_GLF_IDENTITY(~ (~ (1)), ~ (~ (~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))))))))), 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(6735) : 64)), 4);
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (virtual_gid) : _GLF_FUZZED(virtual_gid))) >> _GLF_IDENTITY(0u, max(0u, 0u)))], 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)) ^ 0u))), (true ? ~ (subgroup_local_id) : _GLF_FUZZED(virtual_gid)))))) - 0u) + _GLF_IDENTITY(1, (1) + 0) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ _GLF_IDENTITY(0, (0) ^ 0)) < (_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), (false ? _GLF_FUZZED(_injected_loop_counter) : (1)))), ~ (~ (~ (_GLF_IDENTITY((1), (false ? _GLF_FUZZED(_injected_loop_counter) : (1))))))))) / 1), 1)), 1)))) | 1)); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))); _injected_loop_counter ++)
                {
                 atomicStore(checker[virtual_gid], read, 4, 64, 4);
                }
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (69394 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       subgroupAll(false);
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(((false) || false), ! (! (((false) || false)))) && true)), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec4(! ((false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(! ((false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (false), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), ! (! (bool(bvec4(! (false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec4(! ((false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(! ((false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (false), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), ! (! (bool(bvec4(! (false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))) && true) && true) && _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (true) && true)) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)) > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(mat2((injectionSwitch.x), 1.0, exp(0.0), 0.0)), min(float(mat2((injectionSwitch.x), 1.0, exp(0.0), 0.0)), float(mat2((injectionSwitch.x), 1.0, exp(0.0), 0.0))))) / abs(1.0)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-7.6, -5744.6304, 51.76).r) : injectionSwitch.y))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, min(0, 0))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true)))) || false)))
                              barrier();
                             barrier();
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))));
                       return;
                      }
                    }
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           barrier();
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | (64)), 4);
   subgroupAll(true);
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
