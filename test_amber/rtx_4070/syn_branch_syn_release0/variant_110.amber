#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-85.26), _GLF_FUZZED(-566.078)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true)))) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), false)))))), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), true))))))))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) / 1)], _GLF_FUZZED(6.8)), vec2(_GLF_FUZZED(vec2(-9.2, 8.5).s), (injectionSwitch)[1]), bvec2(false, true))).y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-39.89)), float(injectionSwitch.y), bool(true)))))))) || false), true)))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))), true, true, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-3879.2761, 53.61)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)))))))))), false || ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-3879.2761, 53.61)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), false || (false || (_GLF_IDENTITY(false, ! (! (false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.5) : injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), (uvec4(gl_NumWorkGroups, 0u)) | uvec4(0u, 0u, 0u, 0u)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ldexp(vec2(-5719.0572, 99.94), ivec2(81012, 95809))) : injectionSwitch)).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(-4.6)), vec2(_GLF_FUZZED(93.05), (injectionSwitch)[1]), bvec2(false, true))).y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, false, true)))), true && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, false, true)))))))))))), true, _GLF_IDENTITY(true, true && (true)))), bool(bool(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, false, true)))), true && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, false, true)))))))))))), true, _GLF_IDENTITY(true, true && (true))))))), (bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_IDENTITY(true, true && (true))))) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8055.2729)), float(injectionSwitch.y), bool(true)))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9130.5292)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-7329.6552), _GLF_FUZZED(4289.2967)), vec2((vec2(1.0, 0.0))[0], _GLF_IDENTITY((vec2(1.0, 0.0))[1], clamp((vec2(1.0, 0.0))[1], _GLF_IDENTITY((vec2(1.0, 0.0))[1], min((vec2(1.0, 0.0))[1], (vec2(1.0, 0.0))[1])), (vec2(1.0, 0.0))[1]))), bvec2(true, true))), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(28.32)))), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(tanh(vec2(641.329, 5.5)))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.6)), float(1.0), bool(true)))) + 0.0) : _GLF_FUZZED(-1.4))), 1.0) * (vec2(1.0, 0.0))))) : _GLF_IDENTITY(_GLF_FUZZED(tanh(vec2(641.329, 5.5))), mat2(1.0) * (_GLF_FUZZED(tanh(vec2(641.329, 5.5)))))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(tanh(vec2(641.329, 5.5)))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(tanh(vec2(641.329, 5.5)))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, tan(sin(0.0)), 0.0)), _GLF_IDENTITY(float(float(float(mat3x4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(tanh(vec2(641.329, 5.5)))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, tan(sin(0.0)), 0.0)))), max(float(float(float(mat3x4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(tanh(vec2(641.329, 5.5)))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, tan(sin(0.0)), 0.0)))), float(float(float(mat3x4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(tanh(vec2(641.329, 5.5)))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, tan(sin(0.0)), 0.0))))))))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) * _GLF_IDENTITY((vec2(1.0, 0.0)), mix(vec2(_GLF_IDENTITY(((vec2(1.0, 0.0)))[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((vec2(1.0, 0.0)))[0], clamp(((vec2(1.0, 0.0)))[0], ((vec2(1.0, 0.0)))[0], ((vec2(1.0, 0.0)))[0])) : _GLF_FUZZED(717.132))), ((vec2(1.0, 0.0)))[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(5.2)), bvec2(false, false)))))) : _GLF_FUZZED(tanh(vec2(641.329, 5.5)))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(9130.5292)), (false ? _GLF_FUZZED(mix(6.2, 2.3, false)) : float(_GLF_FUZZED(9130.5292)))), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), true))))), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(9130.5292, (true ? _GLF_IDENTITY(9130.5292, min(9130.5292, 9130.5292)) : _GLF_FUZZED(5266.1100))))), bool(false))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-82.17, 9238.2446, 5.7, -89.51)))) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).y), true, true)), ! (! (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(786.458) : injectionSwitch.x)) : _GLF_FUZZED(sign(-2.3))))), float(_GLF_FUZZED(9130.5292)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9130.5292)), bool(false)))), mix(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9130.5292)), bool(false))))), float(_GLF_FUZZED(9135.1554)), bool(false))) - abs(0.0)) > injectionSwitch.y), true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(tanh(vec2(641.329, 5.5)))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(false))), bool(false))), 0.0)))))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), bool(bool(bool(false)))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(1.0, 0.0)), mix(vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(-25.83)), vec2((mat2(1.0) * (vec2(1.0, 0.0)))[0], (mat2(1.0) * (vec2(1.0, 0.0)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(tanh(vec2(641.329, 5.5)))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) > injectionSwitch.y))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(-801.868)) : 1.0)), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(tanh(vec2(641.329, 5.5)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(tanh(vec2(641.329, _GLF_IDENTITY(5.5, (false ? _GLF_FUZZED(55.19) : 5.5)))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(-801.868)) : 1.0)), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(tanh(vec2(641.329, 5.5)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(tanh(vec2(641.329, _GLF_IDENTITY(5.5, (false ? _GLF_FUZZED(55.19) : 5.5)))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) > injectionSwitch.y))), true, true)))))))), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(9130.5292, _GLF_IDENTITY((true ? _GLF_IDENTITY(9130.5292, _GLF_IDENTITY(min(9130.5292, 9130.5292), mix(float(_GLF_FUZZED((5275.2269 / -9.2))), float(min(9130.5292, 9130.5292)), bool(true)))) : _GLF_FUZZED(5266.1100)), mix(float(_GLF_FUZZED(-9946.8671)), float((true ? _GLF_IDENTITY(9130.5292, _GLF_IDENTITY(min(9130.5292, 9130.5292), mix(float(_GLF_FUZZED((5275.2269 / -9.2))), float(min(9130.5292, 9130.5292)), bool(true)))) : _GLF_FUZZED(5266.1100))), bool(true)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).y), true, true)), ! (! (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(1.0), 0.0), (mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(1.0), 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(9130.5292)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9130.5292)), bool(false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9130.5292)), bool(false)), float(mat2x3(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9130.5292)), bool(false)), (true ? mix(float(injectionSwitch.x), float(_GLF_FUZZED(9130.5292)), bool(false)) : _GLF_FUZZED(5.7))), 1.0, 0.0, 1.0, 0.0, 1.0))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9130.5292)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9130.5292)), bool(false)))))), mix(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9130.5292)), bool(false))))), float(_GLF_FUZZED(9135.1554)), bool(false))) - abs(0.0)) > injectionSwitch.y), true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5351.4204)), bool(false))), 0.0))), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * _GLF_IDENTITY((vec2(1.0, 0.0)), _GLF_IDENTITY(vec2(mat2x4((vec2(1.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0))), (vec2(mat2x4((vec2(1.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0)))) / vec2(1.0, 1.0)))))) : _GLF_FUZZED(tanh(vec2(641.329, 5.5)))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-2957.4995 - -13.84)), _GLF_FUZZED(2131.5984)), bvec2(false, false))).y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), float(_GLF_FUZZED(2.7)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))), (float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), float(_GLF_FUZZED(2.7)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-542.310), _GLF_FUZZED(-457.803)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(tanh(vec2(641.329, 5.5)), max(tanh(vec2(641.329, 5.5)), tanh(vec2(641.329, 5.5)))))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))) - 0.0)) > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), vec2(mat2(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) : _GLF_FUZZED(tanh(vec2(641.329, 5.5)))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0)))))).x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(dot(distance(-5.1, 696.902), asin(632.536))))), 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0))))) : _GLF_FUZZED(tanh(vec2(641.329, 5.5)))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(9130.5292)), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))) > injectionSwitch.y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true))))), true))))), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(9130.5292, (true ? _GLF_IDENTITY(9130.5292, min(9130.5292, 9130.5292)) : _GLF_FUZZED(5266.1100))))), bool(false))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).y), true, true)), ! (! (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9130.5292)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(9130.5292)), bool(false)))), mix(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9130.5292)), bool(false))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9135.1554), (_GLF_FUZZED(9135.1554)) - 0.0), (_GLF_IDENTITY(_GLF_FUZZED(9135.1554), (_GLF_FUZZED(9135.1554)) - 0.0)) / cos(0.0))), bool(false))) - abs(0.0)) > injectionSwitch.y), true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).y))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec3((false), true, true)))), ((! _GLF_IDENTITY((false), bool(bvec3((false), true, true))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))))) || (false)), (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_DEAD(false))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)) : _GLF_FUZZED(subgroup_id))), 0u + (subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.4))), injectionSwitch.y))))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 1 * (4))), int(ivec3(~ (_GLF_IDENTITY(4, 1 * (4))), 0, 1))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
