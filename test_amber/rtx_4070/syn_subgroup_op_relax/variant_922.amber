#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z = _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))).y) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.4, -3.9)))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))).y) || false)))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y) || _GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), 0.0, sin(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))), (mat4x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), 0.0, sin(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)))) * mat4(1.0)))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))).y) || false)), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y) || false))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0)), 1.0, abs(1.0), 0.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0)), 1.0, abs(1.0), 0.0, 0.0))))))))))).y) || false)), _GLF_IDENTITY(false, true && (false)) || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y) || false)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(tanh(-7.0)))) > injectionSwitch.y)), false, true)))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, true)))), true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.y = _GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : 1.0)), 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), injectionSwitch[1])).x))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (false ? _GLF_FUZZED(8.0) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(124.563, 388.584)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(869.536)), float(1.0), bool(true))) : _GLF_FUZZED(-2.2))), 1.0, 1.0)), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), injectionSwitch[1])).x))).x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))).y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(! (false), true, true, true)), false || (bool(bvec4(! (false), true, true, true))))))))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec4(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), float(mat4x2(mix(float(_GLF_FUZZED(-8.9)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), mix(float(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), float(_GLF_FUZZED(-6475.9838)), bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))), _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))))))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0)), max(float(mat2(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)), false))))))), float(mat4x2(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))), (mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))), false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false)))))))) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x2(0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0)))), 0.0)))), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))), float(mat4x2(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))), float(mat4x2(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))), float(mat4x2(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))), float(mat4x2(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))), float(mat4x2(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))), float(mat4x2(mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), bool(bvec3((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))), false, true))))), false || (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(477.696)), float(0.0), bool(true))), exp(0.0), abs(0.0)))), 0.0)), dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7754.0428)), vec2(_GLF_FUZZED(-1.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(mat2(mat2x4(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (mat2(injectionSwitch, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY((mat2(mat2x4(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), (mat2(injectionSwitch, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))), mat2(mat4x3(_GLF_IDENTITY((mat2(mat2x4(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), (mat2(injectionSwitch, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(mat2(mat2((mat2(mat2x4(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), (mat2(injectionSwitch, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat2((mat2(mat2x4(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), (mat2(injectionSwitch, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))))))))) - mat2(0.0, 0.0, 0.0, 0.0))))).y)))) && true), _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true) && true, ((true) && true) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((true) && true), _GLF_IDENTITY(true && _GLF_IDENTITY((! ((true) && true)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true))))) && true)), true && ((! ((true) && true))))))), (_GLF_IDENTITY(true && _GLF_IDENTITY((! ((true) && true)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true))))) && true)), true && _GLF_IDENTITY(((! ((true) && true))), true && (((! ((true) && true))))))))), ! (_GLF_IDENTITY(! (true && _GLF_IDENTITY((! _GLF_IDENTITY(((true) && true), true && (((true) && true)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY((true), _GLF_IDENTITY(false || (_GLF_IDENTITY((true), false || ((true)))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY((true), false || ((true)))), (false || (_GLF_IDENTITY((true), false || ((true))))) || false), false)))) && true)), true && ((! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true))))))) && true))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY((true), _GLF_IDENTITY(false || (_GLF_IDENTITY((true), false || ((true)))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY((true), false || ((true)))), (false || (_GLF_IDENTITY((true), false || ((true))))) || false), false)))) && true)), true && ((! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true))))))) && true))))), ! (! ((_GLF_IDENTITY((! (_GLF_IDENTITY((true), _GLF_IDENTITY(false || (_GLF_IDENTITY((true), false || ((true)))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY((true), false || ((true)))), (false || (_GLF_IDENTITY((true), false || ((true))))) || false), false)))) && true)), true && ((! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true))))))) && true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false || (! (true && _GLF_IDENTITY((! ((true) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (true)), false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true))))) && true)), true && ((! ((true) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && true), false || ((true))))) && true)), true && ((! ((true) && true))))), true && ((_GLF_IDENTITY((! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true))))) && true)), true && ((! ((true) && true)))))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4((true), false, false, true))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY((true), false || ((true))))) && true)), true && ((! ((true) && true))))), true && ((_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true))))) && true), ! (! ((_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true))))) && true))))), true && ((! ((true) && true))))))))) && true))))))))))) || false))), (bool(_GLF_IDENTITY(! ((true) && true), _GLF_IDENTITY(true && _GLF_IDENTITY((! ((true) && true)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true))))) && true)), true && ((! ((true) && true))))))), (_GLF_IDENTITY(true && _GLF_IDENTITY((! ((true) && true)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true))))) && true)), true && _GLF_IDENTITY(((! ((true) && true))), true && (((! ((true) && true))))))))), ! (_GLF_IDENTITY(! (true && _GLF_IDENTITY((! _GLF_IDENTITY(((true) && true), true && (((true) && true)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY((true), _GLF_IDENTITY(false || (_GLF_IDENTITY((true), false || ((true)))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY((true), false || ((true)))), (false || (_GLF_IDENTITY((true), false || ((true))))) || false), false)))) && true)), true && ((! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true))))))) && true))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY((true), _GLF_IDENTITY(false || (_GLF_IDENTITY((true), false || ((true)))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY((true), false || ((true)))), (false || (_GLF_IDENTITY((true), false || ((true))))) || false), false)))) && true)), true && ((! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true))))))) && true))))), ! (! ((_GLF_IDENTITY((! (_GLF_IDENTITY((true), _GLF_IDENTITY(false || (_GLF_IDENTITY((true), false || ((true)))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY((true), false || ((true)))), (false || (_GLF_IDENTITY((true), false || ((true))))) || false), false)))) && true)), true && ((! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true))))))) && true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false || (! (true && _GLF_IDENTITY((! ((true) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (true)), false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true))))) && true)), true && ((! ((true) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && true), false || ((true))))) && true)), true && ((! ((true) && true))))), true && ((_GLF_IDENTITY((! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true))))) && true)), true && ((! ((true) && true)))))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4((true), false, false, true))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY((true), false || ((true))))) && true)), true && ((! ((true) && true))))), true && ((_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true))))) && true), ! (! ((_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true))))) && true))))), true && ((! ((true) && true))))))))) && true))))))))))) || false)))) && true)), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(! ((true) && true), _GLF_IDENTITY(_GLF_IDENTITY(true && (! ((true) && true)), false || (_GLF_IDENTITY(true && (! _GLF_IDENTITY(((true) && true), false || (((true) && true)))), false || (true && (! _GLF_IDENTITY(((true) && true), false || (((_GLF_IDENTITY(true, ! (! (true)))) && true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true && (! ((true) && true)), false || (_GLF_IDENTITY(true && (! _GLF_IDENTITY(((true) && true), false || (((true) && true)))), false || (true && (! _GLF_IDENTITY(((true) && true), false || (((_GLF_IDENTITY(true, ! (! (true)))) && true)))))))), ! (! (_GLF_IDENTITY(true && (! ((true) && true)), false || (_GLF_IDENTITY(true && (! _GLF_IDENTITY(((true) && true), false || (((true) && true)))), false || (true && (! _GLF_IDENTITY(((true) && true), false || (((_GLF_IDENTITY(true, ! (! (true)))) && true))))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY(! ((true) && true), _GLF_IDENTITY(true && (! ((true) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(true && (! _GLF_IDENTITY(((true) && true), false || (((true) && true)))), bool(bvec2(true && (! _GLF_IDENTITY(((true) && true), false || (((true) && true)))), true))), false || (true && (! _GLF_IDENTITY(((true) && true), _GLF_IDENTITY(false || (((_GLF_IDENTITY(true, ! (! (true)))) && true)), false || (false || (((_GLF_IDENTITY(true, ! (! (true)))) && true))))))))))))))))))))))), true, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u)))) >> 0u), clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u)))) >> 0u), clamp(workgroup_base, workgroup_base, workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u)))) >> 0u), clamp(workgroup_base, workgroup_base, workgroup_base)))), _GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))))))) + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size), max(clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size), _GLF_IDENTITY(clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size), (clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size)) ^ uvec4(0u, 0u, 0u, 0u))))).w + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size) * uvec4(1u, 1u, 1u, 1u)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size[3])))).z), (0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size) * uvec4(1u, 1u, 1u, 1u)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size[3])))).z)) << 0u)) * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) | 0u), 0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z)) * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (1) - (0 & -6399)) : _GLF_FUZZED(69722)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (0 & -6399)), min(_GLF_IDENTITY(1, (1) - (0 & -6399)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (0 & -6399)), max(_GLF_IDENTITY(1, (1) - (0 & -6399)), _GLF_IDENTITY(1, (1) - (0 & -6399)))))) : _GLF_FUZZED(69722)), int(ivec3((true ? _GLF_IDENTITY(1, (1) - (0 & -6399)) : _GLF_FUZZED(69722)), 0, 1))), _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (1) - (0 & -6399)) : _GLF_FUZZED(69722)), min((true ? _GLF_IDENTITY(1, (1) - (0 & -6399)) : _GLF_FUZZED(_GLF_IDENTITY(69722, clamp(69722, 69722, 69722)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, (1) - (0 & -6399)) : _GLF_FUZZED(69722), ~ (~ (true ? _GLF_IDENTITY(1, (1) - (0 & -6399)) : _GLF_FUZZED(69722))))))), (true ? _GLF_IDENTITY(1, (1) - (0 & -6399)) : _GLF_FUZZED(69722))))))), (true ? (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (1) - (0 & -6399)) : _GLF_FUZZED(69722)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (0 & -6399)), min(_GLF_IDENTITY(1, (1) - (0 & -6399)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (0 & -6399)), max(_GLF_IDENTITY(1, (1) - (0 & -6399)), _GLF_IDENTITY(1, (1) - (0 & -6399)))))) : _GLF_FUZZED(69722)), int(ivec3((true ? _GLF_IDENTITY(1, (1) - (0 & -6399)) : _GLF_FUZZED(69722)), 0, 1))), _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (1) - (0 & -6399)) : _GLF_FUZZED(69722)), min((true ? _GLF_IDENTITY(1, (1) - (0 & -6399)) : _GLF_FUZZED(_GLF_IDENTITY(69722, clamp(69722, 69722, 69722)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, (1) - (0 & -6399)) : _GLF_FUZZED(69722), ~ (~ (true ? _GLF_IDENTITY(1, (1) - (0 & -6399)) : _GLF_FUZZED(69722))))))), (true ? _GLF_IDENTITY(1, (1) - (0 & -6399)) : _GLF_FUZZED(69722))))))) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(((subgroup_local_id + 1)) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> 0u), max(((subgroup_local_id + 1)) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> 0u), ((subgroup_local_id + 1)) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> 0u)))) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w, 0u + (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w) + 0u))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6781.7069))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))))))
  barrier();
 buf[virtual_gid] = _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, (0 & 79657) | ((1) | 0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid)))) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u * ((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED(virtual_gid)))) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))) < GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.x], _GLF_IDENTITY(uint(2), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) | 0u), (_GLF_IDENTITY(uint(2), (uint(2)) | 0u)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) >> 0u))))), 4, 64, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, max(0, 0))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.x], uint(2), 4, 64, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-40235) : 0))) << 0)) / (1 & 1)), (0) / 1), 0)), 0)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), ! (! ((bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false)))))) || false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) || false))))))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (! (false)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
