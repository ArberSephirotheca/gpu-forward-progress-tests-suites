#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(-821.322)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, 1.0, 0.0)), float(mat2(float(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0)))) / 1.0), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) / 1.0), 0.0, 1.0, 0.0)), mix(float(float(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) / 1.0), 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-1.8)), bool(false))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float((injectionSwitch.x) / 1.0), float(_GLF_FUZZED(-0.1)), bool(false)))), 0.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(tan(vec2(783.683, 72.94)))))), _GLF_IDENTITY(vec2(mat3x4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(tan(vec2(783.683, 72.94)))))), determinant(mat2(0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-4.0, -9.6)) : vec2(mat3x4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(tan(vec2(783.683, 72.94)))))), determinant(mat2(0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-79.40), (vec2(1.0, 1.0))[1]), vec2(_GLF_IDENTITY((vec2(1.0, 1.0))[0], ((vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))[0]) - 0.0), _GLF_FUZZED(-9.9)), bvec2(true, false)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(false)))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) || false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(346.316), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], float(vec4((max(injectionSwitch, injectionSwitch))[1], 0.0, 0.0, 1.0)))), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(float(89001))), bvec2(true, false)))))), min(injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))))), min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false, false, false)))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.1)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false))), (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))) > injectionSwitch.y))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bool(bvec4(! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((4.5 * 747.784))), bvec2(true, false))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))))), true && (bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))))))))) || _GLF_IDENTITY(false, (false) || false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5060.2142)), bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))))) || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || (_GLF_DEAD(false))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true, false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(773.172, 11.72)) : injectionSwitch)))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size)))), (_GLF_IDENTITY((~ (subgroup_size)), 0u ^ ((~ (subgroup_size))))) / 1u), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ _GLF_IDENTITY((~ (~ (subgroup_size))), max((~ (~ (subgroup_size))), (~ (~ (subgroup_size)))))), (_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | 0u)) | (~ (~ (subgroup_size))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))), max(_GLF_IDENTITY(~ (subgroup_size), ~ (~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))))) >> 0u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - (0u & 34337u)), 0u, 1u), (uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), uint(uint((~ (subgroup_size))))), 0u, 1u)) - uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - (_GLF_IDENTITY(0u, (0u) >> 0u) & 34337u)), 0u, 1u), (uvec3(~ (~ (subgroup_size)), 0u, 1u)) - uvec3(0u, 0u, 0u)))) - (_GLF_IDENTITY(0u, max(0u, 0u)) ^ 0u))), ~ (~ (subgroup_size))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size)))), (_GLF_IDENTITY((~ (subgroup_size)), 0u ^ ((~ (subgroup_size))))) / 1u), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ _GLF_IDENTITY((~ (~ (subgroup_size))), max((~ (~ (subgroup_size))), (~ (~ (subgroup_size)))))), (_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | 0u)) | (~ (~ (subgroup_size))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))), max(_GLF_IDENTITY(~ (subgroup_size), ~ (~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))))) >> 0u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - (0u & 34337u)), 0u, 1u), (uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), uint(uint((~ (subgroup_size))))), 0u, 1u)) - uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - (_GLF_IDENTITY(0u, (0u) >> 0u) & 34337u)), 0u, 1u), (uvec3(~ (~ (subgroup_size)), 0u, 1u)) - uvec3(0u, 0u, 0u)))) - (_GLF_IDENTITY(0u, max(0u, 0u)) ^ 0u))), ~ (~ (subgroup_size))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size)))), (_GLF_IDENTITY((~ (subgroup_size)), 0u ^ ((~ (subgroup_size))))) / 1u), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ _GLF_IDENTITY((~ (~ (subgroup_size))), max((~ (~ (subgroup_size))), (~ (~ (subgroup_size)))))), (_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | 0u)) | (~ (~ (subgroup_size))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))), max(_GLF_IDENTITY(~ (subgroup_size), ~ (~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))))) >> 0u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - (0u & 34337u)), 0u, 1u), (uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), uint(uint((~ (subgroup_size))))), 0u, 1u)) - uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - (_GLF_IDENTITY(0u, (0u) >> 0u) & 34337u)), 0u, 1u), (uvec3(~ (~ (subgroup_size)), 0u, 1u)) - uvec3(0u, 0u, 0u)))) - (_GLF_IDENTITY(0u, max(0u, 0u)) ^ 0u))), ~ (~ (subgroup_size)))))) >> 0u), 0u), (true ? uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size)))), (_GLF_IDENTITY((~ (subgroup_size)), 0u ^ ((~ (subgroup_size))))) / 1u), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ _GLF_IDENTITY((~ (~ (subgroup_size))), max((~ (~ (subgroup_size))), (~ (~ (subgroup_size)))))), (_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | 0u)) | (~ (~ (subgroup_size))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))), max(_GLF_IDENTITY(~ (subgroup_size), ~ (~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))))) >> 0u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - (0u & 34337u)), 0u, 1u), (uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), uint(uint((~ (subgroup_size))))), 0u, 1u)) - uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - (_GLF_IDENTITY(0u, (0u) >> 0u) & 34337u)), 0u, 1u), (uvec3(~ (~ (subgroup_size)), 0u, 1u)) - uvec3(0u, 0u, 0u)))) - (_GLF_IDENTITY(0u, max(0u, 0u)) ^ 0u))), ~ (~ (subgroup_size))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size)))), (_GLF_IDENTITY((~ (subgroup_size)), 0u ^ ((~ (subgroup_size))))) / 1u), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ _GLF_IDENTITY((~ (~ (subgroup_size))), max((~ (~ (subgroup_size))), (~ (~ (subgroup_size)))))), (_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | 0u)) | (~ (~ (subgroup_size))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))), max(_GLF_IDENTITY(~ (subgroup_size), ~ (~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))))))) >> 0u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - (0u & 34337u)), 0u, 1u), (uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), uint(uint((~ (subgroup_size))))), 0u, 1u)) - uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - (_GLF_IDENTITY(0u, (0u) >> 0u) & 34337u)), 0u, 1u), (uvec3(~ (~ (subgroup_size)), 0u, 1u)) - uvec3(0u, 0u, 0u)))) - (_GLF_IDENTITY(0u, max(0u, 0u)) ^ 0u))), ~ (~ (subgroup_size)))))) >> 0u), 0u) : _GLF_FUZZED((uvec2(165215u, 50646u) % 115050u)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 0.0 + (dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 0.0 + (dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))) > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((-34.52 * 208.189))), _GLF_FUZZED(float(-3537))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))))) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false, false)))))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, true))), true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, true))), true))))) && true) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | (~ ((workgroup_base)))))) | _GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))))) / 1u, 0u, 0u), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(true, true && (true))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0))).y)), false))) ? uvec3((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u, 0u, 0u) : _GLF_FUZZED(uvec3(188752u, 96085u, 108459u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | (~ ((workgroup_base)))))) | _GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))))) / 1u, 0u, 0u), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? uvec3((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u, 0u, 0u) : _GLF_FUZZED(uvec3(188752u, 96085u, 108459u))))), (true ? uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | (_GLF_IDENTITY(~ ((workgroup_base)), 1u * (~ ((workgroup_base)))))))) | _GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))))) / 1u, 0u, 0u), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? uvec3((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u, 0u, 0u) : _GLF_FUZZED(uvec3(188752u, 96085u, 108459u))))) : _GLF_FUZZED(workgroup_id)))) >> 0u))) + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base) / 1u, min((workgroup_base) / 1u, _GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((~ ((workgroup_base) / 1u)), (_GLF_IDENTITY((~ ((workgroup_base) / 1u)), min((~ ((workgroup_base) / 1u)), (~ ((workgroup_base) / 1u))))) / ((1u ^ 0u) & 1u)) * 1u)))) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u ^ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp((subgroup_id * subgroup_size), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)))))), min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) / 1u, 1u * ((workgroup_base) / 1u)), ~ (_GLF_IDENTITY(~ ((workgroup_base) / 1u), _GLF_IDENTITY((~ ((workgroup_base) / 1u)) * 1u, ((~ ((workgroup_base) / 1u)) * 1u) | ((~ ((workgroup_base) / 1u)) * 1u)))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, ~ (_GLF_IDENTITY(~ ((workgroup_base) / 1u), (~ ((workgroup_base) / 1u)) * 1u)))) + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(subgroup_id, 1u), uvec2(uvec4(_GLF_IDENTITY(uvec2(subgroup_id, 1u), (uvec2(subgroup_id, 1u)) | _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec4(uvec2(0u, 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))) * subgroup_size)))))) + ((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) | ((workgroup_base) / 1u))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(max(subgroup_local_id, workgroup_id)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))), (true ? subgroup_size : _GLF_FUZZED(workgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), subgroup_local_id)) + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base)), _GLF_IDENTITY((workgroup_base) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base) / 1u, max(_GLF_IDENTITY((workgroup_base) / 1u, _GLF_IDENTITY(((workgroup_base) / 1u), (((workgroup_base) / 1u)) - 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) / 1u, (true ? (workgroup_base) / 1u : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(max((workgroup_base) / 1u, (workgroup_base) / 1u), 0u + (max((workgroup_base) / 1u, (workgroup_base) / 1u)))))), (workgroup_base) / 1u))) | 0u, ((_GLF_IDENTITY((workgroup_base) / 1u, max(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) / 1u, max(_GLF_IDENTITY((workgroup_base) / 1u, clamp((workgroup_base) / 1u, (workgroup_base) / 1u, (workgroup_base) / 1u)), (workgroup_base) / 1u)), _GLF_IDENTITY(((workgroup_base) / 1u), (((workgroup_base) / 1u)) >> 0u) | ((workgroup_base) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u, uint(uint((workgroup_base) / 1u)))))) | 0u) | ((_GLF_IDENTITY((workgroup_base) / 1u, max(_GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) | ((workgroup_base) / 1u)), (workgroup_base) / 1u))) | 0u)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(clamp(num_workgroup, num_workgroup, subgroup_size)) : subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), 1u))), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) / 1u) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) / 1u) * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(0), int(0)))), max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(0), int(0)))))), min(subgroup_local_id + 1, subgroup_local_id + 1))) ^ 0u)) % subgroup_size)) << 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x) / 1.0))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), mix(float(_GLF_FUZZED(2068.1399)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), bool(true))) > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9370.6467)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-77.16)), vec2(_GLF_FUZZED(-5.6), (injectionSwitch)[1]), bvec2(false, true))).y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 buf[next_virtual_gid] = 2;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, _GLF_IDENTITY(8.7, (8.7) - 0.0)), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))))), mix(vec2((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))))))[0], (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))))))[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-613.529)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-65.97, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0))))), max(float(_GLF_IDENTITY(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)))))))), 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))))), mix(vec2((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))))))[0], (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))))))[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-613.529)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : injectionSwitch)).x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-65.97, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0))))), max(float(_GLF_IDENTITY(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)))))))), 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))))), mix(vec2((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))))))[0], (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))))))[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-613.529)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : injectionSwitch)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-65.97, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0))))), max(float(_GLF_IDENTITY(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(-65.97, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)))))))), 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))))), mix(vec2((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))))))[0], (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))))))[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-613.529)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false, true, _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), _GLF_IDENTITY((vec2(-65.97, 8.7)) * mat2(1.0), ((vec2(-65.97, 8.7)) * mat2(1.0)) - vec2(0.0, 0.0)))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))))), mix(vec2((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, _GLF_IDENTITY(8.7, min(8.7, 8.7)))) * mat2(1.0))))))[0], (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_FUZZED(_GLF_IDENTITY(vec2(-65.97, 8.7), (vec2(-65.97, 8.7)) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) * mat2(1.0)))))))[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-613.529)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : injectionSwitch)).x > injectionSwitch.y), false, true, false)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false)))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2679.3848)), vec2(_GLF_FUZZED(-5.2), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, false)))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
