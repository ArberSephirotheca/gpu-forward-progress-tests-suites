#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(bool(bvec2(bool(! (false)), true)), false || (bool(bvec2(bool(! (false)), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(bool(bvec2(bool(! (false)), true)), false || (bool(bvec2(bool(! (false)), true)))))))), false || (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(! (false)), false), bvec2(bvec2(bvec2(bool(! (false)), false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(! (false)), false), bvec2(bvec2(bvec2(bool(! (false)), false))))), true, false, false))))) && true), true)), false || (bool(bvec2(bool(! (false)), true)))))))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && (false || (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY(false || (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && (false || (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && (false || (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY(false || (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && (false || (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))) && true))))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false))))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), true))))))), ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || ((false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), true && ((! (false)))))))) && true)))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, ((_GLF_IDENTITY(false, ! (! (false)))) && true) || false)))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, true, false)), (bool(bvec4(! (false), true, true, false))) || false))))))), true))))) || false)))))))) && true))))))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true))))))), ! (! (bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), true && ((false))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.7)), float(injectionSwitch.y), bool(true))))) || (false)), ! (! (false))))))))))))))), ! (! ((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), true && ((false))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.7)), float(injectionSwitch.y), bool(true))))) || (false)), ! (! (false))))))))))))))))))), false, false))))))), (injectionSwitch.x > injectionSwitch.y)), true))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true)))))), bool(bvec3(_GLF_DEAD(false), true, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))), false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec2(true, false))), true, false)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_IDENTITY(false, (false) || false))))))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && true, bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && true))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))).x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))).x > injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))).x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))).x > injectionSwitch.y)))))))))) && true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(pow(-1.7, asin(-3722.3688))), (true ? injectionSwitch.y : _GLF_FUZZED(pow(-1.7, asin(-3722.3688)))) + 0.0)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(bvec4(_GLF_IDENTITY(((! (false))), (((! (false)))) || false), true, true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true && (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))) || false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))) || false)), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))) || false))))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))) || false)), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))) || false))))), false)), false, true))))))))))), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-425.371, -94.51)))), (injectionSwitch) * mat2(1.0)))))))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-8571.3193, (false ? _GLF_FUZZED(4.0) : -8571.3193))), (injectionSwitch)[_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(8), int(8))) | (1))]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2(mat4x3(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), 1.0, 1.0, sin(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 1.0, 1.0, 0.0))), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))), false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))), false))))), false, false)))))))))).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-8571.3193, max(-8571.3193, -8571.3193))), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), (false ? _GLF_FUZZED(atanh(injectionSwitch)) : vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), (false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)))))))), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)))), (false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(1906.3574)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-403.685)))))))), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), min(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), (false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)))))))), bvec2(true, false))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-403.685), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-403.685)), float(_GLF_FUZZED((false ? 18.83 : 666.565))), bool(false)), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-403.685)), float(_GLF_FUZZED((false ? 18.83 : 666.565))), bool(false)), float(mat2x3(mix(float(_GLF_FUZZED(-403.685)), float(_GLF_FUZZED((false ? 18.83 : 666.565))), bool(false)), 0.0, log(1.0), 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-403.685)), float(_GLF_FUZZED((false ? 18.83 : 666.565))), bool(false)))))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), false, false)), false, true))), true, false)))))))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false)), (true ? mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false)) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-8571.3193), float(mat2(_GLF_FUZZED(-8571.3193), 0.0, tan(0.0), 0.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, true)), true), bvec2(bvec3(bvec2(bool(bvec3(false, false, true)), true), true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, true)), true), bvec2(bvec3(bvec2(bool(bvec3(false, false, true)), true), true))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, true)), true), bvec2(bvec3(bvec2(bool(bvec3(false, false, true)), true), true))))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, true)), true), bvec2(bvec3(bvec2(bool(bvec3(false, false, true)), true), true)))))))))), true, _GLF_IDENTITY(false, true && (false)), false)))))))))))).x > injectionSwitch.y))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), (false ? _GLF_FUZZED(atanh(injectionSwitch)) : vec2(_GLF_IDENTITY(_GLF_FUZZED(-8571.3193), clamp(_GLF_FUZZED(-8571.3193), _GLF_FUZZED(-8571.3193), _GLF_IDENTITY(_GLF_FUZZED(-8571.3193), float(mat4(_GLF_FUZZED(-8571.3193), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-406.745, -7654.6030, 4.1, -191.374, -197.568, -8.8, 61.48, 900.142, 9.7, 1.8, 0.2, 8012.8115, 105.364, 8582.1992, -4638.4044, 6.1)) : mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-406.745, -7654.6030, 4.1, -191.374, -197.568, -8.8, 61.48, 900.142, 9.7, 1.8, 0.2, 8012.8115, 105.364, 8582.1992, -4638.4044, 6.1)) : mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-406.745, -7654.6030, 4.1, -191.374, -197.568, -8.8, 61.48, 900.142, 9.7, 1.8, 0.2, 8012.8115, 105.364, 8582.1992, -4638.4044, 6.1)) : mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0))))))))[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-403.685, min(_GLF_IDENTITY(-403.685, (true ? -403.685 : _GLF_FUZZED(82.96))), -403.685)))), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY((false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(_GLF_FUZZED(-403.685), (true ? _GLF_FUZZED(-403.685) : _GLF_FUZZED(4.5))))))), clamp((false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(_GLF_FUZZED(-403.685), (true ? _GLF_FUZZED(-403.685) : _GLF_FUZZED(4.5))))))), (false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(_GLF_FUZZED(-403.685), (true ? _GLF_FUZZED(-403.685) : _GLF_FUZZED(4.5))))))), (false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(_GLF_FUZZED(-403.685), (true ? _GLF_FUZZED(-403.685) : _GLF_FUZZED(4.5)))))))))))), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), (false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)))))))), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_FUZZED(-403.685)), (false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2(0.0, 0.0) + (vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)))))))))), bvec2(true, false))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-403.685), mix(float(_GLF_FUZZED(-403.685)), float(_GLF_FUZZED((false ? 18.83 : 666.565))), bool(false)))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), true, false)), true, false))))))))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false)), (true ? mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false)) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), false), false, false))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-8571.3193), float(mat2(_GLF_FUZZED(-8571.3193), 0.0, tan(0.0), 0.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, true)), true), bvec2(bvec3(bvec2(bool(bvec3(false, false, true)), true), true))))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, true)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), true), true)))))))))))))))).x > injectionSwitch.y))) || false)), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), (false ? _GLF_FUZZED(atanh(injectionSwitch)) : vec2(_GLF_IDENTITY(_GLF_FUZZED(-8571.3193), clamp(_GLF_FUZZED(-8571.3193), _GLF_FUZZED(-8571.3193), _GLF_IDENTITY(_GLF_FUZZED(-8571.3193), float(mat4(_GLF_FUZZED(-8571.3193), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-406.745, -7654.6030, 4.1, -191.374, -197.568, -8.8, 61.48, 900.142, 9.7, 1.8, 0.2, 8012.8115, 105.364, 8582.1992, -4638.4044, 6.1)) : mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-406.745, -7654.6030, 4.1, -191.374, -197.568, -8.8, 61.48, 900.142, 9.7, 1.8, 0.2, 8012.8115, 105.364, 8582.1992, -4638.4044, 6.1)) : mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-406.745, -7654.6030, 4.1, -191.374, -197.568, -8.8, 61.48, 900.142, 9.7, 1.8, 0.2, 8012.8115, 105.364, 8582.1992, -4638.4044, 6.1)) : mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0))))))))[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-403.685, min(_GLF_IDENTITY(-403.685, (true ? -403.685 : _GLF_FUZZED(82.96))), -403.685)))), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY((false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(_GLF_FUZZED(-403.685), (true ? _GLF_FUZZED(-403.685) : _GLF_FUZZED(4.5))))))), clamp((false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(_GLF_FUZZED(-403.685), (true ? _GLF_FUZZED(-403.685) : _GLF_FUZZED(4.5))))))), (false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(_GLF_FUZZED(-403.685), (true ? _GLF_FUZZED(-403.685) : _GLF_FUZZED(4.5))))))), (false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(_GLF_FUZZED(-403.685), (true ? _GLF_FUZZED(-403.685) : _GLF_FUZZED(4.5)))))))))))), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), (false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)))))))), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_FUZZED(-403.685)), (false ? _GLF_FUZZED((vec2(-0.3, 2021.6580) - injectionSwitch)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), vec2(0.0, 0.0) + (vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)))))))))), bvec2(true, false))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-403.685), mix(float(_GLF_FUZZED(-403.685)), float(_GLF_FUZZED((false ? 18.83 : 666.565))), bool(false)))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), true, false)), true, false))))))))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false)), (true ? mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false)) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-8571.3193), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), false), false, false))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-8571.3193), float(mat2(_GLF_FUZZED(-8571.3193), 0.0, tan(0.0), 0.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8571.3193), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-403.685)), bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, true)), true), bvec2(bvec3(bvec2(bool(bvec3(false, false, true)), true), true))))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, true)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), true), true)))))))))))))))).x > injectionSwitch.y))) || false))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, true)))))))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(4.3)), clamp((true ? injectionSwitch.x : _GLF_FUZZED(4.3)), (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4.3, min(4.3, 4.3)))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(4.3)), max((true ? injectionSwitch.x : _GLF_FUZZED(4.3)), (true ? injectionSwitch.x : _GLF_FUZZED(4.3))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bvec3(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_DEAD(false)))))), true, true), bvec3(bvec3(bvec3(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_DEAD(false)))))), true, true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_local_id)))) | (workgroup_id))) >> 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_local_id)))) | (workgroup_id))) >> 0u), 1u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u)), (uint(uvec4(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_local_id)))) | (workgroup_id))) >> 0u), 1u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) << 0u)), (_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_local_id)))) | (workgroup_id))) >> 0u)) | (_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_local_id)))) | (workgroup_id))) >> 0u)));
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, (_GLF_IDENTITY((subgroup_size) + 0u, uint(_GLF_IDENTITY(uvec3((subgroup_size) + 0u, 1u, 0u), (true ? uvec3((subgroup_size) + 0u, 1u, 0u) : _GLF_FUZZED(uvec3(155016u, 170692u, 113605u))))))) | ((subgroup_size) + 0u)))) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, (_GLF_IDENTITY((subgroup_size) + 0u, uint(_GLF_IDENTITY(uvec3((subgroup_size) + 0u, 1u, 0u), (true ? uvec3((subgroup_size) + 0u, 1u, 0u) : _GLF_FUZZED(uvec3(155016u, 170692u, 113605u))))))) | ((subgroup_size) + 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, (_GLF_IDENTITY((subgroup_size) + 0u, uint(_GLF_IDENTITY(uvec3((subgroup_size) + 0u, 1u, 0u), (true ? uvec3((subgroup_size) + 0u, 1u, 0u) : _GLF_FUZZED(uvec3(155016u, 170692u, 113605u))))))) | ((subgroup_size) + 0u)))) << 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, (_GLF_IDENTITY((subgroup_size) + 0u, uint(_GLF_IDENTITY(uvec3((subgroup_size) + 0u, 1u, 0u), (true ? uvec3((subgroup_size) + 0u, 1u, 0u) : _GLF_FUZZED(uvec3(155016u, 170692u, 113605u))))))) | ((subgroup_size) + 0u)))) << 0u))))) << 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, (_GLF_IDENTITY((subgroup_size) + 0u, uint(_GLF_IDENTITY(uvec3((subgroup_size) + 0u, 1u, 0u), (true ? uvec3((subgroup_size) + 0u, 1u, 0u) : _GLF_FUZZED(uvec3(155016u, 170692u, 113605u))))))) | ((subgroup_size) + 0u)))) << 0u)));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | 0u, max((subgroup_base) | 0u, (subgroup_base) | 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, exp(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(7.4))))), mix(vec2((vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(43.47)), float(0.0), bool(true))), sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.4)), float(0.0), bool(true)))) / 1.0), 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0), mat2x4(mat4(mat2x4(exp(0.0), _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-8967.2334) : determinant(mat3(1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.9)), float(0.0), bool(true)))), 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.0)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0))))), 0.0 + (float(_GLF_IDENTITY(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0), mat2x4(mat4(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0)))))))), 0.0)))[0], _GLF_IDENTITY((vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)))[1], min((vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)))[1], (vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)))[1]))), vec2(_GLF_FUZZED(655.848), _GLF_FUZZED(-2449.6685)), bvec2(false, false)))), injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, exp(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(7.4))))), mix(vec2((vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.4)), float(0.0), bool(true)))) / 1.0), 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0), mat2x4(mat4(mat2x4(exp(0.0), _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-8967.2334) : determinant(mat3(1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.9)), float(0.0), bool(true)))), 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0))))), 0.0 + (float(_GLF_IDENTITY(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0), mat2x4(mat4(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0)))))))), 0.0)))[0], (vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)))[1]), vec2(_GLF_FUZZED(655.848), _GLF_FUZZED(-2449.6685)), bvec2(false, false)))), injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, exp(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(7.4))))), mix(vec2((vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.4)), float(0.0), bool(true)))) / 1.0), 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0), mat2x4(mat4(mat2x4(exp(0.0), _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-8967.2334) : determinant(mat3(1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.9)), float(0.0), bool(true)))), 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0))))), 0.0 + (float(_GLF_IDENTITY(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0), mat2x4(mat4(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0)))))))), 0.0)))[0], (vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)))[1]), vec2(_GLF_FUZZED(655.848), _GLF_FUZZED(-2449.6685)), bvec2(false, false)))), injectionSwitch), clamp(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, exp(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(7.4))))), mix(vec2((vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.4)), float(0.0), bool(true)))) / 1.0), 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0), mat2x4(mat4(mat2x4(exp(0.0), _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-8967.2334) : determinant(mat3(1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.9)), float(0.0), bool(true)))), 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0))))), 0.0 + (float(_GLF_IDENTITY(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0), mat2x4(mat4(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0)))))))), 0.0)))[0], (vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)))[1]), vec2(_GLF_FUZZED(655.848), _GLF_FUZZED(-2449.6685)), bvec2(false, false)))), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, exp(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(7.4))))), mix(vec2((vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.4)), float(0.0), bool(true)))) / 1.0), 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0), mat2x4(mat4(mat2x4(exp(0.0), _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-8967.2334) : determinant(mat3(1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.9)), float(0.0), bool(true)))), 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0))))), 0.0 + (float(_GLF_IDENTITY(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0), mat2x4(mat4(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0)))))))), 0.0)))[0], (vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)))[1]), vec2(_GLF_FUZZED(655.848), _GLF_FUZZED(-2449.6685)), bvec2(false, false)))), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, exp(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(7.4))))), mix(vec2((vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.4)), float(0.0), bool(true)))) / 1.0), 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0), mat2x4(mat4(mat2x4(exp(0.0), _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-8967.2334) : determinant(mat3(1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.9)), float(0.0), bool(true)))), 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0))))), 0.0 + (float(_GLF_IDENTITY(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0), mat2x4(mat4(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0)))))))), 0.0)))[0], (vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)))[1]), vec2(_GLF_FUZZED(655.848), _GLF_FUZZED(-2449.6685)), bvec2(false, false)))), injectionSwitch))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, exp(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(7.4))))), mix(vec2((vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.4)), float(0.0), bool(true)))) / 1.0), 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0), mat2x4(mat4(mat2x4(exp(0.0), _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-8967.2334) : determinant(mat3(1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.9)), float(0.0), bool(true)))), 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0))))), 0.0 + (float(_GLF_IDENTITY(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0), mat2x4(mat4(mat2x4(exp(0.0), determinant(mat3(1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0)))))))), 0.0)))[0], (vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)))[1]), vec2(_GLF_FUZZED(655.848), _GLF_FUZZED(-2449.6685)), bvec2(false, false)))), injectionSwitch)))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) && true)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))))), (bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], (injectionSwitch[0]) - 0.0))), injectionSwitch[1])).x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0))), injectionSwitch[1])).x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || (bool((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), bool(bool(bool(bool((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false)))) && true)), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true && (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-50224)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8486.9873)), bvec2(true, false))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))), (injectionSwitch.x > injectionSwitch.y))))))) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(7.5))) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))), false, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), false || (bool(bool(! (_GLF_DEAD(false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), false || (bool(bool(! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), false || (bool(bool(! (_GLF_DEAD(false)))))))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), false || (bool(bool(! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), false || (bool(bool(! (_GLF_DEAD(false)))))))))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), false || (bool(bool(! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), false || (bool(bool(! (_GLF_DEAD(false)))))))))))), true), true)), true, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), false || (bool(bool(! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), false || (bool(bool(! (_GLF_DEAD(false)))))))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), false || (bool(bool(! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), false || (bool(bool(! (_GLF_DEAD(false)))))))))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), false || (bool(bool(! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), false || (bool(bool(! (_GLF_DEAD(false)))))))))))), true), true)), true, false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), false)))))))), ! (! (false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), false)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) || false)) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) || false)) && true), false, false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
