#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, 0.0)), float(mat4x2(float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 0.0))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))), false, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (uvec3(148191u, 112424u, 21223u)) / uvec3(1u, 1u, 1u))))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (uvec3(148191u, 112424u, 21223u)) / uvec3(1u, 1u, 1u))))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))), (true ? ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (uvec3(148191u, 112424u, 21223u)) / uvec3(1u, 1u, 1u))))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) : _GLF_FUZZED(uvec3(55828u, 118162u, 48655u))))) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (uvec3(148191u, 112424u, 21223u)) / uvec3(1u, 1u, 1u))))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(max(uvec3(135507u, 66849u, 19928u), uvec3(39539u, 185078u, 50619u))))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(max(uvec3(135507u, 66849u, 19928u), uvec3(39539u, 185078u, 50619u))))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(max(uvec3(135507u, 66849u, 19928u), uvec3(39539u, 185078u, 50619u))))), ((gl_WorkGroupID)) | ((gl_WorkGroupID)))) / uvec3(1u, 1u, 1u)), 1u))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)), uvec3(0u, 0u, 0u) | (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u))))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(148191u, 0u | (148191u)), 112424u, 21223u)), uvec3(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))))), 0u, 0u) | (true ? _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(max((gl_WorkGroupID), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))), ((gl_WorkGroupID)) | ((gl_WorkGroupID)))), (max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) - uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))))))), _GLF_IDENTITY(max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)), clamp(_GLF_IDENTITY(max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)), uvec3(uvec4(max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)), 1u))), max(~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))), ~ (gl_WorkGroupID)), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))))))), min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])))).y)), true))) ? _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))), ((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), uvec3(0u, 0u, 0u) | (((gl_WorkGroupID))))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) ^ 0)], (injectionSwitch[0]) / 1.0), injectionSwitch[1])))).y)), true), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) ^ 0)], (injectionSwitch[0]) / 1.0), injectionSwitch[1])))).y)), true), false))))) ? _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))), ((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), uvec3(0u, 0u, 0u) | (((gl_WorkGroupID))))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), max(~ (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID))), ~ (gl_WorkGroupID)))), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(((gl_WorkGroupID)), max(((gl_WorkGroupID)), ((gl_WorkGroupID)))) | ((gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))))) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ((gl_WorkGroupID)) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), min(_GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ((gl_WorkGroupID)) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ((gl_WorkGroupID)) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))))), max(~ (gl_WorkGroupID), ~ _GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(44320u, _GLF_IDENTITY(9185u, (9185u) - 0u), 163341u)))), _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), ~ (_GLF_IDENTITY(~ (uvec3(148191u, 112424u, 21223u)), min(~ (uvec3(148191u, 112424u, 21223u)), ~ (uvec3(_GLF_IDENTITY(148191u, (_GLF_IDENTITY(148191u, (148191u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) | (148191u)), 112424u, 21223u))))))) | (_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), uvec3(0u, 0u, 0u) ^ (uvec3(148191u, 112424u, 21223u)))))))), max(_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) << uvec3(0u, 0u, 0u))), ~ (gl_WorkGroupID))), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (gl_WorkGroupID))))))))).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (uvec3(148191u, 112424u, 21223u)) / uvec3(1u, 1u, 1u))))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (uvec3(148191u, 112424u, 21223u)) / uvec3(1u, 1u, 1u))))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))), (true ? ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (uvec3(148191u, 112424u, 21223u)) / uvec3(1u, 1u, 1u))))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) : _GLF_FUZZED(uvec3(55828u, 118162u, 48655u))))) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (uvec3(148191u, 112424u, 21223u)) / uvec3(1u, 1u, 1u))))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(max(uvec3(135507u, 66849u, 19928u), uvec3(39539u, 185078u, 50619u))))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(max(uvec3(135507u, 66849u, 19928u), uvec3(39539u, 185078u, 50619u))))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(max(uvec3(135507u, 66849u, 19928u), uvec3(39539u, 185078u, 50619u))))), ((gl_WorkGroupID)) | ((gl_WorkGroupID)))) / uvec3(1u, 1u, 1u)), 1u))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)), uvec3(0u, 0u, 0u) | (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u))))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(148191u, 0u | (148191u)), 112424u, 21223u)), uvec3(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))))), 0u, 0u) | (true ? _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(max((gl_WorkGroupID), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))), ((gl_WorkGroupID)) | ((gl_WorkGroupID)))), (max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) - uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))))))), _GLF_IDENTITY(max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)), clamp(_GLF_IDENTITY(max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)), uvec3(uvec4(max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)), 1u))), max(~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))), ~ (gl_WorkGroupID)), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))))))), min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])))).y)), true))) ? _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))), ((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), uvec3(0u, 0u, 0u) | (((gl_WorkGroupID))))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) ^ 0)], (injectionSwitch[0]) / 1.0), injectionSwitch[1])))).y)), true), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) ^ 0)], (injectionSwitch[0]) / 1.0), injectionSwitch[1])))).y)), true), false))))) ? _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))), ((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), uvec3(0u, 0u, 0u) | (((gl_WorkGroupID))))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), max(~ (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID))), ~ (gl_WorkGroupID)))), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(((gl_WorkGroupID)), max(((gl_WorkGroupID)), ((gl_WorkGroupID)))) | ((gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))))) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ((gl_WorkGroupID)) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), min(_GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ((gl_WorkGroupID)) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ((gl_WorkGroupID)) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))))), max(~ (gl_WorkGroupID), ~ _GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(44320u, _GLF_IDENTITY(9185u, (9185u) - 0u), 163341u)))), _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), ~ (_GLF_IDENTITY(~ (uvec3(148191u, 112424u, 21223u)), min(~ (uvec3(148191u, 112424u, 21223u)), ~ (uvec3(_GLF_IDENTITY(148191u, (_GLF_IDENTITY(148191u, (148191u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) | (148191u)), 112424u, 21223u))))))) | (_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), uvec3(0u, 0u, 0u) ^ (uvec3(148191u, 112424u, 21223u)))))))), max(_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) << uvec3(0u, 0u, 0u))), ~ (gl_WorkGroupID))), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (gl_WorkGroupID))))))))).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (uvec3(148191u, 112424u, 21223u)) / uvec3(1u, 1u, 1u))))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (uvec3(148191u, 112424u, 21223u)) / uvec3(1u, 1u, 1u))))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))), (true ? ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (uvec3(148191u, 112424u, 21223u)) / uvec3(1u, 1u, 1u))))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) : _GLF_FUZZED(uvec3(55828u, 118162u, 48655u))))) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (uvec3(148191u, 112424u, 21223u)) / uvec3(1u, 1u, 1u))))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(max(uvec3(135507u, 66849u, 19928u), uvec3(39539u, 185078u, 50619u))))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(max(uvec3(135507u, 66849u, 19928u), uvec3(39539u, 185078u, 50619u))))), ((gl_WorkGroupID)) | ((gl_WorkGroupID))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(max(uvec3(135507u, 66849u, 19928u), uvec3(39539u, 185078u, 50619u))))), ((gl_WorkGroupID)) | ((gl_WorkGroupID)))) / uvec3(1u, 1u, 1u)), 1u))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)), uvec3(0u, 0u, 0u) | (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u))))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(148191u, 0u | (148191u)), 112424u, 21223u)), uvec3(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))))), 0u, 0u) | (true ? _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(max((gl_WorkGroupID), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))), ((gl_WorkGroupID)) | ((gl_WorkGroupID)))), (max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) - uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))))))), _GLF_IDENTITY(max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)), clamp(_GLF_IDENTITY(max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)), uvec3(uvec4(max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)), 1u))), max(~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))), ~ (gl_WorkGroupID)), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))))))), min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])))).y)), true))) ? _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))), ((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), uvec3(0u, 0u, 0u) | (((gl_WorkGroupID))))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) ^ 0)], (injectionSwitch[0]) / 1.0), injectionSwitch[1])))).y)), true), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) ^ 0)], (injectionSwitch[0]) / 1.0), injectionSwitch[1])))).y)), true), false))))) ? _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))), ((gl_WorkGroupID)) | _GLF_IDENTITY(((gl_WorkGroupID)), uvec3(0u, 0u, 0u) | (((gl_WorkGroupID))))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), max(~ (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID))), ~ (gl_WorkGroupID)))), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(((gl_WorkGroupID)), max(((gl_WorkGroupID)), ((gl_WorkGroupID)))) | ((gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))))) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ((gl_WorkGroupID)) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), min(_GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ((gl_WorkGroupID)) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))), _GLF_IDENTITY((gl_WorkGroupID), (true ? _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ((gl_WorkGroupID)) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))) : _GLF_FUZZED(uvec3(148191u, 112424u, 21223u)))))), max(~ (gl_WorkGroupID), ~ _GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(44320u, _GLF_IDENTITY(9185u, (9185u) - 0u), 163341u)))), _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), (_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), ~ (_GLF_IDENTITY(~ (uvec3(148191u, 112424u, 21223u)), min(~ (uvec3(148191u, 112424u, 21223u)), ~ (uvec3(_GLF_IDENTITY(148191u, (_GLF_IDENTITY(148191u, (148191u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) | (148191u)), 112424u, 21223u))))))) | (_GLF_IDENTITY(uvec3(148191u, 112424u, 21223u), uvec3(0u, 0u, 0u) ^ (uvec3(148191u, 112424u, 21223u)))))))), max(_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) << uvec3(0u, 0u, 0u))), ~ (gl_WorkGroupID))), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), ~ (gl_WorkGroupID))))))))).x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false)) && true)), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(145.658)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.9) : injectionSwitch.y)), injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-2.3))), float(injectionSwitch.y), bool(true)))))) || false, ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(-6990.0968, -9836.3319, injectionSwitch)))).x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5489.1031)), float(injectionSwitch.x), bool(true)))) - 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), ! (! (true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5489.1031)), float(injectionSwitch.x), bool(true)))) - 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(injectionSwitch)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)) && true)), true && (! (false)))))))))), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(vec2(-7.3, -21.65)))), injectionSwitch)), sqrt(1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0))).y)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, false))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, false)))))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (bool(bvec4(true, true, true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), 0.0, 0.0)), max(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(roundEven(-4261.8480)))), sqrt(0.0), 0.0, 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), 0.0, 0.0)))))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), max(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), 0.0, 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), 0.0, 0.0)))))), true)), (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(normalize(1.5)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), 0.0, 0.0)), max(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(sqrt(0.0), float(mat2x3(sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(858.983))), 0.0)), (true ? _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(sqrt(0.0), float(mat2x3(sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(858.983))), 0.0)), float(mat3(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(sqrt(0.0), float(mat2x3(sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(858.983))), 0.0)), log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(1.5))), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), 0.0, 0.0)))))), true))) && true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), bvec2(false, true))).y))) || false)), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.3), _GLF_FUZZED(-634.255)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))) || false, bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true, true, false))), true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))) || false, bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, true, true, false))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))) || false, bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, true, true, false))), true, false)), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))) || false, bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), false))), true, false))), false)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8.7), mix(float(_GLF_FUZZED(68.21)), float(_GLF_FUZZED(-8.7)), bool(true)))), float(injectionSwitch.y), bool(true)))) * 1.0)))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, exp(0.0))), max(float(vec3(injectionSwitch.y, 1.0, exp(0.0))), float(vec3(injectionSwitch.y, 1.0, exp(0.0)))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))) || false))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) && true)))))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.2)), vec2(_GLF_FUZZED(-7880.1373), (injectionSwitch)[1]), bvec2(false, true))).y))) || false, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) || false)), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) - 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))) || false, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(20.27) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)), false || (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y) && true)))) || false, ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), float(vec2(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))))) > injectionSwitch.y))) || false))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y) && true)))) || false, ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), float(vec2(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))))) > injectionSwitch.y))) || false))))))), (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y) && true)))) || false, ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), float(vec2(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))))) > injectionSwitch.y))) || false)))))))) || false))))))))), false, false, false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false)))) && _GLF_IDENTITY(true, (true) || false))), (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), true && ((false))), false)), (bool(bvec2(_GLF_IDENTITY((false), true && ((false))), false))) && true)), ((false)) || false)))) && _GLF_IDENTITY(true, (true) || false)))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) ^ 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), ! (! ((! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))))))), ! (! (! (! (_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), _GLF_IDENTITY(bool(bvec4(! (! ((! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(! (! ((! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false))))))) && true))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))))), bool(bvec4((_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false))))))) && true))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))))), false, true, false))))))))))), true))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false)), bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false))), true && (bool(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false))))))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false)), true, true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (! (false))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (! (false))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(41.42))) > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)) || (false)))))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0)) ^ 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(92.20)), vec2(_GLF_FUZZED(49.00), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(92.20)), vec2(_GLF_FUZZED(49.00), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(92.20)), vec2(_GLF_FUZZED(49.00), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(92.20)), vec2(_GLF_FUZZED(49.00), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))).y))))
  barrier();
 uint read_val = atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64) << 0, 0 | (_GLF_IDENTITY((64) << 0, ((64) << 0) / 1)))), (_GLF_IDENTITY(64, _GLF_IDENTITY((64) << 0, 0 | (_GLF_IDENTITY((64) << 0, ((64) << 0) / 1))))) ^ (1 ^ 1)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, min(read_val, read_val))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
