#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 vec3 _f0;
 uint _f1;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 uvec3 _f1;
 vec2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 vec4 _f1;
 uvec4 _f2;
 bvec4 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 _GLF_struct_0 _f1;
 bvec4 _f2;
 _GLF_struct_1 _f3;
 bool _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 uint _f1;
 _GLF_struct_4 _f2;
 uint num_workgroup;
 mat2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, false || (true)), true), true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), true))))) && true, ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), true))))) && true, false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), true))))) && true, bool(bvec2((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), true))))) && true, true))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, false || (true)), true), true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), true))))) && true, ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), true))))) && true, false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), true))))) && true, bool(bvec2((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), true))))) && true, true))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, false || (true)), true), true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false)))))))))))), true)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false)))))))))))), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false)))))))))))), true)))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true, false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))))))), true))))) && true, bool(bvec2((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false))))), true))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)))))) && true, true)))))))))))))) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, sin(0.0), 1.0, abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))))), (true ? float(vec4(injectionSwitch.y, sin(0.0), 1.0, abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))))) : _GLF_FUZZED(-6.5))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) && true)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && ((false) || false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y) || false)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.1)), bool(false)))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, injectionSwitch.x))), (max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) / 1.0)), injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1168.4292), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1144.4606)), bvec2(true, false))))).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)) + (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_3(uvec4(_GLF_IDENTITY(1u, 1u * (1u))), _GLF_struct_0(mat4x2(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat3x4(1.0)), bvec4(true), _GLF_struct_1(mat3(1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0 * ((_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(0.0, 1.0, 0.0, 0.0)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-8.1) : 1.0, (false ? _GLF_FUZZED(-8.1) : 1.0) + _GLF_IDENTITY(0.0, (0.0) + 0.0)))))), max(1.0, 1.0))), uvec4(1u), bvec4(true), bvec3(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))))), true, _GLF_struct_2(vec2(1.0), uvec3(1u), vec2(1.0), mat2x4(1.0))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) / 1u) ^ 0u), _GLF_struct_4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), max(vec3(1.0), vec3(1.0))), mix(vec3(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(1.0))), vec3(1.0)))), min((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), max(vec3(1.0), vec3(1.0)))), (false ? _GLF_FUZZED(vec3(1.7, -5.4, 5.3)) : (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(331.943)))))))))))[0], _GLF_FUZZED(-5.8), _GLF_FUZZED(_GLF_IDENTITY(-2.7, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-2.7, (false ? _GLF_FUZZED(-972.319) : _GLF_IDENTITY(-2.7, 1.0 * (_GLF_IDENTITY(-2.7, (false ? _GLF_FUZZED(dot(vec3(-316.785, -6.6, -3.1), vec3(-2.5, 1254.8056, -5.5))) : -2.7)))))), (_GLF_IDENTITY(-2.7, (false ? _GLF_FUZZED(-972.319) : _GLF_IDENTITY(-2.7, 1.0 * (_GLF_IDENTITY(-2.7, (false ? _GLF_FUZZED(dot(vec3(-316.785, -6.6, -3.1), vec3(-2.5, 1254.8056, -5.5))) : -2.7))))))) * 1.0)), mix(float((_GLF_IDENTITY(_GLF_IDENTITY(-2.7, (false ? _GLF_FUZZED(-972.319) : _GLF_IDENTITY(-2.7, 1.0 * (_GLF_IDENTITY(-2.7, (false ? _GLF_FUZZED(dot(vec3(-316.785, -6.6, -3.1), vec3(-2.5, 1254.8056, -5.5))) : -2.7)))))), (_GLF_IDENTITY(-2.7, (false ? _GLF_FUZZED(-972.319) : _GLF_IDENTITY(-2.7, 1.0 * (_GLF_IDENTITY(-2.7, (false ? _GLF_FUZZED(dot(vec3(-316.785, -6.6, -3.1), vec3(-2.5, 1254.8056, -5.5))) : -2.7))))))) * 1.0))), float(_GLF_FUZZED(5173.3389)), bool(false))) - 0.0))), vec3(_GLF_FUZZED(-83.80), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), (vec3(1.0)) / vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(-410.130))))), max(vec3(1.0), vec3(1.0))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(-5.0), _GLF_IDENTITY((vec3(1.0))[1], (true ? (vec3(1.0))[1] : _GLF_FUZZED(-72.25))), _GLF_FUZZED(4.4)), vec3((vec3(1.0))[0], _GLF_FUZZED(vec2(63.01, -5269.1327).g), (vec3(1.0))[2]), bvec3(true, false, true))), vec3(mat3(vec3(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / cos(0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(vec3(1.0), vec3(0.0, 0.0, 0.0) + (vec3(1.0))))))), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0)))), max(vec3(1.0), vec3(1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))), _GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(1.0)))))), mix(vec3(_GLF_FUZZED(505.496), (vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))))))[1], (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7282.2146)))) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))))))[2]), vec3((vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))) * mat3(1.0)), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))))))[0], _GLF_FUZZED(5.7), _GLF_FUZZED(37.43)), bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))[2]), bvec3(false, true, true))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.3)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-76.90)), float(1.0), bool(true))), 1.0))), vec3(1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), max(vec3(1.0), vec3(1.0))), mix(vec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)), vec3(1.0)))), min((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), (_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec3(1.0))))))[0], clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)), vec3(1.0)))), min((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), (_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec3(1.0))))))[0], (true ? _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)), vec3(1.0)))), min((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), (_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec3(1.0))))))[0] : _GLF_FUZZED(7.6))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)), vec3(1.0)))), min((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), (_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec3(1.0))))))[0], (true ? _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)), vec3(1.0)))), min((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), (_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec3(1.0))))))[0] : _GLF_FUZZED(-53.56))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)), vec3(1.0)))), min((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), (_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec3(1.0))))))[0])), _GLF_FUZZED(-5.8), _GLF_FUZZED(_GLF_IDENTITY(-2.7, (_GLF_IDENTITY(-2.7, _GLF_IDENTITY((false ? _GLF_FUZZED(-972.319) : -2.7), max(_GLF_IDENTITY((false ? _GLF_FUZZED(-972.319) : -2.7), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-972.319) : -2.7), min((false ? _GLF_FUZZED(-972.319) : -2.7), (false ? _GLF_FUZZED(-972.319) : -2.7))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-972.319), min(_GLF_IDENTITY(_GLF_FUZZED(-972.319), mix(float(_GLF_FUZZED(-972.319)), float(_GLF_FUZZED(6199.1978)), bool(false))), _GLF_FUZZED(-972.319))) : -2.7))), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-972.319), clamp(_GLF_FUZZED(-972.319), _GLF_IDENTITY(_GLF_FUZZED(-972.319), (_GLF_FUZZED(-972.319)) / 1.0), _GLF_FUZZED(-972.319))) : -2.7), ((false ? _GLF_FUZZED(-972.319) : -2.7)) / 1.0))))) - 0.0))), vec3(_GLF_FUZZED(-83.80), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)), max(vec3(1.0), vec3(1.0))))[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(18771)))], ((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)), max(vec3(1.0), vec3(1.0))))[1]) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), log(1.0), 0.0, 1.0, 1.0)))), max(vec3(1.0), vec3(1.0))), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), vec3(1.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), ((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))) + vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), vec3(_GLF_IDENTITY(vec3(min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), ((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))) + vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))), mix(vec3(_GLF_FUZZED(5932.4729), _GLF_IDENTITY((vec3(min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), ((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))) + vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))))[1], min((vec3(min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), ((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))) + vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))))[1], (vec3(min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), ((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))) + vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))))[1])), (vec3(min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), ((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))) + vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))))[2]), vec3((vec3(min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))), ((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))) + vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))))[0], _GLF_FUZZED(-7.3), _GLF_FUZZED(-74.62)), bvec3(true, false, false)))))))) : _GLF_FUZZED(vec3(1.1, -371.492, 7487.6191)))))[2]), bvec3(false, true, true))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), vec3(1.0))), max(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), vec3(1.0))), _GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), vec3(1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), max(vec3(1.0), vec3(1.0))), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), max(vec3(1.0), vec3(1.0)))) - vec3(0.0, 0.0, 0.0)), mix(vec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) + vec3(0.0, 0.0, 0.0)), max(vec3(1.0), vec3(1.0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), (vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0))) + vec3(0.0, 0.0, 0.0)), max(vec3(1.0), vec3(1.0)))), (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))))[0], _GLF_FUZZED(-5.8), _GLF_FUZZED(_GLF_IDENTITY(-2.7, (_GLF_IDENTITY(-2.7, (false ? _GLF_FUZZED(-972.319) : -2.7))) - 0.0))), vec3(_GLF_FUZZED(-83.80), (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), max(vec3(1.0), vec3(1.0))))[1], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))))))), mix(vec3(_GLF_FUZZED(-3.0), ((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))))))))[1], _GLF_FUZZED(2869.6019)), vec3(((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))))))))[0], _GLF_FUZZED(0.7), ((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0)))))))))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))[2]), bvec3(false, true, _GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))))), 1u), gl_NumWorkGroups.x, mat2(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), bool(bvec4(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), true, true, false)))))), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y))))) && (false)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), bool(bvec4(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), true, true, false)))))), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y))))) && (false)))) && true), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), bool(bvec4(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), true, true, false)))))), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y))))) && (false)))) && true), false, true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), float(vec4((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), float(vec4((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x)))))) : _GLF_FUZZED(5.8))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false))), false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false) ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), float(vec4((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-14.44), min(_GLF_FUZZED(-14.44), _GLF_FUZZED(-14.44))) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), min(max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))))), float(vec4((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), mix(float(_GLF_IDENTITY(max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), max(max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x)))), float(_GLF_FUZZED(-5230.9156)), bool(false))))), 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, (false ? _GLF_FUZZED(-14.44) : injectionSwitch.x) - 0.0), false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x)), _GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-14.44) : injectionSwitch.x)))))) : _GLF_FUZZED(5.8))) > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, bool(bool((! (false)) || false)))))), false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, min(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, min(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))))))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_IDENTITY(_GLF_FUZZED(-14.44), (_GLF_IDENTITY(_GLF_FUZZED(-14.44), clamp(_GLF_IDENTITY(_GLF_FUZZED(-14.44), min(_GLF_FUZZED(-14.44), _GLF_FUZZED(-14.44))), _GLF_FUZZED(-14.44), _GLF_FUZZED(-14.44)))) - 0.0) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), float(vec4((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), float(vec4((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x)))))) : _GLF_FUZZED(5.8))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(! (false), true && (! (false)))) || false))), false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-14.44, max(-14.44, -14.44))) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) ? _GLF_IDENTITY(_GLF_FUZZED(-14.44), (_GLF_FUZZED(-14.44)) - 0.0) : injectionSwitch.x))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, mix(float(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), float(_GLF_FUZZED(-82.19)), bool(false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false) ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-96.72), _GLF_FUZZED(-3.2)), bvec2(false, false))).x, max(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false))))))), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x)))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false))))))), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x)))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false))))))), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x)))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false))))))), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x)))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) ? _GLF_FUZZED(-14.44) : injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))))), float(vec4((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-14.44), min(_GLF_FUZZED(-14.44), _GLF_FUZZED(-14.44))) : injectionSwitch.x, max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, _GLF_IDENTITY(max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), _GLF_IDENTITY(min(max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x)), float(mat3x4(_GLF_IDENTITY(min(max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x)), min(min(max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x)), min(max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x)))), 1.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(vec4((_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), clamp(_GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), clamp(((injectionSwitch)) * mat2(1.0), ((injectionSwitch)) * mat2(1.0), ((injectionSwitch)) * mat2(1.0))), ((injectionSwitch)) * mat2(1.0), ((injectionSwitch)) * mat2(1.0))))).x, _GLF_IDENTITY(max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), mix(float(_GLF_IDENTITY(max(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-14.44) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), max(_GLF_IDENTITY(max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), min(max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x), max(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(-14.44) : injectionSwitch.x))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, (true ? false ? _GLF_FUZZED(-14.44) : injectionSwitch.x : _GLF_FUZZED(953.244))), false ? _GLF_FUZZED(-14.44) : injectionSwitch.x)))), float(_GLF_FUZZED(-5230.9156)), bool(false))))), 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, max(_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, (false ? _GLF_FUZZED(-14.44) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.8))), injectionSwitch.x))) - 0.0), false ? _GLF_FUZZED(-14.44) : injectionSwitch.x, false ? _GLF_FUZZED(_GLF_IDENTITY(-14.44, (true ? -14.44 : _GLF_FUZZED(70.62)))) : injectionSwitch.x)), _GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-14.44) : injectionSwitch.x)))))) : _GLF_FUZZED(5.8))) > injectionSwitch.y))))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) && (false)))) && true))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), true, false, false)), false || (bool(bvec4((_GLF_DEAD(false)), true, false, false)))))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true), false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])).x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), true))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (true ? _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x) * _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), uint(uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x) * 1u, (_GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ ((gl_WorkGroupID.x)))) * 1u) | (_GLF_IDENTITY((gl_WorkGroupID.x) * 1u, ~ (~ (_GLF_IDENTITY((gl_WorkGroupID.x) * 1u, 0u | ((gl_WorkGroupID.x) * 1u))))))), ((gl_WorkGroupID.x) * 1u) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (true ? _GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x)) : _GLF_FUZZED(subgroup_local_id)))), uint(uvec3((_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_local_id)))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u))), 0u | (0u | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x) * 1u, (_GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ ((gl_WorkGroupID.x)))) * 1u) | (_GLF_IDENTITY((gl_WorkGroupID.x) * 1u, ~ (~ (_GLF_IDENTITY((gl_WorkGroupID.x) * 1u, 0u | ((gl_WorkGroupID.x) * 1u))))))), ((gl_WorkGroupID.x) * 1u) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (true ? _GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x)) : _GLF_FUZZED(subgroup_local_id)))), uint(uvec3((_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_local_id)))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u))))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id)))))))) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id)))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(subgroup_local_id) : workgroup_size), (true ? (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(subgroup_local_id) : workgroup_size) : _GLF_FUZZED(uvec4(121108u, 2918u, 127907u, 173339u).r)))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) << 0u)))))) - 0u))), (_GLF_IDENTITY(true, true && (true)) ? (workgroup_id) : _GLF_FUZZED((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) : workgroup_id)), _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), workgroup_id)))) * workgroup_id)))) ^ 0u), max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), max(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), 0u | (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) - 0u))), (_GLF_IDENTITY(true, true && (true)) ? (workgroup_id) : _GLF_FUZZED((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))), 0u | (uint(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)))))))) / 1u)) : workgroup_id)), _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), workgroup_id)))) * workgroup_id)))) ^ 0u), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) - 0u))), (_GLF_IDENTITY(true, true && (true)) ? (workgroup_id) : _GLF_FUZZED((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))) : workgroup_id)), _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uint(workgroup_id), 0u ^ (uint(workgroup_id))))))))) * workgroup_id)))) ^ 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true, false))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1185.6056, 8307.3768)))).y)))) && true), true, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true, false))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1185.6056, 8307.3768)))).y)))) && true), true, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), true, false))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1185.6056, 8307.3768)))).y)))) && true), true, false)))))))))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), max((~ (workgroup_base)), _GLF_IDENTITY((~ (workgroup_base)), 0u + ((~ (workgroup_base))))))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) / 1u), max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))))) / 1u), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))))))) / 1u))) + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), max((~ (workgroup_base)), _GLF_IDENTITY((~ (workgroup_base)), 0u + ((~ (workgroup_base))))))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) / 1u), max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))))) / 1u), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))))))) / 1u))) + subgroup_id * subgroup_size), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)))), ((_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), max((~ (workgroup_base)), _GLF_IDENTITY((~ (workgroup_base)), 0u + ((~ (workgroup_base))))))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base)))))))) / 1u), max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))))) - 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), (((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), ~ (~ (workgroup_base))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))))), max((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))))))))))) / 1u), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), workgroup_base))) << 0u))))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), min(_GLF_IDENTITY(~ (~ (workgroup_base)), max(~ (~ (workgroup_base)), _GLF_IDENTITY(~ (~ (workgroup_base)), 0u ^ (~ (~ (workgroup_base)))))), ~ (~ (workgroup_base))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))))))) / 1u))) + subgroup_id * subgroup_size)) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (workgroup_base))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u)) / 1u))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), 0u + ((workgroup_base)))))))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) / 1u) + subgroup_id * subgroup_size) << 0u, clamp((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))), ~ (~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)))) - _GLF_IDENTITY(0u, 0u | (0u)))), ((_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), 0u | ((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)))))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) / 1u) + subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))))) / 1u) + subgroup_id * subgroup_size) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (false ? _GLF_FUZZED((bitfieldReverse(subgroup_local_id))) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) >> 0u))))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) / 1u) + subgroup_id * subgroup_size) << 0u, uint(uvec2((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ (~ (workgroup_base)), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))), (~ (~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u))) - 0u))))) - 0u)), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) / 1u) + subgroup_id * subgroup_size) << 0u, 0u)))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true, false, false))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(true && (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(! (true && (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), false || (! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))))))))))), false, true))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, false, true)))), false || (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true))))))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(false || (bool(bvec4(false, false, false, true))), (false || (bool(bvec4(false, false, false, true)))) || false)))))))))), ! (! (! (false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), true, false, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))))))) && true)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false)))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4((false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, true))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))))[1]), vec2(_GLF_FUZZED(-0.2), _GLF_FUZZED(2.7)), bvec2(false, false))).y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), bool(bvec3(bool(bool(false)), false, true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true, false)))) && true), false, false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, 0u | (write_val)), 4, 64, 0);
 buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) - 0u), (uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), (1u) - 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(9.6, 577.457), mix(vec2((vec2(9.6, 577.457))[0], _GLF_FUZZED(vec4(88.02, 9.7, -763.223, -4144.2681).z)), vec2(_GLF_FUZZED((true ? (8.8 * -6.7) : -5.1)), (vec2(9.6, 577.457))[1]), bvec2(false, true)))) : injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(((-9.9 - 4.6) - -7.3)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(((-9.9 - 4.6) - -7.3)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0)), (true ? float(mat3x2(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.02)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(((-9.9 - _GLF_IDENTITY(4.6, float(mat4x2(4.6, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0)))) - -7.3)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(((-9.9 - 4.6) - -7.3)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(((-9.9 - 4.6) - -7.3)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))) && true))))))) * mat2(1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9975.6661, 9.4)))))).y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_FUZZED(-4.4)), float(length(normalize(vec2(1.0, 1.0)))), bool(true)))), max(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), mix(float(round(length(normalize(vec2(1.0, 1.0))))), float(_GLF_FUZZED((- -66.02))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), round(length(normalize(vec2(1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0)), (_GLF_IDENTITY(true ? float(mat3x2(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.02), (true ? float(mat3x2(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.02)) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, tan(0.0), 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, tan(0.0), 1.0)))))))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(((-9.9 - 4.6) - -7.3)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(((-9.9 - 4.6) - -7.3)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0)), (true ? float(mat3x2(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.02)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(((-9.9 - _GLF_IDENTITY(4.6, float(mat4x2(4.6, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0)))) - -7.3)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(((-9.9 - 4.6) - -7.3)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.3)), vec2(_GLF_FUZZED(((-9.9 - 4.6) - -7.3)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))) && true))))))) * mat2(1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9975.6661, 9.4)))))).y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_FUZZED(-4.4)), float(length(normalize(vec2(1.0, 1.0)))), bool(true)))), max(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), mix(float(round(length(normalize(vec2(1.0, 1.0))))), float(_GLF_FUZZED((- -66.02))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), round(length(normalize(vec2(1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0)), (_GLF_IDENTITY(true ? float(mat3x2(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.02), (true ? float(mat3x2(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(-39.02)) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, tan(0.0), 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, tan(0.0), 1.0)))))))) && true)))) || false))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(true, (true) || false))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
