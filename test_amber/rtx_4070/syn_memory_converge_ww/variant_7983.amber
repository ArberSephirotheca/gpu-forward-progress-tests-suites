#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(464.748))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) / 1.0)) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(fract(vec2(-9549.8666, -9.9))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || ((false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bool(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bool(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), min(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(130.602), _GLF_FUZZED(9.2)), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) || false)))), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(130.602), _GLF_FUZZED(9.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) || false)))), injectionSwitch)) / cos(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-1.6), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(9.3)), bvec2(true, false)))))), injectionSwitch)).y))), true), true, false))), false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(max(1.1, 934.574))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-821.973) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(7701.4726)), float(float(1.0)), bool(true))), float(_GLF_FUZZED(-6903.5690)), bool(false))))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true), true))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(44.25)), vec2(_GLF_FUZZED(float(-22188)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) ? _GLF_FUZZED(70.25) : injectionSwitch.x))), clamp(_GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(588.693) : _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, sin(0.0), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0)))))), min(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(588.693) : _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, sin(0.0), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(588.693) : _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, sin(0.0), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0)))))))), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4003.2538) : injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), vec2(mat2((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch))) - tan(vec2(0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), max((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-23.22, min(_GLF_IDENTITY(-23.22, (true ? -23.22 : _GLF_FUZZED(-0.0))), -23.22)), 26.93)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch))) - tan(vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch), clamp(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch), clamp(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch), vec2(0.0, 0.0) + ((_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch))), (_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch), (_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch))), (_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch), (_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch))))) - _GLF_IDENTITY(tan(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : tan(vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-23.22, 26.93)) : injectionSwitch))) - tan(vec2(0.0, 0.0))))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), max(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))).y))) / 1.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.7))), 1.0))), float(_GLF_FUZZED(7551.2673)), bool(false))), injectionSwitch.y), 1.0, 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_IDENTITY(_GLF_FUZZED(-25.06), mix(float(_GLF_FUZZED(-25.06)), float(_GLF_FUZZED(-3.2)), bool(false))) : injectionSwitch[1])))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, determinant(mat4(sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), injectionSwitch.y), 1.0, 1.0))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.6), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))[0], (injectionSwitch)[0]))) + 0.0), ((injectionSwitch)[0]) + 0.0), (injectionSwitch)[0])), _GLF_FUZZED(443.025)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(-8552.5902) : _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(-6.5) : float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))))), clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), _GLF_IDENTITY((vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0), ((vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0)) * sqrt(vec2(1.0, 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), _GLF_IDENTITY((vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0)))), (clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(0.0, 0.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(0.0, 0.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))) / vec2(1.0, 1.0))))) / 1.0))))))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(-8552.5902) : _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0)))), (clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), min(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), clamp(vec2(injectionSwitch.x, 0.0), vec2(injectionSwitch.x, 0.0), vec2(injectionSwitch.x, 0.0))), vec2(injectionSwitch.x, 0.0))), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-7.3, -2.7, 157.972), vec3(0.9, -4953.6963, -4.5)))))))))) / 1.0))))))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(-8552.5902) : _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED((- -77.49))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), _GLF_IDENTITY((vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0), ((vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0)) / vec2(1.0, 1.0)))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0)))), (clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.4))) : _GLF_FUZZED(-8.8))), 0.0))), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))))) / 1.0))))))) > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(-8552.5902) : _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0)))), (clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), max(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))))) / 1.0))))))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(-8552.5902) : _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), mat2(1.0) * (mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))))))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0)))), (clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) / vec2(1.0, 1.0))))) / 1.0))))))) > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch))))).x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4((false) && true, false, true, false)))), bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(21.19), _GLF_FUZZED(-8.9)), bvec2(false, false)))))[1])))).y)), false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), (injectionSwitch.x > injectionSwitch.y)))))), false, false))))), bool(bvec4(bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), _GLF_IDENTITY(true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, false)))), true && (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), (injectionSwitch.x > injectionSwitch.y)))))), false, false))))), bool(bvec4(bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), _GLF_IDENTITY(true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, false))))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), false, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), false, false), true))), true)), false))))), false), false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))))))) || false)), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))), bool(bvec4(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true, false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false))))))))))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), _GLF_IDENTITY(true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, (false) && true), false), true))), true)), false))))), false), false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)), false, true)))))), bool(bvec4(bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), _GLF_IDENTITY(true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))), bool(bvec4(bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), _GLF_IDENTITY(true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, false)))), true && (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), bool(bvec3(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), true, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))), bool(bvec4(bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.9), _GLF_FUZZED(9.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), _GLF_IDENTITY(true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, false))))))), false), false))), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), false))))), false), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true, false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), true && (bool(bvec3(_GLF_DEAD(false), false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true)), false))))), false), false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), false))))), false), false)))))), true, true)))), true, false)))))), true && (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false)))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false))))), bool(bool(! (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false))))))))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false)))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false))))), bool(bool(! (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false))))))))))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false)))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false))))), bool(bool(! (! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false))))))))))), false)), true))))), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), true))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), true))))), true)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), true))))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), true))))), true)), true))))))))), false))))), false), _GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), false))))), false), false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, ! (! (false))), false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), false))))), false), false)))))))), true, true)))), true, false)))))), bool(bvec4(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true))))), true)), false))))), false), false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), false))))), false), false)))))), true, true)))), true, false)))))), bool(bvec4(! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true)), false))))), false), false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true)), false))))), false), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true)), false))))), false), false))), true))), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true)), false))))), false), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true))))), false, false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true)), false))))), false), false))), true))), true, false)), false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true)), false))))), false), false)))))), true, true)))), true, false)))))), true, false, false))), true, true, false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))), subgroup_local_id, subgroup_local_id))), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | 0u))), 1u * (uint((subgroup_local_id)))))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.3) : 0.0)), injectionSwitch.x))), max(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | 0u))), 1u * (uint((subgroup_local_id)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | 0u))), 1u * (uint((subgroup_local_id)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u), workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | 0u))), 1u * (uint((subgroup_local_id)))))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))))))));
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((int(int(4))) / 1, max(_GLF_IDENTITY((int(int(4))) / 1, ((int(int(4))) / 1) | ((int(int(4))) / 1)), _GLF_IDENTITY((int(int(4))) / 1, max((int(int(4))) / 1, (int(int(4))) / 1)))))), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) / (1 | 1)))), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / _GLF_IDENTITY(1, 0 + (1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), (int(4)) / 1) : _GLF_FUZZED(-74326)))) >> 0)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))) | (4)), 4, 4)))), 0 | (4)))), 4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)) / 1)), clamp((_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(int(4)), (int(int(4))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (int(4)) << 0)), (int(int(4))) / 1))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, ~ (~ (4))))), (int(int(4))) + (-66543 & 0))))), max(4, 4)), 4))))))))))))), 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(abs(9476.6268)) : injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) - vec2(0.0, 0.0)))).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atanh(injectionSwitch)) : injectionSwitch)).x, float(vec4(injectionSwitch.x, 0.0, cos(0.0), 0.0))))) > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))), true, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))), true, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(bvec4(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))), true, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec4(bool(bvec4(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))), true, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), bool(bvec3(bool(bvec4(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false, true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))), true, true, true)), false, true)))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))), true, true, true)), bool(bvec3(bool(bvec4(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))), true, true, true)), false, true)))), true, false)), false, true, true))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u + (buf[virtual_gid] = uint(subgroupAllEqual(read_val))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), true && ((bool(false)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) + 0.0)) > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, true && (true)), true))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec2(86.77, 728.191).s) : 0.0)), (0.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.6)), bool(false)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, sqrt(1.0), 0.0)), float(mat2x4(float(vec3(1.0, sqrt(1.0), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))) / 1.0), 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec2(86.77, 728.191).s) : 0.0)), (0.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.6)), bool(false)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))).y) / 1.0)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
