#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false), false, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(vec4(injectionSwitch[1], 1.0, 1.0, 0.0), mat4(1.0) * (vec4(injectionSwitch[1], 1.0, 1.0, 0.0))))))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(vec4(injectionSwitch[1], 1.0, 1.0, 0.0), mat4(1.0) * (vec4(injectionSwitch[1], 1.0, 1.0, 0.0))))))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true, false, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, false || ((false) && true))))))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0))))), max(vec2(mat3x4(injectionSwitch, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), float(mat2x4(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)))), 0.0, 1.0))))), vec2(mat3x4(injectionSwitch, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0)))))))).y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-410.143)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 1.0 * (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))) / 1.0)), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0))))), max(vec2(mat3x4(injectionSwitch, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, (1.0) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(428.781)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5967.8013)), float(1.0), bool(true)))), bool(true))))), float(mat2x4(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)))), 0.0, 1.0))))), vec2(mat3x4(injectionSwitch, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0)))))))).y) || false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8365.3894)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, (true) || false), false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(177096u, 150628u, 110995u)) : gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), uvec3(uvec4(gl_WorkGroupSize, 0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) / uvec3(1u, 1u, 1u)))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))), uvec3(uvec4(gl_WorkGroupSize, 0u))))), min(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), uvec3(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), 0u)))))), (true ? (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, _GLF_IDENTITY(160321u, ~ (~ (_GLF_IDENTITY(160321u, max(160321u, 160321u))))), 176799u)) : _GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (true ? _GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) >> uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(uvec4(8736u, 27725u, 161100u, 71583u))))))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, 160321u, 176799u)) : uvec4(gl_WorkGroupSize, 0u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, 160321u, 176799u)) : uvec4(gl_WorkGroupSize, 0u)))))))), ~ (_GLF_IDENTITY(~ (~ ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, 160321u, 176799u)) : uvec4(gl_WorkGroupSize, 0u))))))))), max(~ (~ ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, 160321u, 176799u)) : uvec4(gl_WorkGroupSize, 0u))))))))), ~ (~ ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, 160321u, 176799u)) : uvec4(gl_WorkGroupSize, 0u))))))))))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, 160321u, 176799u)) : uvec4(gl_WorkGroupSize, 0u)))))))), (~ ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, 160321u, 176799u)) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, (1u ^ 1u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))))))))))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)))))) >> uvec3(0u, 0u, 0u)))), 0u))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(172528u, max(172528u, _GLF_IDENTITY(172528u, (172528u) | 0u))), min(172528u, 172528u)), 2930u, 97373u)))), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), uvec3(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))), uvec3(uvec4(gl_WorkGroupSize, 0u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), min(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))), 0u)))))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), (true ? (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), min(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) : _GLF_FUZZED(uvec3(172528u, 2930u, 97373u)))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))) / uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(gl_WorkGroupSize, 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), (true ? _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(uvec3(172528u, 2930u, 97373u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(gl_WorkGroupSize, 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) | uvec4(0u, 0u, 0u, 0u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) | uvec4(0u, 0u, 0u, 0u))), 0u)))))))), (true ? _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(uvec3(172528u, 2930u, 97373u))))) - uvec3(0u, 0u, 0u)), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))) - uvec3(0u, 0u, 0u))))))))), ((~ _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))), uvec3(uvec4(gl_WorkGroupSize, 0u))))), min(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), uvec3(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), 0u)))))), (true ? (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, _GLF_IDENTITY(160321u, ~ (~ (_GLF_IDENTITY(160321u, max(160321u, 160321u))))), 176799u)) : _GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (true ? _GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) >> uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(uvec4(8736u, 27725u, 161100u, 71583u))))))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, 160321u, 176799u)) : uvec4(gl_WorkGroupSize, 0u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, 160321u, 176799u)) : uvec4(gl_WorkGroupSize, 0u)))))))), ~ (_GLF_IDENTITY(~ (~ ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, 160321u, 176799u)) : uvec4(gl_WorkGroupSize, 0u))))))))), max(~ (~ ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, 160321u, 176799u)) : uvec4(gl_WorkGroupSize, 0u))))))))), ~ (~ ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, 160321u, 176799u)) : uvec4(gl_WorkGroupSize, 0u))))))))))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, 160321u, 176799u)) : uvec4(gl_WorkGroupSize, 0u)))))))), (~ ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(189064u, 108902u, 160321u, 176799u)) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, (1u ^ 1u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))))))))))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)))))) >> uvec3(0u, 0u, 0u)))), 0u))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(172528u, max(172528u, _GLF_IDENTITY(172528u, (172528u) | 0u))), min(172528u, 172528u)), 2930u, 97373u)))), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), uvec3(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))), uvec3(uvec4(gl_WorkGroupSize, 0u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), min(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))), 0u)))))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), (true ? (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), min(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) : _GLF_FUZZED(uvec3(172528u, 2930u, 97373u)))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))) / uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(gl_WorkGroupSize, 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), (true ? _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(uvec3(172528u, 2930u, 97373u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(gl_WorkGroupSize, 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) | uvec4(0u, 0u, 0u, 0u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) | uvec4(0u, 0u, 0u, 0u))), 0u)))))))), (true ? _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))), ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(uvec3(172528u, 2930u, 97373u))))) - uvec3(0u, 0u, 0u)), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))) - uvec3(0u, 0u, 0u)))))))))) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_WorkGroupSize, 0u)))))), min(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_WorkGroupSize, 0u)))), uvec3(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(98093u, 104324u, 21487u) & uvec3(0u, 0u, 0u)) + (gl_WorkGroupSize)), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_WorkGroupSize, 0u))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) ^ 0u))))) + (uvec3(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_WorkGroupSize, 0u))))))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_WorkGroupSize, 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_WorkGroupSize, 0u)))))) >> uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 0u))) | _GLF_IDENTITY((~ (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, ~ (_GLF_IDENTITY(~ ((1u) - 0u), (false ? _GLF_FUZZED(subgroup_size) : ~ ((1u) - 0u)))))))))), ((_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), 0u ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) / 1u) - 0u)))))))) | ((_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(floatBitsToUint(3.7)))), ~ (~ (_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(floatBitsToUint(3.7))))))), (1u) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(write_val)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, (1u) - 0u))), (true ? (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (16697u & 0u) | (_GLF_IDENTITY((1u), ((1u)) | ((1u))))) - 0u))) : _GLF_FUZZED(subgroup_size)))), min(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))))) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (1u) - 0u)))), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) - 0u))))))))) * ((_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), (~ (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), ~ (_GLF_IDENTITY(~ (uvec3(uvec4(gl_WorkGroupSize, 0u))), uvec3(0u, 0u, 0u) | (~ (uvec3(uvec4(gl_WorkGroupSize, 0u))))))))))) + uvec3(0u, 0u, 0u))))))) >> ((uvec3(190730u, 1244u, 154837u) * _GLF_IDENTITY(30572u, min(30572u, 30572u))) & uvec3(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (false ? _GLF_FUZZED(115437u) : _GLF_IDENTITY(0u, (0u) | (0u)))), 0u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) << 0u)) / 1u), 0u))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2153.1071)), bool(false))))), injectionSwitch.y))))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2153.1071)), bool(false))))), injectionSwitch.y))))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2153.1071)), bool(false))))), injectionSwitch.y))))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2153.1071)), bool(false))))), injectionSwitch.y))))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2153.1071)), bool(false))))), injectionSwitch.y))))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2153.1071)), bool(false))))), injectionSwitch.y))))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2153.1071)), bool(false))))), injectionSwitch.y))))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), true))))))), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))).y, min(injectionSwitch.y, injectionSwitch.y)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, abs(1.0), determinant(mat3(abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.0)), float(1.0), bool(true)))), 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, log(1.0), 1.0, 0.0))).x < injectionSwitch.y))), false)))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), false))), ! (! (_GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))))), false)))))))), ! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), false))))))))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), false))))), ! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), false)))))))))), ! (! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), false))))), ! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), false))))))))))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(594.152)), bool(false))), _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x));
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id, clamp(workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), (_GLF_FUZZED(floatBitsToUint(124.771))) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), (_GLF_FUZZED(floatBitsToUint(124.771))) - 0u)), clamp(~ (_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), (_GLF_FUZZED(floatBitsToUint(124.771))) - 0u)), ~ (_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), (_GLF_FUZZED(floatBitsToUint(124.771))) - 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), (_GLF_FUZZED(floatBitsToUint(124.771))) - 0u)), 0u | (~ (_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), (_GLF_FUZZED(floatBitsToUint(124.771))) - 0u)))))))), _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), clamp(_GLF_FUZZED(floatBitsToUint(124.771)), _GLF_FUZZED(floatBitsToUint(124.771)), _GLF_FUZZED(floatBitsToUint(124.771)))), _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), max(_GLF_FUZZED(floatBitsToUint(124.771)), _GLF_FUZZED(floatBitsToUint(124.771)))))), 1u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), (_GLF_FUZZED(floatBitsToUint(124.771))) - 0u), _GLF_FUZZED(floatBitsToUint(124.771)), _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), max(_GLF_FUZZED(floatBitsToUint(124.771)), _GLF_FUZZED(floatBitsToUint(124.771))))), (clamp(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), (_GLF_FUZZED(floatBitsToUint(124.771))) - 0u), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(floatBitsToUint(124.771), 0u | (floatBitsToUint(124.771)))), (_GLF_FUZZED(floatBitsToUint(124.771))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), max(_GLF_FUZZED(floatBitsToUint(124.771)), _GLF_FUZZED(floatBitsToUint(124.771)))), (_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), max(_GLF_FUZZED(floatBitsToUint(124.771)), _GLF_FUZZED(floatBitsToUint(124.771))))) ^ 0u))) / 1u)), 1u, 1u, 0u)), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), clamp(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), (_GLF_FUZZED(floatBitsToUint(124.771))) - 0u), _GLF_FUZZED(_GLF_IDENTITY(floatBitsToUint(124.771), 0u | (floatBitsToUint(124.771)))), _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), max(_GLF_FUZZED(floatBitsToUint(124.771)), _GLF_FUZZED(floatBitsToUint(124.771)))))), 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), (uint(uvec3(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))) - 0u)), 0u))) >> 0u, (_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), clamp(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), (_GLF_FUZZED(floatBitsToUint(124.771))) - 0u), _GLF_FUZZED(_GLF_IDENTITY(floatBitsToUint(124.771), 0u ^ (floatBitsToUint(124.771)))), _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), max(_GLF_FUZZED(floatBitsToUint(124.771)), _GLF_FUZZED(floatBitsToUint(124.771)))))), 1u, 1u, 0u))) >> 0u, ((uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), clamp(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), (_GLF_FUZZED(floatBitsToUint(124.771))) - 0u), _GLF_FUZZED(floatBitsToUint(124.771)), _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), max(_GLF_FUZZED(floatBitsToUint(124.771)), _GLF_FUZZED(floatBitsToUint(124.771)))))), 1u, 1u, 0u))) >> 0u) >> (0u | 0u))) | ((uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), clamp(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), (_GLF_FUZZED(floatBitsToUint(124.771))) - 0u), _GLF_FUZZED(floatBitsToUint(124.771)), _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(124.771)), max(_GLF_FUZZED(floatBitsToUint(124.771)), _GLF_FUZZED(floatBitsToUint(124.771)))))), 1u, 1u, 0u))) >> 0u)))) << 0u)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), workgroup_size, workgroup_size)), (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)), (true ? _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(subgroup_local_id))))))), workgroup_size))) - 0u) * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), max(~ (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), ~ (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))), (false ? _GLF_FUZZED((+ bitfieldReverse(subgroup_local_id))) : _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), (true ? (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) : _GLF_FUZZED(write_val))), max(~ (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), ~ (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (true ? _GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(workgroup_size, 0u, 1u)))) | (uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1u) | (1u))))))) : _GLF_FUZZED(uvec3(95084u, 78162u, 140955u))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (true ? _GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(float(_GLF_ZERO(0.0, injectionSwitch.x))), float(vec4(float(float(_GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0))))) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(workgroup_size, 0u, 1u)))) | (uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, (1u) | (1u))))) : _GLF_FUZZED(uvec3(95084u, 78162u, 140955u))))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (true ? _GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED((workgroup_id / uvec3(68954u, 127547u, 96979u))) : _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) / uvec3(1u, 1u, 1u)))) ^ (uvec3(workgroup_size, 0u, 1u)))) | (uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, (1u) | (1u))))) : _GLF_FUZZED(uvec3(95084u, 78162u, 140955u)))))) / 1u), uint(_GLF_IDENTITY(uvec3(workgroup_size, _GLF_IDENTITY(0u, (0u) - 0u), 1u), (true ? _GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(workgroup_size, _GLF_IDENTITY(0u, 0u ^ (0u)), 1u)))) | (uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, (1u) | (1u))))) : _GLF_FUZZED(uvec3(95084u, 78162u, 140955u)))))))), clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)), ((116591u & 0u) | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), clamp(workgroup_size, workgroup_size, workgroup_size)))))) | 0u))) * workgroup_id), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (true ? _GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(workgroup_size, 0u, 1u)))) | (uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1u) | (1u))))))) : _GLF_FUZZED(uvec3(95084u, 78162u, 140955u))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (true ? _GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(float(_GLF_ZERO(0.0, injectionSwitch.x))), float(vec4(float(float(_GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0))))) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(workgroup_size, 0u, 1u)))) | (uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, (1u) | (1u))))) : _GLF_FUZZED(uvec3(95084u, 78162u, 140955u))))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (true ? _GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED((workgroup_id / uvec3(68954u, 127547u, 96979u))) : _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) / uvec3(1u, 1u, 1u)))) ^ (uvec3(workgroup_size, 0u, 1u)))) | (uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, (1u) | (1u))))) : _GLF_FUZZED(uvec3(95084u, 78162u, 140955u)))))) / 1u), uint(_GLF_IDENTITY(uvec3(workgroup_size, _GLF_IDENTITY(0u, (0u) - 0u), 1u), (true ? _GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), (_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(workgroup_size, _GLF_IDENTITY(0u, 0u ^ (0u)), 1u)))) | (uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, (1u) | (1u))))) : _GLF_FUZZED(uvec3(95084u, 78162u, 140955u)))))))), clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)), ((116591u & 0u) | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), clamp(workgroup_size, workgroup_size, workgroup_size)))))) | 0u))) * workgroup_id)) - 0u) - 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u), (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u) : _GLF_FUZZED(workgroup_id))) * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), (false ? _GLF_FUZZED(usubBorrow(workgroup_size, num_workgroup, subgroup_local_id)) : (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) | ((_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))) ^ 0u), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u) * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) + 0u))) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | 0u)), uint(1u))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_id)), 0u), max(uvec2(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_id)), 0u), uvec2(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_id)), 0u)))))), min((_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_id)), 0u)))), (_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_id)), 0u))))))))))))) - 0u)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y))))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u)))) | (virtual_gid), (false ? _GLF_FUZZED(163867u) : (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u)))))), uint(uvec3(virtual_gid, 1u, 1u)))) | (virtual_gid))))), _GLF_IDENTITY(4, 0 ^ (4)), 64, _GLF_IDENTITY(0, (0) | (0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (! ((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))))))))), bool(bool(_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))))), bool(bool(_GLF_DEAD(false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(mat3(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), clamp(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(mat2x4(vec3(injectionSwitch, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), vec3(injectionSwitch, 0.0))), 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), clamp(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(mat2x4(vec3(injectionSwitch, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), vec3(injectionSwitch, 0.0))), 1.0)), max(mat4(1.0) * (vec4(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), clamp(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(mat2x4(vec3(injectionSwitch, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), vec3(injectionSwitch, 0.0))), 1.0)), mat4(1.0) * (vec4(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), clamp(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(mat2x4(vec3(injectionSwitch, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), vec3(injectionSwitch, 0.0))), 1.0)))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), 0.0, 1.0, log(abs(1.0)), 0.0)), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(mat3(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), clamp(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(mat2x4(vec3(injectionSwitch, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), vec3(injectionSwitch, 0.0))), 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), clamp(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(mat2x4(vec3(injectionSwitch, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), vec3(injectionSwitch, 0.0))), 1.0)), max(mat4(1.0) * (vec4(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), clamp(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(mat2x4(vec3(injectionSwitch, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), vec3(injectionSwitch, 0.0))), 1.0)), mat4(1.0) * (vec4(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), clamp(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(mat2x4(vec3(injectionSwitch, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), vec3(injectionSwitch, 0.0))), 1.0)))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), 0.0, 1.0, log(abs(1.0)), 0.0))) + vec2(0.0, 0.0))).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)), false || (bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)), false || (bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)), false || (bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)), false || (bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)))), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)), false || (bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true))))) && true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true, false))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_val = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, uint(_GLF_IDENTITY(uvec4(write_val, 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(write_val, 0u, 1u, 1u))))), 4, 64, 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))) : _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), ~ (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) - 0u)))), _GLF_IDENTITY(~ _GLF_IDENTITY((atomicLoad(write_val, 4, 64, 0)), clamp((atomicLoad(write_val, 4, 64, 0)), (atomicLoad(write_val, 4, 64, 0)), (atomicLoad(write_val, 4, 64, 0)))), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, _GLF_IDENTITY(64, int(ivec2(64, (1 ^ 0)))), 0))) | 0u))))), _GLF_IDENTITY(uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u))), 0u ^ (uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))))), uint(uvec2(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (~ (atomicLoad(write_val, 4, 64, 0))))) | (~ (atomicLoad(write_val, 4, 64, 0)))), (1u & 1u)))))))), clamp(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(_GLF_IDENTITY(write_val, (write_val) | (write_val)), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(76987) : 4)), 64, 0)), _GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, _GLF_IDENTITY(4, max(4, 4)), 64, 0))) | 0u))), (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u)))) * _GLF_IDENTITY(1u, (1u) ^ (0u ^ 0u))))), uint(uvec2(~ _GLF_IDENTITY((atomicLoad(write_val, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, ~ (~ (4))))), 64, 0)), ((atomicLoad(write_val, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, ~ (~ (4))))), 64, 0))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (1u & 1u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), 0u))), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))))), uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY((~ (atomicLoad(write_val, 4, 64, 0))) | 0u, ((~ (atomicLoad(write_val, 4, 64, 0))) | 0u) * 1u)))))), uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))))), uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))))), uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u))))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))))), uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u)))))))))), max(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY((~ (atomicLoad(write_val, 4, 64, 0))) | 0u, ((~ (atomicLoad(write_val, 4, 64, 0))) | 0u) * 1u)))))), uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))))), uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))))), uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u))))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))))), uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u)))))))))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY((~ (atomicLoad(write_val, 4, 64, 0))) | 0u, ((~ (atomicLoad(write_val, 4, 64, 0))) | 0u) * 1u)))))), uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))))), uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))))), uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u))))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))))), uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(write_val, min(write_val, write_val)), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(_GLF_IDENTITY(write_val, min(write_val, write_val)), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0u))) | (write_val)), 4, 64, 0)), _GLF_IDENTITY(max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u)))), clamp(max(~ (atomicLoad(write_val, 4, _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (64)), 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, _GLF_IDENTITY(4, max(4, 4)), 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u)))), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))), clamp(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u)))))), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | _GLF_IDENTITY(0u, min(0u, 0u))))))))), uint(uvec2(~ (atomicLoad(write_val, 4, _GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), ((~ (64))) ^ 0)), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((vec2(6999.8524, -5199.8806).r))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true)))))))))), (1u & 1u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u), (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u)) >> 0u))))), _GLF_IDENTITY(uint(uvec2(~ (atomicLoad(write_val, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(6), int(6)))), 4)), 64, 0)), (1u & 1u))), (uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (_GLF_IDENTITY(1u, uint(uvec3(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u))) & 1u)))) | (uint(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (1u & 1u)))))))))), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))))), uint(_GLF_IDENTITY(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | ((1u & 1u)))), uvec2(0u, 0u) ^ (uvec2(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | ((1u & 1u))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), max(~ (atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | (_GLF_IDENTITY(~ (atomicLoad(write_val, 4, 64, 0)), (~ (atomicLoad(write_val, 4, 64, 0))) | 0u))))), uint(_GLF_IDENTITY(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (_GLF_IDENTITY(1u, 0u ^ (1u)) & 1u)), uvec2(uvec3(uvec2(~ (atomicLoad(write_val, 4, 64, 0)), (_GLF_IDENTITY(1u, 0u ^ (1u)) & 1u)), 1u)))))))))) / 1u)))));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
