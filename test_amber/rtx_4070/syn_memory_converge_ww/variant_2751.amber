#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))) || false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, mix(float(_GLF_FUZZED(865.894)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x) / 1.0)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.3)), bool(false))))))).x, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)) > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))))))), true && (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), false, false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y))), true && (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y))), true && (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y))))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y))), true && (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), true), false)))))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))), ! (! (bool(bool(_GLF_DEAD(false))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), sqrt(1.0), 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), sqrt(1.0), 1.0, 1.0, 1.0)), (transpose(mat2x4(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), sqrt(1.0), 1.0, 1.0, 1.0))) * mat4(1.0)))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, false))), false, false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), true && (_GLF_IDENTITY(false, (false) && true)))) || false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true)))))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.1) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-31.16), _GLF_FUZZED(9.8)), _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), false, false)))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-31.16), _GLF_FUZZED(9.8)), bvec2(false, false)), vec2(0.0, 0.0) + (mix(vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-31.16), _GLF_FUZZED(9.8)), max(vec2(_GLF_FUZZED(-31.16), _GLF_FUZZED(9.8)), vec2(_GLF_FUZZED(-31.16), _GLF_FUZZED(9.8)))), bvec2(false, false))))).x > injectionSwitch.y)) || false), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6595.6277))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5156.9894))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5156.9894))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5156.9894))) > injectionSwitch.y)))))))))))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(956.247) : injectionSwitch.x)), 1.0 * (injectionSwitch.x))), bool(true)))), max(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))), float(injectionSwitch.x)))), sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), exp(0.0)), mat2(mat3x4(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / exp(0.0)), float(injectionSwitch.x)))), _GLF_IDENTITY(sqrt(1.0), float(_GLF_IDENTITY(mat3(sqrt(1.0), sqrt(1.0), 0.0, tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0)))) + _GLF_ZERO(0.0, injectionSwitch.x)), 1.0), (false ? _GLF_FUZZED(mat3(-2.7, -9.3, -0.5, -72.15, 690.848, -18.46, 67.13, 93.63, 22.91)) : mat3(sqrt(1.0), sqrt(1.0), 0.0, tan(0.0), 0.0, 0.0, 0.0, tan(0.0), 1.0))))), 0.0, _GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), float(_GLF_IDENTITY(mat2x4(exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat2x4(exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * mat2(1.0)))), _GLF_IDENTITY(exp(0.0), tan(0.0) + (exp(0.0))))))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(max(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x)))))), min(max(float(injectionSwitch.x), float(injectionSwitch.x)), max(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (true ? _GLF_IDENTITY(float(injectionSwitch.x), 0.0 + (float(injectionSwitch.x))) : _GLF_FUZZED(exp(49.18))))))))), float(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), 0.0, _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0), exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0), mat2x4(mat4(mat2x4(0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0))))), mix(float(_GLF_FUZZED(-110.396)), float(float(_GLF_IDENTITY(mat2x4(0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0), mat2x4(mat4(mat2x4(0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0)))))), bool(true))))), exp(0.0)))), mat2(mat3x4(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), mix(float(0.0), float(_GLF_FUZZED(8.9)), bool(false))), cos(determinant(mat2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(127.251)), bool(false))), 0.0, 0.0))), abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(sqrt(1.0), 1.0), vec2(log(1.0), abs(0.0))), mix(float(dot(vec2(sqrt(1.0), 1.0), vec2(log(1.0), abs(0.0)))), float(_GLF_FUZZED(8.3)), bool(false))), dot(vec2(sqrt(1.0), 1.0), vec2(log(1.0), abs(0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), abs(1.0), 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0))), 1.0, 0.0)), float(mat4x2(float(mat4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.9)), bool(false))), cos(determinant(mat2(0.0, 0.0, 0.0, 0.0))), abs(0.0), _GLF_IDENTITY(dot(vec2(sqrt(1.0), 1.0), vec2(log(1.0), abs(0.0))), dot(vec2(sqrt(1.0), 1.0), vec2(log(1.0), abs(0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), abs(1.0), 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), exp(0.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-48.01, -0.9)) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)), (injectionSwitch.x) / 1.0)), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), _GLF_IDENTITY(sqrt(1.0), float(float(_GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(-92.47) : sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-918.953) : 1.0)))))))), 0.0, exp(0.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x3(mat2(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-635.532)), bool(false)))), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), _GLF_IDENTITY(0.0, determinant(mat2(0.0, 0.0, exp(0.0), 0.0)) + (0.0)), exp(0.0))), mat3(1.0) * (mat4x3(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), 0.0, exp(0.0)))))), mat2(_GLF_IDENTITY(mat2x4(mat2(_GLF_IDENTITY(mat4x3(mat2(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), 0.0, exp(0.0))), mat3(1.0) * (mat4x3(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), max(_GLF_IDENTITY(float(injectionSwitch.x), float(mat2(float(injectionSwitch.x), 1.0, 1.0, 0.0))), float(injectionSwitch.x)))), (true ? float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), max(_GLF_IDENTITY(float(injectionSwitch.x), float(mat2(float(injectionSwitch.x), 1.0, 1.0, 0.0))), float(injectionSwitch.x)))) : _GLF_FUZZED(float(subgroup_size)))), sqrt(1.0), 0.0, exp(0.0))))))), (mat2x4(mat2(_GLF_IDENTITY(mat4x3(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)))), sqrt(1.0), 0.0, exp(0.0))), mat3(1.0) * (mat4x3(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x)))))), sqrt(1.0), 0.0, exp(0.0)))))))) * mat2(1.0))))), mat2(mat3x4(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(61.83)))), _GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat2x3(float(injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4172.9197), _GLF_FUZZED(-5.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0))), _GLF_IDENTITY(float(mat3(float(mat2x3(float(injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4154.4075)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true)), float(mat3(mix(float(_GLF_FUZZED(4154.4075)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(float(mat3(float(mat2x3(float(injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4154.4075)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4154.4075)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4154.4075)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true)))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2963.4470)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), bool(true)))))))), sqrt(1.0), 0.0, exp(0.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-241.883)), float(round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), bool(true))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x))), max(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), float(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))), sqrt(1.0), 0.0, exp(0.0)), mat2(mat3x4(mat2(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.x : _GLF_FUZZED(-9.2)))) - 0.0)), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), 0.0, exp(0.0)))))))))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(9.0)), (_GLF_IDENTITY(float(_GLF_FUZZED(9.0)), (false ? _GLF_FUZZED(-7.0) : float(_GLF_FUZZED(9.0))))) + 0.0), float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), _GLF_IDENTITY(bool(true), bool(bvec2(bool(true), true)))))), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch[1]), bool(true))))).x)))), float(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), exp(0.0)), mat2(mat3x4(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), mix(float(_GLF_FUZZED(-1.2)), float(max(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))))), bool(true))))), sqrt(1.0), 0.0, exp(0.0))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(max(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(injectionSwitch.x)), _GLF_IDENTITY(min(max(float(injectionSwitch.x), float(injectionSwitch.x)), max(float(injectionSwitch.x), float(injectionSwitch.x))), (min(max(float(injectionSwitch.x), float(injectionSwitch.x)), max(float(injectionSwitch.x), float(injectionSwitch.x)))) - 0.0)))), float(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), 0.0, _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0), exp(0.0), exp(0.0)))), mat2(mat3x4(mat2(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), (_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x)))))) - 0.0)), sqrt(1.0), 0.0, exp(0.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) / 1.0)), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), _GLF_IDENTITY(sqrt(1.0), float(float(sqrt(1.0)))), 0.0, exp(0.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x3(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), 0.0, exp(0.0))), mat3(1.0) * (mat4x3(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), _GLF_IDENTITY((float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))), mix(float(_GLF_FUZZED(82.84)), float((float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))))), bool(true))) + 0.0), sqrt(1.0), 0.0, exp(0.0)))))), mat2(_GLF_IDENTITY(mat2x4(mat2(_GLF_IDENTITY(mat4x3(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x)))), (float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))) / 1.0), sqrt(1.0), 0.0, exp(0.0))), mat3(1.0) * (mat4x3(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), 0.0, exp(0.0))))))), (mat2x4(mat2(_GLF_IDENTITY(mat4x3(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), 0.0, exp(0.0))), mat3(1.0) * (mat4x3(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), 0.0, exp(0.0)))))))) * mat2(1.0))))), mat2(mat3x4(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(float(injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0))), clamp(float(mat2x3(float(injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0))), float(mat2x3(float(injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0))), float(mat2x3(float(injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0))))), _GLF_IDENTITY(float(mat3(float(mat2x3(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x)))) + 0.0), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), mix(float(_GLF_FUZZED(4154.4075)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (false ? _GLF_FUZZED(-6129.9522) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(true)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(float(mat3(float(mat2x3(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / determinant(mat2(1.0, 1.0, 0.0, 1.0)), max((injectionSwitch.x) / determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY((injectionSwitch.x) / determinant(mat2(1.0, 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY((injectionSwitch.x) / determinant(mat2(1.0, 1.0, 0.0, 1.0)), float(mat2x3((injectionSwitch.x) / determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))), (injectionSwitch.x) / determinant(mat2(1.0, 1.0, 0.0, 1.0)), (injectionSwitch.x) / determinant(mat2(1.0, 1.0, 0.0, 1.0)))))))), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4154.4075)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), bool(true)))))))), sqrt(1.0), 0.0, exp(0.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-241.883)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true))) * (injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))), sqrt(1.0), 0.0, exp(0.0)), mat2(mat3x4(mat2(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.x : _GLF_FUZZED(-9.2)))) - 0.0)), max(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x), mix(float(_GLF_FUZZED(-38.08)), float(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x)), bool(true))), float(injectionSwitch.x)))), sqrt(1.0), 0.0, exp(0.0)))))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(704.645)), bool(false)))), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.0)), float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))))), bool(true)))), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(length(vec4(-8.4, -4.1, -73.59, 5.3))) : exp(0.0)))), mat2(mat3x4(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-72.24)), vec2(_GLF_FUZZED(4.0), (injectionSwitch)[1]), bvec2(false, true))).y))))), exp(0.0))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), min(max(float(injectionSwitch.x), float(injectionSwitch.x)), _GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), max(max(float(injectionSwitch.x), float(injectionSwitch.x)), _GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), min(_GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), (max(float(injectionSwitch.x), float(injectionSwitch.x))) - 0.0), max(float(injectionSwitch.x), float(injectionSwitch.x)))))))))), float(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(92.50)), bool(false)))), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), 0.0, _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0), _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(floor(-2.1)))), exp(0.0)))), mat2(mat3x4(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), 0.0, exp(0.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) / 1.0)), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), _GLF_IDENTITY(sqrt(1.0), float(_GLF_IDENTITY(float(sqrt(1.0)), float(_GLF_IDENTITY(vec4(float(sqrt(1.0)), 1.0, round(length(normalize(1.0))), 0.0), (vec4(float(sqrt(1.0)), 1.0, round(length(normalize(1.0))), 0.0)) * mat4(1.0)))))), 0.0, exp(0.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x3(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x), clamp(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch)).x), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x), mix(float(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)))).x)), float(_GLF_FUZZED(5264.6672)), bool(false))) : _GLF_FUZZED(-558.371)))))))), sqrt(1.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), exp(0.0))), mat3(1.0) * (mat4x3(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), 0.0, exp(0.0)))))), mat2(_GLF_IDENTITY(mat2x4(mat2(_GLF_IDENTITY(mat4x3(mat2(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x)))) / 1.0), float(injectionSwitch.x), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x)))), _GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(452.182))), 0.0, exp(0.0))), mat3(1.0) * (mat4x3(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(_GLF_IDENTITY(1.0, 0.0 + (1.0)))))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(_GLF_IDENTITY(1.0, 0.0 + (1.0)))))))), mix(float(_GLF_FUZZED(3.8)), float(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(_GLF_IDENTITY(1.0, 0.0 + (1.0))))))))), bool(true))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(_GLF_IDENTITY(1.0, 0.0 + (1.0)))))))))), sqrt(1.0), 0.0, exp(0.0))))))), (mat2x4(mat2(_GLF_IDENTITY(mat4x3(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))), mix(float(_GLF_IDENTITY(clamp(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))), mix(float(clamp(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))))), float(_GLF_FUZZED(9.6)), bool(false)))), float(_GLF_FUZZED(36.24)), bool(false)))), sqrt(1.0), _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), exp(0.0))), mat3(1.0) * (mat4x3(mat2(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), 0.0, exp(0.0)))))))) * mat2(1.0))))), mat2(mat3x4(mat2(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat2x3(float(injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(_GLF_IDENTITY(1.0, (1.0) - 0.0)))), _GLF_IDENTITY(float(mat3(float(mat2x3(float(injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4154.4075)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true)))), round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), max(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), sqrt(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(float(mat3(float(mat2x3(float(injectionSwitch.x), 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(79.01) : 1.0)), _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4154.4075)), max(float(_GLF_FUZZED(4154.4075)), _GLF_IDENTITY(float(_GLF_FUZZED(4154.4075)), (float(_GLF_FUZZED(4154.4075))) - 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(true)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, float(mat2x4((0.0) + 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), 0.0, 1.0, 0.0, 1.0))), bool(true)))))))), sqrt(1.0), 0.0, exp(0.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-241.883)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true))) * (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-241.883)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true))) * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-241.883)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true))) * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-241.883)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true))) * (injectionSwitch.x))))), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))), sqrt(1.0), 0.0, exp(0.0)), mat2(mat3x4(mat2(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9021.5984) : injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(-9.2)))) - 0.0)), max(float(injectionSwitch.x), float(injectionSwitch.x)))), sqrt(1.0), 0.0, exp(0.0)))))))))) > injectionSwitch.y)) && true)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.9))), sin(log(1.0)), 1.0, 1.0, sqrt(0.0), 0.0, 1.0, abs(0.0)))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), false, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? injectionSwitch.y : _GLF_FUZZED(4.5))), mix(float(_GLF_FUZZED(-8.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? injectionSwitch.y : _GLF_FUZZED(4.5))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? injectionSwitch.y : _GLF_FUZZED(4.5)))) + 0.0)), bool(true))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), min(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec2(tan(0.0), 1.0), max(vec2(tan(0.0), 1.0), vec2(tan(0.0), 1.0)))), dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(tan(0.0), 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), tan(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), (true ? mat4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, bool(bool(true))) ? injectionSwitch.y : _GLF_FUZZED(4.5))), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(6.0)), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(6.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(6.0))))), 0.0, 0.0))), vec2(tan(0.0), 1.0)), dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(tan(0.0), 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(mat4(4.3, -6.3, -240.917, -7531.6747, -2804.0178, 60.04, -88.29, -6177.9201, -1730.9944, 6.4, 44.99, 6.4, _GLF_IDENTITY(-727.648, (-727.648) * 1.0), -2638.2077, -7.5, 6653.7581))))))))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), (bool(bool(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(intBitsToFloat(-31179)) : injectionSwitch.y)))), true && (injectionSwitch.x > injectionSwitch.y))))) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false, false))), false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))) || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true)) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), min(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)))))) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))), true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))), bool(bvec2(((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))), true)))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) ^ 0u, ~ (~ ((workgroup_base + subgroup_base + subgroup_local_id) ^ 0u))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | _GLF_IDENTITY((workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)), clamp((workgroup_base + subgroup_base + subgroup_local_id), (workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), 0u ^ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base + subgroup_local_id))))))));
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), _GLF_IDENTITY((uint(virtual_gid)), 0u | ((uint(virtual_gid)))) << 0u), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-8.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - sqrt(vec2(0.0, 0.0)))))) / exp(vec2(0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
