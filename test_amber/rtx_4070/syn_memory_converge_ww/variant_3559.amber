#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_23 {
 mat3x4 _f0;
 bvec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_22 {
 uint _f0;
 mat2x3 _f1;
 mat4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_21 {
 bvec3 _f0;
 mat3x4 _f1;
 mat3x4 _f2;
 mat4x2 _f3;
 uvec3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_24 {
 vec2 _f0;
 _GLF_struct_21 _f1;
 vec3 _f2;
 _GLF_struct_22 _f3;
 mat2x4 _f4;
 uint _f5;
 _GLF_struct_23 _f6;
} ;

struct _GLF_struct_20 {
 vec3 _f0;
} ;

struct _GLF_struct_19 {
 mat3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_17 {
 mat2x4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_16 {
 uvec3 _f0;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_13 {
 bvec4 _f0;
 mat2x4 _f1;
 vec3 _f2;
 mat4x3 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_12 {
 ivec2 _f0;
 mat4x3 _f1;
 mat3x4 _f2;
 bvec2 _f3;
 uvec3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_15 {
 mat3x2 _f0;
 mat2x3 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_14 _f4;
} ;

struct _GLF_struct_25 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 bvec4 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_19 _f4;
 _GLF_struct_20 _f5;
 _GLF_struct_24 _f6;
 uint subgroup_base;
} ;

struct _GLF_struct_11 {
 uint virtual_gid;
 mat4x2 _f0;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 uvec2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_9 {
 mat4x3 _f0;
 _GLF_struct_8 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
 int _f1;
 mat3x4 _f2;
 bool _f3;
 bvec2 _f4;
 ivec3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 float _f1;
 ivec3 _f2;
 mat2 _f3;
 vec4 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 bvec2 _f1;
 uvec2 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
 int _f5;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 ivec2 _f1;
 bool _f2;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 mat3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_0 {
 uint _f0;
 mat3 _f1;
 mat3x4 _f2;
 uvec3 _f3;
 mat4x2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 bvec4 _f1;
 mat4 _f2;
 _GLF_struct_1 _f3;
 mat3x4 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_9 _f4;
 bvec4 _f5;
 mat4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_8_1_1_12_2_1_14read_valworkgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(mat2x4(1.0), _GLF_struct_3(_GLF_struct_0(1u, mat3(1.0), mat3x4(1.0), uvec3(1u), mat4x2(1.0), mat2x4(1.0)), bvec4(true), mat4(1.0), _GLF_struct_1(ivec4(1), mat3(1.0), vec4(1.0)), mat3x4(1.0), _GLF_struct_2(mat4(1.0), ivec2(1), true)), _GLF_struct_4(vec4(1.0), gl_SubgroupSize), _GLF_struct_7(bvec3(true), bvec2(true), uvec2(1u), _GLF_struct_5(uvec4(1u), 1.0, ivec3(1), mat2(1.0), vec4(1.0), vec4(1.0)), _GLF_struct_6(vec3(1.0), 1, mat3x4(1.0), true, bvec2(true), ivec3(1), ivec2(1)), 1), _GLF_struct_9(mat4x3(1.0), _GLF_struct_8(mat3x2(1.0), uvec2(1u), uvec2(1u)), uvec4(1u)), bvec4(true), mat4(1.0));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_8_1_1_12_2_1_14read_valworkgroup_idworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_8_1_1_12_2_1_14read_valworkgroup_idworkgroup_size.y = workgroup_id;
 uint workgroup_base = GLF_merged3_0_1_8_1_1_12_2_1_14read_valworkgroup_idworkgroup_size.z * GLF_merged3_0_1_8_1_1_12_2_1_14read_valworkgroup_idworkgroup_size.y;
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(_GLF_struct_15(mat3x2(1.0), mat2x3(1.0), _GLF_struct_12(ivec2(1), mat4x3(1.0), mat3x4(1.0), bvec2(true), uvec3(1u), mat2(1.0)), _GLF_struct_13(bvec4(true), mat2x4(1.0), vec3(1.0), mat4x3(1.0), vec3(1.0)), _GLF_struct_14(bvec4(true), mat2x4(1.0))), _GLF_struct_16(uvec3(1u)), bvec4(true), _GLF_struct_18(_GLF_struct_17(mat2x4(1.0), vec4(1.0)), uvec4(1u)), _GLF_struct_19(mat3(1.0), mat2x4(1.0)), _GLF_struct_20(vec3(1.0)), _GLF_struct_24(vec2(1.0), _GLF_struct_21(bvec3(true), mat3x4(1.0), mat3x4(1.0), mat4x2(1.0), uvec3(1u), mat2x4(1.0)), vec3(1.0), _GLF_struct_22(1u, mat2x3(1.0), mat4(1.0), mat2(1.0)), mat2x4(1.0), 1u, _GLF_struct_23(mat3x4(1.0), bvec2(true), mat3x4(1.0))), subgroup_id * _GLF_struct_replacement_10._f2.subgroup_size);
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(workgroup_base + _GLF_struct_replacement_25.subgroup_base + subgroup_local_id, mat4x2(1.0));
 atomicStore(write_val, uint(_GLF_struct_replacement_11.virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 GLF_merged3_0_1_8_1_1_12_2_1_14read_valworkgroup_idworkgroup_size.x = read_val;
 buf[_GLF_struct_replacement_11.virtual_gid] = uint(subgroupAllEqual(GLF_merged3_0_1_8_1_1_12_2_1_14read_valworkgroup_idworkgroup_size.x));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
