#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), ! (! ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(float(1.0))), 1.0))) * (injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))).y)))))) && true), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.3) : _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) / 1.0), float(_GLF_FUZZED(_GLF_IDENTITY((3.1 + -1.2), max((3.1 + -1.2), _GLF_IDENTITY((3.1 + -1.2), mix(float((3.1 + -1.2)), float(_GLF_FUZZED(-78.36)), bool(false))))))), bool(false)))))))) && true)) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), (bool(bvec4(_GLF_DEAD(false), false, false, false))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(4.3, 44.39, 408.485, 619.628))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), true && (true && (_GLF_DEAD(false)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), true && (true && (_GLF_DEAD(false))))))))), (! (_GLF_DEAD(false))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | _GLF_IDENTITY((gl_NumWorkGroups.x), ~ (~ ((gl_NumWorkGroups.x))))), (false ? _GLF_FUZZED(subgroup_size) : gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.z = workgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))), true, false, false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), _GLF_IDENTITY((~ (0)), max((~ (0)), (~ (0)))), (~ (0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(87015) : _GLF_IDENTITY(~ (~ (0)), min(~ (~ (0)), ~ (~ (0))))))) << 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), _GLF_IDENTITY((~ (0)), max((~ (0)), (~ (0)))), (~ (0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(87015) : _GLF_IDENTITY(~ (~ (0)), min(~ (~ (0)), ~ (~ (0))))))) << 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0) >> 0)], _GLF_IDENTITY(_GLF_FUZZED(((_GLF_IDENTITY(-87342, (-87342) << int(_GLF_ZERO(0.0, injectionSwitch.x))) > -74256) ? 616.467 : float(true))), (true ? _GLF_FUZZED(((_GLF_IDENTITY(_GLF_IDENTITY(-87342, (-87342) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(-87342, (_GLF_IDENTITY(-87342, (false ? _GLF_FUZZED(69309) : -87342))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (_GLF_IDENTITY(-87342, (_GLF_IDENTITY(-87342, (false ? _GLF_IDENTITY(_GLF_FUZZED(69309), int(ivec2(_GLF_FUZZED(69309), 1))) : -87342))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) > -74256) ? 616.467 : float(true))) : _GLF_FUZZED(-7.4)))), vec2(_GLF_FUZZED(565.831), (injectionSwitch)[1]), bvec2(false, true))).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y = workgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_FUZZED(write_val)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y = workgroup_id, 1u * (GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y = workgroup_id)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y = workgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y = workgroup_id, 1u * (GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y = workgroup_id)), 1u * (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y = workgroup_id, 1u * (GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y = workgroup_id)))), 0u + (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y = workgroup_id, 1u * (GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y = workgroup_id)), 1u * (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y = workgroup_id, 1u * (GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y = workgroup_id)))))))) : _GLF_FUZZED(num_workgroup)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.z * GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))), false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true))))))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   return;
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false)), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false))), ! (! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false))), ! (! (! (false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), true && (((true))))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((true)) || false))), true), bvec2(bvec2(bvec2(! (true), true))))), (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(true, false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false, true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))) || false))))), _GLF_IDENTITY(((true)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, true))) || false))), true), bvec2(bvec2(bvec2(! (true), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false)), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false))), ! (! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false))), ! (! (! (false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), true && (((true))))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((true)) || false))), true), bvec2(bvec2(bvec2(! (true), true))))), (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(true, false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false, true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))) || false))))), _GLF_IDENTITY(((true)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, true))) || false))), true), bvec2(bvec2(bvec2(! (true), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false)), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false))), ! (! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false))), ! (! (! (false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), true && (((true))))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((true)) || false))), true), bvec2(bvec2(bvec2(! (true), true))))), (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(true, false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false, true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))) || false))))), _GLF_IDENTITY(((true)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, true))) || false))), true), bvec2(bvec2(bvec2(! (true), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false)), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false))), ! (! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false))), ! (! (! (false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((true)), ! (! (_GLF_IDENTITY(((true)), true && (((true))))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((true)) || false))), true), bvec2(bvec2(bvec2(! (true), true))))), (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(true, false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false, true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || ((_GLF_IDENTITY(true, bool(bvec2(true, false))))))) || false))))), _GLF_IDENTITY(((true)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((true)), bool(bvec3(((true)), false, true))) || false))), true), bvec2(bvec2(bvec2(! (true), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))))).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1])))).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))) && true)), ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.x = subgroup_base;
 uint virtual_gid = workgroup_base + GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.x + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))), _GLF_IDENTITY(bool(bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3(_GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, 0 | (4))), ~ (~ (min(4, _GLF_IDENTITY(4, 0 | (4))))))), min(4, 4)), (false ? _GLF_FUZZED(-18473) : _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (false ? _GLF_FUZZED(57738) : _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), min(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4)))))))), 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) - 0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(1, max(1, 1))), ivec2(ivec2(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), max(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(min(_GLF_IDENTITY(64, 0 | (64)), 64), max(_GLF_IDENTITY(min(_GLF_IDENTITY(64, 0 | (64)), 64), max(_GLF_IDENTITY(min(_GLF_IDENTITY(64, 0 | (64)), 64), (min(_GLF_IDENTITY(64, 0 | (64)), 64)) - 0), min(_GLF_IDENTITY(64, 0 | (64)), 64))), min(_GLF_IDENTITY(64, 0 | (64)), 64))))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | (_GLF_IDENTITY(64, min(64, 64)))))), _GLF_IDENTITY(64, min(64, 64)))), 1)))))), 0), min(atomicLoad(write_val, 4, 64, 0), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), clamp(atomicLoad(write_val, 4, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, ~ (~ (64))))), 0), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), clamp(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), uint(uvec2(_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ (~ (4))), 4)), 64, 0), min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0))), (1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + 0u))))), atomicLoad(write_val, 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, (write_val) | (write_val)), 4, 64, 0))), atomicLoad(write_val, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, (((1 & 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), max(int(ivec2(4, (((1 & 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), int(ivec2(4, (((1 & 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))), 64, 0)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-97.98), _GLF_FUZZED(-7.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, max(_GLF_IDENTITY((injectionSwitch.x) / 1.0, max((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), (injectionSwitch.x) / 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, max(_GLF_IDENTITY((injectionSwitch.x) / 1.0, max((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), (injectionSwitch.x) / 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, max(_GLF_IDENTITY((injectionSwitch.x) / 1.0, max((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), (injectionSwitch.x) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, max(_GLF_IDENTITY((injectionSwitch.x) / 1.0, max((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), (injectionSwitch.x) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, max(_GLF_IDENTITY((injectionSwitch.x) / 1.0, max((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), (injectionSwitch.x) / 1.0)))))) - 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_IDENTITY(false, (false) || false)), ((_GLF_DEAD(false))) && true)), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(13.11)))))))) && true)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-4526.4321)), bool(false))) > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), true && ((! (_GLF_IDENTITY(false, false || (false))))))) && true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), true && ((! (_GLF_IDENTITY(false, false || (false))))))) && true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))) && true), true, false, false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, true)))), true, true))) || false)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, true))) || false))) && true), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) || false), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true))))), injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), (clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))) - abs(0.0)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), _GLF_IDENTITY(float(vec3(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), 1.0, sin(0.0))), mix(float(_GLF_FUZZED(57.94)), float(float(vec3(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), 1.0, sin(0.0)))), bool(true)))))))), float(_GLF_FUZZED(4.5)), bool(false)))), false)))))) || false), false || ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true))))), injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), (clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))) - abs(0.0)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), _GLF_IDENTITY(float(vec3(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), 1.0, sin(0.0))), mix(float(_GLF_FUZZED(57.94)), float(float(vec3(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), 1.0, sin(0.0)))), bool(true)))))))), float(_GLF_FUZZED(4.5)), bool(false)))), false)))))) || false))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, true && ((injectionSwitch.x > injectionSwitch.y) || false))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-8.4)), bvec2(false, false))), injectionSwitch)).y) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-8.4)), bvec2(false, false))), injectionSwitch)).y) || false)))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), false, true)))), bool(bool(bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), false, true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-8.4)), bvec2(false, false))), injectionSwitch)).y) || _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0))), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-8.4)), bvec2(false, false))), injectionSwitch)).y) || false)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))), false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))) || false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val)), max(_GLF_IDENTITY(_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val)), ~ (~ (_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val))))), _GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val)), min(_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, (read_val) ^ 0u), read_val, read_val)), _GLF_IDENTITY(read_val, clamp(read_val, _GLF_IDENTITY(read_val, (read_val) - 0u), read_val)))), (_GLF_IDENTITY(read_val, _GLF_IDENTITY(clamp(read_val, read_val, _GLF_IDENTITY(read_val, (read_val) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (clamp(_GLF_IDENTITY(read_val, max(read_val, read_val)), _GLF_IDENTITY(read_val, max(read_val, read_val)), read_val)) + 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_base) : 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY((uint(7u)) | 0u, ((uint(7u)) | 0u) / 1u)), (uint(_GLF_IDENTITY(7u, uint(uvec2(7u, 1u))))) * 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) | 0u), clamp(_GLF_IDENTITY(7u, (7u) - 0u), 7u, 7u))) >> 0u)), uint(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u) | _GLF_IDENTITY((7u), (_GLF_IDENTITY((7u), clamp((7u), (7u), (7u)))) | 0u), ((7u) | (7u)) ^ 0u)), 1u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(7u, _GLF_IDENTITY(_GLF_IDENTITY((7u) | (7u), max(_GLF_IDENTITY((7u) | (7u), clamp((7u) | (7u), (7u) | (7u), (7u) | (7u))), _GLF_IDENTITY((7u) | (7u), ((7u) | (7u)) | ((7u) | (7u))))), ((7u) | (7u)) ^ 0u)), 1u)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u) | (7u), ((7u) | (7u)) ^ 0u)), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u) | (7u), ((7u) | (_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, max(7u, 7u))) | (7u)))) ^ 0u)), 1u), clamp(uvec2(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u) | (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, min(7u, 7u)), 7u))))), ((7u) | (7u)) ^ 0u)), 1u), uvec2(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u) | (7u), ((7u) | (_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(subgroup_local_id))))) ^ 0u)), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(7u, max(7u, 7u)), _GLF_IDENTITY((_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u), ((7u) | (7u)) ^ 0u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))) - uvec2(0u, 0u))), uvec2(1u, 1u) * ((uvec2(_GLF_IDENTITY(7u, _GLF_IDENTITY(_GLF_IDENTITY((7u) | (7u), max(_GLF_IDENTITY((7u) | (7u), clamp((7u) | _GLF_IDENTITY((7u), _GLF_IDENTITY(uint(uvec3((7u), 0u, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))))), ~ (~ (uint(uvec3((7u), 0u, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))))))))), (7u) | (7u), (7u) | (7u))), _GLF_IDENTITY((7u) | (7u), ((7u) | (7u)) | ((7u) | (7u))))), ((7u) | (7u)) ^ 0u)), 1u)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(7u, _GLF_IDENTITY(_GLF_IDENTITY((7u) | (7u), clamp(_GLF_IDENTITY((7u) | (7u), ((7u) | (7u)) >> 0u), (7u) | (7u), _GLF_IDENTITY((7u) | (7u), min((7u) | (7u), _GLF_IDENTITY((7u) | (7u), uint(uvec4((7u) | (7u), 0u, 0u, 0u))))))), (_GLF_IDENTITY((7u), 0u | (_GLF_IDENTITY((7u), ((7u)) >> 0u))) | (7u)) ^ 0u)), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u) | (7u), ((7u) | (_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, max(7u, 7u))) | (7u)))) ^ 0u)), 1u), clamp(uvec2(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u) | (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, min(7u, 7u)), 7u))))), ((7u) | (7u)) ^ 0u)), 1u), uvec2(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u) | (7u), ((7u) | (_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(subgroup_local_id))))) ^ _GLF_IDENTITY(0u, 0u ^ (0u)))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, 0u | (_GLF_IDENTITY(7u, clamp(7u, _GLF_IDENTITY(7u, min(7u, 7u)), 7u)))))), _GLF_IDENTITY((_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u), ((7u) | (7u)) ^ 0u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))) - uvec2(0u, 0u))))))))))) | (_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_val, clamp(read_val, _GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) | (read_val), max(_GLF_IDENTITY((read_val) | (read_val), ((read_val) | (read_val)) * 1u), (read_val) | (read_val)))), read_val)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, 1u * (read_val))) | (read_val)), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(read_val, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) ? _GLF_FUZZED(subgroup_size) : read_val)))))), read_val, _GLF_IDENTITY(read_val, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val))), clamp(~ (_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, max(read_val, read_val)), read_val, read_val))), ~ (_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(packSnorm2x16(injectionSwitch)))), _GLF_IDENTITY(read_val, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : read_val, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : read_val, (false ? _GLF_FUZZED(subgroup_id) : read_val) | (false ? _GLF_FUZZED(subgroup_id) : read_val))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), read_val))), ~ (_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val)))))))))), ((_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, 0u | (_GLF_IDENTITY(read_val, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_FUZZED(subgroup_base)) - 0u) : _GLF_IDENTITY(read_val, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (false)) || false))) ? _GLF_FUZZED(subgroup_size) : read_val)))))), read_val, _GLF_IDENTITY(read_val, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(read_val, clamp(read_val, _GLF_IDENTITY(read_val, 0u + (_GLF_IDENTITY(read_val, (read_val) ^ 0u))), read_val))), clamp(~ (_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val))), ~ (_GLF_IDENTITY(read_val, clamp(read_val, _GLF_IDENTITY(_GLF_IDENTITY(read_val, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), min((false ? _GLF_FUZZED(subgroup_id) : read_val), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), 0u + ((false ? _GLF_FUZZED(subgroup_id) : read_val)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read_val, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), min((false ? _GLF_FUZZED(subgroup_id) : read_val), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), 0u + (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), max(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), ((false ? _GLF_FUZZED(subgroup_id) : read_val)) >> 0u), (false ? _GLF_FUZZED(subgroup_id) : read_val)))))))) : _GLF_FUZZED(subgroup_base))), read_val))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, (true ? _GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(workgroup_size) : read_val)), read_val, read_val)) : _GLF_FUZZED(subgroup_local_id))), read_val, read_val)), (_GLF_IDENTITY(_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val)), (true ? _GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u ^ (_GLF_FUZZED(num_workgroup)))))) | (_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val)))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(read_val, clamp(read_val, _GLF_IDENTITY(read_val, 0u + (_GLF_IDENTITY(read_val, (read_val) ^ 0u))), read_val))), clamp(~ (_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val))), ~ (_GLF_IDENTITY(read_val, clamp(read_val, _GLF_IDENTITY(_GLF_IDENTITY(read_val, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), min((false ? _GLF_FUZZED(subgroup_id) : read_val), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), 0u + ((false ? _GLF_FUZZED(subgroup_id) : read_val)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read_val, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), min((false ? _GLF_FUZZED(subgroup_id) : read_val), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), 0u + (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), max(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), ((false ? _GLF_FUZZED(subgroup_id) : read_val)) >> 0u), (false ? _GLF_FUZZED(subgroup_id) : read_val)))))))) : _GLF_FUZZED(subgroup_base))), read_val))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, (true ? _GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(workgroup_size) : read_val)), read_val, read_val)) : _GLF_FUZZED(subgroup_local_id))), read_val, read_val)), (_GLF_IDENTITY(_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val)), (true ? _GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u ^ (_GLF_FUZZED(num_workgroup)))))) | (_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val)))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(read_val, clamp(read_val, _GLF_IDENTITY(read_val, 0u + (_GLF_IDENTITY(read_val, (read_val) ^ 0u))), read_val))), clamp(~ (_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val))), ~ (_GLF_IDENTITY(read_val, clamp(read_val, _GLF_IDENTITY(_GLF_IDENTITY(read_val, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), min((false ? _GLF_FUZZED(subgroup_id) : read_val), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), 0u + ((false ? _GLF_FUZZED(subgroup_id) : read_val)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read_val, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), min((false ? _GLF_FUZZED(subgroup_id) : read_val), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), 0u + (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), max(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : read_val), ((false ? _GLF_FUZZED(subgroup_id) : read_val)) >> 0u), (false ? _GLF_FUZZED(subgroup_id) : read_val)))))))) : _GLF_FUZZED(subgroup_base))), read_val))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, (true ? _GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(workgroup_size) : read_val)), read_val, read_val)) : _GLF_FUZZED(subgroup_local_id))), read_val, read_val)), (_GLF_IDENTITY(_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val)), (true ? _GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u ^ (_GLF_FUZZED(num_workgroup)))))) | (_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val))))))))) ^ 0u)))))))) - 0u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
