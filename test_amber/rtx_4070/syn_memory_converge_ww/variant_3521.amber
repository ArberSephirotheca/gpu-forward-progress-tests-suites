#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 bool _f0;
 uvec4 _f1;
 mat4x3 _f2;
 mat3x2 _f3;
 bool _f4;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
} ;

struct _GLF_struct_13 {
 uvec4 _f0;
 ivec3 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_12 {
 uint _f0;
 ivec3 _f1;
 uvec2 _f2;
 vec2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 uvec3 _f1;
 _GLF_struct_13 _f2;
} ;

struct _GLF_struct_17 {
 _GLF_struct_14 _f0;
 mat3 _f1;
 _GLF_struct_16 _f2;
 uint read_val;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 uint virtual_gid;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 uint subgroup_size;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 uint subgroup_id;
} ;

struct _GLF_struct_4 {
 float _f0;
 vec4 _f1;
 bool _f2;
 float _f3;
 vec4 _f4;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 ivec3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 _GLF_struct_3 _f1;
 ivec4 _f2;
 _GLF_struct_4 _f3;
 bvec3 _f4;
 float _f5;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
 uint _f1;
 _GLF_struct_5 _f2;
 uint subgroup_local_id;
 bool _f3;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 mat4x3 _f1;
 vec4 _f2;
 mat3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 _GLF_struct_0 _f1;
 mat3x2 _f2;
 vec4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_2 {
 uint workgroup_id;
 _GLF_struct_1 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uvec4 GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))), false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))), false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))), false)))), true, false, true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(2320.8395, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(3.9) : _GLF_IDENTITY(2320.8395, mix(float(_GLF_FUZZED(34.36)), float(2320.8395), bool(true))))))), vec2(_GLF_FUZZED(-92.75), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-83.52, -63.37)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-83.52, -63.37))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat4x2(injectionSwitch.y, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0)))) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))))
  return;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), gl_SubgroupID);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_9(uvec3(1u), gl_SubgroupSize, _GLF_struct_8(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float((mat3x4(2.3, -88.20, 8.2, 5.7, 8018.7668, -7.5, -1.5, -0.2, -139.549, 0.4, 876.092, -1393.0877) != mat3x4(89.61, 65.14, -78.87, -92.83, -5.6, 9989.3821, -2.6, 8.1, 41.26, -8.0, 0.3, -2.1))))), bool(false)))))), mat3(1.0));
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat2(1.0), 1u, _GLF_struct_5(mat3(1.0), _GLF_struct_3(mat3x2(1.0), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(0, 0, 0), (_GLF_IDENTITY(ivec3(0, 0, 0), ivec3(ivec3(ivec3(0, 0, 0))))) | (ivec3(0, 0, 0) & ivec3(42479, 48463, -44136))) | ivec3(0, 0, 0), clamp(_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), ivec3(ivec3(ivec3(0, 0, 0) | ivec3(0, 0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(findMSB(-93782)) : 0))), min(_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), (_GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << (0 << _GLF_IDENTITY(int(4), int(4))), min((_GLF_IDENTITY(0, (0) / 1)) << (0 << _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(0, (0) / 1)) << (0 << _GLF_IDENTITY(int(4), int(4))))))) | ivec3(0, 0, 0), ivec3(0, 0, 0) ^ (ivec3(0, 0, _GLF_IDENTITY(0, (0) - 0)) | ivec3(0, 0, 0)))) / ivec3(1, 1, 1)), _GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), clamp(ivec3(0, 0, 0) | ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-17488, 2885, 50751)) : ivec3(0, 0, 0) | ivec3(0, 0, 0)), ((false ? _GLF_FUZZED(ivec3(-17488, 2885, 50751)) : ivec3(0, 0, 0) | ivec3(0, 0, 0))) << ivec3(_GLF_IDENTITY(0, 1 * (0)), 0, 0))), ivec3(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0) | ivec3(0, 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min((ivec3(0, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) ^ (0 | (0 | 0))))) ^ (33230 & 0))), 0))) | ivec3(0, 0, 0)), _GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), max((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), (ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))))), (false ? _GLF_FUZZED(ivec3(22670, -12937, 43400)) : (_GLF_IDENTITY(ivec3(0, 0, 0), max(ivec3(0, 0, 0), ivec3(0, 0, 0))) | ivec3(0, 0, 0)))), (_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, 0 | (0))), min(_GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) << ivec3(0, 0, 0)) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0)))))))), min(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min((ivec3(0, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) >> 0), 0))) | ivec3(0, 0, 0)), _GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), min((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), (ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))))), max((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), (ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))) ^ 0), 0, 0)), (0) * 1))))), (false ? _GLF_FUZZED(ivec3(22670, -12937, 43400)) : (ivec3(0, 0, 0) | ivec3(0, 0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), min(ivec3(0, 0, 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0)))), max((_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), min(ivec3(0, 0, 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0)))), (_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), min(ivec3(0, 0, 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min((ivec3(0, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) >> 0), 0))) | ivec3(0, 0, 0)), _GLF_IDENTITY((ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) - (0 >> _GLF_IDENTITY(int(8), int(8))))) | ivec3(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), max((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), (ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, 0)), 0))) * 1))))), (false ? _GLF_FUZZED(ivec3(22670, -12937, 43400)) : (ivec3(0, 0, 0) | ivec3(0, 0, 0)))), (_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), min(ivec3(0, 0, 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0)))))))), ivec3(0, 0, 0) | (_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min((ivec3(0, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) >> 0), 0))) | ivec3(0, 0, 0)), _GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), max((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), (ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))))), (false ? _GLF_FUZZED(ivec3(22670, -12937, 43400)) : (ivec3(0, 0, 0) | ivec3(0, 0, 0)))), (_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), min(ivec3(0, 0, 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0)))))))))))) >> ivec3(0, 0, 0), (_GLF_IDENTITY(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min((ivec3(0, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) ^ (33230 & 0))), 0))) | ivec3(0, 0, 0)), _GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY((ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(ivec4(-11681, 24808, -80795, -67183).g) : _GLF_IDENTITY(0, (0) ^ 0))), 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), max((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), (ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))))), (false ? _GLF_FUZZED(ivec3(22670, -12937, 43400)) : (ivec3(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)), 0) | ivec3(0, 0, 0)))), (_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, 0 | (0))), min(_GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) << ivec3(0, 0, 0)) | ivec3(0, 0, 0), ivec3(0, 0, 0) | _GLF_IDENTITY(ivec3(0, 0, 0), ivec3(0, 0, 0) + (ivec3(0, 0, 0)))))))))), min(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min((ivec3(0, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) >> 0), 0))) | ivec3(0, 0, 0)), _GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY((ivec3(0, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))))), 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), max((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), (ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 1, 1)))) ^ 0), 0, 0)), (0) * 1))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(ivec3(22670, -12937, 43400)) : (ivec3(0, 0, 0) | ivec3(0, 0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(_GLF_IDENTITY(0, min(0, 0)), 0, 0), min(ivec3(0, 0, 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0)))), max((_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), min(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, (0) | (0)), 1, 0, 1)), (false ? _GLF_FUZZED(99067) : _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, (0) | (0)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(0, (0) | (0)), 1, 0, 1))) >> 0)))), 0, 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0)))), (_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), min(ivec3(0, 0, 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min((ivec3(0, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) >> 0), 0))) | ivec3(0, 0, 0)), _GLF_IDENTITY((ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) - (0 >> _GLF_IDENTITY(int(8), int(8))))) | ivec3(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), max((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), (ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, 0)), 0))) * 1))))), (false ? _GLF_FUZZED(ivec3(22670, -12937, 43400)) : (ivec3(0, 0, 0) | ivec3(0, 0, 0)))), (_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), min(ivec3(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, 0, 1)), 0 | (int(ivec4(0, 1, 0, 1))))), 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0)))))))), ivec3(0, 0, 0) | (_GLF_IDENTITY((ivec3(0, 0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, _GLF_IDENTITY(0, (0) >> 0)))) | ivec3(0, 0, 0)), min((ivec3(0, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) >> 0), 0))) | ivec3(0, 0, 0)), _GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), max((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) * 1))), (ivec3(0, 0, 0) | ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-84803) : 0)), _GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) * 1))))), (false ? _GLF_FUZZED(ivec3(22670, -12937, 43400)) : (ivec3(0, 0, 0) | ivec3(0, 0, 0)))), (_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), min(ivec3(0, 0, 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0)))))))))))) >> ivec3(0, 0, 0)) >> ivec3(0, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), ~ (_GLF_IDENTITY(~ (ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, (0) ^ 0))), (~ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0, 0), ~ (~ _GLF_IDENTITY((ivec3(_GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(0, int(ivec2(0, 0))), 0))), 0, 0)), ivec3(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0, 0), (ivec3(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0, 0)) >> ivec3(0, 0, 0))), (false ? _GLF_FUZZED(ivec3(91914, 29814, -11620)) : (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0, 0), (ivec3(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0, 0)) | (ivec3(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0, 0))))))))))) | ivec3(0, 0, 0))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min((ivec3(0, 0, 0) | ivec3(0, 0, 0)), _GLF_IDENTITY((ivec3(0, 0, 0) | _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) >> ivec3(0, 0, 0))), (_GLF_IDENTITY((ivec3(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(39629)))) | ivec3(0, 0, 0)), ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(0, (0) | 0))))), clamp((ivec3(0, 0, 0) | _GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ (ivec3(0, 0, 0))))), (ivec3(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-72090) : 0))) | ivec3(0, 0, 0)), (ivec3(0, 0, 0) | ivec3(0, 0, 0))))), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(0, (0) | 0))))), clamp((ivec3(0, 0, 0) | _GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ (ivec3(0, 0, 0))))), (ivec3(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-72090) : 0))) | ivec3(0, 0, 0)), (ivec3(0, 0, 0) | ivec3(0, 0, 0))))), (ivec3(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(0, (0) | 0))))), clamp((ivec3(0, 0, 0) | _GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ (ivec3(0, 0, 0))))), (ivec3(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-72090) : 0))) | ivec3(0, 0, 0)), (ivec3(0, 0, 0) | ivec3(0, 0, 0)))))) | ivec3(0, 0, 0))))))) ^ ivec3(0, 0, 0)))) / ivec3(1, 1, _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(20.70), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.5)), bvec2(true, false))))).y)) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))) ? _GLF_FUZZED(80233) : 1, int(_GLF_IDENTITY(ivec3(false ? _GLF_FUZZED(80233) : _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)), 1, 1), (_GLF_IDENTITY(ivec3(false ? _GLF_FUZZED(80233) : 1, 1, 1), (ivec3(false ? _GLF_FUZZED(80233) : 1, 1, 1)) - ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, ~ (~ (1)))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 ^ (_GLF_IDENTITY(int(1), int(1))))))))), (false ? _GLF_FUZZED(ivec3(68692, _GLF_IDENTITY(-97869, (-97869) - 0), 66)) : _GLF_IDENTITY(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min((ivec3(0, 0, 0) | ivec3(_GLF_IDENTITY(0, (0) << 0), 0, 0)), _GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), (_GLF_IDENTITY((_GLF_IDENTITY(ivec3(0, 0, 0), min(ivec3(0, 0, 0), ivec3(0, 0, 0))) | ivec3(0, 0, 0)), ivec3(ivec3(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), clamp((ivec3(0, 0, 0) | _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) | (ivec3(0, 0, 0)))), (ivec3(0, 0, 0) | ivec3(0, _GLF_IDENTITY(0, (0) >> 0), 0)), (ivec3(0, _GLF_IDENTITY(0, max(0, 0)), 0) | ivec3(0, 0, 0)))))))) ^ ivec3(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))))), 0, 0)))) / _GLF_IDENTITY(ivec3(1, 1, _GLF_IDENTITY(1, int(ivec2(1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))), (ivec3(1, 1, _GLF_IDENTITY(1, int(ivec2(1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))), int(1)))))))) + ivec3(0, 0, 0)), (_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), min((ivec3(0, 0, 0) | ivec3(_GLF_IDENTITY(0, (0) << 0), 0, 0)), _GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), (_GLF_IDENTITY((_GLF_IDENTITY(ivec3(0, 0, 0), min(ivec3(0, 0, 0), ivec3(0, 0, 0))) | _GLF_IDENTITY(ivec3(0, 0, 0), ivec3(0, 0, 0) | (ivec3(0, 0, 0)))), ivec3(ivec3(_GLF_IDENTITY((ivec3(0, 0, 0) | ivec3(0, 0, 0)), clamp((ivec3(0, 0, 0) | _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) | (ivec3(0, 0, 0)))), (ivec3(0, 0, 0) | ivec3(0, _GLF_IDENTITY(0, (0) >> 0), 0)), (ivec3(0, _GLF_IDENTITY(0, max(0, 0)), 0) | ivec3(0, 0, 0)))))))) ^ ivec3(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))))), 0, 0)))) / _GLF_IDENTITY(ivec3(1, 1, _GLF_IDENTITY(1, int(ivec2(1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(38958) : int(1))), int(1))))))), (ivec3(1, 1, _GLF_IDENTITY(1, int(ivec2(1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))) + ivec3(0, 0, 0))) | (ivec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(ivec3(4), _GLF_IDENTITY(ivec3(4), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(4), (ivec3(4)) << ivec3(0, 0, 0)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ (_GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) | (ivec3(0, 0, 0)))))), min(ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), min(ivec3(0, 0, 0), ivec3(0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0))))) | ivec3(0, 0, 0), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-16255)))))), (ivec3(0, 0, 0)) ^ ivec3(0, 0, 0)) | _GLF_IDENTITY(ivec3(0, 0, 0), ivec3(1, 1, 1) * (ivec3(0, 0, 0)))), min((_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(0, max(0, 0)), 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), int(ivec4(max(0, 0), 1, 1, 1)))), 0))), (false ? _GLF_FUZZED(floatBitsToInt(vec2(-358.741, -18.17))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(0, max(0, 0)), 0))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(0, max(0, 0)), 0))), (false ? _GLF_FUZZED((19173 | ivec2(32270, -95586))) : _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(0, max(0, 0)), 0))))) : _GLF_FUZZED(ivec2(11052, -18656)))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(0, max(0, 0)), 0)))) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) / 1), 0))))))))) - 0)), 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(50451, 30190, -50853), min(ivec3(50451, 30190, -50853), _GLF_IDENTITY(ivec3(50451, 30190, -50853), ~ (~ (ivec3(50451, 30190, -50853))))))) : ivec3(0, 0, 0))) | (ivec3(0, 0, 0) | ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(0, max(0, 0)), 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(0, max(0, 0)), 0))), (false ? _GLF_FUZZED(floatBitsToInt(vec2(-358.741, -18.17))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(0, 0) : _GLF_FUZZED(ivec3(15091, 49379, -23353)[2])))), 0))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ (0))))), 0), _GLF_IDENTITY(ivec2(0, 0), clamp(_GLF_IDENTITY(ivec2(0, 0), ivec2(_GLF_IDENTITY(ivec2(ivec2(0, 0)), (ivec2(ivec2(0, 0))) >> ivec2(0, 0)))), ivec2(0, 0), ivec2(0, 0))) ^ (ivec2(_GLF_IDENTITY(0, max(0, 0)), 0)))) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, 0)), 0), _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-27187)) : ivec2(0, 0))) ^ (ivec2(_GLF_IDENTITY(0, max(0, 0)), 0))))))))) - 0)), 0, 0)))), (ivec3(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) ^ 0), 0) | ivec3(0, 0, 0)))) / ivec3(1, 1, _GLF_IDENTITY(1, int(ivec2(1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1)))) >> 0)), int(1)))))))))))))) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1)))), _GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1)))), (_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1))))) ^ (ivec3(0, 0, 0) | ivec3(0, 0, 0))))), (true ? ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1)))), (_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1))))) ^ (ivec3(0, 0, 0) | ivec3(0, 0, 0))))) : _GLF_FUZZED(ivec3(23950, 52589, -20414)))))), ivec3(ivec4((_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(~ (~ (ivec3(1))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec3(1)), (~ (ivec3(1))) ^ ivec3(0, 0, 0))), max(~ (~ (ivec3(1))), ~ (~ (ivec3(1))))), ~ (~ (ivec3(1))))))), 0))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), ~ (_GLF_IDENTITY(~ (ivec3(1)), (_GLF_IDENTITY(~ (ivec3(1)), ivec3(_GLF_IDENTITY(ivec4(~ (ivec3(1)), _GLF_IDENTITY(1, (1) << 0)), (ivec4(~ (ivec3(1)), 1)) + ivec4(0, 0, 0, 0))))) / ivec3(1, 1, 1))))), ivec3(ivec4((_GLF_IDENTITY(ivec3(1), ~ (~ _GLF_IDENTITY((ivec3(1)), (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(5), ivec3(5))) ^ ((ivec3(1))))))), 0))), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1))))), ivec3(ivec4((_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(~ (~ (ivec3(1))), (~ _GLF_IDENTITY((~ (ivec3(_GLF_IDENTITY(1, 0 ^ (1))))), ((~ (ivec3(1)))) >> ivec3(0, 0, 0))) + ivec3(0, 0, 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) + 0)))), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1))))), ivec3(ivec4((_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1))))), 0)))))), mat4x3(1.0)), ivec4(1), _GLF_struct_4(1.0, vec4(1.0), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), 1.0, vec4(1.0)), bvec3(true), 1.0), gl_SubgroupInvocationID, true);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.z = _GLF_struct_replacement_6.subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x, 0u ^ (gl_NumWorkGroups.x)), uint(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.x = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(gl_WorkGroupID.x, _GLF_struct_1(mat4x2(1.0), _GLF_struct_0(_GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], _GLF_FUZZED(9.8), (vec4(1.0))[2], (vec4(1.0))[3]), vec4(_GLF_IDENTITY(_GLF_FUZZED((3662.9887 - -31.73)), max(_GLF_FUZZED((3662.9887 - -31.73)), _GLF_FUZZED((3662.9887 - -31.73)))), (vec4(1.0))[1], _GLF_FUZZED(-3.0), _GLF_FUZZED(-3228.7333)), bvec4(false, true, false, false))), mat4x3(1.0), vec4(1.0), mat3(1.0), mat3x2(1.0)), mat3x2(1.0), vec4(1.0), mat3x4(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(860.710)), vec2(_GLF_FUZZED((5572.9122 * -4.7)), (injectionSwitch)[1]), bvec2(false, true))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_id, (false ? _GLF_FUZZED(61610u) : _GLF_struct_replacement_2.workgroup_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, log(_GLF_IDENTITY(1.0, float(vec2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))) + (injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, false)))), false || (bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false || (_GLF_IDENTITY(false, ! (! (false)))))) && true), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9120.8301)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), float(mat2(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(mat4x2(7.7, -506.594, 7.8, 7.4, -3.4, 6.8, -52.83, -632.950)) : _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9120.8301)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), float(mat2(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 0.0, 1.0, 0.0))))), (mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9120.8301)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), float(mat2(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 0.0, 1.0, 0.0)))))) * mat4(1.0))))), mix(float(_GLF_FUZZED(-3.9)), float(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9120.8301)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), float(mat2(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(mat4x2(7.7, -506.594, 7.8, 7.4, -3.4, 6.8, -52.83, -632.950)) : _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9120.8301)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), float(mat2(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 0.0, 1.0, 0.0))))), (mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9120.8301)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), float(mat2(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 0.0, 1.0, 0.0)))))) * mat4(1.0)))))), bool(true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.7)), _GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) || false), true, true, false)))))) - 0.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 uint subgroup_base = _GLF_struct_replacement_7.subgroup_id * _GLF_struct_replacement_10._f0.subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))))), workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) + GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.z);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, length(0.0) + (injectionSwitch.x)) > injectionSwitch.y) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0)), clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0))))).y, float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, true, true))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.6)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.w = _GLF_struct_replacement_11.virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 atomicStore(write_val, uint(GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.w), 4, _GLF_IDENTITY(64, int(ivec2(64, (0 << _GLF_IDENTITY(int(3), int(3)))))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_14(_GLF_struct_12(1u, ivec3(_GLF_IDENTITY(1, (1) | 0)), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)), vec2(1.0), mat4(1.0)), uvec3(1u), _GLF_struct_13(uvec4(1u), ivec3(1), ivec2(1))), mat3(1.0), _GLF_struct_16(_GLF_struct_15(true, uvec4(_GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(_GLF_IDENTITY(6u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(6u, _GLF_IDENTITY((true ? 6u : _GLF_FUZZED(num_workgroup)), 0u | (_GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(num_workgroup)), ((true ? 6u : _GLF_FUZZED(num_workgroup))) * 1u))))), 0u | ((_GLF_IDENTITY(6u, _GLF_IDENTITY((true ? 6u : _GLF_FUZZED(num_workgroup)), 0u | (_GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(num_workgroup)), ((true ? 6u : _GLF_FUZZED(num_workgroup))) * 1u)))))))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), mat4x3(1.0), mat3x2(1.0), true)), atomicLoad(write_val, 4, 64, 0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.y = _GLF_struct_replacement_17.read_val, (GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.y = _GLF_struct_replacement_17.read_val) >> 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3((false), true, false), true)))), (bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec4(bvec3((false), true, false), true))))) && true)) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))), bvec3(bvec4(bvec3((false), true, false), true)))), (bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec4(bvec3((false), true, false), true))))) && true)) || false, bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ((false)) || false), true, false), true)))), (bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec4(bvec3((false), true, false), true))))) && true)) || false)))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x) - length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(3.8) : float(injectionSwitch.x))), float(_GLF_FUZZED(0.1)), bool(false))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-768.887, 39.48, 207.509).r)), bool(false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)) || false), false, true))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))), false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), false, false, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))))) || false), true, false, false))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))))) || false), true, false, false)))))) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 buf[GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.w] = _GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.y, ~ (~ (GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.y))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.y, uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.y, (GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.y) | (GLF_merged4_0_1_13_1_1_8_2_1_17_3_1_11num_workgroupread_valsubgroup_local_idvirtual_gid.y)), 1u, 1u, 1u)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
