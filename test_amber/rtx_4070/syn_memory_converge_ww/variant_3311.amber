#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))) && true), false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, _GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))) || (true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))) || false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0)))) / determinant(mat2(1.0, 1.0, 0.0, sqrt(1.0))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ((_GLF_IDENTITY(false, bool(bvec2(false, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (false)), bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (false)), false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-6000.4714 + -3.6))), vec2(_GLF_FUZZED(-2.1), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-661.642, 940.567, -3716.5102, -5.8).s), _GLF_FUZZED(vec3(57.79, -1.9, -7.0).p)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), true, true)))), false, false)))), bvec2(bvec4(bvec2(false, false), false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-661.642, 940.567, -3716.5102, -5.8).s), _GLF_IDENTITY(_GLF_FUZZED(vec3(57.79, -1.9, -7.0).p), mix(float(_GLF_FUZZED(vec3(_GLF_IDENTITY(57.79, clamp(57.79, 57.79, 57.79)), -1.9, -7.0).p)), float(_GLF_FUZZED(765.723)), bool(false)))), bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-661.642, 940.567, _GLF_IDENTITY(-3716.5102, clamp(_GLF_IDENTITY(-3716.5102, clamp(-3716.5102, -3716.5102, -3716.5102)), _GLF_IDENTITY(-3716.5102, max(_GLF_IDENTITY(-3716.5102, min(-3716.5102, -3716.5102)), -3716.5102)), -3716.5102)), -5.8).s), _GLF_FUZZED(vec3(57.79, -1.9, -7.0).p)), bvec2(false, false)))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-661.642, 940.567, -3716.5102, -5.8).s), _GLF_FUZZED(vec3(57.79, -1.9, -7.0).p)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-661.642, 940.567, -3716.5102, -5.8).s), _GLF_IDENTITY(_GLF_FUZZED(vec3(57.79, -1.9, -7.0).p), mix(float(_GLF_FUZZED(vec3(_GLF_IDENTITY(57.79, clamp(57.79, 57.79, 57.79)), -1.9, -7.0).p)), float(_GLF_FUZZED(765.723)), bool(false)))), bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-661.642, 940.567, -3716.5102, -5.8).s), _GLF_FUZZED(vec3(57.79, -1.9, -7.0).p)), bvec2(false, false)))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x : _GLF_FUZZED(6.4))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, false)))))), true))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(135416u))), bool(false))), injectionSwitch.y, injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(false, bool(bool(false)))), false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(135416u))), bool(false))), injectionSwitch.y, injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) - 0.0)), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(135416u))), bool(false))), injectionSwitch.y, injectionSwitch.y)))))), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) - 0.0)), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(135416u))), bool(false))), injectionSwitch.y, injectionSwitch.y))))))))), false), bvec2(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(135416u))), bool(false))), (false ? _GLF_FUZZED(-30.14) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(135416u))), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(vec2(float(injectionSwitch.y), 0.0))), float(_GLF_FUZZED(float(135416u))), bool(false)))) * 1.0))), injectionSwitch.y, injectionSwitch.y)))))), false), true))))), true, true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)), false, true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false), bool(bool(false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))))))), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))), false)))))))))), true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, false)))))), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), _GLF_IDENTITY(false, bool(bool(false)))), false)))))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false)), false))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false), bvec3(bvec3(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false))))))), _GLF_IDENTITY(false, bool(bool(false)))), false)))))))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), false || (bool(bvec3(bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false))))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false)))))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))), true, false, false)))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true)))))), true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true)))))), true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, true))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), ((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), ((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), ((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))) || false)))), ((_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), ((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))) || false))))) && true)), (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), ((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))) || false)))), ((_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), ((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))) || false))))) && true))) || false)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), ((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), ((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))) || false)))), ((_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), ((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))) || false))))) && true)), (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), ((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))) || false)))), ((_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), ((_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))) || false))))) && true))) || false))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), true))), false))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)), bvec3(bvec3(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), _GLF_IDENTITY(false, bool(bool(false)))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec3(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec3(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))))))))))), false)))), false))))), true)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bool(false)))), false))))), true)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, true))))), false, false, _GLF_IDENTITY(false, false || (false))))), false, false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7148.0101)), vec2(_GLF_FUZZED(5.7), (injectionSwitch)[1]), bvec2(false, true))).y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(write_val) : workgroup_base)), clamp(workgroup_base, workgroup_base, workgroup_base)), min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), 0u + (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : 0u << _GLF_IDENTITY(uint(8u), uint(8u))))), 0u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_FUZZED(workgroup_size)))), (uvec4(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), workgroup_base, workgroup_base)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)))))), uint(_GLF_IDENTITY(8u, min(8u, _GLF_IDENTITY(8u, max(8u, 8u))))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 1u)) | uvec4(0u, 0u, 0u, 0u)))), 0u ^ (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 1u)) | uvec4(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 1u)) | uvec4(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 1u)) | uvec4(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 1u)) | uvec4(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)))) / uvec4(1u, 1u, 1u, 1u)), ~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 1u)) | uvec4(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))))))))))) + subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_val = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, (write_val) | 0u), 4, 64, 0), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), _GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, _GLF_IDENTITY(0, (0) >> 0)), atomicLoad(write_val, 4, 64, 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, (write_val) | 0u), 4, 64, 0), min(atomicLoad(write_val, _GLF_IDENTITY(4, min(4, 4)), 64, 0), atomicLoad(write_val, 4, 64, 0)))) * 1u), atomicLoad(write_val, 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | 0))), 0u, 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u))) ^ 0u))), 0u + (~ _GLF_IDENTITY((_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), _GLF_IDENTITY(int(ivec2(64, 1)), max(int(ivec2(_GLF_IDENTITY(64, 0 ^ (64)), 1)), int(ivec2(64, 1))))), 0), atomicLoad(write_val, 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, ~ (~ (64))), 64, 64)), 0)), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) | (0u | 0u)))))), 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, (write_val) ^ 0u), 4, 64, _GLF_IDENTITY(0, 0 | (0)))), 0u, 0u, 1u))) ^ 0u))), max(_GLF_IDENTITY((_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), _GLF_IDENTITY(int(ivec2(64, 1)), max(int(ivec2(_GLF_IDENTITY(64, 0 ^ (64)), 1)), int(ivec2(64, 1))))), 0), atomicLoad(write_val, 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, ~ (~ (64))), 64, 64)), 0)), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) | (0u | 0u)))))), 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, (write_val) ^ 0u), 4, 64, _GLF_IDENTITY(0, 0 | (0)))), 0u, 0u, 1u))) ^ 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), _GLF_IDENTITY(int(ivec2(64, 1)), max(int(ivec2(_GLF_IDENTITY(64, 0 ^ (64)), 1)), int(ivec2(64, 1))))), 0), atomicLoad(write_val, 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, ~ (~ (64))), 64, 64)), 0)), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) | (0u | 0u)))))), 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, (write_val) ^ 0u), 4, 64, _GLF_IDENTITY(0, 0 | (0)))), 0u, 0u, 1u))) ^ 0u))), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), _GLF_IDENTITY(int(ivec2(64, 1)), max(int(ivec2(_GLF_IDENTITY(64, 0 ^ (64)), 1)), int(ivec2(64, 1))))), 0), atomicLoad(write_val, 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, ~ (~ (64))), 64, 64)), 0)), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) | (0u | 0u)))))), 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, (write_val) ^ 0u), 4, 64, _GLF_IDENTITY(0, 0 | (0)))), 0u, 0u, 1u))) ^ 0u)))))) | ((_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), _GLF_IDENTITY(int(ivec2(64, 1)), max(int(ivec2(_GLF_IDENTITY(64, 0 ^ (64)), 1)), int(ivec2(64, 1))))), 0), atomicLoad(write_val, 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, ~ (~ (64))), 64, 64)), 0)), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) | (0u | 0u)))))), 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, (write_val) ^ 0u), 4, 64, _GLF_IDENTITY(0, 0 | (0)))), 0u, 0u, 1u))) ^ 0u))))), (_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), _GLF_IDENTITY(int(ivec2(64, 1)), max(int(ivec2(_GLF_IDENTITY(64, 0 ^ (64)), 1)), int(ivec2(64, 1))))), 0), atomicLoad(write_val, 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, ~ (~ (64))), 64, 64)), 0)), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) | (0u | 0u)))))), 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, (write_val) ^ 0u), 4, 64, _GLF_IDENTITY(0, 0 | (0)))), 0u, 0u, 1u))) ^ 0u)))))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)))), _GLF_IDENTITY(uint(uvec4(min(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)))) * 1u), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u))) ^ 0u))), (~ (_GLF_IDENTITY(min(atomicLoad(_GLF_IDENTITY(write_val, (write_val) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)))) * 1u), atomicLoad(_GLF_IDENTITY(write_val, (write_val) + 0u), 4, 64, 0)), 0u, 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u))) ^ _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)))))) >> 0u), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(atomicLoad(write_val, 4, _GLF_IDENTITY(64, min(64, 64)), 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) | (1u)))))), _GLF_IDENTITY((uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u))), (true ? _GLF_IDENTITY((uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u))), ((uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u)))) - 0u) : _GLF_FUZZED(write_val))) ^ 0u))), (~ (_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(atomicLoad(write_val, 4, _GLF_IDENTITY(64, min(64, 64)), 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u))) - 0u))))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) >> 0u)))))))) : _GLF_FUZZED(_GLF_IDENTITY((virtual_gid ++), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((virtual_gid ++), ((virtual_gid ++)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (false ? _GLF_FUZZED(subgroup_base) : ~ ((virtual_gid ++))))))), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(bvec3(_GLF_IDENTITY((true), ((true)) || false), true, true)))) ? _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), _GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, _GLF_IDENTITY(0, (0) >> 0)), atomicLoad(write_val, 4, 64, 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)))) * 1u), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u))) ^ 0u))), 0u + (~ (_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), _GLF_IDENTITY(int(ivec2(64, 1)), max(int(ivec2(_GLF_IDENTITY(64, 0 ^ (64)), 1)), int(ivec2(64, 1))))), 0), atomicLoad(write_val, 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, ~ (~ (64))), 64, 64)), 0)), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u)))), 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, (write_val) ^ 0u), 4, 64, _GLF_IDENTITY(0, 0 | (0)))), 0u, 0u, 1u))) ^ 0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)))) * 1u), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u))) ^ 0u))), 0u + (~ (_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), _GLF_IDENTITY(int(ivec2(64, 1)), max(int(ivec2(_GLF_IDENTITY(64, 0 ^ (64)), 1)), int(ivec2(64, 1))))), 0), atomicLoad(write_val, 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, ~ (~ (64))), 64, 64)), 0)), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u)))), 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, (write_val) ^ 0u), 4, 64, _GLF_IDENTITY(0, 0 | (0)))), 0u, 0u, 1u))) ^ 0u)))))) ^ 0u)), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, _GLF_IDENTITY(0, (0) - 0))))) * 1u), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u))) ^ 0u))), (~ (_GLF_IDENTITY(min(atomicLoad(_GLF_IDENTITY(write_val, (write_val) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)))) * 1u), atomicLoad(_GLF_IDENTITY(write_val, (write_val) + 0u), 4, 64, 0)), 0u, 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u))) ^ _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)))))) >> _GLF_IDENTITY(0u, 1u * (0u))), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(min(atomicLoad(write_val, 4, _GLF_IDENTITY(64, min(64, 64)), 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u))) ^ 0u))), (~ (_GLF_IDENTITY(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(min(atomicLoad(write_val, 4, _GLF_IDENTITY(64, min(64, 64)), 0), atomicLoad(write_val, 4, 64, 0)), ~ (~ (_GLF_IDENTITY(min(atomicLoad(write_val, 4, _GLF_IDENTITY(64, min(64, 64)), 0), atomicLoad(write_val, 4, 64, 0)), 0u + (min(atomicLoad(write_val, 4, _GLF_IDENTITY(64, min(64, 64)), 0), atomicLoad(write_val, 4, 64, 0))))))), 0u, 0u, 1u)), (uint(uvec4(min(atomicLoad(write_val, 4, 64, 0), atomicLoad(write_val, 4, 64, 0)), 0u, 0u, 1u))) ^ 0u)))) >> 0u)))))))) : _GLF_FUZZED(_GLF_IDENTITY((virtual_gid ++), ~ (_GLF_IDENTITY(~ ((virtual_gid ++)), (false ? _GLF_FUZZED(subgroup_base) : ~ ((virtual_gid ++)))))))) >> _GLF_IDENTITY(0u, max(0u, 0u))))), clamp(_GLF_IDENTITY(atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(0, (0) | (0))), (ivec2(64, 0)) ^ ivec2(0, 0)))), 0 | (64)), 0), 0u | (atomicLoad(write_val, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, max(4, 4)))), 64, 0))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), uint(uint(atomicLoad(write_val, 4, 64, 0)))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), clamp(atomicLoad(write_val, _GLF_IDENTITY(4, 0 + (4)), 64, 0), atomicLoad(write_val, 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) + 0))), atomicLoad(write_val, 4, _GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), 0 | (_GLF_IDENTITY(64, (64) << 0))), 64)), 64), (max(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY((64), max((64), (64))), (64))) << 0), 64)), 64)) - 0)), 0)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false)))))) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), bool(bvec4(! _GLF_IDENTITY((false), ((false)) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec4(bvec2(! (false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), false || ((false))), false), bvec2(bvec4(bvec2(! (false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (false)), false, false), bvec3(bvec3(bvec3(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ((false)) || false)), false, false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! _GLF_IDENTITY((false), ((false)) || false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), bvec3(bvec4(bvec3(! (false), false, false), false))))))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), bool(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))), false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), dot(vec4(1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))) + (injectionSwitch.y))))), false)), false)))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), bool(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), true, false))), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), bool(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))), false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(! (! _GLF_IDENTITY((false), ((false)) || false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(bvec3(! (false), false, false), false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), bool(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))), false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false)))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), bool(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), bool(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), bool(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))), false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false)))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), bool(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), bool(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))), (bool(bool(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), bool(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))), false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false)))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), bool(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), bool(bvec2(bool(bvec4(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))))) || false))), false, false))))), false)))) && true))) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), true && ((false) || false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), true, _GLF_IDENTITY(false, false || (false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, false), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, false), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, false), true)))), false, false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7098.6944), _GLF_FUZZED(8.8)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec4(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(0.8)), float((injectionSwitch)[0]), bool(true))), 1.0, 0.0, 0.0))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7098.6944), _GLF_FUZZED(8.8)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec4(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(0.8)), float((injectionSwitch)[0]), bool(true))), 1.0, 0.0, 0.0))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7098.6944), _GLF_FUZZED(8.8)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec4(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(0.8)), float((injectionSwitch)[0]), bool(true))), 1.0, 0.0, 0.0))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
