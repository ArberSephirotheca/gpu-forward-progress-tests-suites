#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3795.5152) : injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3795.5152) : injectionSwitch.y)), bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3795.5152) : injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3795.5152) : injectionSwitch.y))), true && (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3795.5152) : injectionSwitch.y))))), false, true, false)))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3795.5152) : injectionSwitch.y)))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3795.5152) : injectionSwitch.y))))) || false)))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true, true && ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))), false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))), false))))))) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), clamp(float(mat2x4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(-2556.7736)), bool(false))))), false))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sin(determinant(mat2(0.0, 0.0, 0.0, 0.0))), 1.0)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), true, false, false))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.2, -2.5)))), sqrt(0.0), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sin(0.0), 0.0), (true ? mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.2, -2.5)))), sqrt(0.0), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sin(0.0), 0.0) : _GLF_FUZZED(mat4x2(1.8, -2.5, 9627.3337, 151.186, 5.7, -0.0, 1.9, 3.0)))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) || false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((0.1))), vec2(_GLF_FUZZED(529.201), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))))), true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((0.1))), vec2(_GLF_FUZZED(529.201), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))))), true, false, false)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((0.1))), vec2(_GLF_FUZZED(529.201), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))))), true, false, false)), false, true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.9) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(9.5)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y)))))))))))), max(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(9.5)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y)))))))))))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(9.5)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y)))))))))))))) ^ 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED((_GLF_IDENTITY(uint(false), uint(_GLF_IDENTITY(uvec4(uint(false), 1u, 1u, 0u), (true ? uvec4(uint(false), 1u, 1u, 0u) : _GLF_FUZZED(uvec4(63656u, 173041u, _GLF_IDENTITY(18810u, clamp(18810u, 18810u, 18810u)), 59949u)))))) >> workgroup_base)))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), false, true, true))) || false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true))) || false), false), true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))) || false)) || false)) || false)) || false))), false || (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(true, false || (true)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(true, false || (true)))), false))))) || false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-35.72), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-35.72), (_GLF_IDENTITY(_GLF_FUZZED(-35.72), (_GLF_FUZZED(-35.72)) - 0.0)) * sqrt(1.0))), 0.0 + (float(_GLF_IDENTITY(_GLF_FUZZED(-35.72), (_GLF_IDENTITY(_GLF_FUZZED(-35.72), (_GLF_FUZZED(-35.72)) - 0.0)) * sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-35.72), (_GLF_IDENTITY(_GLF_FUZZED(-35.72), (_GLF_FUZZED(-35.72)) - 0.0)) * sqrt(1.0))), 0.0 + (float(_GLF_IDENTITY(_GLF_FUZZED(-35.72), (_GLF_IDENTITY(_GLF_FUZZED(-35.72), (_GLF_FUZZED(-35.72)) - 0.0)) * sqrt(1.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35.72), (false ? _GLF_FUZZED(80.42) : _GLF_IDENTITY(_GLF_FUZZED(-35.72), clamp(_GLF_FUZZED(-35.72), _GLF_IDENTITY(_GLF_FUZZED(-35.72), (true ? _GLF_FUZZED(-35.72) : _GLF_FUZZED(7.4))), _GLF_FUZZED(-35.72))))), (_GLF_IDENTITY(_GLF_FUZZED(-35.72), (_GLF_FUZZED(-35.72)) - 0.0)) * sqrt(1.0))), 0.0 + (float(_GLF_IDENTITY(_GLF_FUZZED(-35.72), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-35.72, float(mat4(_GLF_IDENTITY(-35.72, clamp(-35.72, -35.72, _GLF_IDENTITY(-35.72, 0.0 + (-35.72)))), log(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0), 0.0)))), (_GLF_FUZZED(-35.72)) - 0.0)) * sqrt(1.0)))))), float(mat4x3(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35.72), (false ? _GLF_FUZZED(80.42) : _GLF_IDENTITY(_GLF_FUZZED(-35.72), clamp(_GLF_FUZZED(-35.72), _GLF_IDENTITY(_GLF_FUZZED(-35.72), (true ? _GLF_FUZZED(-35.72) : _GLF_FUZZED(7.4))), _GLF_FUZZED(-35.72))))), (_GLF_IDENTITY(_GLF_FUZZED(-35.72), (_GLF_FUZZED(-35.72)) - 0.0)) * sqrt(1.0))), 0.0 + (float(_GLF_IDENTITY(_GLF_FUZZED(-35.72), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-35.72, float(mat4(_GLF_IDENTITY(-35.72, clamp(-35.72, -35.72, _GLF_IDENTITY(-35.72, 0.0 + (-35.72)))), log(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0), 0.0)))), (_GLF_FUZZED(-35.72)) - 0.0)) * sqrt(1.0)))))), mix(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-35.72), (false ? _GLF_FUZZED(80.42) : _GLF_IDENTITY(_GLF_FUZZED(-35.72), clamp(_GLF_FUZZED(-35.72), _GLF_IDENTITY(_GLF_FUZZED(-35.72), (true ? _GLF_FUZZED(-35.72) : _GLF_FUZZED(7.4))), _GLF_FUZZED(-35.72))))), (_GLF_IDENTITY(_GLF_FUZZED(-35.72), (_GLF_FUZZED(-35.72)) - 0.0)) * sqrt(1.0))), 0.0 + (float(_GLF_IDENTITY(_GLF_FUZZED(-35.72), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-35.72, float(mat4(_GLF_IDENTITY(-35.72, clamp(-35.72, -35.72, _GLF_IDENTITY(-35.72, 0.0 + (-35.72)))), log(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0), 0.0)))), (_GLF_FUZZED(-35.72)) - 0.0)) * sqrt(1.0))))))), float(_GLF_FUZZED(-824.454)), bool(false))), sqrt(1.0), 0.0, 0.0, 1.0, cos(0.0), 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)))))), _GLF_FUZZED(8721.7804)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((684.763 / -3232.4825))), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2087.5785) : 0.0)), 0.0))).x < injectionSwitch.y)), true))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-198.001), _GLF_FUZZED(-7.1)), bvec2(false, false))).x > injectionSwitch.y))))) && _GLF_IDENTITY(true, (true) && true)), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false), false, false, true)))) && true)))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))), false), bvec3(bvec3(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), false)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(1.9), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(5.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0)).y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, log(1.0), 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bool(! (false))))) && _GLF_IDENTITY(true, (true) || false)))), true && (! (false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          continue;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(mat4x3(7.7, 73.01, -9.5, -514.528, -1343.9741, 9.9, 6343.8668, -737.492, 7.0, -3.2, 431.049, 3.6)) : _GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(mat4x3(-6.9, 6288.3130, -19.62, 9194.9312, -7.8, 386.141, -522.942, 21.15, -709.463, -18.89, -6067.9523, 5.2)) : mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))).x, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(vec3(-6908.9923, 9.9, 9514.6690).z)), float(float(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))).x, 0.0, 0.0, 0.0))), bool(true)))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0)), min(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) + sqrt(vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(43.74) : injectionSwitch[1])))))).y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(43.74) : injectionSwitch[1])))))).y : _GLF_FUZZED(5693.6781)), clamp((true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(43.74) : injectionSwitch[1])))))).y : _GLF_FUZZED(5693.6781)), (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(43.74) : injectionSwitch[1])))))).y : _GLF_FUZZED(5693.6781)), (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(43.74) : injectionSwitch[1])))))).y : _GLF_FUZZED(5693.6781))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[0], _GLF_FUZZED(-52.98)), vec2(_GLF_FUZZED(4.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1]), bvec2(false, true))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5097.6049)), float(0.0), bool(true))), 0.0))))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0)), min(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[1]), vec2(_GLF_FUZZED(5044.3500), _GLF_FUZZED(float(-65731))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).x, float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))))))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-284.885) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))))) / cos(vec2(0.0, 0.0))).x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-48.99)), bool(false))), 1.0)))), 1.0))) - vec2(0.0, 0.0)).x, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-48.99)), bool(false))), 1.0)))), 1.0))) - vec2(0.0, 0.0)).x, 0.0, 0.0, 0.0), mat2(mat4x3(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-48.99)), bool(false))), 1.0)))), 1.0))) - vec2(0.0, 0.0)).x, 0.0, 0.0, 0.0))))) * mat2(1.0)))))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(43.74) : injectionSwitch[1])))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(43.74) : injectionSwitch[1])))))).y : _GLF_FUZZED(5693.6781))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0)), min(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(float((-65305 - -99346))), _GLF_FUZZED(1154.3482)), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))[1]), bvec2(true, true))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2322.9864)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true))))).x, float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))))).x, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-55.68), _GLF_FUZZED(385.844)), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))[1], min((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))[1]))), bvec2(true, true))))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-741.226 / -581.590))), float(0.0), bool(true))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), clamp(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), max(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), vec2(0.0, 0.0) + (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))))).x, float(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), clamp(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), clamp(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), clamp(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)))))), mix(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-338.000)), vec2(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), clamp(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)))))))[0], ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), clamp(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)))))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), clamp(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, exp(0.0), 1.0, 1.0)))))))) - vec2(0.0, 0.0)).x, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(43.74) : injectionSwitch[1])))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) ^ (0 ^ 0))], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(43.74) : injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_IDENTITY(_GLF_FUZZED(43.74), max(_GLF_FUZZED(43.74), _GLF_FUZZED(43.74))) : injectionSwitch[1]))) / 1.0))))).y : _GLF_FUZZED(5693.6781))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, float(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))).x, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0)), min(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), vec2(_GLF_IDENTITY(vec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), 0.0, 1.0), max(vec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), 0.0, 1.0), vec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), 0.0, 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), vec2(_GLF_IDENTITY(vec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), 0.0, 1.0), max(vec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), 0.0, 1.0), vec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), 0.0, 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))))).x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) - 0), 1))], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(43.74) : injectionSwitch[1])))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(43.74) : injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])))))).y : _GLF_FUZZED(5693.6781))))), true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, false, false))), true)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false, false))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((false ? -370.014 : _GLF_IDENTITY(-63.85, (false ? _GLF_FUZZED((831.060 * 4542.9384)) : -63.85)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.6)), vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)))[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(float(17219)), _GLF_FUZZED(1779.6279)), bvec2(false, false))))[_GLF_IDENTITY(1, (1) << 0)]), vec2((injectionSwitch)[0], _GLF_FUZZED(282.072)), bvec2(true, false))).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((false ? -370.014 : _GLF_IDENTITY(-63.85, (false ? _GLF_FUZZED((831.060 * 4542.9384)) : -63.85)))), (_GLF_IDENTITY(_GLF_FUZZED((false ? -370.014 : _GLF_IDENTITY(-63.85, (false ? _GLF_FUZZED((831.060 * 4542.9384)) : -63.85)))), mix(float(_GLF_FUZZED(681.638)), float(_GLF_FUZZED((false ? -370.014 : _GLF_IDENTITY(-63.85, (false ? _GLF_FUZZED((831.060 * 4542.9384)) : -63.85))))), bool(true)))) * 1.0), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch), cos(vec2(0.0, 0.0)) * ((injectionSwitch)))[_GLF_IDENTITY(1, max(1, 1))], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))[1]))), vec2(_GLF_FUZZED(float(17219)), _GLF_FUZZED(1779.6279)), bvec2(false, false))))[_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) << 0)]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(282.072)), (false ? _GLF_FUZZED(vec2(8.6, -3613.8842)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(282.072)), mix(vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(282.072)))[0], _GLF_FUZZED(7990.7484)), vec2(_GLF_FUZZED(-6.1), (vec2((injectionSwitch)[0], _GLF_FUZZED(282.072)))[1]), bvec2(false, true))))), bvec2(true, false))).x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(7.5))) : _GLF_FUZZED(5.6)))), mix(float((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(7.5))) : _GLF_FUZZED(5.6))))), float(_GLF_FUZZED(-1980.8603)), bool(false))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, clamp((1.0) / 1.0, (1.0) / 1.0, (1.0) / 1.0))), injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ _GLF_IDENTITY((_injected_loop_counter ++), 0 + ((_injected_loop_counter ++)))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ _GLF_IDENTITY((_injected_loop_counter ++), 0 + ((_injected_loop_counter ++)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ _GLF_IDENTITY((_injected_loop_counter ++), 0 + ((_injected_loop_counter ++))))))), (true ? ~ ((_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ _GLF_IDENTITY((_injected_loop_counter ++), 0 + ((_injected_loop_counter ++))))))) : _GLF_FUZZED(_injected_loop_counter))))))))) | 0))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   return;
                  }
                 break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), vec2(_GLF_IDENTITY(_GLF_FUZZED(((mat4x3(593.807, -168.888, 9.6, 12.23, _GLF_IDENTITY(98.90, clamp(98.90, 98.90, _GLF_IDENTITY(98.90, mix(float(_GLF_FUZZED(1960.3913)), float(98.90), bool(true))))), -5.4, 7699.6867, 5.9, -82.72, 736.159, -1.6, 1.2) != mat4x3(1332.6713, -28.50, 46.68, _GLF_IDENTITY(-6599.6397, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-6599.6397, 1.0 * (-6599.6397))), mix(float((_GLF_IDENTITY(-6599.6397, 1.0 * (-6599.6397)))), float(_GLF_FUZZED(849.759)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-6599.6397, 1.0 * (-6599.6397))), mix(float((_GLF_IDENTITY(-6599.6397, 1.0 * (-6599.6397)))), float(_GLF_FUZZED(849.759)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(-6599.6397, 1.0 * (-6599.6397))), mix(float((_GLF_IDENTITY(-6599.6397, 1.0 * (-6599.6397)))), float(_GLF_FUZZED(849.759)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-6599.6397, 1.0 * (-6599.6397))), mix(float((_GLF_IDENTITY(-6599.6397, 1.0 * (-6599.6397)))), float(_GLF_FUZZED(849.759)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-6599.6397, 1.0 * (-6599.6397))), mix(float((_GLF_IDENTITY(-6599.6397, 1.0 * (-6599.6397)))), float(_GLF_FUZZED(849.759)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(-6599.6397, 1.0 * (-6599.6397))), mix(float((_GLF_IDENTITY(-6599.6397, 1.0 * (-6599.6397)))), float(_GLF_FUZZED(849.759)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(5.6))) : _GLF_FUZZED(677.821))))) - 0.0), -393.600, _GLF_IDENTITY(74.94, (_GLF_IDENTITY(74.94, _GLF_IDENTITY(float(mat4(74.94, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 1.0)), (float(mat4(74.94, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 1.0))) * 1.0))) - 0.0), 7737.6987, 182.741, 94.32, 7933.4659, 60.03, -5.9)) ? -554.079 : -7527.3768)), clamp(_GLF_FUZZED(((mat4x3(593.807, -168.888, 9.6, 12.23, 98.90, -5.4, _GLF_IDENTITY(7699.6867, (7699.6867) / 1.0), 5.9, _GLF_IDENTITY(-82.72, clamp(-82.72, _GLF_IDENTITY(-82.72, max(-82.72, -82.72)), -82.72)), _GLF_IDENTITY(736.159, float(float(_GLF_IDENTITY(736.159, (736.159) - 0.0)))), -1.6, 1.2) != mat4x3(1332.6713, -28.50, _GLF_IDENTITY(46.68, max(46.68, _GLF_IDENTITY(_GLF_IDENTITY(46.68, 1.0 * (46.68)), float(vec2(_GLF_IDENTITY(46.68, 1.0 * (46.68)), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(-6599.6397, _GLF_IDENTITY(max(_GLF_IDENTITY(-6599.6397, max(-6599.6397, -6599.6397)), _GLF_IDENTITY(-6599.6397, (-6599.6397) + 0.0)), 1.0 * (max(_GLF_IDENTITY(-6599.6397, max(_GLF_IDENTITY(-6599.6397, max(-6599.6397, -6599.6397)), -6599.6397)), _GLF_IDENTITY(-6599.6397, _GLF_IDENTITY((-6599.6397) + 0.0, min((-6599.6397) + 0.0, (-6599.6397) + 0.0))))))), -393.600, _GLF_IDENTITY(74.94, clamp(74.94, 74.94, 74.94)), 7737.6987, 182.741, 94.32, 7933.4659, 60.03, -5.9)) ? -554.079 : -7527.3768)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(((mat4x3(593.807, -168.888, 9.6, 12.23, 98.90, -5.4, 7699.6867, 5.9, -82.72, 736.159, -1.6, 1.2) != mat4x3(1332.6713, -28.50, 46.68, -6599.6397, -393.600, 74.94, 7737.6987, 182.741, 94.32, 7933.4659, 60.03, -5.9)) ? -554.079 : -7527.3768)), determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (_GLF_FUZZED(((mat4x3(593.807, -168.888, 9.6, 12.23, 98.90, -5.4, 7699.6867, 5.9, -82.72, 736.159, -1.6, 1.2) != mat4x3(1332.6713, -28.50, 46.68, -6599.6397, -393.600, _GLF_IDENTITY(74.94, min(74.94, 74.94)), 7737.6987, 182.741, 94.32, 7933.4659, 60.03, -5.9)) ? -554.079 : -7527.3768)))), max(_GLF_IDENTITY(_GLF_FUZZED(((mat4x3(593.807, -168.888, 9.6, 12.23, 98.90, -5.4, 7699.6867, 5.9, -82.72, 736.159, -1.6, 1.2) != mat4x3(1332.6713, -28.50, 46.68, -6599.6397, -393.600, 74.94, 7737.6987, 182.741, 94.32, 7933.4659, 60.03, -5.9)) ? -554.079 : -7527.3768)), determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (_GLF_FUZZED(((mat4x3(593.807, -168.888, 9.6, 12.23, 98.90, -5.4, 7699.6867, 5.9, -82.72, 736.159, -1.6, 1.2) != mat4x3(1332.6713, -28.50, 46.68, -6599.6397, -393.600, _GLF_IDENTITY(74.94, min(74.94, 74.94)), 7737.6987, 182.741, 94.32, 7933.4659, 60.03, -5.9)) ? -554.079 : -7527.3768)))), _GLF_IDENTITY(_GLF_FUZZED(((mat4x3(593.807, -168.888, 9.6, 12.23, 98.90, -5.4, 7699.6867, 5.9, -82.72, 736.159, -1.6, 1.2) != mat4x3(1332.6713, -28.50, 46.68, -6599.6397, -393.600, 74.94, 7737.6987, 182.741, 94.32, 7933.4659, 60.03, -5.9)) ? -554.079 : -7527.3768)), determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (_GLF_FUZZED(((mat4x3(593.807, -168.888, 9.6, 12.23, 98.90, -5.4, 7699.6867, 5.9, -82.72, 736.159, -1.6, 1.2) != mat4x3(1332.6713, -28.50, 46.68, -6599.6397, -393.600, _GLF_IDENTITY(74.94, min(74.94, 74.94)), 7737.6987, 182.741, 94.32, 7933.4659, 60.03, -5.9)) ? -554.079 : -7527.3768)))))), _GLF_FUZZED(((mat4x3(593.807, _GLF_IDENTITY(-168.888, (_GLF_IDENTITY(-168.888, (-168.888) - 0.0)) / sqrt(1.0)), 9.6, 12.23, 98.90, -5.4, 7699.6867, 5.9, -82.72, _GLF_IDENTITY(736.159, (736.159) - length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(-1.6, (-1.6) - 0.0), min(_GLF_IDENTITY(-1.6, (-1.6) - 0.0), _GLF_IDENTITY(-1.6, (-1.6) - 0.0))), 1.2) != mat4x3(1332.6713, _GLF_IDENTITY(-28.50, mix(float(-28.50), float(_GLF_FUZZED(-9.7)), bool(false))), 46.68, -6599.6397, -393.600, _GLF_IDENTITY(74.94, (false ? _GLF_FUZZED(-0.5) : 74.94)), 7737.6987, 182.741, 94.32, 7933.4659, 60.03, -5.9)) ? -554.079 : -7527.3768)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED((2.0 + -18.51)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(-6.2)), bvec2(true, false))))[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))), (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(588.321), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(9.6)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
    break;
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)))).x)) | (buf[virtual_gid] = uint(subgroupAllEqual(read_val))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
