#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))))))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))) || (bool(bool(true))), bool(bvec4(_GLF_IDENTITY(false || (bool(bool(true))), true && (false || (bool(bool(true))))), false, false, true))))) && (_GLF_IDENTITY(false, true && (false)))))), true && (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))) && (_GLF_IDENTITY(false, true && (false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))))) || false) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || _GLF_IDENTITY((bool(bool(true))), ((bool(bool(true)))) && true))) && (_GLF_IDENTITY(false, true && (false)))) || false)))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)), _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) || false))))))), bool(bool(! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) || false))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(false, (false) || false) || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) && true)), false || (bool(bool(true))))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec2(true && (false), false)), false || (bool(bvec2(true && (false), false)))))), false || (_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false)))))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))))))))))))))), true && (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))), false, false)), ! (! (bool(bvec3((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))), false, false)))))))))))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec4(bvec3((false), true, false), true)))))))))) || false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) || false))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))))) && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, true && (false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((_GLF_IDENTITY(false, true && (false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) || false, bool(bvec4((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) || false, false, false, true))))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) || false, bool(bvec4((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) || false, false, false, true)))))) || false)))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))), bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))), true, true))) && (_GLF_IDENTITY(false, true && (false)))) || false))))))), bool(bool(! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(bool(bool(true)), false || (bool(_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool(true)), true, false), bvec3(bvec4(bvec3(bool(bool(true)), true, false), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(bool(bool(true)), true, false), bvec3(bvec4(bvec3(bool(bool(true)), true, false), false)))), false))))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(true)))), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) || false))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(_GLF_IDENTITY(bool(true), bool(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))), true && (_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))) && (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_IDENTITY(false, true && (false))))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_IDENTITY(false, true && (false))))))), (! ((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_IDENTITY(false, true && (false)))))))) && true)))))) && true)), false || (bool(bool(true))))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec2(true && (false), false)), false || (bool(bvec2(true && (false), false)))))), false || (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))))))), (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))))))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))))))), (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))))))))) || false))) || false))))))))))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))), true && (_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))) && (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_IDENTITY(false, true && (false))))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_IDENTITY(false, true && (false))))))), (! ((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_IDENTITY(false, true && (false)))))))) && true)))))) && true)), false || (bool(bool(true))))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec2(true && (false), false)), false || (bool(bvec2(true && (false), false)))))), false || (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))))))), (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))))))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))))))), (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))))))))) || false))) || false))))))))))))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))), true && (_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))) && (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_IDENTITY(false, true && (false))))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_IDENTITY(false, true && (false))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)))))), ((_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))))) || false)))))) && true)))))) && true)), false || (bool(bool(true))))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec2(true && (false), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))))), false || (bool(bvec2(true && (false), false)))))), false || (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))))), true))))), (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))))))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))) || false))))))))))), (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))))), ! (! (_GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (false))), (false || (_GLF_IDENTITY(false, true && (false)))) && true))))))))))))))) || false))) || false)))))))))))))))))), true && (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))))))))))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), bool(bool(bool(bvec4(true, false, true, true))))))), ! (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), bool(bool(bool(bvec4(true, false, true, true)))))))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), true, false, true))), (bool(true)) && true))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(false, ! (! (false))))))))) || false)))), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(false, ! (! (false))))))))) || false)))), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))))) && true)) && true))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), false || (bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool(true))))))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))) && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))))))), true && (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && true)))) && (_GLF_IDENTITY(false, true && (false))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), true, false, true))), (bool(true)) && true))), ! (! (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), true, false, true))), (bool(true)) && true))), (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), true, false, true))), (bool(true)) && true)))) || false)))))) && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || false)))), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) && true)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || false)))), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) && true)) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && _GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))) && (_GLF_IDENTITY(false, true && (false)))))), true && (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && _GLF_IDENTITY(true, ! (! (true))))))) && (_GLF_IDENTITY(false, true && (false))))))))))), false, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), true, false, true))), (bool(true)) && true))))) && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), _GLF_IDENTITY(false || (bool(bool(true))), ! (! (false || (bool(bool(true)))))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || false)))), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) && true)) && true))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))) && (_GLF_IDENTITY(false, true && (false)))))), true && (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && true)))) && (_GLF_IDENTITY(false, true && (false))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), (bool(true)) && true))))) && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || false)))), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), false || (bool(bool(true))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (false)))))), true && (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && true)))) && (_GLF_IDENTITY(false, true && (false))))))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), ! (_GLF_IDENTITY(! (bool(true)), ! (_GLF_IDENTITY(! (! (bool(true))), ! (! (! (! (bool(true)))))))))), true, false, true))), (bool(true)) && true))))) && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), ! (! ((bool(bool(true)))))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || false)))), (bool(bool(true))) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || false)))), (bool(bool(true))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || false)))), (bool(bool(true))) || false))))))), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))) && true)) && true))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && (_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))) && (_GLF_IDENTITY(false, true && (false)))))), true && (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && true)))) && (_GLF_IDENTITY(false, true && (false))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (false)))), bool(bvec2(! (_GLF_IDENTITY(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (false)))), false))))), _GLF_IDENTITY((true && (false)), _GLF_IDENTITY(bool(bvec4((true && (false)), false, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4((true && (false)), false, true, false)), bool(bvec2(bool(bvec4((true && (false)), false, true, false)), false)))), bool(bool(! (_GLF_IDENTITY(bool(bvec4((true && (false)), false, true, false)), bool(bvec2(bool(bvec4((true && (false)), false, true, false)), false)))))))))) && true))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool(true)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bool(true)), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bool(true)), false, true))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec3(bool(bool(true)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bool(true)), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bool(true)), false, true))), true))))))))), false || (_GLF_IDENTITY((bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool(true))))))))) && (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || _GLF_IDENTITY((bool(bool(true))), (_GLF_IDENTITY((bool(bool(true))), ! (! ((bool(bool(_GLF_IDENTITY(true, false || (true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)), false || (bool(bool(true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true)))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), false || (bool(bool(true))))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))))))))))), true && (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec3(bvec2(! (true), false), false))))))))), false || (bool(bool(true))))) && (_GLF_IDENTITY(false, true && (false)))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (gl_NumWorkGroups) / uvec3(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, min(1u, 1u))))) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) - 0u), 0u)) + uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u), ((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u)) - 0u)), 0u, 0u)))), max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (gl_NumWorkGroups) / uvec3(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, min(1u, 1u))))) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) - 0u), 0u)) + uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u), ((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u)) - 0u)), 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (gl_NumWorkGroups) / uvec3(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, min(1u, 1u))))) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) - 0u), 0u)) + uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u), ((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u)) - 0u)), 0u, 0u)))))) : _GLF_FUZZED((vec2(-5.0, -89.99) , uvec3(_GLF_IDENTITY(4996u, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) && true)) ? _GLF_FUZZED(37731u) : 4996u)), 98511u, 140551u))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))), injectionSwitch.x)))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED((-3.6 + 86.07)), _GLF_FUZZED(1.2)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3932.5012), _GLF_FUZZED((-6124.6018 * -94.38))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 0u) ^ (_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))))) * (1u ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((subgroup_id), uint(uvec4(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), max(_GLF_IDENTITY(0u ^ (subgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u ^ (subgroup_id) : _GLF_FUZZED(subgroup_id))), 0u ^ (subgroup_id))))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), max(_GLF_IDENTITY(0u ^ (subgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u ^ (subgroup_id) : _GLF_FUZZED(subgroup_id))), 0u ^ (subgroup_id))))), 0u ^ ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((subgroup_id), min(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id)))), _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))))), max(_GLF_IDENTITY(0u ^ (subgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u ^ (subgroup_id) : _GLF_FUZZED(subgroup_id))), 0u ^ (subgroup_id))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), max(_GLF_IDENTITY(0u ^ (subgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u ^ _GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))) : _GLF_FUZZED(subgroup_id))), 0u ^ (subgroup_id))))), ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), max(_GLF_IDENTITY(0u ^ (subgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u ^ (subgroup_id) : _GLF_FUZZED(subgroup_id))), 0u ^ (subgroup_id)))))) ^ 0u))) * (1u ^ 0u), min((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) * (1u ^ 0u), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) * (1u ^ 0u)))) - 0u)), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-61.79)), float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(6821.6272, 8554.3614, vec2(-157.437, 6822.6889))) : injectionSwitch)).y)), bool(true))))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u, _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))) + 0.0)))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) >> 0u) ^ _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u))), _GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id))), (subgroup_id)))), 1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) : _GLF_FUZZED(subgroup_local_id)))), 1u), (uvec4(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) + 0u)))), 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (subgroup_id)), 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), 1u), (uvec4(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (subgroup_id)), 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)), injectionSwitch.y))) << 0u), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), 1u)) | (uvec4(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(write_val))) : _GLF_FUZZED(write_val))))), (0u) >> 0u) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), 1u)))))), (uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-0.8, clamp(-0.8, -0.8, _GLF_IDENTITY(-0.8, min(-0.8, -0.8)))))), vec2(_GLF_FUZZED(-39.19), (injectionSwitch)[1]), bvec2(false, true))).y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) | (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))), 1u))) / uvec3(1u, 1u, 1u)))) << (uvec3(0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) | 0u))))), (true ? (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) | 0u))))) : _GLF_FUZZED(subgroup_local_id)))), 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))))), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 0u ^ (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))), 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)))))), uint(uvec3(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), (true ? uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))))))))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   return;
  }
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(91383) : _GLF_IDENTITY(4, min(4, 4)))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
