#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 vec2 _f0;
 mat2x4 _f1;
 float _f2;
 vec2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
} ;

struct _GLF_struct_12 {
 float _f0;
 float _f1;
 uint _f2;
} ;

struct _GLF_struct_11 {
 bool _f0;
 bvec3 _f1;
 uint subgroup_size;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 bvec3 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 bool _f1;
 mat4x2 _f2;
 uvec4 _f3;
 mat4 _f4;
 mat4x2 _f5;
 bool _f6;
} ;

struct _GLF_struct_8 {
 bool _f0;
 bvec3 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 int _f1;
 mat3 _f2;
 uvec2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_6 {
 bvec4 _f0;
 mat4x3 _f1;
 ivec3 _f2;
 vec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 bvec3 _f1;
 _GLF_struct_7 _f2;
 vec3 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 ivec2 _f1;
 mat4x2 _f2;
 uvec4 _f3;
 float _f4;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 bool _f1;
 mat3x2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 bool _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 bvec4 _f1;
 mat2x3 _f2;
 vec3 _f3;
 uvec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 bvec4 _f1;
 mat4 _f2;
 int _f3;
 uvec3 _f4;
 vec4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_5 {
 int _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_16 {
 _GLF_struct_5 _f0;
 mat3x4 _f1;
 _GLF_struct_10 _f2;
 uvec3 _f3;
 _GLF_struct_13 _f4;
 mat2 _f5;
 _GLF_struct_15 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_5(1, _GLF_struct_0(_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(1), max(_GLF_IDENTITY(ivec4(1), (ivec4(1)) << ivec4(0, 0, 0, 0)), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(37577) : _GLF_IDENTITY(1, (1) >> 0)))))))), bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), _GLF_IDENTITY(true, false || (true)), false)))))))), bool(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, ! (! (true))))))) && true)), mat4(1.0), 1, uvec3(1u), vec4(1.0), mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 0.0, 1.0, log(1.0)))))))), _GLF_struct_1(mat2(1.0), bvec4(true), mat2x3(1.0), vec3(1.0), uvec4(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(192633u) : 1u)))))), vec3(1.0)), _GLF_struct_2(ivec3(1), true, ivec2(1)), _GLF_struct_3(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), clamp(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), ~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), ~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), int(ivec3((1), (0 << _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))))))) ^ 0), _GLF_IDENTITY(1, (1) * 1))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), ~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) ^ 0), 1))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), clamp(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), clamp(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), ~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), ~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (false ? _GLF_FUZZED(-88518) : _GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), int(ivec2(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), 0)))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), clamp(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), ~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), ~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)))))), min(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), clamp((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))), ~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), ~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), clamp(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), ~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), ~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1), (false ? _GLF_FUZZED(40138) : _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1), _GLF_IDENTITY((clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)) | (clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)), (_GLF_IDENTITY((clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)) | (clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)), _GLF_IDENTITY(int(ivec2((clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)) | (clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)), 0)), ~ (~ (int(ivec2((clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)) | (clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)), 0))))))) ^ 0))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, int(int((1) ^ 0)))), 1)), clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, int(int((1) ^ 0)))), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, int(int((1) ^ 0)))), 1)), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, int(int((1) ^ 0)))), 1))) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, int(int((1) ^ 0)))), 1)))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, int(int((1) ^ 0)))), 1))))))) | 0)), min((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) * 1) ^ 0), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, 0 | (1))))))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, int(ivec2(1, 0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), (! (injectionSwitch.x < injectionSwitch.y)) || false))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false)), _GLF_IDENTITY(true, ! (! (true))), false, true)), (bool(bvec4((_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false)), _GLF_IDENTITY(true, ! (! (true))), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x < injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(8.4), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.5)), bvec2(true, false))).x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(8.4), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.5)), bvec2(true, false))).x < injectionSwitch.y))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(8.4), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.5)), bvec2(true, false))).x < injectionSwitch.y))))), false), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.4), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (true ? (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))[1]), (vec2(_GLF_FUZZED(8.4), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (true ? (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))[1])) - sin(vec2(0.0, 0.0))), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.5)), bvec2(true, false))).x < injectionSwitch.y))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(8.4), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.5)), bvec2(true, false))).x < injectionSwitch.y))))), false), false))))), bool(bool(! (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(8.4), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.5)), bvec2(true, false))).x < injectionSwitch.y))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(8.4), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.5)), bvec2(true, false))).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(8.4), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.5)), bvec2(true, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(8.4), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.5)), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(8.4), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.5)), bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(8.4), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.5)), bvec2(true, false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(8.4), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.5)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)))).x < injectionSwitch.y)))))))), false), false)))))))))))))))) ? ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (1) ^ 0), 1), (clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (1) ^ 0), 1)) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(81405))), (1) ^ 0), 1))) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))) | 0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(81405))), (1) ^ 0), 1))) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))) | 0, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(81405))), (1) ^ 0), 1))) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))) | 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(81405))), (1) ^ 0), 1))) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))) | 0, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(81405))), (1) ^ 0), 1))) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))) | 0 : _GLF_FUZZED(14824))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)), 0 ^ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-27566) : _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-98311) : 1))))))))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ 0, min((_GLF_IDENTITY(1, (1) | 0)) ^ 0, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(65919) : _GLF_IDENTITY(1, min(1, 1))))) * 1)) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-53266), (_GLF_IDENTITY(_GLF_FUZZED(-53266), (_GLF_FUZZED(-53266)) - 0)) << 0)), ~ (~ ((true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-53266), (_GLF_IDENTITY(_GLF_FUZZED(-53266), (_GLF_FUZZED(-53266)) - 0)) << 0)))))), 0)), 0))))), 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))) | (1))) : _GLF_FUZZED(ivec2(-40870, 60695))), min((_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, ! (! (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, ! (! (((injectionSwitch.x < injectionSwitch.y)) && true))))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, ! (! (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, ! (! (((injectionSwitch.x < injectionSwitch.y)) && true))))))))))))))))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(vec2(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), (true ? vec2(mat2(injectionSwitch, 1.0, 1.0)) : _GLF_FUZZED(vec2(1.7, -219.591)))))))).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))), true))))))))) ? ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) ^ 0), 1))), _GLF_IDENTITY(_GLF_IDENTITY(clamp((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, _GLF_IDENTITY((1) ^ 0, int(ivec2((1) ^ 0, 0)))))), _GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)))), max(clamp((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)))), clamp((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1)), min(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1)), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1))))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 ^ (_GLF_IDENTITY(1, (1) ^ 0))), 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, _GLF_IDENTITY((1) ^ 0, int(ivec2((1) ^ 0, 0)))))), _GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)))), max(clamp((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)))), clamp((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1)), min(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1)), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1))))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 ^ (_GLF_IDENTITY(1, (1) ^ 0))), 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, _GLF_IDENTITY((1) ^ 0, int(ivec2((1) ^ 0, 0)))))), _GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)))), max(clamp((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)))), clamp((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1)), min(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1)), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1))))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 ^ (_GLF_IDENTITY(1, (1) ^ 0))), 1)))))), (_GLF_IDENTITY(clamp((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, _GLF_IDENTITY((1) ^ 0, int(ivec2((1) ^ 0, 0)))))), _GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)))), max(clamp((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)))), clamp((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1)), min(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1)), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0))), 1))))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 ^ (_GLF_IDENTITY(1, (1) ^ 0))), 1))))))) - 0)) ^ 0)) << 0)) | (1))) : _GLF_FUZZED(ivec2(-40870, 60695))), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(180.061)), float(injectionSwitch.y), bool(true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), false || (! ((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, (true) || false) && ((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), false || (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-137.346, 2.1)) : injectionSwitch)).y)))), false || (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), ! (! ((injectionSwitch.x < injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) < injectionSwitch.y))))), true, false, true)))))))) ? ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-76236) : 1)), clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), ((1)) * 1), (1))) ^ 0), 1))), clamp((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))) ^ 0, min((1) ^ 0, (1) ^ 0))), 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), 0 | (int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), 0 | (int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)))))), 0 ^ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, clamp((1) ^ 0, (1) ^ 0, (1) ^ 0))), 1))), 0 | (int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))))))) | (int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))), 0 | (int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1))), _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(bitfieldReverse(-68224)))) ^ 0), 1)))))) / _GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1))), _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(bitfieldReverse(-68224)))) ^ 0), 1)))))) / _GLF_IDENTITY(1, 0 ^ (1)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(5), int(5))))), 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1))), _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(bitfieldReverse(-68224)))) ^ 0), 1)))))) / _GLF_IDENTITY(1, 0 ^ (1))) - 0)) - (0 >> _GLF_IDENTITY(int(1), int(1)))))))) | (1))) : _GLF_FUZZED(ivec2(-40870, 60695)))))), true, mat3x2(1.0), bvec2(true)), _GLF_struct_4(_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), ivec2(1), mat4x2(1.0), _GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), 1.0), bvec4(true)), mat3x4(1.0), _GLF_struct_10(_GLF_struct_6(bvec4(true), mat4x3(1.0), ivec3(1), _GLF_IDENTITY(vec3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(1.0) : _GLF_FUZZED(vec3(8.8, 0.3, 1560.5680)))), 1u), bvec3(true), _GLF_struct_7(bvec3(true), 1, mat3(1.0), uvec2(1u), mat2x4(1.0)), vec3(1.0), _GLF_struct_8(true, bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))))), false, true)))))))), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u)))), ((_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u, 1u) * (uvec2(1u)), uvec2(1u, 1u) * (uvec2(1u, 1u) * (uvec2(1u))))))) | ((_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u)))))), (_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u)))))), ~ (~ ((uvec2(1u))))) >> uvec2(0u, 0u))), _GLF_struct_9(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, abs(1.0)))), 1.0))), mix(vec2(_GLF_FUZZED(-4.4), _GLF_FUZZED(-1771.2041)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(min((vec2(1.0))[0], (vec2(1.0))[0]), (min((vec2(1.0))[0], (vec2(1.0))[0])) + 0.0)), _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))[1], min(_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))[1], ((vec2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))[1]) + 0.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))[1], float(mat2x3((vec2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))[_GLF_IDENTITY(1, 0 | (1))], 1.0, 1.0, 0.0, 0.0, 0.0)))))), vec2(mat4(_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], clamp(_GLF_IDENTITY((vec2(1.0))[0], min((vec2(1.0))[0], (vec2(1.0))[0])), (vec2(1.0))[0], (vec2(1.0))[0])), (vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1.0) : _GLF_FUZZED(9736.3448))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))), max((1.0) / round(length(normalize(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 1.0)), 1.0, 1.0)))), _GLF_IDENTITY((1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))), ((1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) / 1.0))))))[1]), vec2(mat3(vec2((vec2(1.0))[0], (vec2(_GLF_IDENTITY(1.0, (1.0) / round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) - 0.0)))))[1]), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0)))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6423.6256) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / exp(0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(-5447.8671)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) - 0.0), dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, log(1.0), sqrt(_GLF_IDENTITY(tan(0.0), 1.0 * (tan(0.0)))), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0)), max(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0)))), 0.0, 1.0))), bvec2(true, true))), vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(-4.4), _GLF_FUZZED(-1771.2041)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], min((vec2(1.0))[0], (vec2(1.0))[0])), _GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))[1], min(_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))], ((vec2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(54.08) : 1.0)))))))))[1]) + 0.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))[1], float(mat2x3((vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(smoothstep(fract(5169.1821), 0.5, -990.728)) : (1.0))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))[1], 1.0, 1.0, 0.0, 0.0, 0.0)))))), vec2(mat4(_GLF_IDENTITY(vec2((vec2(1.0))[0], (vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))), max((1.0) / round(length(normalize(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), mix(float(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-898.145)), bool(false))), 1.0)), 1.0, 1.0)))), _GLF_IDENTITY((1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))), ((1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) / 1.0))))))[1]), vec2(mat3(vec2((vec2(1.0))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) / round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))))), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(1.0, (1.0) / round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))))))))[1]), _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0)))), 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), tan(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec3(0.0, 1.0, 0.0)), max(dot(vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(asinh(368.791)))), 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(101.423) : dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), mat3(1.0) * (vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0))), vec3(0.0, 1.0, 0.0)))) : _GLF_FUZZED(3180.0883)))))), 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, log(1.0), _GLF_IDENTITY(sqrt(tan(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(sqrt(tan(0.0)), 1.0, 0.0), mix(vec3(_GLF_FUZZED(-410.272), (vec3(sqrt(tan(0.0)), 1.0, 0.0))[1], (vec3(sqrt(tan(0.0)), 1.0, 0.0))[2]), vec3((vec3(sqrt(tan(0.0)), 1.0, 0.0))[0], _GLF_FUZZED(-44.92), _GLF_FUZZED(-458.718)), bvec3(true, false, false)))), min(float(_GLF_IDENTITY(vec3(sqrt(tan(0.0)), 1.0, 0.0), mix(vec3(_GLF_FUZZED(-410.272), (vec3(sqrt(tan(0.0)), 1.0, 0.0))[1], (vec3(sqrt(tan(0.0)), 1.0, 0.0))[2]), vec3((vec3(sqrt(tan(0.0)), 1.0, 0.0))[0], _GLF_FUZZED(-44.92), _GLF_FUZZED(-458.718)), bvec3(true, false, false)))), float(_GLF_IDENTITY(vec3(sqrt(tan(0.0)), 1.0, 0.0), mix(vec3(_GLF_FUZZED(-410.272), (vec3(sqrt(tan(0.0)), 1.0, 0.0))[1], (vec3(sqrt(tan(0.0)), 1.0, 0.0))[2]), vec3((vec3(sqrt(tan(0.0)), 1.0, 0.0))[0], _GLF_FUZZED(-44.92), _GLF_FUZZED(-458.718)), bvec3(true, false, false))))))), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0)), max(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0)))), 0.0, 1.0))), bvec2(true, true))), vec2(vec2(_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(-4.4), _GLF_FUZZED(-1771.2041)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], min((vec2(1.0))[0], (vec2(1.0))[0])), _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))[1], min(_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))[1], ((vec2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))[1]) + 0.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))[1], float(mat2x3((vec2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0))))))))[1], 1.0, 1.0, 0.0, 0.0, 0.0)))))), vec2(mat4(_GLF_IDENTITY(vec2((vec2(1.0))[0], (vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))), max((_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, sqrt(1.0), 0.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) / round(length(normalize(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * cos(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))))), 1.0))), 1.0)), 1.0, 1.0)))), _GLF_IDENTITY((1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))), ((1.0) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED(vec2(-8840.0558, 620.117).t), (normalize(vec3(1.0, 1.0, 1.0)))[2]), vec3(_GLF_FUZZED(83.93), (normalize(vec3(1.0, 1.0, 1.0)))[1], _GLF_FUZZED(-9.5)), bvec3(false, true, false)))))) / 1.0))))))[1]), vec2(mat3(vec2((vec2(1.0))[0], (vec2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))[1]), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0)))), 1.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), clamp(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), float(mat2x3(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(((385.090 + 4.8) * -5.4))), float(1.0), bool(true))), 0.0))))), 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), clamp(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), float(mat2x3(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(((385.090 + 4.8) * -5.4))), float(1.0), bool(true))), 0.0))))), 1.0, 1.0, 1.0), (mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), clamp(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), float(mat2x3(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(((385.090 + 4.8) * -5.4))), float(1.0), bool(true))), 0.0))))), 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? transpose(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), clamp(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), float(mat2x3(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(((385.090 + 4.8) * -5.4))), float(1.0), bool(true))), 0.0))))), 1.0, 1.0, 1.0), (mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), clamp(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), float(mat2x3(max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(((385.090 + 4.8) * -5.4))), float(1.0), bool(true))), 0.0))))), 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat4(-68.94, 1.1, -40.87, 315.862, 604.314, -13.09, 677.129, -5.2, 35.25, 3718.3788, -68.17, 9.5, -484.126, -4.3, -54.85, -796.067))))))), 0.0, 0.0, 1.0, 0.0, 1.0, log(1.0), sqrt(tan(0.0)), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0)), max(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0)), determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat3(6.2, -1.0, 274.588, 668.690, 205.547, 57.38, 382.507, -219.853, 2337.9586)) : mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0)))))), 0.0, 1.0))), bvec2(true, true)))))), 0.0, 1.0))), true, mat4x2(1.0), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ (_GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(1u, 0u ^ (1u)), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(0u, (0u) / 1u) ^ (_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))) : _GLF_IDENTITY(1u, 0u ^ (1u)), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)), clamp(min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))))), 0u ^ (_GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)), clamp(min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))))), 0u ^ (_GLF_FUZZED(subgroup_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)), clamp(min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))))), 0u ^ (_GLF_FUZZED(subgroup_id))))) : _GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), (0u ^ (1u)) | (0u ^ (1u)))), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ (_GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), 0u ^ ((1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ (1u))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ (1u))) ^ 0u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ (1u))) ^ 0u)))) / 1u)) << 0u), _GLF_IDENTITY(uint(uvec4(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) >> 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)), 0u ^ (1u)), 1u, 1u, 0u)), 0u ^ (uint(uvec4(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))), ((_GLF_FUZZED(subgroup_id))) >> 0u)) : _GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u, 0u)))))))))), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), mat4x2(1.0), true)), uvec3(1u), _GLF_struct_13(_GLF_struct_11(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), ! (! (! (! (! (true))))))))), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(false, bool(bool(false))))), bvec3(bvec4(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))) && true, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))) && true, true, true), false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))) && true, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))) && true, true, true), false)))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))) && true, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))) && true, true, true), false)))), false), true, false))))))))), true)))), gl_SubgroupSize), bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_struct_12(1.0, 1.0, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), _GLF_IDENTITY((1u), max((1u), _GLF_IDENTITY((1u), ((1u)) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(0u, 0u | (0u)), 0u)))))) + 0u))))))) + 0u, uint(uvec3((1u) + 0u, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u))) | (0u)))))), 1u)))), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(_GLF_IDENTITY(mat2(-43.97, -4.3, -4.1, -4806.5334), mat2(1.0) * (mat2(-43.97, -4.3, -4.1, -4806.5334)))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(-43.97, -4.3, -4.1, -4806.5334)), (true ? true ? mat2(1.0) : _GLF_FUZZED(mat2(-43.97, -4.3, -4.1, -4806.5334)) : _GLF_FUZZED(mat2(5.9, -2.1, 79.13, 4969.1097))))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(transpose(_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(-43.97, -4.3, -4.1, -4806.5334)), (true ? true ? mat2(1.0) : _GLF_FUZZED(mat2(-43.97, -4.3, -4.1, -4806.5334)) : _GLF_FUZZED(mat2(5.9, -2.1, 79.13, 4969.1097))))), mat2(mat2x3(transpose(_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(-43.97, -4.3, -4.1, -4806.5334)), (true ? true ? mat2(1.0) : _GLF_FUZZED(mat2(-43.97, -4.3, -4.1, -4806.5334)) : _GLF_FUZZED(mat2(5.9, -2.1, 79.13, 4969.1097))))))))), (_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(transpose(_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(-43.97, -4.3, -4.1, -4806.5334)), (true ? true ? mat2(1.0) : _GLF_FUZZED(mat2(-43.97, -4.3, -4.1, -4806.5334)) : _GLF_FUZZED(mat2(5.9, -2.1, 79.13, 4969.1097))))), mat2(mat2x3(transpose(_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(-43.97, -4.3, -4.1, -4806.5334)), (true ? true ? mat2(1.0) : _GLF_FUZZED(mat2(-43.97, -4.3, -4.1, -4806.5334)) : _GLF_FUZZED(mat2(5.9, -2.1, 79.13, 4969.1097))))))))), (mat2(1.0) * (_GLF_IDENTITY(transpose(_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(-43.97, -4.3, -4.1, -4806.5334)), (true ? true ? mat2(1.0) : _GLF_FUZZED(mat2(-43.97, -4.3, -4.1, -4806.5334)) : _GLF_FUZZED(mat2(5.9, -2.1, 79.13, 4969.1097))))), mat2(mat2x3(transpose(_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(-43.97, -4.3, -4.1, _GLF_IDENTITY(-4806.5334, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(1.1) : -4806.5334)))), (true ? true ? mat2(1.0) : _GLF_FUZZED(mat2(-43.97, -4.3, -4.1, -4806.5334)) : _GLF_FUZZED(mat2(5.9, -2.1, 79.13, 4969.1097)))))))))) - mat2(0.0, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0))))))), _GLF_struct_15(_GLF_struct_14(_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), mat2x4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(28.12)))))), 1.0, vec2(1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))))))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))))))) || false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & (true ? ivec4(-68047, _GLF_IDENTITY(72298, clamp(72298, _GLF_IDENTITY(72298, _GLF_IDENTITY(_GLF_IDENTITY((72298) | (72298), ((72298) | (72298)) / 1), (_GLF_IDENTITY((72298) | (72298), ((72298) | (72298)) / 1)) ^ 0)), 72298)), -1726, -37283).a : -23417))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.1), _GLF_FUZZED(9959.6794)), bvec2(false, false))).x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9826.8536) : injectionSwitch.x)))) : _GLF_FUZZED(26.24))) > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))) && true), bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true && ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), true && ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), true && ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))) && true), bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true && ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), true && ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), true && ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), false, true))), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)))))), false, false, true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))) && true))), _GLF_IDENTITY(false, false || (false)))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))))), false)))))), ((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))))), false))))))) || false)), false || (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(-2162.1408)), bool(false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)))))), false, false, true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y) || false), ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))))))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false)))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) - 0.0)))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true)))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), ! (! (bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))))), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), ! (! (bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), ! (! (bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))))), false))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), ! (! (bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))))), false)))) && true))))))))), ((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), (float(vec3(injectionSwitch.y, 0.0, 1.0))) + sqrt(0.0))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, tan(0.0), 1.0, 0.0, 1.0, sqrt(0.0)))), 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))) > injectionSwitch.y)))))) && true))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, false))), true && (! (bool(bvec4(true, false, false, false))))))))) && true)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true))))), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false)))))))))))))), false))))))) || false)))), (_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))) && true))), false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(true, ! (! (true))), false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), max(vec3(injectionSwitch.y, 0.0, 1.0), _GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (vec3(injectionSwitch.y, 0.0, 1.0)) * mat3(1.0))))), min(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), max(vec3(injectionSwitch.y, 0.0, 1.0), _GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (vec3(injectionSwitch.y, 0.0, 1.0)) * mat3(1.0))))), float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), max(vec3(injectionSwitch.y, 0.0, 1.0), _GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (vec3(injectionSwitch.y, 0.0, 1.0)) * mat3(1.0))))))))))))), false, true, false)))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), max(vec3(injectionSwitch.y, 0.0, 1.0), _GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (vec3(injectionSwitch.y, 0.0, 1.0)) * mat3(1.0))))), min(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), max(vec3(injectionSwitch.y, 0.0, 1.0), _GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (vec3(injectionSwitch.y, 0.0, 1.0)) * mat3(1.0))))), float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), max(vec3(injectionSwitch.y, 0.0, 1.0), _GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (vec3(injectionSwitch.y, 0.0, 1.0)) * mat3(1.0))))))))))))), false, true, false)))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, round(length(normalize(vec2(1.0, 1.0)))) * (1.0))) * (injectionSwitch)))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)))))), false, false, true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), transpose(transpose(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))), (float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), transpose(transpose(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)))))) + 0.0)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, false, true))))))))))))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false || (false)))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true)))))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true)))))))))), bool(bvec3(! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true)))))))))), false, true))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))) && true)), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))))), false)))))), ((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, ((! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) || false)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))))))), false))))))) || _GLF_IDENTITY(false, (false) || false))), false || (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(-2162.1408)), bool(false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(-2162.1408)), bool(false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0), (mat3(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec2(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))), false)))) || false), bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(vec2(vec4(mat2(1.0) * (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), 0.0, 0.0)), mix(vec2(_GLF_FUZZED(1.0), _GLF_FUZZED(2.3)), vec2((vec2(vec4(mat2(1.0) * (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), 0.0, 0.0)))[0], (vec2(vec4(mat2(1.0) * (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), 0.0, 0.0)))[1]), bvec2(true, true)))))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), mat2(1.0) * ((vec2(1.0, 1.0)) * mat2(1.0))))) + vec2(0.0, 0.0)) * (injectionSwitch)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-10.24)), bool(false))), 1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)))))), false, false, true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) : _GLF_FUZZED(361.186))) > injectionSwitch.y)))) || false), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y) || false), ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))) || false))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))) || false))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true), true))))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))))))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.5), _GLF_FUZZED(-79.41)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false)))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) - 0.0)))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) - 0.0)))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) - 0.0)))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))), false || (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) - 0.0)))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) - 0.0)))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true)))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.4)), bool(false))))) && true))))), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true, true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true, true)))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true, true)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), ! (! (bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))), false || ((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))))))), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), ! (! (bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))), true, true, false)))))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0))) - 0.0)) > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), true))))))))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)), (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec4((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true, true, false)))))))))), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(-7.2)) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.3)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(-7.2)) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.3)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))))), false))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), true))))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), ! (! (bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), ! (! (bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))), bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), ! (! (bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))))))) || false))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(injectionSwitch), vec2(_GLF_IDENTITY(mat4(vec2(injectionSwitch), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0), (true ? mat4(vec2(injectionSwitch), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0) : _GLF_FUZZED(mat4(-6.3, 853.772, 3205.6065, 1.3, -7.6, 24.09, 1702.7104, 893.676, 879.620, 7.4, -8117.3752, -5.1, -6.5, -10.49, -20.75, -2.6)))))))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true))))))))))), false)))) && true))))))))), ((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), (float(vec3(injectionSwitch.y, 0.0, 1.0))) + sqrt(0.0))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, tan(0.0), 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, sin(0.0), abs(1.0)))), 1.0, sqrt(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, abs(1.0))), clamp(float(vec2(0.0, abs(1.0))), float(vec2(0.0, abs(1.0))), float(vec2(0.0, abs(1.0)))))))))), 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.9)), bool(false))), 0.0)), 0.0)), 0.0))) > injectionSwitch.y)))))) && true))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-4.0) : (injectionSwitch.x)))) > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(true, false, false, false)))), ! (! (bool(bool(bool(bvec4(true, false, false, false)))))))), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, false))), _GLF_IDENTITY(true && (! (bool(bvec4(true, false, false, false)))), bool(bvec2(_GLF_IDENTITY(true && (! (bool(bvec4(true, false, false, false)))), true && (true && (! (bool(bvec4(true, false, false, false)))))), false)))))))) && true)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, log(1.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(cos(0.0), 1.0)), dot(vec2(0.0, 0.0), vec2(cos(0.0), 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) && true)) || false), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true))))), _GLF_IDENTITY(false, true && (false)), true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(92.06) : injectionSwitch.x)) > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false)))))))))))))), false))))))) || false))))) || false)))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.2)), bool(false))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.2)), bool(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.2)), bool(false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.2)), bool(false)))))))), true, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.2)), bool(false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.2)), bool(false)))))))), true, false, false)))))))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(_GLF_IDENTITY(-8.2, min(-8.2, -8.2)))), bool(_GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.2)), bool(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.2)), bool(false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.2)), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.2)), bool(false))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-8.2)), bool(false)))))) && true)))))), true, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.2)), bool(false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.2)), bool(false)))))))), true, false, false)))))))))))))))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(vec2(max(injectionSwitch.y, injectionSwitch.y), 0.0))))))))
                  barrier();
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true))))))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), false, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
        }
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false, false))))));
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1])).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true)) && true)))))))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) << 0)), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) << 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) << 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 else
                  {
                  }
                 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))) || false))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(_GLF_IDENTITY(mat4(exp(0.0), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(58.22)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, abs(1.0), 1.0, 1.0, exp(0.0), 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), cos(0.0), 0.0, sqrt(1.0)))), 1.0), transpose(transpose(_GLF_IDENTITY(mat4(exp(0.0), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(58.22)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, abs(1.0), 1.0, 1.0, exp(0.0), 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), cos(0.0), 0.0, sqrt(1.0)))), 1.0), mat4(1.0) * (mat4(exp(0.0), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(58.22)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, abs(1.0), 1.0, 1.0, exp(0.0), 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), cos(0.0), 0.0, sqrt(1.0)))), 1.0))))))))), float(mat4x2(_GLF_IDENTITY(float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(8598.6876) : _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(2.3))))))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(exp(0.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-373.415) : 1.0)), sin(0.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), max(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(exp(0.0), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 1.0)))), float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY((-737.651 / 6812.6527), float(mat3(_GLF_IDENTITY((-737.651 / 6812.6527), ((-737.651 / 6812.6527)) - 0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0))))), float(0.0), bool(true))), injectionSwitch.x), determinant(mat4(exp(0.0), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(_GLF_IDENTITY(mat4(exp(0.0), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(58.22)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, abs(1.0), 1.0, 1.0, exp(0.0), 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), cos(0.0), 0.0, sqrt(1.0)))), 1.0), transpose(transpose(_GLF_IDENTITY(mat4(exp(0.0), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(58.22)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, abs(1.0), 1.0, 1.0, exp(0.0), 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), cos(0.0), 0.0, sqrt(1.0)))), 1.0), mat4(1.0) * (mat4(exp(0.0), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(58.22)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, abs(1.0), 1.0, 1.0, exp(0.0), 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), cos(0.0), 0.0, sqrt(1.0)))), 1.0))))))))), float(mat4x2(_GLF_IDENTITY(float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(8598.6876) : _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(2.3))))))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(exp(0.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-373.415) : 1.0)), sin(0.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), max(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(exp(0.0), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0), (mat4x2(1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 1.0)))), float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY((-737.651 / 6812.6527), float(mat3(_GLF_IDENTITY((-737.651 / 6812.6527), ((-737.651 / 6812.6527)) - 0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0))))), float(0.0), bool(true))), injectionSwitch.x), determinant(mat4(exp(0.0), 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), bool(true)))), (injectionSwitch.x) / 1.0) > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_IDENTITY(false, false || (false)), true, false)), _GLF_IDENTITY(! (! (bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), true, false)))), false || (! (! (bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(false, (false) && true), true, false))))))))), bool(bool(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((((injectionSwitch.x > injectionSwitch.y)))), (! ((((injectionSwitch.x > injectionSwitch.y))))) && true))) || false), false, true, false)), _GLF_IDENTITY(! (! (bool(bvec4(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))) || false)), false, true, false)))), false || (! (! (bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), true, false)))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_IDENTITY(false, false || (false)), true, false)), ! (! (bool(bvec4(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_IDENTITY(false, false || (false)), true, false))))), _GLF_IDENTITY(! (! (bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false, true, false)))), false || (! (! (bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(false, (false) && true), true, false))))))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, true))))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false), false, true, false)), _GLF_IDENTITY(! (! (bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, false)))), false || (! (! (bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(false, (false) && true), true, false))))))))))))), (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(0.0), 1.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0)))) - tan(vec2(0.0, 0.0))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_IDENTITY(false, false || (false)), true, false)), _GLF_IDENTITY(! (! (bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false, true, false)))), false || (! (! (bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, bool(bool(true))), false))))))))), bool(bool(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false)), false, true, false)), _GLF_IDENTITY(! (! (bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, false)))), false || (! (! (bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(false, (false) && true), true, false)))))))))))))) || false)))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false)))))
                barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))))) || _GLF_IDENTITY(false, bool(bvec2(false, false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0))).y))))
            barrier();
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true));
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), (injectionSwitch.x < injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), min(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(5.8)), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(8378.8064)), float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), max(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), bool(true))), min(float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))) && true))))))
              barrier();
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(float(false)), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(7.1)), bvec2(true, false))))) - vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(7.4)), bool(false))), 0.0)).x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(float(false)), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(7.1)), bvec2(true, false))))) - vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(7.4)), bool(false))), 0.0)).x < injectionSwitch.y)))), bool(bool((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(float(false)), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(7.1)), bvec2(true, false))))) - vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(7.4)), bool(false))), 0.0)).x < injectionSwitch.y))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(float(false)), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(7.1)), bvec2(true, false))))) - vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(7.4)), bool(false))), 0.0)).x < injectionSwitch.y)))), bool(bool((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(float(false)), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(7.1)), bvec2(true, false))))) - vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(7.4)), bool(false))), 0.0)).x < injectionSwitch.y))))))), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(68143u) : _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u)))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   else
    {
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id))) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 0u))), 0u), max(uvec4(subgroup_id, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 0u, 1u, 0u), clamp(uvec4(subgroup_id, 0u, 1u, 0u), uvec4(subgroup_id, 0u, 1u, 0u), uvec4(subgroup_id, 0u, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))), (uvec4(subgroup_id, 0u, 1u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)))) * _GLF_struct_replacement_16._f4._f0.subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false))))))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))), subgroup_local_id));
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), 1))), (0 + (1)) << 0)), min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(1, (1) | 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec3(0, 0, 0) | (ivec3((_GLF_IDENTITY(1, (1) | 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))) * 1)) | (1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0)) + _GLF_IDENTITY((1), clamp((1), (1), (1))))))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && _GLF_IDENTITY((bool(bool(false))), bool(bvec3((bool(bool(false))), true, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
      {
      }
     else
      {
       atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(64, min(64, 64)), 0);
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))))))))
          barrier();
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5859.9657), _GLF_FUZZED(-7.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (true))))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (true))))) && true)), ! (! (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (true))))) && true))))), false, false)), (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (true))))) && true)), ! (! (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (true))))) && true))))), false, false))) && true)))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-1.9), mix(float(_GLF_FUZZED(-1.9)), float(_GLF_FUZZED(2.2)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(2.3, cos(0.0) * (2.3))), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false), true, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false), true, false))))))))))))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), mix(float(_GLF_FUZZED(vec4(-7.7, 4958.7292, 244.224, -367.294).a)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0)))))))))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               else
                {
                }
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(int(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))), (int(int(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))))) | (int(int(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))))))), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))) != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))) && true))))))));
            }
           for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, clamp(3, 3, 3)))), 3))), int(3))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((0 ^ 1) & _GLF_IDENTITY((1 & 1), clamp((1 & 1), _GLF_IDENTITY((1 & 1), ~ (~ ((1 & 1)))), (1 & 1))), min((0 ^ 1) & (1 & 1), (0 ^ 1) & _GLF_IDENTITY((1 & 1), min(_GLF_IDENTITY((1 & 1), (true ? (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) << 0)), (~ (_GLF_IDENTITY(1, (1) << 0))) << 0))) & 1) : _GLF_FUZZED(_injected_loop_counter))), (1 & 1))))))); _injected_loop_counter ++)
            {
             buf[virtual_gid] = uint(subgroupAllEqual(read_val));
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.y) / 1.0)), bool(true)))))))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
