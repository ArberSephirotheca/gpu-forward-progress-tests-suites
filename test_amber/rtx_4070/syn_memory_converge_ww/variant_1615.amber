#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))), bool(bool(_GLF_IDENTITY(((! (false))), bool(bool(((! (false))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)))))) || false), ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))) || false), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false))))))))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))) || false), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false)))))))))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, false || (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))) || false)))))) || false), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || _GLF_IDENTITY((false), false || ((false))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || _GLF_IDENTITY((false), false || ((false))))))))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || _GLF_IDENTITY((false), false || ((false))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || _GLF_IDENTITY((false), false || ((false))))))))) && true)))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || _GLF_IDENTITY((false), false || ((false))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || _GLF_IDENTITY((false), false || ((false))))))))) && true))))) && true))))))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec4(bool(bool(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))), false, true, false)))))))))), true && ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))), false, true, false)))))))))))) || false), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false))))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))))) || _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false)))))) && true))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))))), ! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, false || (false))))), (! ((! (_GLF_IDENTITY(false, false || (false)))))) && true))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), false || (! (! (_GLF_IDENTITY(false, false || (false))))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))))) && true)) && true))))))))))), true && ((_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false)))))) && true))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))))), ! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, false || (false))))), (! ((! (_GLF_IDENTITY(false, false || (false)))))) && true))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), false || (! (! (_GLF_IDENTITY(false, false || (false))))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))))) && true)) && true)))))))))))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) || false))))) || false))))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-597.818))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y, (true ? injectionSwitch.y : _GLF_FUZZED(193.919)))))))), ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-597.818))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y : _GLF_FUZZED(193.919))))))))) && true))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || false), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x)), min(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-9.6) : _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0))), 1.0)))), ((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-9.6) : _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0))), 1.0))))) - 0.0)) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u)), 0u ^ (min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u))))) * workgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u)), 0u ^ (min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u)), 0u ^ (min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u)), 0u ^ (min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u)), 0u ^ (min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u)))))) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u)), 0u ^ (min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u)), 0u ^ (min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) | 0u)))))) + 0u)))) | 0u) * workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), clamp(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), clamp(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), clamp(uint(subgroup_id * subgroup_size), _GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), clamp(uint(subgroup_id * subgroup_size), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), uint(subgroup_id * subgroup_size))), uint(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), 0u | (uint(uint(subgroup_id))))) * subgroup_size), clamp(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), uint(uvec3(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 1u), uint(_GLF_ONE(1.0, injectionSwitch.y))))), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), 0u | (uint(uint(subgroup_id))))) * subgroup_size), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_id)), 0u | (uint(uint(subgroup_id)))), max(_GLF_IDENTITY(uint(uint(subgroup_id)), 0u | (uint(uint(subgroup_id)))), _GLF_IDENTITY(uint(uint(subgroup_id)), 0u | (uint(uint(subgroup_id))))))) * subgroup_size), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), 0u | (uint(uint(subgroup_id))))) * subgroup_size), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(24577u) : _GLF_IDENTITY(uint(subgroup_id * subgroup_size), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), (_GLF_IDENTITY(false ? _GLF_FUZZED(24577u) : _GLF_IDENTITY(uint(subgroup_id * subgroup_size), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(24577u) : _GLF_IDENTITY(uint(subgroup_id * subgroup_size), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), min(false ? _GLF_FUZZED(24577u) : _GLF_IDENTITY(uint(subgroup_id * subgroup_size), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), false ? _GLF_FUZZED(24577u) : _GLF_IDENTITY(uint(subgroup_id * subgroup_size), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))))))))) - 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(197964u) : subgroup_id))) / 1u) * subgroup_size), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size), _GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), uint(subgroup_id * subgroup_size)), 1u * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), min(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), uint(subgroup_id * subgroup_size), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), uint(uint(uint(subgroup_id * subgroup_size))))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) | 0u), uint(_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size), uint(subgroup_id * subgroup_size)), (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | 0u), clamp(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), 0u ^ (_GLF_IDENTITY(uint(subgroup_id * subgroup_size), (true ? uint(subgroup_id * subgroup_size) : _GLF_FUZZED(subgroup_local_id))))), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u)))), uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(169533u))) * subgroup_size))))))), clamp(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), _GLF_IDENTITY(((~ (subgroup_size))) | ((~ (subgroup_size))), (((~ (subgroup_size))) | ((~ (subgroup_size)))) << 0u)))), uint(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-837.918), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.2)), bvec2(true, _GLF_IDENTITY(false, (false) && true)))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0])))) * 1.0), injectionSwitch[_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, int(ivec2(0, 1))))])))).y)))))) * subgroup_size), uint(subgroup_id * subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)))) * subgroup_size), _GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u * _GLF_IDENTITY((_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY((clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), (true ? (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) : _GLF_FUZZED(subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))))), ~ (~ ((_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY((clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), (true ? (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) : _GLF_FUZZED(subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))))))), clamp(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))))), uint(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(0.0, 0.0) + (vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(0.0, 0.0) + (vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))))))) * subgroup_size), uint(subgroup_id * subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)))) * subgroup_size), _GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u * _GLF_IDENTITY((_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY((clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), (true ? (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) : _GLF_FUZZED(subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))))), ~ (~ ((_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY((clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), (true ? (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) : _GLF_FUZZED(subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))))))), clamp(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))))), uint(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(0.0, 0.0) + (vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(0.0, 0.0) + (vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))))))) * subgroup_size), uint(subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)))) * subgroup_size), _GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u * _GLF_IDENTITY((_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY((clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), (true ? (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) : _GLF_FUZZED(subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))))), ~ (~ ((_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY((clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), (true ? (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) : _GLF_FUZZED(subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))))))), clamp(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))))), uint(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(0.0, 0.0) + (vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(0.0, 0.0) + (vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))))))) * subgroup_size), uint(subgroup_id * subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), min(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 0u + (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), 1u * (_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : uint(subgroup_id * subgroup_size)))), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u * (_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u * (_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u * (_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))), _GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u * (_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))), _GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u * (_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))))))))), (min(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u * (_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u * (_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u * (_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))), _GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u * (_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))), _GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u * (_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | 0u), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))))))) >> 0u))), clamp(uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))))) + 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))))) / 1u) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))))) / 1u) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))))) / 1u) * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))))) / 1u) * subgroup_size : _GLF_FUZZED(write_val)))))), uint(subgroup_id * subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size), _GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) + 0u)), 1u * (_GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), (clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | 0u), _GLF_IDENTITY(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), min(clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), clamp(uint(subgroup_id * subgroup_size), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) - (0u ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(subgroup_id * subgroup_size))))))), clamp(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), ((~ (subgroup_size))) | ((~ (subgroup_size)))))), uint(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))))))) * subgroup_size), uint(subgroup_id * subgroup_size)))) >> 0u))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec2((subgroup_id * subgroup_size), 1u), (uvec2((subgroup_id * subgroup_size), 1u)) + _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) << uvec2(0u, 0u))))))) | (subgroup_id * subgroup_size))), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u, 1u), (uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(103672u))), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, (0u ^ 1u), 1u))))) | (uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (1u) - (0u | 0u)), 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec2((subgroup_id * subgroup_size), 1u), (uvec2((subgroup_id * subgroup_size), 1u)) + _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) << uvec2(0u, 0u))))))) | (subgroup_id * subgroup_size))), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u, 1u), (uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(103672u))), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, (0u ^ 1u), 1u))))) | (uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (1u) - (0u | 0u)), 1u)))))))), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec2((subgroup_id * subgroup_size), 1u), (uvec2((subgroup_id * subgroup_size), 1u)) + _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) << uvec2(0u, 0u))))))) | (subgroup_id * subgroup_size))), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u, 1u), (uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(103672u))), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, (0u ^ 1u), 1u))))) | (uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (1u) - (0u | 0u)), 1u)))))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec2((subgroup_id * subgroup_size), 1u), (uvec2((subgroup_id * subgroup_size), 1u)) + _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) << uvec2(0u, 0u))))))) | (subgroup_id * subgroup_size))), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, 1u, 1u), (uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(103672u))), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, (0u ^ 1u), 1u))))) | (uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (1u) - (0u | 0u)), 1u))))))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), min(max(virtual_gid, virtual_gid), _GLF_IDENTITY(max(virtual_gid, virtual_gid), (max(virtual_gid, virtual_gid)) << 0u))))) * 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), max(_GLF_FUZZED(subgroup_base), _GLF_FUZZED(subgroup_base))) : uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (1u ^ 0u), (0u | 0u)), ~ (~ (uvec3(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (1u ^ 0u), (0u | 0u)))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (1u ^ 0u), (0u | 0u)), ~ (~ (uvec3(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (1u ^ 0u), (0u | 0u))))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (1u ^ 0u), (0u | 0u)), ~ (~ (uvec3(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (1u ^ 0u), (0u | 0u))))))))))))))), 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, min((0) - 0, (0) - 0))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))) || false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true && (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) || false)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y)))), false)))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), (false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) || false)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read_val = atomicLoad(write_val, 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (read_val) ^ 0u)) | (read_val)))), ~ (~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uint(subgroupAllEqual(read_val)))), 1u * (~ (~ (uint(subgroupAllEqual(read_val)))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uint(subgroupAllEqual(read_val)))), ~ (~ (~ (~ (uint(subgroupAllEqual(read_val))))))), 1u * (~ (~ (uint(subgroupAllEqual(read_val)))))))))))), (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, _GLF_IDENTITY((_GLF_IDENTITY(read_val, 0u ^ (read_val))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(read_val, 0u ^ (read_val)))), (true ? ~ ((_GLF_IDENTITY(read_val, 0u ^ (read_val)))) : _GLF_FUZZED(read_val))))) ^ 0u)) | (read_val)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uint(subgroupAllEqual(read_val)))), 1u * (~ (~ (uint(subgroupAllEqual(read_val)))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uint(subgroupAllEqual(_GLF_IDENTITY(read_val, ~ (~ (read_val))))))), ~ (~ (~ (~ (uint(subgroupAllEqual(read_val))))))), 1u * (~ (~ (uint(subgroupAllEqual(read_val))))))))))), 0u | ((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uint(subgroupAllEqual(read_val)))), 1u * (~ (~ (uint(subgroupAllEqual(read_val)))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uint(subgroupAllEqual(_GLF_IDENTITY(read_val, ~ (~ (read_val))))))), ~ (~ (~ (~ (uint(subgroupAllEqual(read_val))))))), 1u * (~ (~ (uint(subgroupAllEqual(read_val))))))))))))))) / (1u & 1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
