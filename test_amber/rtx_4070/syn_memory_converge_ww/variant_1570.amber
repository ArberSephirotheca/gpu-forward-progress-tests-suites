#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), false, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(bool(bool(false)), true, false, false)), (bool(bvec4(bool(bool(false)), true, false, false))) || false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false)), false, false, true)))), (false) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6450.4164)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) || false)) && true)), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (false) || false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (false) || false)) && true), false || (bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (false) || false)) && true))))))) && true))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) || false)) && true)), (bool(bool((_GLF_IDENTITY(false, (false) || false)) && true))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) || false)) && true)), (bool(bool((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) && true))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) && true)), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) || false)) && true)), (bool(bool((_GLF_IDENTITY(false, (false) || false)) && true))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) || false)) || false)))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), max(vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))))), vec2(_GLF_FUZZED((float(_GLF_IDENTITY(63692u, clamp(_GLF_IDENTITY(63692u, (63692u) | (63692u)), _GLF_IDENTITY(63692u, uint(_GLF_IDENTITY(uvec3(63692u, 0u, 0u), max(uvec3(63692u, 0u, 0u), uvec3(63692u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u))))), 63692u))) * 794.547)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(843.241, 1.3)[1]) : _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))], mix(float(_GLF_FUZZED(-7633.1996)), float((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(57901) : 0))], injectionSwitch[1])))[1]), bool(true))), max(false ? _GLF_FUZZED(vec2(843.241, 1.3)[1]) : _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))], mix(float(_GLF_FUZZED(-7633.1996)), float((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(57901) : 0))], injectionSwitch[1])))[1]), bool(true))), false ? _GLF_FUZZED(vec2(843.241, 1.3)[1]) : _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))], mix(float(_GLF_FUZZED(-7633.1996)), float((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(57901) : 0))], injectionSwitch[1])))[1]), bool(true))))))), clamp(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(vec2(843.241, 1.3)[1]) : _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))], mix(float(_GLF_FUZZED(-7633.1996)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], (false ? _GLF_FUZZED(3419.4012) : (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]))), bool(true))))), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(vec2(843.241, 1.3)[1]) : _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))], mix(float(_GLF_FUZZED(-7633.1996)), float((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bool(true))))), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(vec2(843.241, 1.3)[1]) : _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) - 0), (1)))) | ((1))))], mix(_GLF_IDENTITY(float(_GLF_FUZZED(-7633.1996)), min(float(_GLF_FUZZED(-7633.1996)), float(_GLF_FUZZED(-7633.1996)))), float((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])))[1]), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true)))))))))), bvec2(false, true))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-14.96) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u) | ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), true))))), _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y)) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y)) && true), true))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), (false ? _GLF_FUZZED(-28.92) : float(vec2(injectionSwitch.x, 1.0))))), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)))), float(_GLF_FUZZED((3.7))), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) >> 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), ((false)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, _GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) - 0u), (uint(virtual_gid)) >> (77408u & 0u)), _GLF_IDENTITY(4, (4) | (4)), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(_GLF_IDENTITY(false || (false), bool(bvec2(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, true && (false)) || (false)) && true))))) || false))), (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), (true ? float(vec2(injectionSwitch.x, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(180.673, float(_GLF_IDENTITY(vec3(180.673, 0.0, 0.0), (true ? vec3(180.673, 0.0, 0.0) : _GLF_FUZZED(clamp(vec3(0.7, -8833.0007, -2492.1246), 96.82, 890.506)))))))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), (true ? float(vec2(injectionSwitch.x, 1.0)) : _GLF_FUZZED(180.673)))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, (true ? _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED(-633.530)), bool(false))) : _GLF_FUZZED(80.93))), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0)))))) : _GLF_FUZZED(atanh(8393.1683))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 64.57)), _GLF_FUZZED(7.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_val = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(uint(uvec4(write_val, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u + (uint(0u))))), (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uint(uvec4(write_val, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), (uint(uvec3(0u, 1u, 0u))) - 0u))), uint(0u))), 0u ^ ((1u << _GLF_IDENTITY(uint(0u), uint(0u))))))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u + (uint(0u))))), (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(uvec4(write_val, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u + (uint(_GLF_IDENTITY(0u, min(0u, 0u))))))), (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, (false ? _GLF_FUZZED(189504u) : write_val))) | (_GLF_IDENTITY(write_val, (false ? _GLF_FUZZED(num_workgroup) : write_val)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), uint(0u))), _GLF_IDENTITY(uint(0u), 0u + (uint(0u))))), (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) / 1u), uint(uvec4(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? write_val : _GLF_FUZZED((workgroup_size & write_val))))) | 0u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u + _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (uint(0u)))), 0u | ((_GLF_IDENTITY(uint(0u), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (uint(0u))))))))), (1u ^ 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u)))))))), 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))))) ? _GLF_FUZZED(-28153) : 0))), max(atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (true ? write_val : _GLF_FUZZED(subgroup_id))), write_val)), clamp(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(_GLF_IDENTITY(write_val, _GLF_IDENTITY(clamp(write_val, write_val, _GLF_IDENTITY(write_val, ~ (~ (_GLF_IDENTITY(write_val, max(write_val, write_val)))))), 0u ^ (clamp(write_val, write_val, _GLF_IDENTITY(write_val, ~ (~ (_GLF_IDENTITY(write_val, max(write_val, write_val))))))))), clamp(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val))), write_val)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, 0u | (write_val))) | _GLF_IDENTITY((_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id))), write_val))), ((_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id))), write_val)))) >> 0u)), clamp(write_val, write_val, write_val)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec4(uint(0u), 0u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) - 0u))), 0u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, 0u | (write_val))) | _GLF_IDENTITY((_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id))), write_val))), ((_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id))), write_val)))) >> 0u)), clamp(write_val, write_val, write_val)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec4(uint(0u), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, 0u | (write_val))) | _GLF_IDENTITY((_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, _GLF_IDENTITY((write_val) | (write_val), 0u ^ ((write_val) | (write_val)))) : _GLF_FUZZED(subgroup_id))), write_val))), ((_GLF_IDENTITY(write_val, _GLF_IDENTITY(clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id))), write_val), _GLF_IDENTITY(uint(uvec4(clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id))), write_val), 1u, 1u, 0u)), (uint(uvec4(clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id))), write_val), 1u, 1u, 0u))) | (uint(uvec4(clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id))), write_val), 1u, 1u, 0u)))))))) >> 0u)), clamp(write_val, write_val, write_val)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY(uint(0u), uint(uvec4(uint(0u), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(write_val, min(write_val, write_val)), clamp(write_val, write_val, write_val)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(write_val, _GLF_IDENTITY((_GLF_IDENTITY(write_val, 0u | (write_val))) | _GLF_IDENTITY((_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id))), write_val))), ((_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id))), write_val)))) >> 0u), ((_GLF_IDENTITY(write_val, 0u | (write_val))) | _GLF_IDENTITY((_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (_GLF_IDENTITY(true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id), ~ (~ (true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id)))))), write_val))), ((_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, _GLF_IDENTITY((write_val) | (write_val), clamp((write_val) | (write_val), (write_val) | (write_val), _GLF_IDENTITY((write_val) | (write_val), ((write_val) | (write_val)) | ((write_val) | (write_val)))))) : _GLF_FUZZED(subgroup_id))), write_val)))) >> 0u)) - 0u)), clamp(write_val, write_val, write_val)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec4(uint(0u), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), clamp(min(1u, 1u), min(1u, 1u), min(1u, 1u)))) | (min(1u, 1u)))), 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(write_val, min(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, ~ (~ (write_val)))) | 0u), _GLF_IDENTITY(write_val, min(write_val, write_val)))), clamp(write_val, write_val, write_val)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, 0u | (write_val))) | _GLF_IDENTITY((_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id))), write_val))), ((_GLF_IDENTITY(_GLF_IDENTITY(write_val, ~ (~ (write_val))), clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(_GLF_IDENTITY(write_val, (false ? _GLF_FUZZED(packHalf2x16((- injectionSwitch))) : write_val)), (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id))), write_val)))) >> 0u)), clamp(write_val, write_val, write_val)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec4(uint(0u), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u)))), uint(uvec2(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec4(uint(0u), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u)))), 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, 0u | (write_val))) | _GLF_IDENTITY((_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id))), write_val))), ((_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (true ? _GLF_IDENTITY(write_val, (write_val) | (write_val)) : _GLF_FUZZED(subgroup_id))), write_val)))) >> 0u)), clamp(write_val, write_val, write_val)), 0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u)) - 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec4(uint(0u), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u)))))))))))), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, _GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, _GLF_IDENTITY(clamp(write_val, write_val, write_val), 0u | (clamp(write_val, write_val, write_val)))), 4, 64, 0), (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(int(64)))) << (0 << _GLF_IDENTITY(int(2), int(2)))), 0), 0u ^ (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, _GLF_IDENTITY(0, int(ivec3(0, 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))), _GLF_IDENTITY(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, _GLF_IDENTITY(clamp(_GLF_IDENTITY(write_val, uint(uvec3(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, (write_val) * 1u)) << 0u), 0u, 0u))), write_val, write_val), (clamp(_GLF_IDENTITY(write_val, uint(uvec3(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, (write_val) * 1u)) << 0u), 0u, 0u))), write_val, write_val)) * 1u)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)), max(_GLF_IDENTITY(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, _GLF_IDENTITY(64, (64) | (64)), 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, max(write_val, write_val)))), clamp(write_val, write_val, write_val)), 4, 64, 0)), clamp(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(_GLF_IDENTITY(write_val, (write_val) << 0u), _GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, ~ (~ (write_val)))) | 0u), write_val)))), 4, 64, 0), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0))), 0))), ~ (_GLF_IDENTITY(~ (atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)), 1u * (~ (atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) * 1))))))))), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (false ? _GLF_FUZZED(workgroup_size) : write_val)), write_val)), 4, 64, 0)), _GLF_IDENTITY(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(4, (4) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)), _GLF_IDENTITY(min(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), (_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val))) * 1u), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(5), int(5))) | (0)))), clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0))), (min(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)), clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (write_val) * (1u | 1u)), write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)))) | (_GLF_IDENTITY(min(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)), clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0))), ~ (_GLF_IDENTITY(~ (min(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)), clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)))), (~ (min(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)), clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0))))) >> 0u)))))), clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), (true ? _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)) : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), _GLF_IDENTITY(4, (4) | (4)), 64, 0), atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), (_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val))) ^ 0u), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, _GLF_IDENTITY(write_val, max(write_val, write_val)))), 4, 64, 0)))), clamp(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), (_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val))) - 0u), _GLF_IDENTITY(write_val, _GLF_IDENTITY(clamp(write_val, write_val, write_val), max(clamp(write_val, write_val, write_val), _GLF_IDENTITY(clamp(write_val, write_val, write_val), min(clamp(write_val, write_val, write_val), clamp(write_val, write_val, write_val)))))))), 4, 64, 0), (0u | 0u) + (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (write_val) | (write_val)), write_val)))), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) / 1), 4)), 64, 0), uint(_GLF_IDENTITY(uvec2(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), _GLF_IDENTITY(0u, 0u | (0u))), max(uvec2(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), 0u), uvec2(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), 0u))))))), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val))))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)))))))) - 0u)) * _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (1u) << 0u)))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | ((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, _GLF_IDENTITY(clamp(write_val, write_val, write_val), 0u | (clamp(write_val, write_val, write_val)))), 4, 64, 0), (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(int(64)))) << (0 << _GLF_IDENTITY(int(2), int(2)))), 0), 0u ^ (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, _GLF_IDENTITY(0, int(ivec3(0, 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))), _GLF_IDENTITY(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, _GLF_IDENTITY(clamp(_GLF_IDENTITY(write_val, uint(uvec3(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, (write_val) * 1u)) << 0u), 0u, 0u))), write_val, write_val), (clamp(_GLF_IDENTITY(write_val, uint(uvec3(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, (write_val) * 1u)) << 0u), 0u, 0u))), write_val, write_val)) * 1u)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)), max(_GLF_IDENTITY(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, _GLF_IDENTITY(64, (64) | (64)), 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, max(write_val, write_val)))), clamp(write_val, write_val, write_val)), 4, 64, 0)), clamp(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(_GLF_IDENTITY(write_val, (write_val) << 0u), _GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, ~ (~ (write_val)))) | 0u), write_val)))), 4, 64, 0), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0))), 0))), ~ (_GLF_IDENTITY(~ (atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)), 1u * (~ (atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) * 1))))))))), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (false ? _GLF_FUZZED(workgroup_size) : write_val)), write_val)), 4, 64, 0)), _GLF_IDENTITY(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(4, (4) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)), _GLF_IDENTITY(min(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), (_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val))) * 1u), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(5), int(5))) | (0)))), clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0))), (min(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)), clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (write_val) * (1u | 1u)), write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)))) | (_GLF_IDENTITY(min(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)), clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0))), ~ (_GLF_IDENTITY(~ (min(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)), clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)))), (~ (min(clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)), clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0))))) >> 0u)))))), clamp(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), (true ? _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)) : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), _GLF_IDENTITY(4, (4) | (4)), 64, 0), atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), (_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val))) ^ 0u), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, _GLF_IDENTITY(write_val, max(write_val, write_val)))), 4, 64, 0)))), clamp(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), (_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val))) - 0u), _GLF_IDENTITY(write_val, _GLF_IDENTITY(clamp(write_val, write_val, write_val), max(clamp(write_val, write_val, write_val), _GLF_IDENTITY(clamp(write_val, write_val, write_val), min(clamp(write_val, write_val, write_val), clamp(write_val, write_val, write_val)))))))), 4, 64, 0), (0u | 0u) + (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (write_val) | (write_val)), write_val)))), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) / 1), 4)), 64, 0), uint(_GLF_IDENTITY(uvec2(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), _GLF_IDENTITY(0u, 0u | (0u))), max(uvec2(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), 0u), uvec2(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), max(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))), 4, 64, 0), 0u))))))), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val))))), 4, 64, 0), atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), 4, 64, 0)))))))) - 0u)) * _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (1u) << 0u)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))))), bool(bvec2((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(false))))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))))), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
