#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))); _GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(-24147))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((144.714 - -286.646))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), determinant(mat2(sin(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0), (mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(mat2(sin(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-64.57), _GLF_FUZZED(-7776.4518)), vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), bvec2(true, true))))))), 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0) + (mat3x4(0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0)))))), 1.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.2))), injectionSwitch.y)), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          break;
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, min((injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   break;
                  }
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec3(_GLF_WRAPPED_LOOP(false), true, false))))));
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (injectionSwitch.x > injectionSwitch.y))), (bool(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) && true)), (bool(_GLF_IDENTITY(bool(! (! (injectionSwitch.x > injectionSwitch.y))), (bool(! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true))) || false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(bool(! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true, true)))) && true)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(bool(! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true, true)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(bool(! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true, true)))) && true)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool(! (! (injectionSwitch.x > injectionSwitch.y))), (bool(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) && true))) || false)))) && true))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1])).y, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), ! (! ((! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (injectionSwitch.x > injectionSwitch.y))), (bool(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) && true)), (bool(_GLF_IDENTITY(bool(! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((bool(! (! (injectionSwitch.x > injectionSwitch.y)))) && true, bool(bvec4((bool(! (! (injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (injectionSwitch.x > injectionSwitch.y))), (bool(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) && true)), (bool(_GLF_IDENTITY(bool(! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((bool(! (! (injectionSwitch.x > injectionSwitch.y)))) && true, bool(bvec4((bool(! (! (injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))]))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (injectionSwitch.x > injectionSwitch.y))), (bool(! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), (! ((! (injectionSwitch.x > injectionSwitch.y)))) || false)))), ! (! (bool(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), (! ((! (injectionSwitch.x > injectionSwitch.y)))) || false))))))), (bool(! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bool(bool(_GLF_IDENTITY(bool(! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))), (bool(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))) && true)))))) || false)))) && true))))))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(findMSB(write_val)) : _injected_loop_counter)) > (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) << 0) >> _GLF_IDENTITY(int(7), int(7))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) ^ 0) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(_injected_loop_counter)))))), int(7)))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (86598 & (1 ^ 1)) + (_GLF_IDENTITY(int(7), (int(7)) / 1))), int(7)), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))))), clamp(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))))), ~ (~ (0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))))))))))))))), _GLF_IDENTITY(int(int((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 | (7))), int(7)), (true ? _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) ^ 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7)))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) - 0) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 | (int(7)))))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))))))))))))))), _GLF_IDENTITY(int(ivec4(int(int((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(-78174)))) << 0))), max(_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, min((0) << 0, (0) << 0))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), 1 * ((0))) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec4(int(7), 1, 1, 0)))) | (int(7))), int(7))) | (_GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7)))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | 0), 0)), (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), int(7)), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(int(7), int(7))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, max(0, 0))))) >> _GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))))))))))))))), 0, 0, 0)), ~ (~ (int(ivec4(int(int((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7))) - 0), _GLF_IDENTITY((true ? _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(_injected_loop_counter)), ((true ? _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)), max((int(7)), (int(7)))) | (int(7))), int(7)))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(7), 0 ^ (int(7)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))))))))))))))), 0, 0, 0)))))))))); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.5)), bool(false))))))))) && true))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)) || false)), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), (! (false)) || false)))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 continue;
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
                    return;
                   break;
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                  break;
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((638.892 / injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9.4, -368.756), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (vec2(-9.4, -368.756)))))))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((638.892 / injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9.4, -368.756), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (vec2(-9.4, -368.756)))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((638.892 / _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))))))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9.4, -368.756), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (vec2(-9.4, -368.756)))))))).y) / 1.0)), float(_GLF_FUZZED(-982.253)), bool(false)))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
                return;
              }
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(_GLF_IDENTITY((vec3(9.8, 68.75, 8641.3757).y + 192.311), float(mat4((vec3(9.8, 68.75, 8641.3757).y + 192.311), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(0.0), 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, abs(1.0), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, sqrt(1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0)))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float((39777u < 60788u)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) && true))))
    {
    }
   else
    {
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)) | (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) >> 0u, (false ? _GLF_FUZZED(num_workgroup) : (workgroup_size) >> 0u))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))), min(subgroup_base, subgroup_base))))) | (subgroup_base)) + subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), min(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u))), _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))) + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u), uvec2(0u, 0u) ^ (uvec2((_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))), 0u)))))) >> (0u | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), min(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))))) + subgroup_base + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base + subgroup_local_id)), (~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u)))) + subgroup_base + subgroup_local_id))) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / abs(1.0)), injectionSwitch.x))))))))), ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)), clamp((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY((~ (workgroup_base + subgroup_base + subgroup_local_id)), min(_GLF_IDENTITY((~ (workgroup_base + subgroup_base + subgroup_local_id)), ~ (~ ((~ (workgroup_base + subgroup_base + subgroup_local_id))))), (~ (workgroup_base + subgroup_base + subgroup_local_id)))) | (~ (workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY((~ (workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(uint(uvec4((~ (workgroup_base + subgroup_base + subgroup_local_id)), 1u, 0u, 1u)), (true ? uint(uvec4((~ (workgroup_base + subgroup_base + subgroup_local_id)), 1u, 0u, 1u)) : _GLF_FUZZED(subgroup_base)))) | (~ (workgroup_base + subgroup_base + subgroup_local_id))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), min(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))))))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))))))))), ~ (~ ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id))))))))))))) : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))))), 0u))))), ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))))))) - 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base + subgroup_local_id)), (~ (~ (workgroup_base + subgroup_base + subgroup_local_id))) | (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)) + subgroup_base + subgroup_local_id)), uint(uvec2((~ (workgroup_base + subgroup_base + subgroup_local_id)), 0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, min(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) - (0u ^ 0u))))))), ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))) - 0u)))) / 1u))) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))), min(subgroup_base, subgroup_base))))) | (subgroup_base)) + subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), min(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u))), _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))) + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u), uvec2(0u, 0u) ^ (uvec2((_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))), 0u)))))) >> (0u | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), min(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))))) + subgroup_base + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base + subgroup_local_id)), (~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u)))) + subgroup_base + subgroup_local_id))) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / abs(1.0)), injectionSwitch.x))))))))), ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)), clamp((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY((~ (workgroup_base + subgroup_base + subgroup_local_id)), min(_GLF_IDENTITY((~ (workgroup_base + subgroup_base + subgroup_local_id)), ~ (~ ((~ (workgroup_base + subgroup_base + subgroup_local_id))))), (~ (workgroup_base + subgroup_base + subgroup_local_id)))) | (~ (workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY((~ (workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(uint(uvec4((~ (workgroup_base + subgroup_base + subgroup_local_id)), 1u, 0u, 1u)), (true ? uint(uvec4((~ (workgroup_base + subgroup_base + subgroup_local_id)), 1u, 0u, 1u)) : _GLF_FUZZED(subgroup_base)))) | (~ (workgroup_base + subgroup_base + subgroup_local_id))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), min(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))))))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))))))))), ~ (~ ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id))))))))))))) : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))))), 0u))))), ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))))))) - 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base + subgroup_local_id)), (~ (~ (workgroup_base + subgroup_base + subgroup_local_id))) | (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)) + subgroup_base + subgroup_local_id)), uint(uvec2((~ (workgroup_base + subgroup_base + subgroup_local_id)), 0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, min(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) - (0u ^ 0u))))))), ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))) - 0u)))) / 1u))) >> 0u), (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))), min(subgroup_base, subgroup_base))))) | (subgroup_base)) + subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), min(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u))), _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))) + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u), uvec2(0u, 0u) ^ (uvec2((_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))), 0u)))))) >> (0u | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), min(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))))) + subgroup_base + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base + subgroup_local_id)), (~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u)))) + subgroup_base + subgroup_local_id))) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / abs(1.0)), injectionSwitch.x))))))))), ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY((~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)), clamp((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY((~ (workgroup_base + subgroup_base + subgroup_local_id)), min(_GLF_IDENTITY((~ (workgroup_base + subgroup_base + subgroup_local_id)), ~ (~ ((~ (workgroup_base + subgroup_base + subgroup_local_id))))), (~ (workgroup_base + subgroup_base + subgroup_local_id)))) | (~ (workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY((~ (workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(uint(uvec4((~ (workgroup_base + subgroup_base + subgroup_local_id)), 1u, 0u, 1u)), (true ? uint(uvec4((~ (workgroup_base + subgroup_base + subgroup_local_id)), 1u, 0u, 1u)) : _GLF_FUZZED(subgroup_base)))) | (~ (workgroup_base + subgroup_base + subgroup_local_id))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), min(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))))))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))))))))), ~ (~ ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id))))))))))))) : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))))), 0u))))), ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) | (~ (workgroup_base + subgroup_base + subgroup_local_id)))))))) - 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base + subgroup_local_id)), (~ (~ (workgroup_base + subgroup_base + subgroup_local_id))) | (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)) + subgroup_base + subgroup_local_id)), uint(uvec2((~ (workgroup_base + subgroup_base + subgroup_local_id)), 0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, min(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) - (0u ^ 0u))))))), ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))) - 0u)))) / 1u))) >> 0u)) ^ 0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(int(int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-71289 & 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, 0u ^ _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))))), 4, 64, 0);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        break;
       continue;
      }
     return;
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, abs(1.0), 0.0, round(length(normalize(1.0))), 0.0, 0.0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + sin(0.0))))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, max(write_val, write_val)), 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
  {
   buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : read_val))) | (_GLF_IDENTITY(read_val, (read_val) << 0u))), (_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, (read_val) << 0u)))) + 0u) : _GLF_FUZZED(workgroup_base)))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
