#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((false) && true, false || _GLF_IDENTITY(((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), (! (_GLF_IDENTITY(true, (true) || false))) || _GLF_IDENTITY(false, false || (false)))))), bool(bvec3(((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), (! (_GLF_IDENTITY(true, (true) || false))) || _GLF_IDENTITY(false, false || (false)))))), true, true)))))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-73.76)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, _GLF_IDENTITY(0u, (0u & 22475u) ^ (0u)), 0u)), uvec3(uvec4(~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u)), 0u)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups)), max((~ (gl_NumWorkGroups)), (~ (gl_NumWorkGroups)))), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u), _GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), gl_NumWorkGroups)))), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), gl_NumWorkGroups)))), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), gl_NumWorkGroups)))), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), gl_NumWorkGroups)))), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), gl_NumWorkGroups)))), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x)), (1u ^ 1u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u), uvec3(uvec4((_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u))), clamp(_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u))), uvec3(uvec3(_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) << uvec3(0u, 0u, 0u), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), _GLF_IDENTITY(uvec3(uvec4(~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(gl_NumWorkGroups))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))))))), ((~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(_GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u)))) << uvec3(0u, 0u, 0u)), 0u)), min(_GLF_IDENTITY(uvec3(uvec4(~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(gl_NumWorkGroups))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))))))), ((~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(_GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u)))) << uvec3(0u, 0u, 0u)), 0u)), (uvec3(uvec4(~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(gl_NumWorkGroups))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))))))), ((~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(_GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u)))) << uvec3(0u, 0u, 0u)), 0u))) - uvec3(0u, 0u, 0u)), uvec3(uvec4(~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(gl_NumWorkGroups))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))))))), ((~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(_GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u)))) << uvec3(0u, 0u, 0u)), 0u)))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (true ? (~ (gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(129273u, 55367u, 8441u))))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), clamp(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u | (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u)))) | (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))))))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(_GLF_IDENTITY(~ (gl_NumWorkGroups), clamp(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))), 0u)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))).x) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) + uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u), 1u))), 0u))) ^ (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))).x) | 0u))))))), _GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), _GLF_IDENTITY(((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u), min(((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u), _GLF_IDENTITY(((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u), (((~ (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))))))) ^ (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 0u)), 0u) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))), min(uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 0u)), 0u) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))), uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 0u)), 0u) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))).x))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) | (gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)))).x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED((workgroup_size)) : workgroup_id, uint(uvec4(false ? _GLF_FUZZED((workgroup_size)) : workgroup_id, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(61286u) : uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) >> 0u, (true ? _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) >> 0u) + 0u, clamp(((workgroup_base + subgroup_id * subgroup_size) >> 0u) + 0u, ((workgroup_base + subgroup_id * subgroup_size) >> 0u) + 0u, ((workgroup_base + subgroup_id * subgroup_size) >> 0u) + _GLF_IDENTITY(0u, max(0u, 0u))))) : _GLF_FUZZED(write_val)))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), clamp(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(ivec3(64, 1, 1))), 64)))), _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) | (64)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), clamp(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(ivec3(64, 1, 1))), 64)))), _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) | (64)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), clamp(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(ivec3(64, 1, 1))), 64)))), _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) | (64)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), clamp(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(ivec3(64, 1, 1))), 64)))), _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) | (64))))))) : _GLF_FUZZED(16347))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), clamp(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(ivec3(64, 1, 1))), 64)))), _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) | (64)))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), clamp(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(ivec3(64, 1, 1))), 64)))), _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) | (64)))), 0, 0, 0)))))))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true && (false), true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(true && (false), true), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(true && (false), true), false), false)), false)))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) && true)))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7392.3769))))), false), false)))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(write_val, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (true ? ~ (0) : _GLF_FUZZED(64323))))), 0 | (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (true ? ~ (0) : _GLF_FUZZED(64323)))))))), ~ (~ (_GLF_IDENTITY(max(0, 0), max(max(0, 0), max(0, 0))))))), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), ~ (~ (_GLF_IDENTITY(max(0, 0), max(max(0, 0), max(0, 0)))))))), min((_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), ~ (~ (_GLF_IDENTITY(max(0, 0), max(max(0, 0), max(0, 0)))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), ~ (~ (_GLF_IDENTITY(max(0, 0), max(max(0, 0), max(0, 0)))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(max(0, 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(0, 0), max(max(0, 0), max(0, 0)))), int(int(~ (_GLF_IDENTITY(max(0, 0), _GLF_IDENTITY(max(max(0, 0), max(0, 0)), (max(max(0, 0), max(0, _GLF_IDENTITY(0, (0) | (0))))) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((-1387.5255))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) + 0.0)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(max(0, 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(0, 0), max(max(0, 0), max(0, 0)))), int(int(~ (_GLF_IDENTITY(max(0, 0), _GLF_IDENTITY(max(max(0, 0), max(0, 0)), (max(max(0, 0), max(0, _GLF_IDENTITY(0, (0) | (0))))) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((-1387.5255))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) + 0.0))))))))))))) / 1)), (0) - 0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6892.9662)), vec2(_GLF_FUZZED(float(137503u)), (injectionSwitch)[1]), bvec2(false, true))).x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-743.710) : injectionSwitch.x, min(false ? _GLF_FUZZED(-743.710) : injectionSwitch.x, false ? _GLF_FUZZED(-743.710) : injectionSwitch.x)))) > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(true && (! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (true && (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-744.786)), vec2(_GLF_FUZZED(-9163.9829), (injectionSwitch)[1]), bvec2(false, true))).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-744.786)), vec2(_GLF_FUZZED(-9163.9829), (injectionSwitch)[1]), bvec2(false, true))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false, true, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u | (uint(subgroupAllEqual(read_val))))) << 0u))), _GLF_IDENTITY((uint(subgroupAllEqual(read_val))) * ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), uint(4u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((uint(subgroupAllEqual(read_val))), ((uint(subgroupAllEqual(read_val)))) ^ 0u) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u), uint(_GLF_IDENTITY(4u, ~ (~ (4u)))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), ((uint(subgroupAllEqual(read_val))) * ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(_GLF_IDENTITY(uint(4u), (uint(4u)) | _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(write_val), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(write_val)), (~ (_GLF_FUZZED(write_val))) ^ 0u))) : uint(0u)))))), uint(4u)))))), 0u ^ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(_GLF_IDENTITY(uint(4u), (uint(4u)) | _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(write_val) : uint(0u)))))), uint(4u))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) / 1u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) || false)))), bool(bvec4((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), false || (_GLF_IDENTITY((true), _GLF_IDENTITY(((true)) || false, bool(bvec2(((true)) || false, true))))))))), true, false, false))) || false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (true)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, ! (! (true)))) || _GLF_IDENTITY(false, ! (! (false)))), (! ((_GLF_IDENTITY(true, ! (! (true)))) || _GLF_IDENTITY(false, ! (! (false))))) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))))), bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))))), false, true))))) && true)) || false)))), bool(bvec4(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))))), bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))))), false, true))))) && true)) || false)))), false, false, true))), false, true, false)), _GLF_IDENTITY(! (! (bool(bvec4(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, ! (! ((_GLF_IDENTITY(true, ! (! (true)))) || false)))), false, true, false)))), false || (_GLF_IDENTITY(! (! (bool(bvec4(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, ! (! ((_GLF_IDENTITY(true, ! (! (true)))) || false)))), false, true, false)))), bool(bool(_GLF_IDENTITY(! (! (bool(bvec4(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, ! (! ((_GLF_IDENTITY(true, ! (! (true)))) || false)))), false, true, false)))), true && (! (! (bool(bvec4(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, ! (! ((_GLF_IDENTITY(true, ! (! (true)))) || false)))), false, true, false)))))))))))))))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false || (false))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(70.59))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, exp(0.0), 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
