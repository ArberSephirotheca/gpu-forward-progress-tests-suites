#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_24 {
 float _f0;
} ;

struct _GLF_struct_22 {
 mat2 _f0;
 float _f1;
 vec3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_23 {
 _GLF_struct_22 _f0;
 bvec2 _f1;
 float _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_25 {
 bvec2 _f0;
 uint subgroup_id;
 _GLF_struct_23 _f1;
 mat3 _f2;
 uvec3 _f3;
 _GLF_struct_24 _f4;
} ;

struct _GLF_struct_19 {
 vec4 _f0;
 bvec3 _f1;
 mat3 _f2;
 bool _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_18 {
 mat4x3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 mat2x3 _f1;
 mat2 _f2;
 ivec4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_16 {
 vec2 _f0;
} ;

struct _GLF_struct_20 {
 _GLF_struct_16 _f0;
 bvec2 _f1;
 _GLF_struct_17 _f2;
 mat4x2 _f3;
 _GLF_struct_18 _f4;
 _GLF_struct_19 _f5;
} ;

struct _GLF_struct_14 {
 mat2 _f0;
} ;

struct _GLF_struct_13 {
 mat4x2 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 int _f3;
 bvec2 _f4;
 ivec2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 mat4x3 _f1;
 vec3 _f2;
 float _f3;
 mat2x4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 vec3 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_13 _f3;
 mat4x3 _f4;
 bvec3 _f5;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
 mat3x2 _f1;
 float _f2;
 mat4 _f3;
 uvec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
 float _f1;
 vec3 _f2;
 mat2 _f3;
 bvec2 _f4;
 vec2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 vec4 _f1;
 ivec4 _f2;
 mat3x4 _f3;
 mat3x2 _f4;
 mat2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_7 {
 mat2x3 _f0;
 float _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 bool _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_21 {
 mat2x4 _f0;
 mat3x4 _f1;
 uint subgroup_size;
 _GLF_struct_11 _f2;
 _GLF_struct_15 _f3;
 mat4x2 _f4;
 float _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_4 {
 int _f0;
 bvec4 _f1;
 mat4x2 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 mat4 _f1;
 bool _f2;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 uint _f1;
 bool _f2;
 mat3x2 _f3;
 ivec4 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 mat3x2 _f1;
 uvec4 _f2;
 bvec3 _f3;
 uvec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 vec4 _f1;
 bool _f2;
 uint workgroup_id;
 bvec3 _f3;
 uvec3 _f4;
 _GLF_struct_0 _f5;
} ;

struct _GLF_struct_6 {
 mat3 _f0;
 bool _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_3 _f3;
 uvec2 _f4;
 _GLF_struct_5 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))), false)))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))), false))))) && true))))))))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.x)) : _GLF_FUZZED(normalize(9416.0204)))) < injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(bvec2(true), gl_SubgroupID, _GLF_struct_23(_GLF_struct_22(mat2(1.0), 1.0, vec3(1.0), vec2(1.0)), bvec2(true), 1.0, bvec3(true)), mat3(1.0), uvec3(1u), _GLF_struct_24(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.7))))))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), min(_GLF_IDENTITY(_GLF_FUZZED(-1.7), (_GLF_FUZZED(-1.7)) + 0.0), _GLF_IDENTITY(_GLF_FUZZED(-1.7), float(mat3(_GLF_IDENTITY(_GLF_FUZZED(-1.7), float(mat4x3(_GLF_FUZZED(-1.7), 0.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), min(_GLF_IDENTITY(float(int(189270u)), float(vec3(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) / 1.0), 0.0, abs(1.0)))), _GLF_IDENTITY(float(int(189270u)), max(float(int(189270u)), float(int(189270u)))))))), bool(false)))) / 1.0), max(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(mat4x3(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, exp(log(1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, 1.0 * ((1.0) + 0.0))), 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) + 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) + 0.0), float(mat4x2(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) + 0.0), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)))), float(_GLF_FUZZED((- -97.79))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(true))))), bool(false)))) / 1.0), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), max(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false)))))) / 1.0), (false ? _GLF_FUZZED(-8.5) : float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), clamp(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), float(_GLF_IDENTITY(mat2(min(1.0, 1.0), 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(min(1.0, 1.0), 1.0, 0.0, 0.0)), transpose(transpose(transpose(mat2(min(1.0, 1.0), 1.0, 0.0, 0.0))))))))))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(_GLF_IDENTITY(int(189270u), ~ (_GLF_IDENTITY(~ (int(189270u)), (~ (int(189270u))) * 1)))))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), min(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))))))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY((1.0) / 1.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), min(_GLF_IDENTITY(_GLF_FUZZED(-1.7), (_GLF_FUZZED(-1.7)) + 0.0), _GLF_FUZZED(-1.7)))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), min(_GLF_IDENTITY(float(int(189270u)), float(vec3(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) / 1.0), 0.0, abs(1.0)))), _GLF_IDENTITY(float(int(189270u)), max(float(int(189270u)), float(int(189270u)))))))), bool(false)))) / 1.0), max(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) + 0.0)), bool(true))))), bool(false)))) / 1.0), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), max(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), (false ? _GLF_FUZZED(-8.5) : float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), clamp(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))))))), bool(true)), (false ? _GLF_FUZZED(-161.150) : _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), min(_GLF_IDENTITY(_GLF_FUZZED(-1.7), (_GLF_FUZZED(-1.7)) + 0.0), _GLF_FUZZED(-1.7)))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), min(_GLF_IDENTITY(float(int(189270u)), float(vec3(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) / 1.0), 0.0, abs(1.0)))), _GLF_IDENTITY(float(int(189270u)), max(float(int(189270u)), float(int(189270u)))))))), bool(false)))) / 1.0), max(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) + 0.0)), bool(true))))), bool(false)))) / 1.0), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), max(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), (false ? _GLF_FUZZED(-8.5) : float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), clamp(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))))))), bool(true)), mix(float(_GLF_FUZZED(7.6)), float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), min(_GLF_IDENTITY(_GLF_FUZZED(-1.7), (_GLF_FUZZED(-1.7)) + 0.0), _GLF_FUZZED(-1.7)))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), min(_GLF_IDENTITY(float(int(189270u)), float(vec3(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) / 1.0), 0.0, abs(1.0)))), _GLF_IDENTITY(float(int(189270u)), max(float(int(189270u)), float(int(189270u)))))))), bool(false)))) / 1.0), max(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) + 0.0)), bool(true))))), bool(false)))) / 1.0), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), max(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), (false ? _GLF_FUZZED(-8.5) : float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), clamp(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))))))), bool(true))), bool(true)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), min(_GLF_IDENTITY(_GLF_FUZZED(-1.7), (_GLF_FUZZED(-1.7)) + 0.0), _GLF_FUZZED(-1.7)))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), min(_GLF_IDENTITY(float(int(189270u)), float(vec3(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) / 1.0), 0.0, abs(1.0)))), _GLF_IDENTITY(float(int(189270u)), max(float(int(189270u)), float(int(189270u)))))))), bool(false)))) / 1.0), max(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) + 0.0)), bool(true))))), bool(false)))) / 1.0), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), max(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (min(_GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)), 1.0)) * 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), (false ? _GLF_FUZZED(-8.5) : float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(89.83)), float(min(1.0, 1.0)), bool(true))), min(1.0, 1.0))))), float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(89.83)), float(min(1.0, 1.0)), bool(true))), min(1.0, 1.0))))), min(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(89.83)), float(min(1.0, 1.0)), bool(true))), min(1.0, 1.0))))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(89.83)), float(min(1.0, 1.0)), bool(true))), min(1.0, 1.0))))))), round(length(normalize(1.0))), 1.0, log(1.0), 1.0, 0.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), clamp(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))))))), bool(true))), max(_GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-1.7), clamp(_GLF_FUZZED(-1.7), _GLF_FUZZED(-1.7), _GLF_IDENTITY(_GLF_FUZZED(-1.7), (true ? _GLF_FUZZED(-1.7) : _GLF_FUZZED(-109.557))))), (_GLF_FUZZED(-1.7)) + 0.0), _GLF_FUZZED(-1.7)))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (false ? _GLF_FUZZED(1204.8514) : min(1.0, 1.0))))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), min(_GLF_IDENTITY(float(int(189270u)), float(vec3(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) / 1.0), 0.0, abs(1.0)))), _GLF_IDENTITY(float(int(189270u)), max(float(int(189270u)), float(int(189270u)))))))), bool(false)))) / 1.0), max(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(float(int(189270u)), _GLF_IDENTITY((float(int(189270u))) + 0.0, _GLF_IDENTITY(float(mat4((float(int(189270u))) + 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4((float(int(189270u))) + 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat4((float(int(189270u))) + 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat4((float(int(189270u))) + 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))), bool(true))))), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), true, true), bvec3(bvec4(bvec3(bool(false), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) / 1.0), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), max(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / _GLF_IDENTITY(1.0, max(1.0, 1.0))), (false ? _GLF_FUZZED(-8.5) : float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) / 1.0), clamp(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(1.0, 1.0) : _GLF_FUZZED(6642.8326))))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))))), bool(true))), _GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), min(_GLF_IDENTITY(_GLF_FUZZED(-1.7), (_GLF_FUZZED(-1.7)) + 0.0), _GLF_FUZZED(-1.7)))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), min(_GLF_IDENTITY(float(int(189270u)), float(vec3(_GLF_IDENTITY(float(int(189270u)), (float(int(_GLF_IDENTITY(189270u, (189270u) << (0u | 0u))))) / 1.0), 0.0, abs(1.0)))), _GLF_IDENTITY(float(int(189270u)), max(float(int(189270u)), float(int(189270u)))))))), bool(false)))) / 1.0), max(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) + 0.0)), bool(true))))), bool(false)))) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0, mix(float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0, ((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0) * 1.0) : _GLF_FUZZED(4610.9579)))), float(_GLF_FUZZED((24.96 / 709.648))), bool(false)))), max(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), float(_GLF_IDENTITY(mat3x4(min(1.0, 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), mat3x4(mat4(mat3x4(min(1.0, 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)))))))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))) / 1.0), (false ? _GLF_FUZZED(-8.5) : float((_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)), (mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(834.489) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0)))), min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false))) - 0.0))) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-192.015)), float(1.0), bool(true))), 1.0))))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), clamp(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(mat4x3(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), sin(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sin(0.0), 0.0, exp(0.0), 0.0, sin(0.0), 0.0, 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(float(int(189270u))), min(_GLF_FUZZED(float(int(189270u))), _GLF_FUZZED(float(int(189270u)))))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) - length(vec3(0.0, 0.0, 0.0)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(float(int(189270u))), mix(float(_GLF_FUZZED(5.7)), float(_GLF_FUZZED(float(int(189270u)))), bool(true)))), bool(false)))) / 1.0))))))), bool(true))))), _GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), min(_GLF_IDENTITY(_GLF_FUZZED(-1.7), (_GLF_FUZZED(-1.7)) + 0.0), _GLF_FUZZED(-1.7)))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), min(_GLF_IDENTITY(float(int(189270u)), float(vec3(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) / 1.0), 0.0, abs(1.0)))), _GLF_IDENTITY(float(int(189270u)), max(float(int(189270u)), float(int(189270u)))))))), bool(false)))) / 1.0), max(float((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(34.47))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.6))), min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0)), mat3(1.0) * (mat3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0))))))), 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) + 0.0)), bool(true))))), bool(false)))) / 1.0), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (false ? _GLF_FUZZED(-4622.2385) : min(1.0, 1.0))))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), clamp(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), (float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0)) - 0.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-8.5, mix(float(-8.5), float(_GLF_FUZZED(1.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) : float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))), _GLF_IDENTITY(float((_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false))), 1.0 * (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))))) - sin(0.0))) / 1.0), clamp(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(float(_GLF_FUZZED(float(int(189270u)))), float(vec2(float(_GLF_FUZZED(float(int(189270u)))), 0.0))), bool(false)))) / 1.0), float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0, (_GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0, min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0, max((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0, (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0)), (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))) - 0.0)), float((_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, sqrt(1.0), 1.0), min(vec3(1.0, sqrt(1.0), 1.0), vec3(1.0, sqrt(1.0), 1.0))))))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))))))), bool(true))), _GLF_IDENTITY((1.0) / _GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), min(_GLF_IDENTITY(_GLF_FUZZED(-1.7), (_GLF_FUZZED(-1.7)) + 0.0), _GLF_FUZZED(-1.7)))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), min(_GLF_IDENTITY(float(int(189270u)), float(vec3(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) / 1.0), 0.0, abs(1.0)))), _GLF_IDENTITY(float(int(189270u)), max(float(int(189270u)), float(int(189270u)))))))), bool(false)), (mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(int(189270u)), min(_GLF_IDENTITY(float(int(189270u)), float(vec3(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) / 1.0), 0.0, abs(1.0)))), _GLF_IDENTITY(float(int(189270u)), max(_GLF_IDENTITY(float(int(189270u)), 0.0 + (_GLF_IDENTITY(float(int(189270u)), clamp(float(int(189270u)), float(int(189270u)), float(int(189270u)))))), float(int(189270u)))))))), bool(false))) * 1.0))) / 1.0), max(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(int(189270u)), mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) + 0.0)), bool(true))), (_GLF_IDENTITY(float(int(189270u)), mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(float(int(189270u)), (float(int(189270u))) + 0.0)), bool(true)))) - 0.0))), bool(false)))) / 1.0), _GLF_IDENTITY(float((_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false))), (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0)) / 1.0), max(_GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), (false ? _GLF_FUZZED(-8.5) : float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))), _GLF_IDENTITY(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), clamp(float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), cos(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0), float((_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(float(int(189270u)))), bool(false)))) / 1.0))))))), bool(true)))))) / _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED((-0.5 / -4467.1458))), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, sin(log(1.0)), 1.0))), 0.0), min(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, length(sin(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, length(sin(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 0.0), (mat4(1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, length(sin(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), float(vec3(1.0, sin(log(1.0)), 1.0))), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(log(1.0)), 1.0))), 0.0))), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY((min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0), clamp((min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0), (min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0), (min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0)))))))) / vec3(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_IDENTITY(_GLF_FUZZED(7060.0962), min(_GLF_IDENTITY(_GLF_FUZZED(7060.0962), mix(float(_GLF_FUZZED(-529.129)), float(_GLF_FUZZED(7060.0962)), bool(true))), _GLF_FUZZED(7060.0962))), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))[1], (_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8515.5627)), bool(false))), 0.0)), 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(-97.99, 5047.3611, 143.945, -9.5).p)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true)))))))[2]), vec3((_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))[0], _GLF_FUZZED((false ? 0.3 : 1.3)), _GLF_FUZZED(-999.286)), bvec3(true, false, false))))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY((true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-643.760, -231.638, -4.2))), ((true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-643.760, -231.638, -4.2)))) - vec3(0.0, 0.0, 0.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, _GLF_IDENTITY(tan(0.0), 0.0 + (tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, exp(0.0), 0.0))))), float(vec2(_GLF_IDENTITY(float(mat2(0.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, exp(0.0), 0.0))))), (float(mat2(0.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, exp(0.0), 0.0)))))) - 0.0), 0.0))))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), max(float(mat2(0.0, 1.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x))))))), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, sin(log(_GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))), 0.0), min(vec3(0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, sin(log(1.0)), 1.0))), 0.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec3(1.0, sin(log(1.0)), 1.0))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, float(vec3(1.0, sin(log(1.0)), 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(383.450, 9173.7570, -4.3, 502.109, 6.0, 5441.4532, -10.31, -6729.7089, 576.473)) : _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, float(vec3(1.0, sin(log(1.0)), 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(1.0, float(vec3(1.0, sin(log(1.0)), 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 0.0))), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY((min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0), clamp((min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0), (min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0), (min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0)))))), vec3(mat3x4(_GLF_IDENTITY(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY((min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0), clamp((min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0), (min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0), (min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0)))))), 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 0.0, 1.0)), exp(0.0), length(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, cos(0.0)))))) / vec3(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), max(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(7060.0962), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(-97.99, 5047.3611, 143.945, -9.5).p)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true)))))))[2]), vec3((_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))[0], _GLF_FUZZED((false ? 0.3 : 1.3)), _GLF_FUZZED(-999.286)), bvec3(true, false, false))))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * mat3(1.0)) : _GLF_FUZZED(vec3(-643.760, -231.638, -4.2)))))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, _GLF_IDENTITY(tan(0.0), 0.0 + _GLF_IDENTITY((tan(0.0)), clamp(_GLF_IDENTITY((tan(0.0)), mix(float((tan(0.0))), float(_GLF_FUZZED((-6.5 + -8.1))), bool(false))), _GLF_IDENTITY((tan(0.0)), min((tan(0.0)), (tan(0.0)))), (tan(0.0))))), _GLF_ZERO(0.0, injectionSwitch.x)), transpose(_GLF_IDENTITY(transpose(mat2(0.0, 1.0, _GLF_IDENTITY(tan(0.0), 0.0 + _GLF_IDENTITY((tan(0.0)), clamp(_GLF_IDENTITY((tan(0.0)), mix(float((tan(0.0))), float(_GLF_FUZZED((-6.5 + -8.1))), bool(false))), _GLF_IDENTITY((tan(0.0)), min((tan(0.0)), (tan(0.0)))), (tan(0.0))))), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(transpose(mat2(0.0, 1.0, _GLF_IDENTITY(tan(0.0), 0.0 + _GLF_IDENTITY((tan(0.0)), clamp(_GLF_IDENTITY((tan(0.0)), mix(float((tan(0.0))), float(_GLF_FUZZED((-6.5 + -8.1))), bool(false))), _GLF_IDENTITY((tan(0.0)), min((tan(0.0)), (tan(0.0)))), (tan(0.0))))), _GLF_ZERO(0.0, injectionSwitch.x))), (transpose(mat2(0.0, 1.0, _GLF_IDENTITY(tan(0.0), 0.0 + _GLF_IDENTITY((tan(0.0)), clamp(_GLF_IDENTITY((tan(0.0)), mix(float((tan(0.0))), float(_GLF_FUZZED((-6.5 + -8.1))), bool(false))), _GLF_IDENTITY((tan(0.0)), min((tan(0.0)), (tan(0.0)))), (tan(0.0))))), _GLF_ZERO(0.0, injectionSwitch.x)))) / mat2(1.0, 1.0, 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0))))), max(float(mat2(0.0, 1.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * mat3(1.0))) - vec3(0.0, 0.0, 0.0)))), 0.0, exp(0.0), 0.0, 1.0, abs(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, cos(0.0))), mix(float(float(mat2x4(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, sin(log(1.0)), 1.0))), 0.0), min(vec3(0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, sin(_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(5086.4823)), float(log(1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0))), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, sin(log(1.0)), 1.0))), 0.0))), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(_GLF_IDENTITY(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), vec3(_GLF_IDENTITY(mat2x4(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))), (mat2x4(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY((min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0), clamp((_GLF_IDENTITY(min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * vec3(1.0, 1.0, 1.0))) * mat3(1.0), (min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0), (min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * mat3(1.0)))))))) / vec3(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(7060.0962), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))[1], _GLF_IDENTITY((_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(-97.99, _GLF_IDENTITY(5047.3611, (_GLF_IDENTITY(5047.3611, float(vec4(5047.3611, 0.0, 1.0, 0.0)))) / 1.0), 143.945, -9.5).p)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true))))))), tan(vec3(0.0, 0.0, 0.0)) + ((_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(-97.99, _GLF_IDENTITY(5047.3611, (_GLF_IDENTITY(5047.3611, float(vec4(5047.3611, 0.0, 1.0, 0.0)))) / 1.0), 143.945, -9.5).p)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true)))))))))[2]), vec3((_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(238.807)), bool(false)))), vec3(0.0, _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0))))[0], _GLF_FUZZED((false ? 0.3 : 1.3)), _GLF_FUZZED(-999.286)), bvec3(true, false, false))))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-643.760, -231.638, -4.2)))))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, _GLF_IDENTITY(tan(0.0), 0.0 + (tan(0.0))), _GLF_ZERO(0.0, injectionSwitch.x))), max(float(mat2(0.0, 1.0, tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-82.89)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_ZERO(0.0, injectionSwitch.x))), float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x))))))), vec3(0.0, 1.0, 0.0))), 0.0, exp(0.0), 0.0, 1.0, abs(1.0), 0.0, cos(0.0)))), float(_GLF_FUZZED(8190.0730)), bool(false)))), 0.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat2(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-7.3, (-7.3) * 1.0)) : 0.0)))), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(632.542))), 1.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-978.643)), bool(false))), 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * vec3(1.0, 1.0, 1.0)), vec3(0.0, 1.0, 0.0))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - sin(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))))), vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(injectionSwitch[0]))), 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0)) * vec3(1.0, 1.0, 1.0)), vec3(0.0, 1.0, 0.0)))) / 1.0), 0.0, 0.0, 0.0)) * mat3(1.0))))));
 for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)))) && (false)))) || false)) || false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
           if(_GLF_DEAD(false))
            break;
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) | (1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))) | 1, min(_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) | (1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))) | 1, (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) | (1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))) | 1) >> 0), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) | (1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))) | 1)))); _injected_loop_counter ++)
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       for(int _injected_loop_counter = (0 ^ (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) | 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      break;
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 | 1), (_GLF_IDENTITY((1 | 1), ((1 | 1)) + 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.0)), float(injectionSwitch.y), bool(true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, true, false)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.0)), float(injectionSwitch.y), bool(true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, true, false)))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
        }
       else
        {
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(mat2x4(1.0), mat3x4(1.0), gl_SubgroupSize, _GLF_struct_11(_GLF_struct_7(mat2x3(1.0), 1.0), true, _GLF_struct_8(vec2(1.0), vec4(1.0), _GLF_IDENTITY(ivec4(1), clamp(_GLF_IDENTITY(ivec4(1), (true ? ivec4(1) : _GLF_FUZZED(ivec4(-57687, 17268, 61487, 88952)))), ivec4(_GLF_IDENTITY(1, (1) << (0 | 0))), ivec4(1))), mat3x4(1.0), mat3x2(1.0), mat2(1.0), mat2x4(1.0)), _GLF_struct_9(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0, vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(24.33))), _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), min(float(mat2x3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(mat2x3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(mat2x3(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(493.733))), 0.0, 0.0, 1.0))) - 0.0)), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 1.0)))), bool(true)))))), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4211.3351)), bool(false)))))) / 1.0)), bvec2(true), vec2(1.0), mat4(1.0)), _GLF_struct_10(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-38.91)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-38.91)), ((true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-38.91))) - 0.0)) - 0.0)), min(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 1.0))), 1.0))), mat3(1.0) * (mat3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 0.0, 1.0))), 1.0))))), mat3x2(1.0), 1.0, mat4(1.0), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))), mat3(1.0))), _GLF_struct_15(mat4x3(1.0), vec3(1.0), _GLF_struct_12(uvec4(_GLF_IDENTITY(1u, (1u) << 0u)), mat4x3(1.0), vec3(1.0), 1.0, mat2x4(1.0), ivec3(1)), _GLF_struct_13(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat4x2(1.0), mat4x2(1.0), 1, bvec2(true), ivec2(1), vec2(1.0)), mat4x3(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), false), false)))))))), true))), _GLF_struct_14(mat2(1.0))), mat4x2(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_struct_20(_GLF_struct_16(vec2(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), bvec2(true), _GLF_struct_17(bvec4(true), mat2x3(1.0), _GLF_IDENTITY(mat2(1.0), mat2(mat2x3(mat2(1.0)))), ivec4(1), mat4x3(1.0)), mat4x2(_GLF_IDENTITY(1.0, (1.0) / cos(0.0))), _GLF_struct_18(mat4x3(1.0), mat4x2(1.0)), _GLF_struct_19(vec4(1.0), bvec3(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false, false)))), mat3(1.0), true, mat4x2(1.0))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, sqrt(0.0), determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-82.32 + -26.88))), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))))));
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(true))), bool(false))), 1.0))), true, _GLF_struct_1(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u)), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), true, gl_WorkGroupID.x, bvec3(true), uvec3(1u), _GLF_struct_0(bvec4(true), mat3x2(1.0), uvec4(1u), bvec3(true), uvec2(_GLF_IDENTITY(1u, (1u) << 0u)), ivec3(1))), _GLF_struct_3(mat2x4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(5118.6278) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), clamp(1.0, 1.0, 1.0)), 0.0)), (float(vec3(1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(0.0, (0.0) - 0.0)))))) * 1.0))))), _GLF_struct_2(mat4x2(1.0), 1u, true, mat3x2(1.0), ivec4(1), bvec3(true))), uvec2(1u), _GLF_struct_5(_GLF_struct_4(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) << 0)), bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(true, (true) || false))))), mat4x2(1.0), _GLF_IDENTITY(ivec4(1), (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0)) + (ivec4(1)))), mat4(1.0), true));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0), (mat4(injectionSwitch.y, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
    return;
   for(int _injected_loop_counter = (55885 & 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_injected_loop_counter != 1, false, true), bvec3(bvec4(bvec3(_injected_loop_counter != 1, false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_injected_loop_counter != 1, false, true), bvec3(bvec4(bvec3(_injected_loop_counter != 1, false, true), true))))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, abs(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-498.715), float(mat4x3(_GLF_FUZZED(-498.715), 1.0, abs(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(tan(0.0)))))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) && true))))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) - 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-498.715), float(mat4x3(_GLF_FUZZED(-498.715), 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(tan(0.0)))))), float(injectionSwitch.x), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-498.715), float(mat4x3(_GLF_FUZZED(-498.715), 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(tan(0.0)))))), float(injectionSwitch.x), bool(true)), (true ? mix(float(_GLF_IDENTITY(_GLF_FUZZED(-498.715), float(mat4x3(_GLF_FUZZED(-498.715), 1.0, abs(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(tan(0.0)))))), float(injectionSwitch.x), bool(true)) : _GLF_FUZZED(7663.0887))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-498.715), float(mat4x3(_GLF_FUZZED(-498.715), 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(tan(0.0)))))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) - 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false || (true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-498.715), float(mat4x3(_GLF_FUZZED(-498.715), 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), tan(tan(0.0)))))), float(injectionSwitch.x), bool(true)), max(_GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-498.715), float(mat4x3(_GLF_FUZZED(-498.715), 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(tan(0.0)))))), (false ? _GLF_FUZZED(asinh(-448.671)) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-498.715), float(mat4x3(_GLF_FUZZED(-498.715), 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), length(vec2(0.0, 0.0)))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))), injectionSwitch.y), 1.0, 0.0, tan(tan(0.0)))))), mix(float(float(_GLF_IDENTITY(_GLF_FUZZED(-498.715), float(mat4x3(_GLF_FUZZED(-498.715), 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(tan(_GLF_IDENTITY(0.0, float(vec4(0.0, tan(0.0), 1.0, 1.0)))))))))), float(_GLF_FUZZED(9.5)), bool(false))))), float(injectionSwitch.x), bool(true)), (_GLF_IDENTITY(true ? mix(float(_GLF_IDENTITY(_GLF_FUZZED(-498.715), float(mat4x3(_GLF_FUZZED(-498.715), 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, tan(tan(0.0)))))), float(injectionSwitch.x), bool(true)) : _GLF_FUZZED(7663.0887), float(mat2x3(true ? mix(float(_GLF_IDENTITY(_GLF_FUZZED(-498.715), float(mat4x3(_GLF_FUZZED(-498.715), 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, tan(tan(0.0)))))), float(injectionSwitch.x), bool(true)) : _GLF_FUZZED(7663.0887), 1.0, 0.0, determinant(mat2(1.0, abs(0.0), 1.0, 1.0)), exp(0.0), 0.0))))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-498.715), float(mat4x3(_GLF_FUZZED(-498.715), 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(tan(0.0)))))), (float(_GLF_IDENTITY(_GLF_FUZZED(-498.715), float(mat4x3(_GLF_FUZZED(-498.715), 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(tan(0.0))))))) - abs(0.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), false, false, true)), ! (! (bool(bvec4(bool(true), false, false, true)))))))))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0))) > injectionSwitch.y))))))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), true, false, true)))))))), true && (_GLF_WRAPPED_IF_TRUE(true))))
        {
         return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              continue;
            }
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 return;
                }
              }
             return;
            }
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_6._f2.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.5) : injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(float(113852u))), vec2(_GLF_FUZZED(float(31046)), (injectionSwitch)[1]), bvec2(false, true))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_25.subgroup_id, (_GLF_struct_replacement_25.subgroup_id) >> 0u), 0u | (_GLF_struct_replacement_25.subgroup_id)) * _GLF_struct_replacement_21.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_25.subgroup_id, _GLF_IDENTITY(0u | (_GLF_struct_replacement_25.subgroup_id), max(0u | (_GLF_struct_replacement_25.subgroup_id), 0u | (_GLF_struct_replacement_25.subgroup_id)))) * _GLF_struct_replacement_21.subgroup_size) - 0u), (_GLF_IDENTITY(_GLF_struct_replacement_25.subgroup_id, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_25.subgroup_id, (_GLF_struct_replacement_25.subgroup_id) >> 0u))) * _GLF_struct_replacement_21.subgroup_size) - 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size)))) ^ 0u), ~ (~ (subgroup_local_id)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-6.3))), _GLF_FUZZED(417.151)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))) * 1)); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 4, 64, 0);
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, (write_val) | (write_val)), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0)), 1.0 * (float(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0))))) > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, true, true))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))))), true))), ! (! (_GLF_IDENTITY(false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, true))), _GLF_IDENTITY(! (! (false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, true))))), (! (! (false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, true)))))) || false)))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || (bool(bvec2(! (false), true))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))) && true)) && true), true))), bool(_GLF_IDENTITY(bvec3((bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), true))), true, false), bvec3(bvec4(bvec3((bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), true))), true, false), true)))))))))) && true), (injectionSwitch.x > injectionSwitch.y))));
    }
   buf[virtual_gid] = uint(subgroupAllEqual(read_val));
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(8.9) : _GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true) && (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), (! (! ((_GLF_DEAD(false))))) && true))) && true))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true))), false, true, false)))))) && true)) && true), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
