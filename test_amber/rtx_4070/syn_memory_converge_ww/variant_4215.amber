#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_14 {
 uvec2 _f0;
 bvec3 _f1;
 mat3 _f2;
 mat4 _f3;
 ivec4 _f4;
 mat2x4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_15 {
 mat4x2 _f0;
 ivec2 _f1;
 mat4x3 _f2;
 _GLF_struct_13 _f3;
 mat4x3 _f4;
 _GLF_struct_14 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_16 {
 vec3 _f0;
 _GLF_struct_15 _f1;
 uint workgroup_base;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 mat3x4 _f1;
 float _f2;
 vec3 _f3;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
 bool _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_8 {
 ivec4 _f0;
 bool _f1;
 mat2x4 _f2;
 vec3 _f3;
 mat3x4 _f4;
 bvec2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_11 {
 mat4x2 _f0;
 _GLF_struct_8 _f1;
 mat2 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
 mat3x4 _f5;
 int _f6;
} ;

struct _GLF_struct_6 {
 bool _f0;
 bvec4 _f1;
 mat4 _f2;
 vec2 _f3;
 ivec4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 uvec3 _f1;
 uint workgroup_size;
} ;

struct _GLF_struct_12 {
 _GLF_struct_7 _f0;
 _GLF_struct_11 _f1;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 mat2x4 _f1;
 uint _f2;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 vec3 _f1;
 float _f2;
 vec3 _f3;
 ivec4 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 bvec4 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
} ;

struct _GLF_struct_5 {
 uint _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_4 _f2;
 mat2x3 _f3;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(1u, _GLF_struct_0(ivec3(1)), _GLF_struct_4(bvec2(true), _GLF_struct_1(ivec2(1), mat4(1.0)), _GLF_struct_2(mat2x3(1.0), vec3(1.0), 1.0, vec3(1.0), ivec4(1), uvec4(1u)), bvec4(true), _GLF_struct_3(ivec2(1), mat2x4(1.0), 1u)), mat2x3(1.0), gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_7(_GLF_struct_6(true, bvec4(true), mat4(1.0), vec2(1.0), ivec4(1), mat4x2(1.0)), uvec3(1u), gl_WorkGroupSize.x), _GLF_struct_11(mat4x2(1.0), _GLF_struct_8(ivec4(1), true, mat2x4(1.0), vec3(1.0), mat3x4(1.0), bvec2(true), bvec2(true)), mat2(1.0), _GLF_struct_9(vec4(1.0), true, uvec3(1u)), _GLF_struct_10(bvec3(true), mat3x4(1.0), 1.0, vec3(1.0)), mat3x4(1.0), 1));
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(vec3(1.0), _GLF_struct_15(mat4x2(1.0), ivec2(1), mat4x3(1.0), _GLF_struct_13(mat2x3(1.0), bvec3(true)), mat4x3(1.0), _GLF_struct_14(uvec2(1u), bvec3(true), mat3(1.0), mat4(1.0), ivec4(1), mat2x4(1.0), mat3(1.0)), mat4x3(1.0)), _GLF_struct_replacement_12._f0.workgroup_size * workgroup_id);
 uint virtual_gid = _GLF_struct_replacement_16.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_5.subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
