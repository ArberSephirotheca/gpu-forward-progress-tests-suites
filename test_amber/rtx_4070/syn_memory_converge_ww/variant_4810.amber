#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false), true)))), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (! (false))), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), true, true), bvec3(bvec4(bvec3(bool(false), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(92.50))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y)))) || false, false || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))), mix(float(_GLF_FUZZED(-55.67)), float(max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y)))) || false))), false, false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))))))), bool(bvec4(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))))))), false, false, true))), false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (! (false))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, true), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, true), false)))))), true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), false || (false || (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, false || (false))))), true && ((false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0))))))], injectionSwitch[1]))) + vec2(0.0, 0.0)), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))), vec2(0.0, 0.0) + (injectionSwitch)), 0.0, sqrt(abs(1.0)), 0.0, 1.0, log(cos(0.0)), 0.0, _GLF_IDENTITY(sin(0.0), (sin(0.0)) - 0.0), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(36.85) : _GLF_IDENTITY(0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(-5924.9979)), bool(false)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(0.0, 0.0) + (vec2(1.0, 0.0))), vec2(1.0, sin(0.0)))), 0.0))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(1.0), vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0) * (_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(1.0), ((max(injectionSwitch, injectionSwitch)) * mat2(1.0)) * mat2(1.0))))))) * vec2(1.0, 1.0)), vec2(0.0, 0.0) + (injectionSwitch)), 0.0, sqrt(abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.1) : _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 1.0, log(cos(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(74.95) : 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.6))))))))), 0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.7))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), min(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0)))))) / 1.0), dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x2(vec2(1.0, 0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), vec2(1.0, sin(0.0)))), 0.0))).x > injectionSwitch.y))), false, true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED((-9759.5241 - 3.5))), clamp(vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED((-9759.5241 - 3.5))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED((-9759.5241 - 3.5))), max(vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED((-9759.5241 - 3.5))), vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED((-9759.5241 - 3.5))))), vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED((-9759.5241 - 3.5))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))) || false))))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(abs(0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))))).y, 1.0 * (injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) || false), true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))))), false, true), true))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))) || false))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, true), true)))))) || false)))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) - 0.0), injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true, ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true) && true))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-2.2)), bool(false))) : _GLF_FUZZED(inversesqrt(-963.651)))) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true, ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_IDENTITY(true, (true) || false)) && true))))), true, true, false)), ! (! (bool(bvec4(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true))) || false) && true, ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)) && true) && true))))), true, true, false)))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true))))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true, ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true) && true))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-2.2)), bool(false))) : _GLF_FUZZED(inversesqrt(-963.651)))) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true, ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_IDENTITY(true, (true) || false)) && true))))), true, true, false)), ! (! (bool(bvec4(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true))) || false) && true, ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)) && true) && true))))), true, true, false)))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true))))))) && true), true)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))) - 0.0)))), false, false)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-45.04, -0.1)))) * mat2(1.0)).y, injectionSwitch.y))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0))))))), false, false))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, _GLF_IDENTITY(max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0), (false ? _GLF_FUZZED(-437.107) : max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0))))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(454.655))) > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true, _GLF_IDENTITY(((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true) && true, (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true) && true, true && (((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true) && true)), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true) && true, true && (((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true) && true)))))) || false)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - _GLF_IDENTITY(0.0, (0.0) - 0.0), max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-2.2)), bool(false))) : _GLF_FUZZED(inversesqrt(-963.651)))) - 0.0))))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - _GLF_IDENTITY(0.0, (0.0) - 0.0), max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-2.2)), bool(false))) : _GLF_FUZZED(inversesqrt(-963.651)))) - 0.0))))), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - _GLF_IDENTITY(0.0, (0.0) - 0.0), max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-2.2)), bool(false))) : _GLF_FUZZED(inversesqrt(-963.651)))) - 0.0)))))))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bvec3((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)), false, true)))) && true) && _GLF_IDENTITY(true, (true) || false)) && true))))), true, true, false)), ! (! (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y), float(mat2x3(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 1.0, 1.0, 0.0, 1.0))) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true))) || false) && true, ((_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (bool(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, exp(0.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)) && true) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y), float(mat2x3(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 1.0, 1.0, 0.0, 1.0))) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true))) || false) && true, ((_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (bool(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, exp(0.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)) && true) && true))))), ((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y), float(mat2x3(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 1.0, 1.0, 0.0, 1.0))) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true))) || false) && true, ((_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (bool(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, exp(0.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)) && true) && true)))))) && true), _GLF_IDENTITY(true, false || (true)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y), float(mat2x3(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 1.0, 1.0, 0.0, 1.0))) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true))) || false) && true, ((_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (bool(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, exp(0.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)) && true) && true))))), ((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y), float(mat2x3(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 1.0, 1.0, 0.0, 1.0))) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true))) || false) && true, ((_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (bool(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, exp(0.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)) && true) && true)))))) && true), _GLF_IDENTITY(true, false || (true)), true), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y), float(mat2x3(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 1.0, 1.0, 0.0, 1.0))) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true))) || false) && true, ((_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (bool(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, exp(0.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)) && true) && true))))), ((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y), float(mat2x3(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 1.0, 1.0, 0.0, 1.0))) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true))) || false) && true, ((_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (bool(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, exp(0.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)) && true) && true)))))) && true), _GLF_IDENTITY(true, false || (true)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y), float(mat2x3(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 1.0, 1.0, 0.0, 1.0))) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true))) || false) && true, ((_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (bool(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, exp(0.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)) && true) && true))))), ((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y), float(mat2x3(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 0.0, 1.0, 1.0, 0.0, 1.0))) - 0.0))))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (bool(! ((injectionSwitch.x > injectionSwitch.y)))) && true))) || false) && true, ((_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (bool(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, exp(0.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)) && true) && true)))))) && true), _GLF_IDENTITY(true, false || (true)), true), true))))) || false)), true, true, false)))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true))))))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))) - 0.0), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))) - 0.0)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))) - 0.0)))) && true)))), false, false)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-4.6), _GLF_FUZZED(3.1)), vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], (((injectionSwitch))[1]) - 0.0)), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))) * mat2(1.0)).y, injectionSwitch.y))) - 0.0)))), false, false))) && true))) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), length(0.0), 0.0, 0.0, exp(0.0)))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), length(0.0), 0.0, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0)))).y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), length(0.0), 0.0, 0.0, exp(0.0)))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))), length(0.0), 0.0, 0.0, exp(0.0)))).y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), length(0.0), 0.0, 0.0, exp(0.0)))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), length(0.0), 0.0, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0))), vec2(mat3(_GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), length(0.0), 0.0, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0))), (vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), length(0.0), 0.0, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0)))) - vec2(0.0, 0.0)), sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))).y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), length(0.0), 0.0, 0.0, exp(0.0)))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3010.6766))), 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))), length(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), exp(0.0)))).y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))) || false), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))) || false), true, false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) * 1.0))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x < injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true))))).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant(mat2(333.396, 155.982, -8.2, -4.6))) : injectionSwitch.x)))) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant(mat2(333.396, _GLF_IDENTITY(155.982, clamp(155.982, 155.982, 155.982)), -8.2, -4.6))) : injectionSwitch.x)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(141391u)), _GLF_FUZZED(103.682)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y)) ? _GLF_FUZZED(determinant(mat2(333.396, 155.982, -8.2, -4.6))) : injectionSwitch.x)))) > injectionSwitch.y))))))), false)))) && true))) || false)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.1), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_FUZZED(1.1), 1.0)), max(float(vec2(_GLF_FUZZED(1.1), 1.0)), float(vec2(_GLF_FUZZED(1.1), 1.0)))), (true ? _GLF_IDENTITY(float(vec2(_GLF_FUZZED(1.1), 1.0)), max(float(vec2(_GLF_FUZZED(1.1), 1.0)), float(vec2(_GLF_FUZZED(1.1), 1.0)))) : _GLF_FUZZED(fma(216.056, 2590.6617, -6925.8662))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(169.151) : 1.0)), 1.0)))), 1.0)), float(vec4(float(mat3(_GLF_FUZZED(1.1), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.5)), bool(false))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 0.0))), max(_GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), abs(1.0), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(89.10)), float(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(vec4(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 0.0))))))) / 1.0)) * 1.0)), mix(float(_GLF_FUZZED(26.58)), float(float(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.1), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_FUZZED(1.1), 1.0)), max(float(vec2(_GLF_FUZZED(1.1), 1.0)), float(vec2(_GLF_FUZZED(1.1), 1.0)))), (true ? _GLF_IDENTITY(float(vec2(_GLF_FUZZED(1.1), 1.0)), max(float(vec2(_GLF_FUZZED(1.1), 1.0)), float(vec2(_GLF_FUZZED(1.1), 1.0)))) : _GLF_FUZZED(fma(216.056, 2590.6617, -6925.8662))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(169.151) : 1.0)), 1.0)))), 1.0)), float(vec4(float(mat3(_GLF_FUZZED(1.1), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.5)), bool(false))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 0.0))), max(_GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), abs(1.0), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(89.10)), float(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(vec4(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 0.0))))))) / 1.0)) * 1.0))), bool(true))), bool(false)), float(_GLF_IDENTITY(mat4x2(mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3(_GLF_FUZZED(_GLF_IDENTITY(1.1, min(1.1, 1.1))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8244.0632) : 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(1.0), bool(true))), 1.0)), abs(1.0), 1.0, 0.0))))) / 1.0)) * 1.0)), float(_GLF_IDENTITY(mat4x3(float(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3(_GLF_FUZZED(_GLF_IDENTITY(1.1, min(1.1, 1.1))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 0.0))))) / 1.0)) * 1.0)), 1.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))) ? _GLF_FUZZED(-6.8) : _GLF_ONE(1.0, injectionSwitch.y))), round(length(normalize(1.0))), 1.0, 1.0), (mat4x3(float(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3(_GLF_FUZZED(_GLF_IDENTITY(1.1, min(1.1, 1.1))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 0.0))))) / 1.0), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3(_GLF_FUZZED(_GLF_IDENTITY(1.1, min(1.1, _GLF_IDENTITY(1.1, max(1.1, _GLF_IDENTITY(1.1, clamp(1.1, 1.1, 1.1))))))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 0.0))))) / 1.0)))) * 1.0)), 1.0, 1.0, abs(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.5) : 1.0))), float(_GLF_FUZZED(-81.15)), bool(false))), 1.0)), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0))), 1.0, 1.0)) * mat4(1.0)))), bool(false)), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), 0.0), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(1.1, mix(float(_GLF_FUZZED(2.4)), float(1.1), bool(true)))), (_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.1), clamp(_GLF_IDENTITY(_GLF_FUZZED(1.1), float(float(_GLF_FUZZED(1.1)))), _GLF_FUZZED(1.1), _GLF_FUZZED(1.1))), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 0.0))))) / 1.0)) * 1.0)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(1.1, mix(float(_GLF_FUZZED(2.4)), float(1.1), bool(true)))), (_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.1), clamp(_GLF_IDENTITY(_GLF_FUZZED(1.1), float(float(_GLF_FUZZED(1.1)))), _GLF_FUZZED(1.1), _GLF_FUZZED(1.1))), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.9) : 0.0)) + (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3(_GLF_FUZZED(_GLF_IDENTITY(1.1, (1.1) / 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 0.0))))) / 1.0)) * 1.0)), bool(false))) * 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), float(_GLF_FUZZED(-1.8)), bool(false))))))), transpose(transpose(transpose(mat4x2(mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.1), max(_GLF_FUZZED(1.1), _GLF_FUZZED(1.1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3(_GLF_FUZZED(1.1), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 0.0))))) / 1.0), (_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.1), float(vec4(_GLF_FUZZED(1.1), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3(_GLF_FUZZED(1.1), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 0.0))))) / 1.0)) + 0.0)) * 1.0)), bool(false)), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), 0.0)))))))))), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(1.1), min(_GLF_FUZZED(1.1), _GLF_FUZZED(1.1))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(1.1), min(_GLF_FUZZED(1.1), _GLF_FUZZED(1.1))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(1.1), min(_GLF_FUZZED(1.1), _GLF_FUZZED(1.1))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(9302.2170)), bool(false))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(1.1), min(_GLF_FUZZED(1.1), _GLF_FUZZED(1.1))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(1.1), min(_GLF_FUZZED(1.1), _GLF_FUZZED(1.1))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3(_GLF_IDENTITY(_GLF_FUZZED(1.1), min(_GLF_FUZZED(1.1), _GLF_FUZZED(1.1))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), float(vec4(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) / 1.0)) * 1.0)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(356.084)), bool(false))))), injectionSwitch[1])).x, max(injectionSwitch.x, injectionSwitch.x))), min(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(1.1), min(_GLF_FUZZED(1.1), _GLF_FUZZED(1.1))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0)), float(vec2(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0)), clamp(float(mat3x2(1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0)), float(mat3x2(1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0)), float(mat3x2(1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0)))), 1.0)))), 1.0, 1.0)), abs(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) / 1.0)) * 1.0)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(1.1), min(_GLF_IDENTITY(_GLF_FUZZED(1.1), float(vec2(_GLF_FUZZED(1.1), length(0.0)))), _GLF_FUZZED(1.1))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) / 1.0)) * 1.0)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), mix(float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))).x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9160.2316)), bool(false))))), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3(_GLF_FUZZED(1.1), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0)), _GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED((-6103.8763 / vec2(1.2, -80.44).r))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-754.600))), 0.0))))))) / 1.0)) * 1.0)), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), injectionSwitch.x), min(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(ceil(vec2(-2.3, -6.3))))).x, (false ? _GLF_FUZZED(6.3) : injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(1.1, max(1.1, 1.1))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(256.146) : 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), clamp(1.0, 1.0, 1.0)), 1.0)), mix(float(_GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-71.96)), float(1.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (bool(injectionSwitch.x < injectionSwitch.y)) && true)))))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), max(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))), float(_GLF_FUZZED((813.141 * _GLF_IDENTITY(-2.6, (true ? -2.6 : _GLF_FUZZED(-21.28)))))), bool(false))), float(vec4(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-50.33))), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) / 1.0)) * 1.0)), bool(_GLF_IDENTITY(false, ! (! (false)))))), injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(1.1, min(1.1, _GLF_IDENTITY(1.1, min(1.1, 1.1))))), max(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(1.1, (1.1) - 0.0), min(1.1, _GLF_IDENTITY(1.1, _GLF_IDENTITY(min(1.1, 1.1), clamp(min(1.1, 1.1), min(1.1, 1.1), min(1.1, 1.1))))))), _GLF_FUZZED(_GLF_IDENTITY(1.1, min(1.1, _GLF_IDENTITY(1.1, min(1.1, 1.1))))))), (_GLF_IDENTITY(_GLF_FUZZED(1.1), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(1.1), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(vec4(float(mat3(_GLF_FUZZED(1.1), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), abs(_GLF_IDENTITY(1.0, (1.0) + 0.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(75693u))), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(706.904)), float(0.0), bool(true)))), bool(true))), 0.0), min(0.0, 0.0))))))))) / 1.0)) * 1.0)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), true, true))), true, true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), true, true))), true, true))), true), true)))), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), true)))))))))))))), injectionSwitch.x)))), float(_GLF_FUZZED(-132.291)), bool(false))))) * 1.0) > injectionSwitch.y) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), ! (! (bool(_GLF_IDENTITY(false, (false) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(false, (false) && true)))), true && (! (! (bool(_GLF_IDENTITY(false, (false) && true)))))), true, true)))), ! (! (! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(false, (false) && true)))), true && (! (! (bool(_GLF_IDENTITY(false, (false) && true)))))), true, true)))))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))) && true)))))) && true), true, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0))).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0))).y, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, tan(0.0), 0.0)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (subgroup_base), max((subgroup_base) | (subgroup_base), (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) | (subgroup_base))), _GLF_IDENTITY(max((subgroup_base) | (subgroup_base), (subgroup_base) | (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), (107479u & 0u) | (max((subgroup_base) | (subgroup_base), (subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u), uint(uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u), 1u, 1u))), 1u, 1u, 1u)))))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) : _GLF_IDENTITY(clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((subgroup_base), max((subgroup_base), (subgroup_base))))), (clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), subgroup_base)), (subgroup_base) | (subgroup_base)))) * 1u)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))))) || false), true), false, true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), min(_GLF_IDENTITY(uint(virtual_gid), 0u ^ (uint(virtual_gid))), uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))) + 0u)))), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), false, true))))), false || ((false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false)))), _GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
