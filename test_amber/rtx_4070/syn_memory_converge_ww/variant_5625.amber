#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 bvec4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 mat3x2 _f1;
 uvec4 _f2;
 mat4x2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 bool _f2;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 vec2 _f1;
 mat2x4 _f2;
 uint _f3;
 vec4 _f4;
 mat3x2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 vec4 _f1;
 uvec4 _f2;
 bvec4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 mat2 _f1;
 bool _f2;
 uint _f3;
 bool _f4;
 vec3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 mat3x4 _f1;
 int _f2;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 bvec3 _f1;
 _GLF_struct_7 _f2;
 bool _f3;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_4(mat3x4(1.0), _GLF_struct_0(bvec4(true), mat3x4(1.0), 1), _GLF_struct_1(mat2x3(1.0), mat2(1.0), true, 1u, true, vec3(1.0), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), mat2(mat2x3(mat2(mat4x2(mat2(1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(mat4x2(mat2(1.0))), (false ? _GLF_FUZZED(mat2(0.2, -3.9, 274.812, 3.9)) : mat2(mat4x2(mat2(1.0))))), mat2(mat2x3(mat2(mat4x2(mat2(1.0))))))), mat2(mat4(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(1.0))), mat2(mat2x3(mat2(mat4x2(mat2(1.0))))))))))) - mat2(0.0, 0.0, 0.0, 0.0)), vec4(1.0), uvec4(1u), bvec4(true), vec4(1.0)), _GLF_struct_3(mat2x4(1.0), vec2(1.0), mat2x4(1.0), 1u, vec4(1.0), mat3x2(1.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-241.993)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-241.993)), (false ? _GLF_FUZZED(854.638) : float(_GLF_FUZZED(-241.993)))), float(_GLF_FUZZED(-241.993)))), bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), 1.0, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(78.50)), (_GLF_IDENTITY(float(_GLF_FUZZED(78.50)), min(float(_GLF_FUZZED(78.50)), float(_GLF_FUZZED(78.50))))) - 0.0), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true)))))))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true))))))))))))))), mat2(1.0)), bvec3(true), _GLF_struct_7(_GLF_struct_5(mat4(1.0), mat3x2(1.0), _GLF_IDENTITY(uvec4(1u), (true ? uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 1u, 1u)), (uint(uvec4(1u, 0u, 1u, 1u))) | 0u))) - 0u)) : _GLF_FUZZED(uvec4(115649u, 199079u, 83910u, 197409u)))), mat4x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) | (ivec3(1)))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1), min(ivec3(1), _GLF_IDENTITY(ivec3(1), (ivec3(1)) >> ivec3(0, 0, 0))))) / ivec3(_GLF_IDENTITY(1, 0 | (1)), 1, 1))), _GLF_struct_6(bvec4(true), mat3x4(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) && true))))), ! (! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) && true))))))))), true, gl_SubgroupID);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) ^ _GLF_IDENTITY((76677u & 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((76677u & _GLF_IDENTITY(0u, min(0u, 0u))), 0u | ((76677u & 0u))), 1u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY((76677u & 0u), clamp((76677u & 0u), _GLF_IDENTITY((76677u & 0u), (0u | 0u) | ((76677u & 0u))), (76677u & 0u))), _GLF_IDENTITY(0u | ((76677u & 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u | ((76677u & 0u))))), 1u)), uvec2(0u, 0u) ^ ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY((76677u & 0u), clamp((76677u & 0u), _GLF_IDENTITY((76677u & 0u), (0u | 0u) | ((76677u & 0u))), (76677u & 0u))), _GLF_IDENTITY(0u | ((76677u & 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u | ((76677u & 0u))))), 1u)))) << uvec2(0u, 0u)))));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_local_id)))))), max(_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), (gl_WorkGroupSize.x)))) | ((gl_WorkGroupSize.x)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupSize.x))) : _GLF_FUZZED(write_val))))), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) << 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize.x) : _GLF_FUZZED(write_val)))))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize.x) : _GLF_FUZZED(write_val)))))))) | ((gl_WorkGroupSize.x)), ((_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) | ((gl_WorkGroupSize.x))) - 0u)) ^ 0u)), (_GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) | ((gl_WorkGroupSize.x)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize.x) : _GLF_FUZZED(write_val))))), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize.x) : _GLF_FUZZED(write_val)))))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize.x) : _GLF_FUZZED(_GLF_IDENTITY(write_val, (write_val) / 1u))))))))) | ((gl_WorkGroupSize.x)), ((_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) | ((gl_WorkGroupSize.x))) - 0u)) ^ 0u))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) | ((gl_WorkGroupSize.x)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize.x) : _GLF_FUZZED(write_val))))), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize.x) : _GLF_FUZZED(write_val)))))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize.x) : _GLF_FUZZED(write_val)))))))) | ((gl_WorkGroupSize.x)), ((_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) | ((gl_WorkGroupSize.x))) - 0u)) ^ 0u)))) / _GLF_IDENTITY(1u, ~ (~ (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, ~ (~ (1u)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true))) ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(107451u))), ~ (~ (1u)))), clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ (min(gl_WorkGroupSize, gl_WorkGroupSize)), (~ (min(gl_WorkGroupSize, gl_WorkGroupSize))) / uvec3(1u, 1u, 1u))))).x, (gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, ~ (~ (1u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6661.6938))) > injectionSwitch.y)) ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), 1u * ((~ (1u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), 1u * ((~ (1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), 1u * ((~ (1u)))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))))), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), (true ? float(mat4x2(1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)) : _GLF_FUZZED(-5.7)))), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0))))) ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, ~ (~ (1u)))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (1u))))) * 1u)) * (1u & 1u))) | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))).x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))).x, clamp(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))).x, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))).x) * 1u), _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))).x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_size * workgroup_id)), clamp(~ (~ (workgroup_size * workgroup_id)), ~ (~ (workgroup_size * workgroup_id)), _GLF_IDENTITY(~ (~ (workgroup_size * workgroup_id)), 1u * (~ (~ (workgroup_size * workgroup_id)))))))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 0u)), uint(uvec3(uint(uvec2(workgroup_size, 0u)), 0u, 0u))))) / 1u) * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_size * workgroup_id)), ~ (_GLF_IDENTITY(~ (~ (~ (workgroup_size * workgroup_id))), (~ (~ (~ (workgroup_size * workgroup_id)))) | (~ (~ (~ (workgroup_size * workgroup_id))))))))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).x))), (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_size * workgroup_id)), ((~ (workgroup_size * workgroup_id))) | ((~ (workgroup_size * workgroup_id)))))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0))).x)))) * 1u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec2(_GLF_FUZZED(injectionSwitch)))) : injectionSwitch)).x, (false ? _GLF_FUZZED(5.7) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_id) >> 0u, clamp((_GLF_struct_replacement_8.subgroup_id) >> 0u, _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_id) >> 0u, _GLF_IDENTITY(((_GLF_struct_replacement_8.subgroup_id) >> 0u), (_GLF_IDENTITY(((_GLF_struct_replacement_8.subgroup_id) >> 0u), max(((_GLF_struct_replacement_8.subgroup_id) >> 0u), ((_GLF_struct_replacement_8.subgroup_id) >> 0u)))) | 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_struct_replacement_8.subgroup_id) >> 0u))) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED(-89.03)), vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[1], (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[1], mix(float((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[1]), float(_GLF_FUZZED(3.5)), bool(false)))) - 0.0)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), true))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED(-89.03)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[1]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), true))), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(69567u))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.2)), float(0.0), bool(true))))), (false ? _GLF_FUZZED(-270.003) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.2)), float(0.0), bool(true))))), clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.2)), float(0.0), bool(true)))), (clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.2)), float(0.0), bool(true))))) - 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.2)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))))))))), 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))) / 1.0))))))) > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), false || ((_GLF_IDENTITY(true, (true) || false))))), true))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) < injectionSwitch.y)) && _GLF_IDENTITY((true), _GLF_IDENTITY(true && (_GLF_IDENTITY((true), false || ((true)))), (true && (_GLF_IDENTITY((true), false || ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), _GLF_IDENTITY(! (! (bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (true)))), false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false)))), _GLF_IDENTITY((! (! (bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false))))) || false, _GLF_IDENTITY(bool(bvec2((! (! (bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false))))) || false, true)), bool(bvec4(bool(bvec2((! (! (bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false))))) || false, true)), false, true, true))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(! (! (bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 1.0, abs(1.0))), 0.0, 0.0, 0.0, 0.0))).y)) && (true)), false)))), (! (! (bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false))))) || false), true, true, true))) || false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(5087.0664, max(5087.0664, 5087.0664)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false)))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, false || (false)))))))))), bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, true && (true)), false), false))))))), false, _GLF_IDENTITY(true, false || (true)))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec4((injectionSwitch) * mat2(1.0), 0.0, 0.0)))).y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, false || (false)))))))))), bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, true && (true)), false), false))))))), false, _GLF_IDENTITY(true, false || (true))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.5) : 0.0)), 0.0))).x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0), mat4(1.0) * (mat4(injectionSwitch, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))))).y))))))), false, true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8346.3268)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.3)), float(injectionSwitch.x), bool(true)))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8346.3268)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.3)), float(injectionSwitch.x), bool(true)))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) && true), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))))) || false))))))), false, true)))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y, false, false, false)))))))), bool(bvec3(! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))), false, true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))), false, true)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))), false, true)))), true, false))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && ((injectionSwitch.x > injectionSwitch.y)), false || (true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))), false, true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true, true, false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && (bool(bvec4(false, true, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)), clamp(clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)), (clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(3.9) : clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(mat3x2(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0))))))))))), float(_GLF_IDENTITY(_GLF_FUZZED(-7.6), clamp(_GLF_FUZZED(-7.6), _GLF_IDENTITY(_GLF_FUZZED(-7.6), (_GLF_FUZZED(-7.6)) / 1.0), _GLF_FUZZED(-7.6)))), bool(false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.6))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1]), max(vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(6.2), _GLF_IDENTITY(_GLF_FUZZED(555.208), clamp(_GLF_FUZZED(555.208), _GLF_FUZZED(555.208), _GLF_FUZZED(555.208)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), false, true, false)), (bool(bvec4(bool(true), false, true, false))) || false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(697.135, -720.790)))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), false || (false || (true)))) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, clamp(64, 64, 64)), 64)), _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) + (0 >> _GLF_IDENTITY(int(4), int(4)))))), max(0, 0)), max(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), min(_GLF_IDENTITY(int(ivec2(0, 1)), min(int(ivec2(0, 1)), int(ivec2(0, 1)))), int(ivec2(0, 1))))))), _GLF_IDENTITY(0, max(0, 0))))) >> 0));
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, _GLF_IDENTITY(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec3(1u, 1u, 1u) * _GLF_IDENTITY((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), ((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) | (_GLF_IDENTITY((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (false ? _GLF_FUZZED(uvec3(92324u, 107706u, 168920u)) : (uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(160375u, 77253u, 117232u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec3(1u, 1u, 1u) * _GLF_IDENTITY((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), ((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) | (_GLF_IDENTITY((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (false ? _GLF_FUZZED(uvec3(92324u, 107706u, 168920u)) : (uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), clamp(_GLF_IDENTITY(uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec3(1u, 1u, 1u) * _GLF_IDENTITY((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), ((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) | (_GLF_IDENTITY((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (false ? _GLF_FUZZED(uvec3(92324u, 107706u, 168920u)) : (uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), _GLF_IDENTITY(uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec3(1u, 1u, 1u) * _GLF_IDENTITY((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), ((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) | (_GLF_IDENTITY((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (false ? _GLF_FUZZED(uvec3(92324u, 107706u, 168920u)) : (uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), _GLF_IDENTITY(uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec3(1u, 1u, 1u) * _GLF_IDENTITY((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), ((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) | (_GLF_IDENTITY((uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (false ? _GLF_FUZZED(uvec3(92324u, 107706u, 168920u)) : (uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))))))), (_GLF_IDENTITY(uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u) * (uvec3(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), uint(uvec2(max(write_val, _GLF_IDENTITY(write_val, ~ (~ (write_val)))), 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec3(1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u) * (uvec3(max(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(~ (~ (write_val)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (write_val)), (_GLF_IDENTITY(~ (~ (write_val)), clamp(~ (~ (write_val)), ~ (~ (write_val)), ~ (~ (write_val))))) - 0u), (_GLF_IDENTITY(~ (~ (write_val)), (_GLF_IDENTITY(~ (~ (write_val)), clamp(~ (~ (write_val)), ~ (~ (write_val)), ~ (~ (write_val))))) - 0u)) >> 0u)) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, true))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))) && true)))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false, true))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
