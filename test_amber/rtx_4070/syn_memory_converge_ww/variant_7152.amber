#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, true && (false))))))))))), _GLF_IDENTITY(bool(bool(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, false || (true)), false))), false)))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), false)))), (bool(bool(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), false))))) || false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), bool(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))), false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))))))))))))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), false || (bool(_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), (bool(_GLF_IDENTITY(true, (true) && true))) && true), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec4(bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, (_GLF_IDENTITY((true) && true, bool(bool((true) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), bool(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))), false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false))))))))))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false))))))))))))), bool(bvec3(! ((_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false))))))))))))), true, true)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), true, true))), (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), bool(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))), false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), bool(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))), false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), _GLF_IDENTITY(! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))), false || (! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec3(bool(_GLF_IDENTITY(true, (true) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || _GLF_IDENTITY(false, false || (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(73537)), _GLF_FUZZED(2065.1504)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), bool(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))), false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))))))))))))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), false || (bool(_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), (bool(_GLF_IDENTITY(true, (true) && true))) && true), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec4(bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, (_GLF_IDENTITY((true) && true, bool(bool((true) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), bool(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))), false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false))))))))))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false))))))))))))), bool(bvec3(! ((_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false))))))))))))), true, true)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), true, true))), (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), bool(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))), false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), bool(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))), false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)), _GLF_IDENTITY(! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))), false || (! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec3(bool(_GLF_IDENTITY(true, (true) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || _GLF_IDENTITY(false, false || (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(73537)), _GLF_FUZZED(2065.1504)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))))) && true))), true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) && true), true))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec4(bool(_GLF_IDENTITY(true, (true) && true)), true, true, false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (true) && true)))) && true))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) && true)), true, true, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) && true)), true, true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) && true)), true, true, false)), true)), (bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) && true)), true, true, false)), true))) && true))) || false))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) && true)), true, true, false)))))))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (true) && true)))) && true))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) && true)), true, true, false)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) && true)), true, true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) && true)), true, true, false)), true)), (bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) && true)), true, true, false)), true))) && true))) || false))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) && true)), true, true, false))))))))) && true))), true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), true)))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(vec3(-3.2, 0.0, 0.0))))), vec2(_GLF_FUZZED(2.0), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / exp(0.0))), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y))))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.2)), vec2(_GLF_FUZZED(2.0), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / exp(0.0))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.2)), vec2(_GLF_FUZZED(2.0), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / exp(0.0))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.2)), vec2(_GLF_FUZZED(2.0), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / exp(0.0))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) && true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || _GLF_IDENTITY((true && (false)), ((true && (false))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(-88.92)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).x), bool(true))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(4.0) : 0.0))))))) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((947.838 - -3.8))), bool(false))))))), true && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(4.0) : 0.0))))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x))) / 1.0), float(mat2x3(injectionSwitch.x, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(4.0) : 0.0))))))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, log(1.0), _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), sqrt(0.0), 1.0, 0.0, 1.0, abs(0.0)))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(4.0, clamp(4.0, _GLF_IDENTITY(4.0, _GLF_IDENTITY(min(4.0, 4.0), (min(4.0, 4.0)) - sin(0.0))), _GLF_IDENTITY(4.0, mix(float(_GLF_FUZZED(7304.7104)), float(4.0), bool(true)))))) : 0.0))))))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, log(1.0), _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), sqrt(0.0), 1.0, 0.0, 1.0, abs(0.0)))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(4.0, clamp(4.0, _GLF_IDENTITY(4.0, _GLF_IDENTITY(min(4.0, 4.0), (min(4.0, 4.0)) - sin(0.0))), _GLF_IDENTITY(4.0, mix(float(_GLF_FUZZED(7304.7104)), float(4.0), bool(true)))))) : 0.0))))))) > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, log(1.0), _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), sqrt(0.0), 1.0, 0.0, 1.0, abs(0.0)))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(4.0, clamp(4.0, _GLF_IDENTITY(4.0, _GLF_IDENTITY(min(4.0, 4.0), (min(4.0, 4.0)) - sin(0.0))), _GLF_IDENTITY(4.0, mix(float(_GLF_FUZZED(7304.7104)), float(4.0), bool(true)))))) : 0.0))))))) > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, log(1.0), _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), 1.0, 0.0, 1.0, abs(0.0)))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) ? _GLF_FUZZED(_GLF_IDENTITY(4.0, clamp(4.0, _GLF_IDENTITY(4.0, _GLF_IDENTITY(min(4.0, 4.0), (min(4.0, 4.0)) - sin(0.0))), _GLF_IDENTITY(4.0, mix(float(_GLF_FUZZED(7304.7104)), float(4.0), bool(true)))))) : 0.0))))))) > injectionSwitch.y))))))))))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(8384.6080)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(8384.6080)), (float(_GLF_FUZZED(8384.6080))) * 1.0), _GLF_IDENTITY(float(_GLF_FUZZED(8384.6080)), min(float(_GLF_FUZZED(8384.6080)), float(_GLF_FUZZED(8384.6080)))), float(_GLF_FUZZED(8384.6080)))), bool(false)))), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4456.5826, 6067.4088)))), injectionSwitch)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4456.5826, 6067.4088)))), injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))).y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, false || (true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size));
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u | 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) - 0.0)), mix(float((_GLF_IDENTITY(1.0, (1.0) - 0.0))), float(_GLF_FUZZED(4352.9543)), bool(false))))), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 1.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, _GLF_IDENTITY(64, 0 + (64)), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, false))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, true && (true)))), (bool(! (_GLF_IDENTITY(true, true && (true))))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))), false)))), false || (bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))), false))))))), true && (! (_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))), false)))), false || (bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! ((_GLF_IDENTITY(true, true && (true)))))), false))))))))))), (bool(! (_GLF_IDENTITY(true, true && (true))))) && true))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, false))), true, true), true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec3(bvec3((false), false, true)))))))), false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec3(bvec3((false), false, true))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), ~ (~ (_GLF_IDENTITY(atomicLoad(write_val, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) / 1), 0), max(atomicLoad(write_val, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) / 1), 0), atomicLoad(write_val, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) / 1), 0))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (_GLF_IDENTITY(~ (uint(subgroupAllEqual(read_val))), 0u | (~ (uint(subgroupAllEqual(read_val))))))), (true ? _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(subgroupAllEqual(read_val))), 0u | (~ (uint(subgroupAllEqual(read_val))))), (_GLF_IDENTITY(~ (uint(subgroupAllEqual(read_val))), 0u | (~ (uint(subgroupAllEqual(read_val)))))) / 1u))) : _GLF_FUZZED((_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size))))))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
