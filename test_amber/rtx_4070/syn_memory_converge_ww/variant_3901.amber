#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec4(bool(bvec2(_GLF_DEAD(false), true)), true, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0), vec4(tan(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0), vec4(tan(0.0), 0.0, 1.0, 0.0)), min(dot(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0), vec4(tan(0.0), 0.0, 1.0, 0.0)), dot(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0), vec4(tan(0.0), 0.0, 1.0, 0.0))))), 1.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || (false)))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.2) : injectionSwitch.y))))), true)))) || (false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))))))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) || false)))) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.5), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, log(1.0), 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))))[_GLF_IDENTITY(1, clamp(1, 1, 1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(77.93)), bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))) * _GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uint(workgroup_id), (uint(workgroup_id)) | (uint(workgroup_id)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-1.6, 5781.4959)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), _GLF_IDENTITY((false) && true, bool(bvec4(_GLF_IDENTITY((false) && true, ((false) && true) || false), true, true, false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), _GLF_IDENTITY((false) && true, bool(bvec4(_GLF_IDENTITY((false) && true, ((false) && true) || false), true, true, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)))))), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true))))))))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(((_GLF_DEAD(false)) || false) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(((_GLF_DEAD(false)) || false) && true), (bool(((_GLF_DEAD(false)) || false) && true)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(((_GLF_DEAD(false)) || false) && true), (bool(((_GLF_DEAD(false)) || false) && true)) || false)), (! (_GLF_IDENTITY(bool(((_GLF_DEAD(false)) || false) && true), (bool(((_GLF_DEAD(false)) || false) && true)) || false))) && true)))), bool(bool(bool(_GLF_IDENTITY(bool(((_GLF_DEAD(false)) || false) && true), (bool(((_GLF_DEAD(false)) || false) && true)) || false)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false)) || false), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) || false), (! ((_GLF_DEAD(false)) || false)) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) || false), (! ((_GLF_DEAD(false)) || false)) && true)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) || false), (! ((_GLF_DEAD(false)) || false)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))), (_GLF_IDENTITY((! ((_GLF_DEAD(false)) || false)), false || ((! ((_GLF_DEAD(false)) || false))))) || false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(false)) || false), _GLF_IDENTITY((! ((_GLF_DEAD(false)) || false)), (_GLF_IDENTITY((! ((_GLF_DEAD(false)) || false)), false || ((! ((_GLF_DEAD(false)) || false))))) || false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(false)) || false), _GLF_IDENTITY((! ((_GLF_DEAD(false)) || false)), (_GLF_IDENTITY((! ((_GLF_DEAD(false)) || false)), false || ((! ((_GLF_DEAD(false)) || false))))) || false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! ((_GLF_DEAD(false)) || false), _GLF_IDENTITY((! ((_GLF_DEAD(false)) || false)), (_GLF_IDENTITY((! ((_GLF_DEAD(false)) || false)), false || ((! ((_GLF_DEAD(false)) || false))))) || false) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! ((_GLF_DEAD(false)) || false), _GLF_IDENTITY((! ((_GLF_DEAD(false)) || false)), (_GLF_IDENTITY((! ((_GLF_DEAD(false)) || false)), false || ((! ((_GLF_DEAD(false)) || false))))) || false) && true), true))))))))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true))), (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u ^ 0u) | _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), _GLF_IDENTITY(uint(uvec2(uint(workgroup_base), 1u)), (_GLF_IDENTITY(uint(uvec2(uint(workgroup_base), 1u)), max(uint(uvec2(uint(workgroup_base), 1u)), uint(uvec2(_GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(workgroup_base))), 1u))))) | _GLF_IDENTITY(0u, max(0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) / 1u), 1u * (uint(workgroup_base))), _GLF_IDENTITY(uint(workgroup_base), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(workgroup_base))))), ~ (~ (_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base))))))) << 0u))), max(workgroup_base, workgroup_base)) : _GLF_FUZZED(subgroup_size))) + subgroup_id * subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u ^ 0u) | (workgroup_base)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(uvec4(_GLF_IDENTITY(uint(workgroup_base), 1u * (_GLF_IDENTITY(uint(workgroup_base), max(_GLF_IDENTITY(uint(workgroup_base), ~ (_GLF_IDENTITY(~ (uint(workgroup_base)), (true ? ~ (uint(workgroup_base)) : _GLF_FUZZED(191088u))))), uint(workgroup_base))))), 0u, 0u, 1u))), uint(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base))), ~ (~ (_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base))), ~ (~ (_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base))), ~ (~ (_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base))))))))) << _GLF_IDENTITY(0u, (0u) << 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), 1u * (uint(workgroup_base))), uint(workgroup_base))), ~ (~ (_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base))))))) << _GLF_IDENTITY(0u, (0u) << 0u)) >> 0u)))), max(workgroup_base, workgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u | (_GLF_FUZZED(subgroup_size)))) | (_GLF_FUZZED(subgroup_size)))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u ^ 0u) | (workgroup_base)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(uvec4(_GLF_IDENTITY(uint(workgroup_base), 1u * (_GLF_IDENTITY(uint(workgroup_base), max(_GLF_IDENTITY(uint(workgroup_base), ~ (_GLF_IDENTITY(~ (uint(workgroup_base)), (true ? ~ (uint(workgroup_base)) : _GLF_FUZZED(191088u))))), uint(workgroup_base))))), 0u, 0u, 1u))), uint(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base))), ~ (~ (_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base))), ~ (~ (_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base))), ~ (~ (_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base))))))))) << _GLF_IDENTITY(0u, (0u) << 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), 1u * (uint(workgroup_base))), uint(workgroup_base))), ~ (~ (_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), uint(workgroup_base))))))) << _GLF_IDENTITY(0u, (0u) << 0u)) >> 0u)))), max(workgroup_base, workgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u | (_GLF_FUZZED(subgroup_size)))) | (_GLF_FUZZED(subgroup_size))))) >> 0u)) + subgroup_id * subgroup_size), 0u ^ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(0u, (0u) | (0u)) ^ 0u) | (workgroup_base)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), 0u, 0u, 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), 0u, 0u, 1u)), 0u | (uint(uvec4(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), 0u, 0u, 1u))))), (~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), 0u, 0u, 1u)), 0u | (uint(uvec4(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), 0u, 0u, 1u)))))) | (~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), 0u, 0u, 1u)), 0u | (uint(uvec4(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(workgroup_base))), 0u, 0u, 1u)))))))))), uint(workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(workgroup_base), 1u * (uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) + 0u)))), uint(workgroup_base))), ~ (~ (_GLF_IDENTITY(uint(workgroup_base), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), workgroup_base))), 1u * (uint(workgroup_base))), uint(workgroup_base))))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) << 0u)))), max(workgroup_base, workgroup_base)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 0u | (~ (uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))))))))) + subgroup_id * subgroup_size))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.1)), bool(false))) > injectionSwitch.y)))), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, log(1.0), 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))))))))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(bitCount(workgroup_size)) : 4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) && true)))), false || ((! (! (_GLF_IDENTITY(false, (false) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(48.36, (48.36) - 0.0)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))), _GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3x2(mat3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, cos(0.0), 1.0, 0.0, 0.0), (mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, cos(0.0), 1.0, 0.0, 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0))) : _GLF_FUZZED(-3354.1251)), mix(float(_GLF_FUZZED(-474.677)), float((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(-3354.1251), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))), max(true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(-3354.1251), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(-3354.1251), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))), clamp(true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(-3354.1251), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))), true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(-3354.1251), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))), true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(-3354.1251), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), (mat2(_GLF_FUZZED(-3354.1251), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))))))))))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), 0.0))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y), 0.0))) : _GLF_FUZZED(-3354.1251))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(48.36) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251)), mix(float(_GLF_FUZZED(-474.677)), float((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251)), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251)), mix(float(_GLF_FUZZED(-474.677)), float((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251)), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251)), mix(float(_GLF_FUZZED(-474.677)), float((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251)), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251)), mix(float(_GLF_FUZZED(-474.677)), float((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251)), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-3354.1251))))))))) > injectionSwitch.y), false, true, true)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1951.1741)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), false, true)), true))))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_IDENTITY(bool(bool(! (! (false || (false))))), (bool(bool(! (! (false || (false)))))) || false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, true))), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, true))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (injectionSwitch.x < injectionSwitch.y)), true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), true && (! ((false) || false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))) || false)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true)) || false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true)) || false) || false)))))))) || false))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))))), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), ! (! (! ((false) || false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)) || false)))))) || false))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))))))))), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) || false, false || ((false) || false)))) || false)))))) || false))), false, false), bvec3(bvec3(bvec3(false, false, false)))), true))), false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))).x, mix(float(_GLF_FUZZED(vec3(-947.969, -190.792, 31.94).r)), float(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))).x), bool(true))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(~ (~ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (read_val)))))), (_GLF_IDENTITY(~ (~ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (read_val)))))), (~ (~ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (read_val))))))) ^ 0u)) / 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
