#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.2) : injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y)))), false || _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ! (! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), (! ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))) && true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, log(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 1.0))) > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), mix(float(_GLF_FUZZED(28.11)), float(float(vec2(injectionSwitch.y, 0.0))), bool(true)))))), false, false), false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), mix(float(_GLF_FUZZED(28.11)), float(float(vec2(injectionSwitch.y, 0.0))), bool(true)))))), false, false), false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), mix(float(_GLF_FUZZED(28.11)), float(float(vec2(injectionSwitch.y, 0.0))), bool(true)))))), false, false), false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), mix(float(_GLF_FUZZED(28.11)), float(float(vec2(injectionSwitch.y, 0.0))), bool(true)))))), false, false), false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))) || false)))), true, true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)), (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false, false))) && true)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, false || ((_GLF_DEAD(false)) || false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) && true), _GLF_IDENTITY((_GLF_DEAD(false)) || false, false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) || false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))), false), true, true)))))))) || ((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) || false))))) || false)))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-7555.6953, mix(float(-7555.6953), float(_GLF_FUZZED(float((-32443 + 38002)))), bool(false))))), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))) || false)))))) || false), false, false, false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! _GLF_IDENTITY((! (_GLF_IDENTITY((false) || false, ((false) || false) || false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY((! (_GLF_IDENTITY((false) || false, ((false) || false) || false))), ! (! ((! (_GLF_IDENTITY((false) || false, ((false) || false) || false)))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.0, -9.1)) : injectionSwitch)))).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))), ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) || false))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x < injectionSwitch.y))), false, false)), _GLF_IDENTITY(true, false || (true)), false)))))), bool(bvec4(false, false, false, false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))))), ((bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) && true))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, false, false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), bool(bvec4(! ((! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), false, true, true)))))), bool(bvec4(false, false, false, false))))), ((bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) && true))))))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-1.0, -9.1)) : injectionSwitch, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-1.0, -9.1)) : injectionSwitch, min(false ? _GLF_FUZZED(vec2(-1.0, -9.1)) : injectionSwitch, false ? _GLF_FUZZED(vec2(-1.0, -9.1)) : injectionSwitch)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-1.0, -9.1)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(535.087, 8.1)) : false ? _GLF_FUZZED(vec2(-1.0, -9.1)) : injectionSwitch)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-1.0, -9.1)) : injectionSwitch, vec2(1.0, 1.0) * (false ? _GLF_FUZZED(vec2(-1.0, -9.1)) : injectionSwitch)))))))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) || false))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x < injectionSwitch.y))), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, false || (true)))), false)))))), bool(bvec4(false, false, false, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), true && ((false))))) && true))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) || false))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(651.834)), vec2(_GLF_FUZZED(9414.1223), (injectionSwitch)[1]), bvec2(false, true)))) * _GLF_IDENTITY(cos(vec2(0.0, 0.0)), log(vec2(1.0, 1.0)) + (cos(vec2(0.0, 0.0))))).x < injectionSwitch.y))), false, false)), _GLF_IDENTITY(true, false || (true)), false)))))), bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) || false))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x < injectionSwitch.y))), false, false)), _GLF_IDENTITY(true, false || (true)), false)))))), bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) || false))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x < injectionSwitch.y))), false, false)), _GLF_IDENTITY(true, false || (true)), false)))))), bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)), true))))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))))), ((bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) && true))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))) && true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))) && true)), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))) && true)), false))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))) && true)), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))) && true)), false))), true))))))))))), bool(bvec4(false, false, false, false))))), ((bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) && true))))))), true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) || false))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x < injectionSwitch.y))), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, false || (true)))), false)))))), bool(bvec4(false, false, false, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), true && ((false))))) && true))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) || false))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(651.834)), vec2(_GLF_FUZZED(9414.1223), (injectionSwitch)[1]), bvec2(false, true)))) * _GLF_IDENTITY(cos(vec2(0.0, 0.0)), log(vec2(1.0, 1.0)) + (cos(vec2(0.0, 0.0))))).x < injectionSwitch.y))), false, false)), _GLF_IDENTITY(true, false || (true)), false)))))), bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) || false))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x < injectionSwitch.y))), false, false)), _GLF_IDENTITY(true, false || (true)), false)))))), bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) || false))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x < injectionSwitch.y))), false, false)), _GLF_IDENTITY(true, false || (true)), false)))))), bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)), true))))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))))), ((bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) && true))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))) && true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))) && true)), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))) && true)), false))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))) && true)), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))) && true)), false))), true))))))))))), bool(bvec4(false, false, false, false))))), ((bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) && true))))))), true))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-845.839)), bool(false))), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-845.839)), bool(false))), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-845.839)), bool(false))), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))) || false), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))) && true, false || (((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), true, true), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), true, true))))))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true))))))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))))), true), true, true)))))))) && true))))) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))), ! (! (bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), false || ((bool(bvec2(false, true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))), true, true)), true))))), ! (! (bool(bvec2(false, _GLF_IDENTITY(true, true && (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), _GLF_IDENTITY(false || ((bool(bvec2(false, true)))), (false || ((bool(bvec2(false, true))))) && true))))))) || false))) || false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, bool(bvec2((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, bool(bvec2((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, bool(bvec2((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, bool(bvec2((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, bool(bvec2((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, bool(bvec2((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, bool(bvec2((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, bool(bvec2((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, bool(bvec2((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, bool(bvec2((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))) || false), true), true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))), bool(bvec3(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (_GLF_IDENTITY(! (! (bool(bvec2(false, true)))), (! (! (bool(bvec2(false, true))))) || false))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), _GLF_IDENTITY(! (! (bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3(! (! (bool(bvec2(false, true)))), true, false), bvec3(bvec4(bvec3(! (! (bool(bvec2(false, true)))), true, false), true)))))))))) || false))), false, false)), false, false)))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) && (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), ! (! (bool(bvec4((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))))))), true))), _GLF_IDENTITY(bool(bvec2((bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), ! (! (bool(bvec4((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2((bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), ! (! (bool(bvec4((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), false || ((bool(bvec2(false, true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! _GLF_IDENTITY((! (bool(bvec2(false, _GLF_IDENTITY(true, true && (true)))))), ! (! (_GLF_IDENTITY((! (bool(bvec2(false, _GLF_IDENTITY(true, true && (true)))))), true && ((! (bool(bvec2(false, _GLF_IDENTITY(true, true && (true)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(false, true))), false || ((bool(bvec2(false, true))))), false || (! _GLF_IDENTITY((bool(bvec2(false, true))), false || ((bool(bvec2(false, true)))))))))))) || false))) || false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec3((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false)))) || false) && true))) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((bool(bvec3((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true))) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec4(bvec2((bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true)), bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true)), true, true, true)))) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), false)))))))), false, true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((bool(bvec3((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true))) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec4(bvec2((bool(bvec3((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true))) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))))), bool(bvec3(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))) || false), false, false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) || false)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) || false))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) || false)))))))))))))), ! (! (bool(bvec2(false, true))))))) || false))), false, false)), false, false)))))))), bool(bool(bool(bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_IDENTITY(true, (true) && true))), ! (! (bool(bvec2(false, true))))))) || false), false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false))))))), true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(false, true)))), true && ((! (bool(bvec2(false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(false, true)))), true && (_GLF_IDENTITY((! (bool(bvec2(false, true)))), ! (! ((! (bool(bvec2(false, true))))))))), bool(bool(_GLF_IDENTITY((! (bool(bvec2(false, true)))), true && ((! (bool(bvec2(false, true)))))))))))), (_GLF_IDENTITY(! (! (bool(bvec2(false, true)))), (! (! (bool(bvec2(false, true))))) || false)) && true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(false, true)))), true && ((! (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(false, true)))), true && ((! (bool(bvec2(false, true)))))), ! (! (_GLF_IDENTITY((! (bool(bvec2(false, true)))), true && ((! (bool(bvec2(false, true))))))))), bool(bool(_GLF_IDENTITY((! (bool(bvec2(false, true)))), true && ((! (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(false, true)))), true && ((! (bool(bvec2(false, true)))))), bool(bool(_GLF_IDENTITY((! (bool(bvec2(false, _GLF_IDENTITY(true, false || (true)))))), true && ((! (bool(bvec2(false, true)))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(false, true)))), true && ((! (bool(bvec2(false, true)))))), bool(bool(_GLF_IDENTITY((! (bool(bvec2(false, true)))), true && ((! (bool(bvec2(false, true)))))))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (! (! (bool(bvec2(false, true))))))), (! (! (bool(bvec2(false, true))))) || false)) && true))))) || false)))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))), false, true)))))), false, false)), false, false)), false || (_GLF_IDENTITY(bool(bvec3(bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec2(false, true)))), true && ((! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec2(false, true)))), false || ((! (bool(bvec2(false, true)))))), (! (! (bool(bvec2(false, true))))) || false)) && true))))))) || false), false, false)), false, false)), (bool(bvec3(bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec2(false, true)))), true && ((! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(! (! (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), (! (! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, false))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, false))))), true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, false))))), true), true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, false))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, false))))), true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, false))))), true), true))))))), false, false)))))))) || false)) && true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))), true && ((! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(! (! (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (! (bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (! (bool(bvec2(false, true))))) || false)) && true)))), ! (! (false || (_GLF_IDENTITY(! (bool(bvec2(false, true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))), true && ((! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(! (! (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (! (bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (! (bool(bvec2(false, true))))) || false)) && true)), (! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))), true && ((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))))), true && ((! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(! (! (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7393.4151)), bool(false))))), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (! (bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.37), _GLF_FUZZED(float(40817))), bvec2(false, false))).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.37), _GLF_FUZZED(float(40817))), bvec2(false, false))).x, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0))) < injectionSwitch.y)), false, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((! (! (bool(bvec2(false, true))))) || false, (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))) || false, _GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(false, true))))) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3((! (! (bool(bvec2(false, true))))) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))), true && ((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))))), true && ((! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(! (! (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7393.4151)), bool(false))))), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (! (bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.37), _GLF_FUZZED(float(40817))), bvec2(false, false))).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.37), _GLF_FUZZED(float(40817))), bvec2(false, false))).x, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0))) < injectionSwitch.y)), false, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((! (! (bool(bvec2(false, true))))) || false, (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))) || false, _GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(false, true))))) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3((! (! (bool(bvec2(false, true))))) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true))) && true)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))), true && ((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))))), true && ((! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(! (! (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7393.4151)), bool(false))))), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (! (bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.37), _GLF_FUZZED(float(40817))), bvec2(false, false))).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.37), _GLF_FUZZED(float(40817))), bvec2(false, false))).x, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0))) < injectionSwitch.y)), false, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((! (! (bool(bvec2(false, true))))) || false, (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))) || false, _GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(false, true))))) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3((! (! (bool(bvec2(false, true))))) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true))) && true)), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))), true && ((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))))), true && ((! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(! (! (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7393.4151)), bool(false))))), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (! (bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.37), _GLF_FUZZED(float(40817))), bvec2(false, false))).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.37), _GLF_FUZZED(float(40817))), bvec2(false, false))).x, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0))) < injectionSwitch.y)), false, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((! (! (bool(bvec2(false, true))))) || false, (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))) || false, _GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(false, true))))) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3((! (! (bool(bvec2(false, true))))) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true))) && true))))), true, false, true))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))), true && ((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))))), true && ((! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(! (! (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7393.4151)), bool(false))))), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (! (bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.37), _GLF_FUZZED(float(40817))), bvec2(false, false))).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.37), _GLF_FUZZED(float(40817))), bvec2(false, false))).x, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0))) < injectionSwitch.y)), false, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((! (! (bool(bvec2(false, true))))) || false, (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))) || false, _GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(false, true))))) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3((! (! (bool(bvec2(false, true))))) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true))) && true)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))), true && ((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))))), true && ((! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(! (! (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7393.4151)), bool(false))))), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (! (bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.37), _GLF_FUZZED(float(40817))), bvec2(false, false))).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.37), _GLF_FUZZED(float(40817))), bvec2(false, false))).x, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0))) < injectionSwitch.y)), false, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((! (! (bool(bvec2(false, true))))) || false, (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))) || false, _GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(false, true))))) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3((! (! (bool(bvec2(false, true))))) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true))) && true)), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))), true && ((_GLF_IDENTITY(! (bool(bvec2(false, true))), true && (! (bool(bvec2(false, true)))))))), true && ((! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(! (! (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7393.4151)), bool(false))))), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (! (bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.37), _GLF_FUZZED(float(40817))), bvec2(false, false))).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.37), _GLF_FUZZED(float(40817))), bvec2(false, false))).x, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0))) < injectionSwitch.y)), false, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((! (! (bool(bvec2(false, true))))) || false, (_GLF_IDENTITY((! (! (bool(bvec2(false, true))))) || false, _GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(false, true))))) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3((! (! (bool(bvec2(false, true))))) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true))) && true))))), true, false, true))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))))))))))) || false), false, false)), false, false))) && true)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, false)))), false, false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, uint(uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) ^ 0u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) ^ 0u) - _GLF_IDENTITY(0u, 0u | (0u))), (true ? (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) ^ 0u : _GLF_FUZZED(workgroup_id))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(dot(vec4(round(length(normalize(1.0))), length(0.0), abs(1.0), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(round(length(normalize(1.0))), length(0.0), abs(1.0), 1.0), (vec4(round(length(normalize(1.0))), length(0.0), abs(1.0), 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(1.0, determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))), length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), mix(float((injectionSwitch[1])), float(_GLF_FUZZED(5951.8803)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / 1.0))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base)) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id)), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))), 0u | ((false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id)))) : _GLF_FUZZED(uvec3(113404u, 129886u, 80089u).x)))), (true ? _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id))) : _GLF_FUZZED(subgroup_local_id))), (~ (subgroup_local_id)) >> 0u), ~ (subgroup_local_id), ~ (subgroup_local_id))))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_base)), max(_GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_base)), _GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-7.5)), bool(false)))) ^ (subgroup_base)))) + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id))) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(vec2(vec2(injectionSwitch[0], injectionSwitch[1])), clamp(vec2(vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec2(injectionSwitch[0], injectionSwitch[1]))))))))) / vec2(1.0, 1.0))).y)), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, true && ((_GLF_IDENTITY(false, (false) || false)) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-9055.8033, -70.13)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0 + (injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), (injectionSwitch)[1])), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))) + vec2(0.0, 0.0))[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-865.549)), bool(false))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED((+ 5548.1463)), _GLF_FUZZED(-556.293)), bvec2(false, false))).y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), true)))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3775.2539)), vec2(_GLF_FUZZED(328.060), (injectionSwitch)[1]), bvec2(false, true))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), (bool(true)) || false)))))), float(_GLF_FUZZED(9.7)), bool(false)), 1.0 * (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))), (! (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) && true))), true && (_GLF_IDENTITY(bool(true), (bool(true)) || false)))))), float(_GLF_FUZZED(9.7)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), true && ((_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))))), _GLF_IDENTITY(float(_GLF_FUZZED(9.7)), (false ? _GLF_FUZZED(-7852.1586) : float(_GLF_FUZZED(9.7)))), bool(false))) * 1.0))), mix(float(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-149.353), 1.0 * (_GLF_FUZZED(-149.353)))), (true ? float(_GLF_IDENTITY(_GLF_FUZZED(-149.353), 1.0 * (_GLF_FUZZED(-149.353)))) : _GLF_FUZZED(-4.2))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(9.7)), bool(false)), clamp(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)))), 0.0), min(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (true)))))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0)))), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), _GLF_IDENTITY(vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-149.353), max(_GLF_FUZZED(-149.353), _GLF_FUZZED(-149.353)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) * 1.0), 0.0, 0.0, 1.0, 1.0)), min(vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-149.353), max(_GLF_FUZZED(-149.353), _GLF_FUZZED(-149.353)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) * 1.0), 0.0, 0.0, 1.0, 1.0)), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-149.353), max(_GLF_FUZZED(-149.353), _GLF_FUZZED(-149.353)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) * 1.0), 0.0, 0.0, 1.0, 1.0)))))), (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))))))), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), max(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))))) / abs(1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat4(length(vec4(0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), abs(0.0)))), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(vec3(-9173.2043, 270.086, -9817.6411))))), min(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat4(length(vec4(0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), abs(0.0)))), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(vec3(-9173.2043, 270.086, -9817.6411))))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat4(length(vec4(0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), abs(0.0)))), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(vec3(-9173.2043, 270.086, -9817.6411))))))), (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))))) / abs(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), (bool(true)) && true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 0.0, 0.0, 0.0)))), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))))) / abs(1.0)), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((2.2 * -2.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-293.234)), bool(false)))) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(859.400, 79.78, -524.452).s) : _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))), float(_GLF_FUZZED(-4730.7403)), bool(false))))), 0.0)), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5497.2982)), float(injectionSwitch.y), bool(true))), mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))))) / abs(1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-149.353)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec2((injectionSwitch) * mat2(1.0))))).y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), (true ? float(mat4x3(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(3203.7672)))), 0.0)), 0.0, 0.0)), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))))) / abs(1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * mat4(1.0))), 0.0), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))))) / abs(1.0)))))), 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / sqrt(1.0), min((1.0) / sqrt(1.0), (1.0) / sqrt(1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), float(_GLF_FUZZED(9.7)), bool(false)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))), float(_GLF_FUZZED(9.7)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-149.353)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(9.7)), bool(false))))), float(_GLF_IDENTITY(_GLF_FUZZED(-5782.3168), max(_GLF_FUZZED(-5782.3168), _GLF_FUZZED(-5782.3168)))), bool(false))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.3)), float(injectionSwitch.y), bool(true))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(6453.1949, -738.285, -4.2, 2.7).a)), float(injectionSwitch.y), bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x, injectionSwitch.x)))) > injectionSwitch.y)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(389.963)), vec2(_GLF_FUZZED(-3.1), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(1.3)), float((injectionSwitch)[1]), bool(true)))), bvec2(false, true))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(389.963)), vec2(_GLF_FUZZED(-3.1), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(1.3)), float((injectionSwitch)[1]), bool(true)))), bvec2(false, true))), cos(0.0), 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0))), injectionSwitch)).y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) && _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))), true, true)))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || false), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) || false))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
