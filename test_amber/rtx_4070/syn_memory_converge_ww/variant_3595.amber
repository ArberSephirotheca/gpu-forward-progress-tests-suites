#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_8num_workgroupread_val;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), true, false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(803.238)), bool(false))))) && true))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))), 0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))), clamp((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))), (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))), (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))));
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.3, 7.6)))).y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(760.489) : _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), max(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), max(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), max(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((2.0 + -2.3)) : 0.0)))))), float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat2(-5968.1994, 91.18, 517.969, -7.4)) : mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), max(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))))), (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(760.489) : _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), max(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), max(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), max(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), float(mat2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), max(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), max(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))))), float(mat3x4(false ? _GLF_FUZZED(760.489) : _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), max(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), float(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(929.734) : 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))))), max(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0))))), max(float(mat2(injectionSwitch.y, 1.0, 1.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * mat4(1.0)), vec4(0.0, 0.0, 0.0, 0.0)))))), float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), max(float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), float(mat2(injectionSwitch.y, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))))), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(6.1))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(-8361.6324, 83.86, 0.8).y)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(-8361.6324, 83.86, 0.8).y)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(-8361.6324, 83.86, 0.8).y)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) && true)), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(-8361.6324, 83.86, 0.8).y)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(-8361.6324, 83.86, 0.8).y)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) && true))))))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-41.70) : injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true)), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true)), true, false, true)))) || false)))
    barrier();
  }
 GLF_merged2_0_1_13_1_1_8num_workgroupread_val.x = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(13428) : _GLF_IDENTITY(int(7), int(7)))), 0, 0, 1)))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)) || false, ! (! ((_GLF_WRAPPED_IF_TRUE(true)) || false)))))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(8), int(8))) | (_injected_loop_counter))) | 0)) << 0) < _GLF_IDENTITY((((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) ^ 0), _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((2), 1, 1), (true ? ivec3((_GLF_IDENTITY(2, clamp(2, 2, 2))), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), ivec3(ivec3(ivec3((2), 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true)))) ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))), (false ? _GLF_FUZZED(findMSB(ivec3(24963, 43805, -80524))) : (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true)))) ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((2), 1, 1), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))))), _GLF_IDENTITY(int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), (false ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (ivec3((2), 1, 1)))))), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)) | (_injected_loop_counter))))))), 1, 1, 0)), (int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false)))))))) ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (ivec3((2), 1, 1)))))), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))))), 1, 1, 0))) - 0)), int(_GLF_IDENTITY(ivec3((2), 1, 1), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter)))))))) << 0)), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), (int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))))) ^ 0))), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), min(ivec3((2), 1, 1), ivec3((_GLF_IDENTITY(2, 1 * (2))), 1, 1))), (true ? ivec3(_GLF_IDENTITY((2), max((2), (2))), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) ^ 0), 1)), 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), ivec3(ivec3(ivec3((2), 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) && true), (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && true) && (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && true)))) ? ivec3((2), 1, 1) : _GLF_FUZZED(_GLF_IDENTITY(ivec3(_injected_loop_counter), (ivec3(_injected_loop_counter)) / ivec3(1, 1, 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && true) && (_GLF_IDENTITY(true, false || (true)))) ? ivec3((2), 1, 1) : _GLF_FUZZED(_GLF_IDENTITY(ivec3(_injected_loop_counter), (ivec3(_injected_loop_counter)) / ivec3(1, 1, 1)))), min((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && true) && (_GLF_IDENTITY(true, false || (true)))) ? ivec3(_GLF_IDENTITY((2), ~ (~ ((2)))), 1, 1) : _GLF_FUZZED(_GLF_IDENTITY(ivec3(_injected_loop_counter), (_GLF_IDENTITY(ivec3(_injected_loop_counter), (ivec3(_injected_loop_counter)) | (ivec3(_injected_loop_counter)))) / ivec3(1, 1, 1)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)))))) && true) && (_GLF_IDENTITY(true, false || (true)))) ? ivec3(_GLF_IDENTITY((2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((2))), 1, 1) : _GLF_FUZZED(_GLF_IDENTITY(ivec3(_injected_loop_counter), (ivec3(_injected_loop_counter)) / ivec3(1, 1, 1))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && true) && (_GLF_IDENTITY(true, false || (true)))) ? ivec3((2), 1, 1) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec3(_injected_loop_counter), (ivec3(_injected_loop_counter)) / ivec3(1, 1, 1))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec3(_injected_loop_counter), (ivec3(_injected_loop_counter)) / ivec3(1, 1, 1))), clamp(_GLF_FUZZED(_GLF_IDENTITY(ivec3(_injected_loop_counter), (ivec3(_injected_loop_counter)) / ivec3(1, 1, 1))), _GLF_FUZZED(_GLF_IDENTITY(ivec3(_injected_loop_counter), (ivec3(_injected_loop_counter)) / ivec3(1, 1, 1))), _GLF_FUZZED(_GLF_IDENTITY(ivec3(_injected_loop_counter), (ivec3(_injected_loop_counter)) / ivec3(1, 1, 1)))))) >> _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) | (ivec3(0, 0, 0))))), clamp((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && true) && (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))))) ? ivec3((2), 1, 1) : _GLF_FUZZED(_GLF_IDENTITY(ivec3(_injected_loop_counter), (ivec3(_injected_loop_counter)) / ivec3(1, 1, 1)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && true) && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))))) ? ivec3((2), 1, 1) : _GLF_FUZZED(_GLF_IDENTITY(ivec3(_injected_loop_counter), (ivec3(_injected_loop_counter)) / ivec3(1, 1, 1)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && true, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && true, true)), ! (! (bool(bvec2((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && true, true))))))) && _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ((_GLF_IDENTITY(true, false || (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(ivec3((2), 1, 1), (ivec3((2), 1, 1)) ^ ivec3(0, 0, 0)) : _GLF_FUZZED(_GLF_IDENTITY(ivec3(_injected_loop_counter), (ivec3(_injected_loop_counter)) / ivec3(1, 1, 1)))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((2), 1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), 1))), _GLF_IDENTITY((true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))), ((true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter)))) | ((true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))))))), _GLF_IDENTITY(int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(4941, -41653, -28762)), clamp(_GLF_FUZZED(ivec3(4941, -41653, -28762)), _GLF_FUZZED(ivec3(4941, -41653, -28762)), _GLF_FUZZED(ivec3(4941, -41653, -28762)))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), clamp(ivec3((2), 1, 1), ivec3((2), 1, 1), _GLF_IDENTITY(ivec3((2), 1, 1), max(ivec3((2), 1, 1), ivec3((2), 1, 1))))), ~ (~ (ivec3((2), 1, 1)))))), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))), (ivec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))) + ivec3(0, 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(4941, -41653, -28762)), (_GLF_FUZZED(ivec3(4941, -41653, -28762))) - ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (ivec3(_GLF_IDENTITY((2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((2))), 1, 1)))))), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))))), ivec3(0, 0, 0) + (_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(4941, -41653, -28762), min(ivec3(4941, -41653, -28762), ivec3(4941, -41653, -28762)))) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (ivec3((2), 1, 1)))))), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), (false ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (ivec3((2), 1, 1)))))), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))))))))), 1, 1, 0)), (int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (ivec3((2), 1, 1))))), clamp((false ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (ivec3((2), 1, 1))))), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (_GLF_IDENTITY(ivec3((2), 1, 1), max(ivec3((2), 1, 1), ivec3((2), 1, 1))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (ivec3((2), 1, 1)))))) << ivec3(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(min(-94670, _injected_loop_counter)))), 0, 0)), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (ivec3((2), 1, 1))))), ~ (~ ((false ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (ivec3((2), 1, 1))))))))))), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))))), 1, 1, 0))) - 0)), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(2, (2) << 0)), 1, 1), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter)))))))) << 0)), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), (int(_GLF_IDENTITY(2, (2) << 0))) ^ 0))), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) / 1))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((2), 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), ivec3(ivec3(ivec3((2), 1, _GLF_IDENTITY(1, (1) >> 0))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))) && (_GLF_IDENTITY(true, false || (true)))) ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((2), 1, 1), (true ? ivec3((2), _GLF_IDENTITY(1, ~ (~ (1))), 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))))), (int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(2, (2) >> (0 & 95202))), 1, 1), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter)))))) | (int(_GLF_IDENTITY(ivec3((2), 1, 1), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))))))), _GLF_IDENTITY(int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), (false ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (ivec3((2), 1, 1)))))), (true ? ivec3((2), 1, _GLF_IDENTITY(1, (1) | 0)) : _GLF_FUZZED(ivec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))))))), 1, 1, 0)), (int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), (false ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (ivec3((2), 1, 1)))))), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter)))), (false ? _GLF_FUZZED(ivec3(13251, -92132, -19830)) : _GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), (false ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), _GLF_IDENTITY(~ (~ (ivec3((2), 1, 1))), clamp(~ (~ (ivec3((2), 1, 1))), ~ (~ (ivec3((2), 1, 1))), _GLF_IDENTITY(~ (~ (ivec3((2), 1, 1))), (~ (~ (ivec3((2), 1, 1)))) >> ivec3(0, 0, 0))))))), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))))))), 1, 1, 0))) - 0)), int(_GLF_IDENTITY(ivec3((2), 1, 1), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter)))))))) << 0)), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), (int(_GLF_IDENTITY(2, _GLF_IDENTITY((2), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(-37426) : (2))) << 0))) ^ 0))), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((2), 1, 1), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), ivec3(ivec3(ivec3((2), 1, 1)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (true))), false, false, true))))), (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true))), false, false, true)))))) && true)), true)))) ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((2), 1, 1), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter)))))) | (_injected_loop_counter))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), (false ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (ivec3((2), 1, 1)))))), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))))))), 1, 1, _GLF_IDENTITY(0, (0) | (0))), ivec4(0, 0, 0, 0) | (ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), (false ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), _GLF_IDENTITY(~ (~ (ivec3((2), 1, 1))), (~ (~ (ivec3((2), 1, 1)))) << ivec3(0, 0, 0))))), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))))))), 1, 1, 0)))), (int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((2), 1, 1), (false ? _GLF_FUZZED(ivec3(4941, -41653, -28762)) : _GLF_IDENTITY(ivec3((2), 1, 1), ~ _GLF_IDENTITY((~ (ivec3((2), 1, 1))), max(_GLF_IDENTITY((~ (ivec3((2), 1, 1))), ivec3(1, 1, 1) * ((~ (ivec3((2), 1, 1))))), (~ (ivec3((2), 1, 1)))))))), _GLF_IDENTITY((true ? ivec3((_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, int(ivec2(2, 0))), _GLF_IDENTITY(2, (2) - 0)))), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))), ivec3(ivec4((true ? ivec3((_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, int(ivec2(2, 0))), _GLF_IDENTITY(2, (2) - 0)))), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter))), 1))))), 1, 1, 0))) - 0)), int(_GLF_IDENTITY(ivec3((2), 1, 1), (true ? ivec3((2), 1, 1) : _GLF_FUZZED(ivec3(_injected_loop_counter)))))))) << 0)), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), (int(_GLF_IDENTITY(2, (2) << 0))) ^ 0))), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))) - _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), clamp((0), (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0), (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)) | (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)))))), (0))), (0)))))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, _GLF_IDENTITY((6), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, 46477)) : _GLF_IDENTITY((6), ((6)) - 0))) / 1), _GLF_IDENTITY(6, 0 | (6))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(mix(_injected_loop_counter, ivec4(-75118, 24937, -71554, -71695).s, false)) : int(6))), int(ivec3(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), 1, 0))), int(6))), int(6)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(_injected_loop_counter) : int(6))), int(6)), _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) + 0), _GLF_IDENTITY(int(6), int(6))))))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6))))), ((((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(-97133) : (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(int(_GLF_IDENTITY(int(2), int(2)))))) >> _GLF_IDENTITY(int(2), int(2)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), (int(_GLF_IDENTITY(2, (2) << 0))) ^ 0))), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY(int(2), int(2)))))) - _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | 0) | (0)))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), 0 ^ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))), int(6))), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), int(6), int(6)))), _GLF_IDENTITY(int(6), int(6)))))), (false ? _GLF_FUZZED(-79617) : _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), 0 ^ (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))), int(6))), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) | _GLF_IDENTITY((int(6)), 0 | ((int(6))))), int(6), int(6)))), _GLF_IDENTITY(int(6), int(6))))))))) >> _GLF_IDENTITY(int(6), int(6)))) >> 0)); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 1)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))) || false)))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(64, int(ivec4(64, (1 ^ 0), (1 & 1), 0))), _GLF_IDENTITY(0, 0 | (0)));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false)))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, max(4, 4)), 64, 0), (atomicLoad(write_val, _GLF_IDENTITY(4, max(4, 4)), 64, 0)) >> 0u);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(786.034) : injectionSwitch.y)))) || (false))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))));
 _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_8num_workgroupread_val.y = read_val, _GLF_IDENTITY(~ (~ (GLF_merged2_0_1_13_1_1_8num_workgroupread_val.y = read_val)), 0u ^ (~ (~ (GLF_merged2_0_1_13_1_1_8num_workgroupread_val.y = read_val)))));
 for(int _injected_loop_counter = (0 & _GLF_IDENTITY(-59534, 0 + (-59534))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
      }
     buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(GLF_merged2_0_1_13_1_1_8num_workgroupread_val.y)), (_GLF_IDENTITY(uint(subgroupAllEqual(GLF_merged2_0_1_13_1_1_8num_workgroupread_val.y)), (uint(subgroupAllEqual(GLF_merged2_0_1_13_1_1_8num_workgroupread_val.y))) + 0u)) - 0u);
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
