#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))
    return;
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, max(6, 6))), _GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(6, max(6, 6))))), (~ (~ (~ (_GLF_IDENTITY(6, max(6, 6)))))) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, max(6, 6))), _GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(6, max(6, 6))))), (~ (~ (~ (_GLF_IDENTITY(6, max(6, 6)))))) / 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, max(6, 6))), _GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(6, max(6, 6))))), (~ (~ (~ (_GLF_IDENTITY(6, max(6, 6)))))) / 1)))), clamp(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, max(6, 6))), _GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(6, max(6, 6))))), (~ (~ (~ (_GLF_IDENTITY(6, max(6, 6)))))) / 1)))), _GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, max(6, 6))), _GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(6, max(6, 6))))), (~ (~ (~ (_GLF_IDENTITY(6, max(6, 6)))))) / 1)))), _GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, max(6, 6))), _GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(6, max(6, 6))))), (~ (~ (~ (_GLF_IDENTITY(6, max(6, 6)))))) / 1)))))), _GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, max(6, 6))), _GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(6, max(6, 6))))), (~ (~ (~ (_GLF_IDENTITY(6, max(6, 6)))))) / 1)))), _GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, max(6, 6))), _GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(6, max(6, 6))))), (~ (~ (~ (_GLF_IDENTITY(6, max(6, 6)))))) / 1))))))) + 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, max((1) + 0, (1) + 0)))) | 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
      }
     else
      {
       return;
      }
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-0.2))) > injectionSwitch.y))), bool(bvec3(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > injectionSwitch.y))), true, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(-4856.9185, _GLF_IDENTITY(92.25, min(92.25, 92.25)), -950.688, 71.97).t)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, true, false))), ! (! (! (bool(bvec3(false, true, false))))))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (injectionSwitch.x > injectionSwitch.y))));
        }
       for(int _injected_loop_counter = ((1 | 1) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), _GLF_IDENTITY(int(6), 1 * (int(6)))))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) ^ 0))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           break;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(0, 0)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(1, (1) >> 0) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (0) | (0)) | (_GLF_IDENTITY(0, (0) | 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(8), (int(8)) / 1), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1)), clamp(int(ivec4(int(8), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1)), int(ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, max(8, 8))) ^ 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1)), int(ivec4(int(8), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1))))), int(8))))); _injected_loop_counter --)
          {
           return;
          }
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec3(! (_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(false, ! (! (false))), true))))), true, true, false)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec3(! (_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(false, ! (! (false))), true))))), true, true, false)))), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec3(! (_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(false, ! (! (false))), true))))), true, true, false)))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))) && true)))))
                return;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                break;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
            }
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))); _injected_loop_counter --)
            {
             return;
            }
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(true))) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! _GLF_IDENTITY((! (true)), ((! (true))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), _GLF_IDENTITY(true, (true) || false), false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), false))), bvec2(bvec4(bvec2(true, true), true, false))))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), false))), bvec2(bvec4(bvec2(true, true), true, false))))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))), false, false)), false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))), true, true)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec4(bvec2(true, true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))) || false)))), false))))) && true, ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), true), bvec2(bvec4(bvec2(true, true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), ((! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))) && true), ! (! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))))) || false)))), false))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), (_GLF_IDENTITY(! (true), (! (true)) || false)) || false))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (! (true))), ! (_GLF_IDENTITY(! (! (! (! (true)))), (_GLF_IDENTITY(! (! (! (! (true)))), bool(bvec2(! (! (! (! (_GLF_IDENTITY(true, ! (! (true))))))), false)))) || false))))), true && (bool(bool(_GLF_IDENTITY(! (! (! (true))), _GLF_IDENTITY(! (! (! (! (! _GLF_IDENTITY((true), true && ((true))))))), (! (_GLF_IDENTITY(! (! (! (! _GLF_IDENTITY((true), true && ((true)))))), (! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((true))))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! _GLF_IDENTITY((! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (! (true))), ! (_GLF_IDENTITY(! (! (! (! (true)))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (true)))), bool(bvec2(! (! (_GLF_IDENTITY(! (! (true)), false || (! (! (true)))))), false)))) || false, ((_GLF_IDENTITY(! (! (! (! (true)))), bool(bvec2(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false)))) || false) || false)))))), true && (bool(bool(_GLF_IDENTITY(! (! (! (true))), _GLF_IDENTITY(! (! (! (! (! _GLF_IDENTITY((true), true && ((true))))))), bool(bool(! _GLF_IDENTITY((! (! (! (! _GLF_IDENTITY(_GLF_IDENTITY((true), true && ((true))), (_GLF_IDENTITY((true), true && ((true)))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (! (! (! _GLF_IDENTITY(_GLF_IDENTITY((true), true && ((true))), (_GLF_IDENTITY((true), true && ((true)))) || false))))))))))))))))))), (! (true)) && true)) || false)))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), true && ((_GLF_IDENTITY(! (true), ! (! (! (true))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false)))))), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), true && ((_GLF_IDENTITY(! (true), ! (! (! (true))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false)))))), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), true && ((_GLF_IDENTITY(! (true), ! (! (! (true))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false)))))), true, false)))))) && true)), ! (! (! (true)))), (! (true)) && true)) || false)), ! (! ((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), true && ((_GLF_IDENTITY(! (true), ! (! (! (true))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false)))))), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), true && ((_GLF_IDENTITY(! (true), ! (! (! (true))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false)))))), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), true && ((_GLF_IDENTITY(! (true), ! (! (! (true))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false)))))), true, false)))))) && true)), ! (! (! (true)))), (! (true)) && true)) || false)))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false)))))), true, false))), ! (! (! (true)))), (! (true)) && true)) || false))))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), bool(bvec3(! (! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), true, false)))), ! (! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), bool(bvec3(! (! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), true, false)))))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && true))), false)))))), true, false))), ! (! (! (true)))), (! (true)) && true)) || false)))))))) || false))))), ! (! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (! (true)) && true)) || false)), true && ((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (! (true)) && true)) || false))))))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ! (! (! (true)))), (! (true)) && true)) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), bool(bvec2((true), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ! (! (! (true)))), (! (true)) && true)) || false))))), bool(bvec3((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(pow(7922.6143, (true ? -2.4 : -437.357))) : injectionSwitch.x)) < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(pow(7922.6143, (true ? -2.4 : -437.357))) : injectionSwitch.x)) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(pow(7922.6143, (true ? -2.4 : -437.357))) : injectionSwitch.x)) < injectionSwitch.y)) && true)) && true))), true)))))), ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(pow(7922.6143, (true ? -2.4 : -437.357))) : injectionSwitch.x)) < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(pow(7922.6143, (true ? -2.4 : -437.357))) : injectionSwitch.x)) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(pow(7922.6143, (true ? -2.4 : -437.357))) : injectionSwitch.x)) < injectionSwitch.y)) && true)) && true))), true))))))) || false), ! _GLF_IDENTITY((! (! (true))), false || ((! (! (true)))))), (! (true)) && true)) || false)), false, false))))))))) || false))))))), bool(bvec4(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) || false), ! (! (! (true))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false)))))))))))), true, false))), ! (! (! (true)))), (_GLF_IDENTITY(! (true), false || (! (true)))) && true)) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) || false), ! (! (! (true))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false)))))))))))), true, false))), ! (! (! (true)))), (_GLF_IDENTITY(! (true), false || (! (true)))) && true)) || false))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) || false), ! (! (! (true))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false)))))))))))), true, false))), ! (! (! (true)))), (_GLF_IDENTITY(! (true), false || (! (true)))) && true)) || false)))))) && true))))))), ! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (! (true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))) || false))))))), true && ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true)))), (! (true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))) || false))))))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(237.950, 4.1))) : injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), bvec3(bvec3(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x < injectionSwitch.y))), false))), true)))))))), ! (! (! (true)))), (! (_GLF_IDENTITY(true, false || (true)))) && true)) || false)), bool(bvec3((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant(mat3(5114.7522, 924.824, -2.9, -2.2, 3.2, -1.2, -779.938, -4.0, 6.9))) : _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0)), (float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0))) - 0.0)))) < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ! (! (! (true)))), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), bool(_GLF_IDENTITY(bvec3(bool(bool(! (true))), true, true), bvec3(bvec4(bvec3(bool(bool(! (true))), true, true), true))))))) && true)) || false)), false, false))))))))) || false))))))), true, false, false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || ((true))), (_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, ! (! (true))))) && true)) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) || _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)))))))), (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))), false), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))), false), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))), false), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))), false), false)))))))))), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false))))))), true && (((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)))))))), (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || _GLF_IDENTITY(false, (false) || false), false))))))))) || false)))))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), false || ((true))), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ! (! ((! (true))))) && true, ((! (true)) && true) && true))) || false))), (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(false || ((true)), ! (! (false || ((true)))))), (_GLF_IDENTITY(! (true), (! (true)) && true)) || false)))) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) || ((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)))))), true && (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, ((! (true)) && true) || false))) || false, false)))))))), true && (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), false), true), true)))))))) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))))))))))))))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || ((true))), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && true))) || false)))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) || _GLF_IDENTITY(((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)))))))), (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false))))))), true && ((_GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)))))))), (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)))))))), (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false)), true && (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)))))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false, true && (_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false, bool(bvec3(_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false, ((! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false) && true), false, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)))))))), (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)))))))), (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false)), true && (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)))))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false, true && (_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false, bool(bvec3(_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false, ((! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false) && true), false, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)))))))), (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)))))))), (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false)), true && (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)))))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false, true && (_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false, bool(bvec3(_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false, ((! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))))))) || false) && true), false, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || ((true))), (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, ((! (true)) && true) && true))) || false))), (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || ((true))), (_GLF_IDENTITY(! (true), (! (true)) && true)) || false)))) || false)))))), bool(bvec3((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || ((true))), (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, ((! (true)) && true) && true))) || false))), (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || ((true))), (_GLF_IDENTITY(! (true), (! (true)) && true)) || false)))) || false)))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) || ((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || _GLF_IDENTITY(false, (false) || false), false)), true && (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true), (! (true)) && true), false, true, false)), (bool(bvec4(_GLF_IDENTITY(! (true), (! (true)) && true), false, true, false))) && true))) || false, false)))))), true && (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)), true && (bool(bvec2((_GLF_IDENTITY(! (true), (! (true)) && true)) || false, false)))))) && true))))))))))))))))))))), bool(bvec4((! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (true)) && _GLF_IDENTITY(true, true && (true)))) || false)))), bool(bvec4(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && _GLF_IDENTITY(true, (true) && true)), false || (! _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) || false))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), false))), false)))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), false))), false)))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), false))), false)))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), false))), false)))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true)), (bool(bvec4((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true))) && true))), bool(bvec4(true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, float(_GLF_IDENTITY(mat3x2((injectionSwitch.x) - 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 1.0), vec4(0.0, cos(0.0), 1.0, 0.0)), dot(vec4(1.0, log(1.0), 0.0, 1.0), vec4(0.0, cos(0.0), 1.0, 0.0))), cos(0.0)), transpose(transpose(mat3x2((injectionSwitch.x) - 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 1.0), vec4(0.0, cos(0.0), 1.0, 0.0)), dot(vec4(1.0, log(1.0), 0.0, 1.0), vec4(0.0, cos(0.0), 1.0, 0.0))), cos(0.0)))))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, log(round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))))), 0.0, 1.0), (mat4x2(injectionSwitch, 1.0, 0.0, 0.0, log(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0)) * mat4(1.0)))).x, injectionSwitch.x)))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) && true)) && true)), false)))), (! (true)) && true)) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && true), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), ((injectionSwitch.x < injectionSwitch.y)) || false)), false)))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec3(bvec3(bvec3(true, false, true))))))))))), true && (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))))) && true)) || false, ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), ((injectionSwitch.x < injectionSwitch.y)) || false)), false)))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec3(bvec3(bvec3(true, false, true))))))))))), true && (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))))) && true)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && true), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), ((injectionSwitch.x < injectionSwitch.y)) || false)), false)))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, true && (false)), true)), bvec3(bvec4(bvec3(bvec3(true, _GLF_IDENTITY(false, true && (false)), true)), true)))))))))))), true && (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))))) && true)) || false, ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), ((injectionSwitch.x < injectionSwitch.y)) || false)), false)))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec3(bvec3(bvec3(true, false, true))))))))))), true && (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))))) && true)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))))))))))), true, true, false))))))), ! (! ((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (true)) && _GLF_IDENTITY(true, true && (true)))) || false)))), bool(bvec4(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && _GLF_IDENTITY(true, (true) && true)), false || (! _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) || false))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), false))), false)))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), false))), false)))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), false))), false)))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false))), false)))), false))), false)))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ((true)) && true), true, false), false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true)), (bool(bvec4((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true))) && true))), bool(bvec4(true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, float(_GLF_IDENTITY(mat3x2((injectionSwitch.x) - 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 1.0), vec4(0.0, cos(0.0), 1.0, 0.0)), dot(vec4(1.0, log(1.0), 0.0, 1.0), vec4(0.0, cos(0.0), 1.0, 0.0))), cos(0.0)), transpose(transpose(mat3x2((injectionSwitch.x) - 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, log(1.0), 0.0, 1.0), vec4(0.0, cos(0.0), 1.0, 0.0)), dot(vec4(1.0, log(1.0), 0.0, 1.0), vec4(0.0, cos(0.0), 1.0, 0.0))), cos(0.0)))))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, log(round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))))), 0.0, 1.0), (mat4x2(injectionSwitch, 1.0, 0.0, 0.0, log(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0)) * mat4(1.0)))).x, injectionSwitch.x)))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) && true)) && true)), false)))), (! (true)) && true)) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && true), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), ((injectionSwitch.x < injectionSwitch.y)) || false)), false)))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec3(bvec3(bvec3(true, false, true))))))))))), true && (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))))) && true)) || false, ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), ((injectionSwitch.x < injectionSwitch.y)) || false)), false)))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec3(bvec3(bvec3(true, false, true))))))))))), true && (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))))) && true)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && true), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), ((injectionSwitch.x < injectionSwitch.y)) || false)), false)))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, true && (false)), true)), bvec3(bvec4(bvec3(bvec3(true, _GLF_IDENTITY(false, true && (false)), true)), true)))))))))))), true && (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))))) && true)) || false, ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), ((injectionSwitch.x < injectionSwitch.y)) || false)), false)))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec3(bvec3(bvec3(true, false, true))))))))))), true && (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))))) && true)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))))))))))), true, true, false))))))))))), false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) || false)), bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) || false))))), bool(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) || false)), bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) || false))))), true))))))))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), bool(bvec4((_GLF_IDENTITY(! (false), true && (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true))))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.7)), bool(false))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
             else
              {
              }
             return;
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))))))))
              return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))) && true)))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, (true ? injectionSwitch.y : _GLF_FUZZED(226.326)))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))) * 1.0), (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch.y : _GLF_FUZZED(226.326)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         continue;
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ! (! ((! (_GLF_IDENTITY(false, true && (false))))))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(ivec2(int(3), 0))), (int(3)) | (int(3))))))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), clamp(0u ^ _GLF_IDENTITY((subgroup_size), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, log(1.0)), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, log(1.0)), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0))) < injectionSwitch.y)))) ? (subgroup_size) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(0u ^ (subgroup_size), min(0u ^ (subgroup_size), 0u ^ (subgroup_size))), _GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) | (0u ^ (subgroup_size))))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + subgroup_base)) << 0u), 0u ^ (~ (workgroup_base + subgroup_base))), ~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))))), ((_GLF_IDENTITY(~ (workgroup_base + subgroup_base), max(_GLF_IDENTITY(~ (workgroup_base + subgroup_base), 0u ^ (~ (workgroup_base + subgroup_base))), ~ (workgroup_base + subgroup_base))))) * 1u)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (-50278 & (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ (0 ^ 0))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))))))))))) && _GLF_IDENTITY(true, (true) && true))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.2), _GLF_FUZZED(650.418)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true, true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true, ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true) && true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))), (_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))), false, false, true)), (bool(bvec4((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))), false, false, true))) && true))) && true), true && ((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))))))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bool(bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))))) && true))))))) || false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           return;
          }
         continue;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    break;
  }
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(37880), min(true ? 4 : _GLF_FUZZED(37880), _GLF_IDENTITY(true ? 4 : _GLF_FUZZED(37880), (true ? 4 : _GLF_FUZZED(37880)) ^ (0 << _GLF_IDENTITY(int(4), int(4)))))))))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(37880), min(true ? 4 : _GLF_FUZZED(37880), true ? 4 : _GLF_FUZZED(37880))))))))), clamp(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(37880), min(true ? 4 : _GLF_FUZZED(37880), true ? 4 : _GLF_FUZZED(37880))))))))), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(37880), min(true ? 4 : _GLF_FUZZED(37880), true ? 4 : _GLF_FUZZED(37880))))))))), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(37880), min(true ? 4 : _GLF_FUZZED(37880), true ? 4 : _GLF_FUZZED(37880))))))))))), 0)), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(37880), min(true ? 4 : _GLF_FUZZED(37880), true ? 4 : _GLF_FUZZED(37880))))))))), clamp(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(37880), min(true ? 4 : _GLF_FUZZED(37880), true ? 4 : _GLF_FUZZED(37880))))))))), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(37880), min(true ? 4 : _GLF_FUZZED(37880), true ? 4 : _GLF_FUZZED(37880))))))))), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(37880), min(true ? 4 : _GLF_FUZZED(37880), true ? 4 : _GLF_FUZZED(37880)))), ~ (~ ((_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(37880), min(true ? 4 : _GLF_FUZZED(37880), true ? 4 : _GLF_FUZZED(37880)))))))))))))), 0))) ^ 0)), _GLF_IDENTITY(64, (64) ^ 0), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-82503) : 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, (1) * 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, false))))))))))
          return;
        }
       else
        {
        }
       return;
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), true && ((! ((injectionSwitch.x > injectionSwitch.y))))) || false)), true && ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), true && ((! ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.2)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))) && true))))
        return;
      }
     buf[virtual_gid] = uint(subgroupAllEqual(read_val));
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))))), false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))))))), true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), true))))
      break;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false)), true, false)))))))));
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
