#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 mat2 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_12 {
 mat4x2 _f0;
 mat2x4 _f1;
 mat3 _f2;
 mat3x2 _f3;
 _GLF_struct_11 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 bool _f1;
 bvec4 _f2;
 float _f3;
 bvec2 _f4;
 bvec2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_7 {
 ivec4 _f0;
 int _f1;
 mat4 _f2;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 mat2x4 _f1;
 ivec2 _f2;
 vec3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 ivec4 _f1;
 _GLF_struct_7 _f2;
 mat3 _f3;
 mat2x4 _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 vec4 _f1;
 mat2x3 _f2;
 uint _f3;
} ;

struct _GLF_struct_3 {
 bvec2 _f0;
} ;

struct _GLF_struct_5 {
 float _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
} ;

struct _GLF_struct_0 {
 bool _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 bvec2 _f1;
 mat3x2 _f2;
 mat2x4 _f3;
 _GLF_struct_1 _f4;
} ;

struct _GLF_struct_10 {
 uint num_workgroup;
 _GLF_struct_2 _f0;
 _GLF_struct_5 _f1;
 ivec3 _f2;
 mat2x4 _f3;
 _GLF_struct_9 _f4;
 uvec2 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))))), false, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false, false))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(tan(3.8)) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.2) : injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(gl_NumWorkGroups.x, _GLF_struct_2(_GLF_struct_0(true), bvec2(true), mat3x2(1.0), mat2x4(1.0), _GLF_struct_1(mat3(1.0))), _GLF_struct_5(1.0, _GLF_struct_3(bvec2(true)), _GLF_struct_4(mat2x4(1.0), vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat2x3(1.0), 1u), mat4(1.0)), ivec3(1), mat2x4(1.0), _GLF_struct_9(_GLF_struct_6(mat4x3(1.0), mat2x4(1.0), ivec2(1), vec3(1.0), mat2(1.0)), _GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)), ~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(21860), 1 * (_GLF_FUZZED(21860))) : 1))) | 0)), (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0))) ^ _GLF_IDENTITY(ivec4(0, 0, _GLF_IDENTITY(0, (0) | (0)), 0), (ivec4(0, 0, _GLF_IDENTITY(0, (0) | (0)), 0)) | ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((true ? (~ (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, 0 | (1)), 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, _GLF_IDENTITY(24678, 0 | (24678)), 49200))), _GLF_IDENTITY(((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(43656, 77353, 24678, 49200), (_GLF_IDENTITY(false ? _GLF_FUZZED((ivec4(38761, 60729, 74327, -8427) | ivec4(65625, 58272, -38638, 82499))) : ivec4(43656, 77353, 24678, 49200), ((ivec4(0, 0, 0, 0) & ivec4(54695, 3055, -54791, -25233)) ^ (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(2), ivec4(2)))) ^ (false ? _GLF_FUZZED((ivec4(38761, 60729, 74327, -8427) | ivec4(65625, 58272, -38638, 82499))) : ivec4(43656, 77353, 24678, 49200)))))))), max(((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))), _GLF_IDENTITY(((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))), min(((_GLF_IDENTITY(true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)), (true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))) ^ (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(3), ivec4(3)))))), ((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))))))) - ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), min(int(ivec2(1, 0)), int(ivec2(1, 0))))), (1) << 0)))) | _GLF_IDENTITY(0, ~ (~ (0))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(65358, -55848, ivec2(-23205, 28380).t, -20428)) : (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) - 0) << 0)))) | 0)))))), (true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(43656, _GLF_IDENTITY(77353, (77353) << 0), 24678, 49200), (false ? _GLF_FUZZED(ivec4(88891, -12621, -22048, -93700)) : ivec4(43656, _GLF_IDENTITY(77353, (77353) << 0), 24678, 49200))))))) / ivec4(1, 1, 1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)), (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0))) ^ ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((true ? (~ (ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0, (false ? _GLF_FUZZED(-30716) : (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))), ((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))) - ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))), max((~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))), _GLF_IDENTITY((~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))), ((~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0))))) >> ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, false, true))) ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))), ((_GLF_IDENTITY(true, ! (! (true))) ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))) | (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))), max((_GLF_IDENTITY(true, ! (! (true))) ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))), (_GLF_IDENTITY(true, ! (! (true))) ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))))))))) / ivec4(1, 1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)), (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : _GLF_IDENTITY(1, 0 ^ (1))))) | _GLF_IDENTITY(0, (0) / 1)))) ^ ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))))))) | 0)))) : _GLF_FUZZED(ivec4(43656, _GLF_IDENTITY(77353, ~ (~ (77353))), 24678, 49200))), ((_GLF_IDENTITY(true, (true) || false) ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))) - ivec4(0, 0, 0, 0))), (_GLF_IDENTITY((~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))), (true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)), ivec4(1, 1, 1, 1) * (_GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))))))) / ivec4(1, 1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))), ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)))) * int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (false ? _GLF_IDENTITY(_GLF_FUZZED(21860), 0 ^ (_GLF_FUZZED(21860))) : 1))) | 0))) ^ ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, _GLF_IDENTITY(24678, (24678) / 1), 49200))), ((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(21860) : 1), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21860) : 1)), int(int(int((false ? _GLF_FUZZED(21860) : 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) ^ 0)) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))) - ivec4(0, 0, 0, 0))), (_GLF_IDENTITY((~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))), (true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))))) / ivec4(1, 1, 1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(21860), 1 * (_GLF_FUZZED(21860))) : 1))), ((_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(21860), 1 * (_GLF_FUZZED(21860))) : 1)))) | ((_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(21860), 1 * (_GLF_FUZZED(21860))) : 1))))) | 0)), (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0))) ^ _GLF_IDENTITY(ivec4(0, 0, _GLF_IDENTITY(0, (0) | (0)), 0), (ivec4(0, 0, _GLF_IDENTITY(0, (0) | (0)), 0)) | _GLF_IDENTITY(ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | (ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY((true ? (~ (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, 0 | (1)), 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, _GLF_IDENTITY(24678, 0 | (24678)), 49200))), _GLF_IDENTITY(((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(43656, 77353, 24678, _GLF_IDENTITY(49200, min(49200, 49200))), (_GLF_IDENTITY(false ? _GLF_FUZZED((ivec4(38761, 60729, 74327, -8427) | ivec4(65625, 58272, -38638, 82499))) : ivec4(43656, 77353, 24678, 49200), ((ivec4(0, 0, 0, 0) & ivec4(54695, 3055, -54791, -25233)) ^ (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(2), ivec4(2)))) ^ (false ? _GLF_FUZZED((ivec4(38761, 60729, 74327, -8427) | ivec4(65625, 58272, -38638, 82499))) : ivec4(43656, 77353, 24678, 49200)))))))), max(((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))), _GLF_IDENTITY(((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)), (_GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))) | (_GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))))), min(((_GLF_IDENTITY(true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)), (true ? (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0))), ~ (_GLF_IDENTITY(~ (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))), ~ (~ (~ (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))))))))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))) ^ (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec4(3), (ivec4(3)) << ivec4(0, 0, 0, 0)), ivec4(3)))))), ((true ? (~ (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) / 1)) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))))))) - ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) + ivec2(0, 0))), min(int(ivec2(1, 0)), int(ivec2(1, 0))))), (1) << 0)))) | _GLF_IDENTITY(0, ~ (~ (0))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(65358, -55848, ivec2(-23205, 28380).t, -20428)) : (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) - 0) << 0)))) | 0)))))), (true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(43656, _GLF_IDENTITY(77353, (77353) << 0), 24678, 49200), (false ? _GLF_FUZZED(ivec4(88891, -12621, -22048, -93700)) : ivec4(43656, _GLF_IDENTITY(77353, (77353) << 0), 24678, 49200))))))) / ivec4(1, 1, 1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)), (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0))) ^ ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((true ? (~ (ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0, (false ? _GLF_FUZZED(-30716) : (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))), ((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))) - ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))), max((~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(21860) : 1), min((false ? _GLF_FUZZED(21860) : 1), (false ? _GLF_FUZZED(21860) : 1))))) | 0)))), _GLF_IDENTITY((~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))), ((~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0))))) >> ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, false, true))) ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))), ((_GLF_IDENTITY(true, ! (! (true))) ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))) | (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))), max((_GLF_IDENTITY(true, ! (! (true))) ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))), (_GLF_IDENTITY(true, ! (! (true))) ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))))))))) / ivec4(1, 1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)), (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : _GLF_IDENTITY(1, 0 ^ (1))))) | _GLF_IDENTITY(0, (0) / 1)))) ^ ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)))), int(int(~ ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))))))))))))) | 0)))) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(43656, _GLF_IDENTITY(77353, ~ (~ (77353))), 24678, 49200), (ivec4(43656, _GLF_IDENTITY(77353, ~ (~ (77353))), 24678, 49200)) ^ ivec4(0, 0, 0, 0)))), ((_GLF_IDENTITY(true, (true) || false) ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))) - ivec4(0, 0, 0, 0))), (_GLF_IDENTITY((~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))), (true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)), ivec4(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) >> 0)))), 1, 1, 1) * (_GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))))))) / ivec4(1, 1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) ^ 0), 1)))), ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)))) * int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (false ? _GLF_IDENTITY(_GLF_FUZZED(21860), 0 ^ (_GLF_FUZZED(21860))) : 1))) | 0))) ^ ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))))))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, _GLF_IDENTITY(24678, (24678) / 1), 49200))), ((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(21860) : 1), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(21860) : 1)), int(int(int((false ? _GLF_FUZZED(21860) : 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) ^ 0)) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))) - ivec4(0, 0, 0, 0))), (_GLF_IDENTITY((~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21860) : 1))) | 0)))), _GLF_IDENTITY((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(21860), (_GLF_FUZZED(21860)) ^ 0) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200))), ((true ? (~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(21860), (_GLF_FUZZED(21860)) ^ 0) : 1))) | 0)))) : _GLF_FUZZED(ivec4(43656, 77353, 24678, 49200)))) - ivec4(0, 0, 0, 0)))) / ivec4(1, 1, 1, 1))))) - ivec4(0, 0, 0, 0))), ivec4(1))), _GLF_struct_7(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))), 1, mat4(1.0)), mat3(1.0), mat2x4(1.0), _GLF_struct_8(uvec2(1u), true, bvec4(true), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-7.2 * -50.15))), bool(false))), bvec2(true), bvec2(true), mat3x4(1.0))), uvec2(1u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(73717u, 159062u, 23282u)))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0), mix(float(_GLF_FUZZED(5.6)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0)), bool(true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat4x2(1.0), mat2x4(1.0), mat3(1.0), mat3x2(1.0), _GLF_struct_11(mat2(1.0), _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))))), vec3(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * _GLF_struct_replacement_12._f4.workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-51.01)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, false))))) ? subgroup_id : _GLF_FUZZED((workgroup_base - subgroup_id)))) * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY((workgroup_base - subgroup_id), (false ? _GLF_FUZZED(write_val) : (workgroup_base - subgroup_id)))))) * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY((workgroup_base - subgroup_id), ((workgroup_base - subgroup_id)) | ((workgroup_base - subgroup_id)))))) * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY((workgroup_base - subgroup_id), (false ? _GLF_FUZZED(write_val) : (workgroup_base - subgroup_id)))))) * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY((workgroup_base - subgroup_id), ((workgroup_base - subgroup_id)) | ((workgroup_base - subgroup_id)))))) * subgroup_size))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base - _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), 0u | ((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))))))))) * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((workgroup_base - _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), 0u | ((_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))))))))) * subgroup_size)), _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) : _GLF_FUZZED((workgroup_base - subgroup_id)))) * subgroup_size));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), true, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), true, true))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), true, _GLF_IDENTITY(true, (true) && true)))))))))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))), bool(bvec3(bool(_GLF_DEAD(false)), true, true)))), false, false, false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(57.29), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[1], 0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? -5.5 : -4237.4770))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, true && (false)))), false, true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)), bool(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)), false))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-6862.4567) : (injectionSwitch.x)))) / 1.0) - 0.0) > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2770.6365)), bvec2(true, false))).x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true))))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, tan(0.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0)), (true ? mat4(injectionSwitch, tan(0.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0)) : _GLF_FUZZED(mat4(-6.6, 271.206, 11.70, 450.892, -5648.4147, 1.5, -2.7, -31.29, -0.1, -46.61, -540.298, -5.1, 311.548, -260.529, 7.6, -2.6)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, clamp(read_val, read_val, read_val)))), 0u | _GLF_IDENTITY((buf[virtual_gid] = uint(subgroupAllEqual(read_val))), ((buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) << 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
