#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uvec4 GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ((! (false))) || false) && true)))))
  return;
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.xy = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size;
 uvec2 GLF_merged2_0_1_8_1_1_11read_valsubgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.zw = GLF_merged2_0_1_8_1_1_11read_valsubgroup_id;
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-21.01, 809.501))))))[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true)))))))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.39)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.39)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false)))))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.39)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.39)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false)))))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.39)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.39)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false)))))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true))))), false, true))))))))), _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.39)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.39)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false)))))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.39)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.39)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false)))))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.39)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.39)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false)))))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true))))), false, true)))))))))))))) || false))))), ! (! ((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false)))))), ((bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false))))))) && true) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)))))) || false), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false)))))) && true))))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false))))) || false), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0])), _GLF_FUZZED(1355.0219)), vec2(_GLF_FUZZED(-1656.3978), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(false, true))).x > injectionSwitch.y, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0])), _GLF_FUZZED(1355.0219)), vec2(_GLF_FUZZED(-1656.3978), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(false, true))).x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0])), _GLF_FUZZED(1355.0219)), vec2(_GLF_FUZZED(-1656.3978), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(false, true))).x > injectionSwitch.y, false))))) || false)) && true), (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9895.3610)), vec2(_GLF_FUZZED(99.85), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) && true))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) && true))))))))))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, false))))))), false || (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))) && true))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-300.084) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false, ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false, ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false, ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))))) || false)))))), false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true)), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true))), _GLF_IDENTITY(bool(bvec4(false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true))), true, true, false)), ! (! (bool(bvec4(false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true))), true, true, false))))))))))))))))) || false)))))))))))
  return;
 GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.xy.x = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
  return;
 GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.zw.y = GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.xy.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, false || ((bool(false)) && true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, false || ((bool(false)) && true))))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, false || ((bool(false)) && true))))), (! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, false || ((bool(false)) && true)))))) || false), true))))))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, false || ((bool(false)) && true))))))))), _GLF_IDENTITY(bool(bool(! ((bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, _GLF_IDENTITY(false || ((bool(false)) && true), false || (false || ((bool(false)) && true))))))))))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, false || ((bool(false)) && true)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, false || ((bool(false)) && true)))))))), false || ((bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, false || ((bool(false)) && true)))))))))))))))), true)))))))), (injectionSwitch.x > injectionSwitch.y)))))), true && (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))))))), (injectionSwitch.x > injectionSwitch.y)))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-42.62)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid.z = subgroup_size;
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.y = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid, max(GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid, GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid)).z, 0u + (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.y = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid, max(GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid, GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid)).z));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true, true)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true && (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false || (true)), true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(length(mod(vec3(-22.56, -7813.9082, -6.5), vec3(56.77, -3692.5430, 1.0))))))) * (injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(true, (true) || false))))))), true))))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid.x = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, max(_GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u), _GLF_IDENTITY(num_workgroup, (num_workgroup) ^ 0u))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.w = _GLF_IDENTITY(workgroup_size, 0u + (workgroup_size));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(69.82)), bool(false))))))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), true), true))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(true, bool(bvec2(true, true)))))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true))), false))), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), true), true)))))))) || false), true, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.z = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))) / 1u), (workgroup_id) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))), (workgroup_id) ^ 0u)) * _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.w * GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.z;
 GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.xy.y = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.y = GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.xy.y, 1u * (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.y = GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.xy.y));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.zw.y, (GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.zw.y) | (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.zw.y, uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.zw.y, uint(uvec2(GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.zw.y, 0u))), 1u))))) * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.y;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid.y = subgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.x = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid.y, (false ? _GLF_FUZZED(126572u) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid, max(GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid, GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid)).y, (GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid.y) >> 0u)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false) || false)))) || false))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false))), (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))) || false)))) && true))))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.2)), vec2(_GLF_FUZZED(2081.5372), (injectionSwitch)[1]), bvec2(false, true)))) * cos(vec2(0.0, 0.0))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))))) && true, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))))) && true) && true), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.2)), vec2(_GLF_FUZZED(2081.5372), (injectionSwitch)[1]), bvec2(false, true)))) * cos(vec2(0.0, 0.0))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))))) && true, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))))) && true) && true), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.2)), vec2(_GLF_FUZZED(2081.5372), (injectionSwitch)[1]), bvec2(false, true)))) * cos(vec2(0.0, 0.0)), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.2)), vec2(_GLF_FUZZED(2081.5372), (injectionSwitch)[1]), bvec2(false, true)))) * cos(vec2(0.0, 0.0)), max((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.2)), vec2(_GLF_FUZZED(2081.5372), (injectionSwitch)[1]), bvec2(false, true)))) * cos(vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.2)), vec2(_GLF_FUZZED(2081.5372), (injectionSwitch)[1]), bvec2(false, true)))) * cos(vec2(0.0, 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.2)), vec2(_GLF_FUZZED(2081.5372), (injectionSwitch)[1]), bvec2(false, true)))) * cos(vec2(0.0, 0.0)), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.2)), vec2(_GLF_FUZZED(2081.5372), (injectionSwitch)[1]), bvec2(false, true)))) * cos(vec2(0.0, 0.0))) - vec2(0.0, 0.0))))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))))) && true, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))))) && true) && true)) && true)) || false)), (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true, false, false))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))))) && true, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false))) && true)))))))) && true) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   return;
  }
 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.x = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.x, _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.x) | (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.x), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.x) | (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id, min(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id, _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id)))).x), min((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id, uvec3(0u, 0u, 0u) + (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id)).x) | (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.x), (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.x) | (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.x))))), (~ (~ (_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.x) | (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id, min(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id, _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id)))).x), min((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id, uvec3(0u, 0u, 0u) + (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id)).x) | (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.x), (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.x) | (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id.x)))))) >> 0u))) + subgroup_local_id;
 GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid.w = virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.z = GLF_merged4_0_1_13_1_1_13_2_1_13_3_1_11num_workgroupsubgroup_basesubgroup_sizevirtual_gid.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 atomicStore(write_val, uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.z, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size), min((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size), (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size)))), _GLF_IDENTITY(((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size), min((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size), (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size))))) | uvec4(0u, 0u, 0u, 0u), (((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size), min((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size), (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size))))) | uvec4(0u, 0u, 0u, 0u)) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | uvec4(0u, 0u, 0u, 0u)).z, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.z), ((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.z)) | ((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.z))) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size), min((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size), (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size)))) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.8) : 1.0)) : _GLF_FUZZED(-823.593)), mix(float((true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.8) : 1.0)) : _GLF_FUZZED(-823.593))), float(_GLF_FUZZED((-5625.0387 - -5.9))), bool(false)))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | uvec4(0u, 0u, 0u, 0u)).z, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.z) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uint(uint(6u))), uint(uvec4(uint(uint(uint(6u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u)))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size), min((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size), (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size)))) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) + _GLF_IDENTITY(0.0, max(0.0, 0.0))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | uvec4(0u, 0u, 0u, 0u)).z, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.z), clamp((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.z), (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.z), (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.z))) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))) ^ 0u)), 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), 4, 4)), min(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, clamp(4, 4, 4)), 1), clamp(ivec2(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))) ^ 0, clamp((_GLF_IDENTITY(4, (4) | (4))) ^ 0, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))) ^ 0, (true ? (_GLF_IDENTITY(4, (4) | (4))) ^ 0 : _GLF_FUZZED(-6618))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))) ^ 0, int(ivec4((_GLF_IDENTITY(4, (4) | (4))) ^ 0, 1, 0, 0)))))), 4)), 1), ivec2(_GLF_IDENTITY(4, clamp(4, 4, 4)), 1), ivec2(_GLF_IDENTITY(4, clamp(4, 4, 4)), 1)))))) | (_GLF_IDENTITY(4, clamp(4, 4, 4))))) | 0), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.zw.x = read_val;
 buf[GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_14subgroup_basesubgroup_sizevirtual_gidworkgroup_size.z] = uint(subgroupAllEqual(GLF_merged2_0_2_50_2_2_43GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_baseGLF_merged2_0_1_8_1_1_11read_valsubgroup_id.zw.x));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
