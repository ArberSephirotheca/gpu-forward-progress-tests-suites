#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ((false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))) && true)), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-68.47 + -6.7)), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-792.248)), float((injectionSwitch)[1]), bool(true)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-45.75)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-68.47 + -6.7)), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-792.248)), float((injectionSwitch)[1]), bool(true)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-45.75)), bvec2(true, false)))) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.y), bool(true)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.y), bool(true)))))))))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), (_GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), bool(_GLF_IDENTITY(bvec2((! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), false), bvec2(bvec2(bvec2((! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), false))))))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(-6.2, 8899.8999).s)), bool(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), false, true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-42405))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-42405))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED((+ mat4x3(949.063, 2381.0159, -2.6, 8.1, -2.2, -4.1, -93.22, -6.2, 918.451, 1.7, -74.23, -1.8))) : mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-42405))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), 1.0, 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[2], _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3], clamp((vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))))) - 0.0)), 1.0, 0.0, 1.0))[3], _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3], clamp((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3], _GLF_IDENTITY((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), max((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)))), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))))[3], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3])), (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3]))), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), bvec4(false, false, false, false)))), float(mat2x4(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), bool(true))), 1.0, 0.0, 1.0))[0], _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-60.96)))))[1], max(_GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-60.96)))))[1], mix(float(_GLF_FUZZED(-103.953)), float((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-60.96)))))[1]), bool(true))), (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-60.96)))))[1])), (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(9227.4998)), float(mat4(float(_GLF_FUZZED(9227.4998)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0))), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[2], _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(9227.4998), (_GLF_FUZZED(9227.4998)) - 0.0)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), max((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(9227.4998), (_GLF_FUZZED(9227.4998)) - 0.0)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(9227.4998), (_GLF_FUZZED(9227.4998)) - 0.0)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))))[3]), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), bvec4(false, false, false, false)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(14289))))))], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9227.4998, (_GLF_IDENTITY(9227.4998, max(9227.4998, _GLF_IDENTITY(9227.4998, mix(float(_GLF_FUZZED(_GLF_IDENTITY(150.971, (150.971) * 1.0))), float(9227.4998), bool(true)))))) + 0.0))), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3]), vec4(_GLF_IDENTITY(_GLF_FUZZED(-5174.1654), clamp(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-5174.1654), _GLF_FUZZED(-5174.1654))), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), bvec4(false, false, false, false)))), float(mat2x4(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 1.0), mix(vec4((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[0], (_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), vec4(mat2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(9227.4998)), (float(_GLF_FUZZED(9227.4998))) / 1.0), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), vec4(mat2x3(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), 1.0, 1.0)))))))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3]), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(_GLF_IDENTITY(-762.983, max(-762.983, -762.983)))), bvec4(false, false, false, false)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) >> 0)], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3]), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), bvec4(false, false, false, false)))), float(mat2x4(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2943.9143)), float(injectionSwitch.x), bool(true)))) - 0.0), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))), 1.0, 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9227.4998, clamp(_GLF_IDENTITY(9227.4998, min(9227.4998, 9227.4998)), 9227.4998, 9227.4998)))), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9227.4998, (false ? _GLF_FUZZED(-345.580) : 9227.4998)))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, sqrt(0.0), 1.0, sin(0.0), 1.0, 0.0, sin(0.0))))), bool(true)))) - 0.0), 1.0, 0.0, 1.0))[3]), _GLF_IDENTITY(vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), max(vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)))), bvec4(false, false, false, false)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(vec4(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, sqrt(1.0)))))).y))), false, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), false, true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-42405))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-42405))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED((+ mat4x3(949.063, 2381.0159, -2.6, 8.1, -2.2, -4.1, -93.22, -6.2, 918.451, 1.7, -74.23, -1.8))) : mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-42405))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), 1.0, 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[2], _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3], clamp((vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))))) - 0.0)), 1.0, 0.0, 1.0))[3], _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3], clamp((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3], _GLF_IDENTITY((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), max((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)))), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))))[3], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3])), (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3]))), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), bvec4(false, false, false, false)))), float(mat2x4(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), bool(true))), 1.0, 0.0, 1.0))[0], _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-60.96)))))[1], max(_GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-60.96)))))[1], mix(float(_GLF_FUZZED(-103.953)), float((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-60.96)))))[1]), bool(true))), (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-60.96)))))[1])), (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(9227.4998)), float(mat4(float(_GLF_FUZZED(9227.4998)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0))), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[2], _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(9227.4998), (_GLF_FUZZED(9227.4998)) - 0.0)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), max((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(9227.4998), (_GLF_FUZZED(9227.4998)) - 0.0)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(9227.4998), (_GLF_FUZZED(9227.4998)) - 0.0)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))))[3]), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), bvec4(false, false, false, false)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(14289))))))], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9227.4998, (_GLF_IDENTITY(9227.4998, max(9227.4998, _GLF_IDENTITY(9227.4998, mix(float(_GLF_FUZZED(_GLF_IDENTITY(150.971, (150.971) * 1.0))), float(9227.4998), bool(true)))))) + 0.0))), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3]), vec4(_GLF_IDENTITY(_GLF_FUZZED(-5174.1654), clamp(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-5174.1654), _GLF_FUZZED(-5174.1654))), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), bvec4(false, false, false, false)))), float(mat2x4(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 1.0), mix(vec4((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[0], (_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), vec4(mat2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(9227.4998)), (float(_GLF_FUZZED(9227.4998))) / 1.0), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), vec4(mat2x3(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), 1.0, 1.0)))))))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3]), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(_GLF_IDENTITY(-762.983, max(-762.983, -762.983)))), bvec4(false, false, false, false)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) >> 0)], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3]), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), bvec4(false, false, false, false)))), float(mat2x4(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2943.9143)), float(injectionSwitch.x), bool(true)))) - 0.0), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))), 1.0, 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9227.4998, clamp(_GLF_IDENTITY(9227.4998, min(9227.4998, 9227.4998)), 9227.4998, 9227.4998)))), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9227.4998, (false ? _GLF_FUZZED(-345.580) : 9227.4998)))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, sqrt(0.0), 1.0, sin(0.0), 1.0, 0.0, sin(0.0))))), bool(true)))) - 0.0), 1.0, 0.0, 1.0))[3]), _GLF_IDENTITY(vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), max(vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)))), bvec4(false, false, false, false)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(vec4(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, sqrt(1.0)))))).y))), false, true))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), false, true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-42405))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-42405))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED((+ mat4x3(949.063, 2381.0159, -2.6, 8.1, -2.2, -4.1, -93.22, -6.2, 918.451, 1.7, -74.23, -1.8))) : mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-42405))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), 1.0, 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[2], _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3], clamp((vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))))) - 0.0)), 1.0, 0.0, 1.0))[3], _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3], clamp((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3], _GLF_IDENTITY((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), max((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)))), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.263))), 1.0, 0.0))), injectionSwitch.x)), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))))[3], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3])), (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3]))), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), bvec4(false, false, false, false)))), float(mat2x4(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), bool(true))), 1.0, 0.0, 1.0))[0], _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-60.96)))))[1], max(_GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-60.96)))))[1], mix(float(_GLF_FUZZED(-103.953)), float((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-60.96)))))[1]), bool(true))), (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-60.96)))))[1])), (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(9227.4998)), float(mat4(float(_GLF_FUZZED(9227.4998)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0))), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[2], _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(9227.4998), (_GLF_FUZZED(9227.4998)) - 0.0)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), max((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(9227.4998), (_GLF_FUZZED(9227.4998)) - 0.0)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0)), (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(9227.4998), (_GLF_FUZZED(9227.4998)) - 0.0)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))))[3]), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), bvec4(false, false, false, false)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(14289))))))], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9227.4998, (_GLF_IDENTITY(9227.4998, max(9227.4998, _GLF_IDENTITY(9227.4998, mix(float(_GLF_FUZZED(_GLF_IDENTITY(150.971, (150.971) * 1.0))), float(9227.4998), bool(true)))))) + 0.0))), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3]), vec4(_GLF_IDENTITY(_GLF_FUZZED(-5174.1654), clamp(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-5174.1654), _GLF_FUZZED(-5174.1654))), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), bvec4(false, false, false, false)))), float(mat2x4(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 1.0), mix(vec4((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[0], (_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), vec4(mat2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(9227.4998)), (float(_GLF_FUZZED(9227.4998))) / 1.0), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), vec4(mat2x3(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0))), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), 1.0, 1.0)))))))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3]), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(_GLF_IDENTITY(-762.983, max(-762.983, -762.983)))), bvec4(false, false, false, false)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) >> 0)], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[3]), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), bvec4(false, false, false, false)))), float(mat2x4(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2943.9143)), float(injectionSwitch.x), bool(true)))) - 0.0), mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))), 1.0, 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9227.4998, clamp(_GLF_IDENTITY(9227.4998, min(9227.4998, 9227.4998)), 9227.4998, 9227.4998)))), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9227.4998)), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9227.4998, (false ? _GLF_FUZZED(-345.580) : 9227.4998)))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, sqrt(0.0), 1.0, sin(0.0), 1.0, 0.0, sin(0.0))))), bool(true)))) - 0.0), 1.0, 0.0, 1.0))[3]), _GLF_IDENTITY(vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), max(vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)), vec4(_GLF_FUZZED(-5174.1654), _GLF_FUZZED(-1.8), _GLF_FUZZED(0.3), _GLF_FUZZED(-762.983)))), bvec4(false, false, false, false)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(vec4(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, sqrt(1.0)))))).y))), false, true))))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec4((_GLF_IDENTITY(! (false), (! (false)) && true)), true, true, true))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(0.0, 0.0) + ((injectionSwitch) + vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true && (bool(false)), bool(bvec2(true && (bool(false)), false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))))) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))))) || false), false, false), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(427.478), _GLF_FUZZED(-6.6)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), ~ (~ (workgroup_base + subgroup_base))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), bool(bool(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(87.09)), vec2(_GLF_FUZZED(86.81), _GLF_IDENTITY((injectionSwitch)[1], 1.0 * (_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(13.85)), bool(false)))))), bvec2(false, true))).y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, round(length(normalize(1.0))), 0.0))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true)))), false || (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, max((0) << 0, (0) << 0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))) || (false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (false)) || false)))), _GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(8.4, 603.067) + injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(8.4, 603.067) + injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY((vec2(8.4, 603.067) + injectionSwitch), vec2(mat2x3((vec2(8.4, 603.067) + injectionSwitch), abs(0.0), 1.0, 1.0, 0.0)))) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && ((false) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(487.202))))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(8.4, 603.067) + injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), true))))), true)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(8.4, 603.067) + injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))) || (false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (false)) || false)))), _GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(8.4, 603.067) + injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(8.4, 603.067) + injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY((vec2(8.4, 603.067) + injectionSwitch), vec2(mat2x3((vec2(8.4, 603.067) + injectionSwitch), abs(0.0), 1.0, 1.0, 0.0)))) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && ((false) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(487.202))))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(8.4, 603.067) + injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), true))))), true)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(8.4, 603.067) + injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))) || (false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (false)) || false)))), _GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(8.4, 603.067) + injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(8.4, 603.067) + injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY((vec2(8.4, 603.067) + injectionSwitch), vec2(mat2x3((vec2(8.4, 603.067) + injectionSwitch), abs(0.0), 1.0, 1.0, 0.0)))) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && ((false) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(487.202))))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(8.4, 603.067) + injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), true))))), true)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(8.4, 603.067) + injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 1.0))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-49.51)), bool(false))), _GLF_FUZZED(73.44)), vec2(_GLF_FUZZED(-872.589), (injectionSwitch)[1]), bvec2(false, true))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-49.51)), bool(false))), _GLF_FUZZED(73.44)), vec2(_GLF_FUZZED(-872.589), (injectionSwitch)[1]), bvec2(false, true))).y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec4(! (_GLF_DEAD(false)), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), bool(bvec3(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))) && true))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, exp(0.0), abs(1.0), 1.0)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))), true))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))).x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-134.079)), bool(false))), injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-134.079)), bool(false))), injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))))))))))), true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, (false) || false), true, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0)), mat2(1.0) * (vec2(mat3x2(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false)))))) && true)), (! (false)) || false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
