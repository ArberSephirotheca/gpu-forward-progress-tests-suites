#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_73_3_1_8GLF_merged3_0_1_17_1_1_13_2_1_11subgroup_local_idsubgroup_sizevirtual_gidread_val;
 uvec4 GLF_merged2_0_2_49_2_2_51GLF_merged2_0_1_13_1_1_11subgroup_basevirtual_gidGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 uvec4 GLF_merged2_0_3_63_3_1_11GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_idsubgroup_id;
 uvec4 GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idnum_workgroup;
 uvec4 GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_idnum_workgroup;
 uvec4 GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idsubgroup_base;
 uvec3 GLF_merged3_0_1_17_1_1_13_2_1_11subgroup_local_idsubgroup_sizevirtual_gid;
 GLF_merged2_0_3_73_3_1_8GLF_merged3_0_1_17_1_1_13_2_1_11subgroup_local_idsubgroup_sizevirtual_gidread_val.xyz = GLF_merged3_0_1_17_1_1_13_2_1_11subgroup_local_idsubgroup_sizevirtual_gid;
 uvec4 GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeworkgroup_base;
 uvec3 GLF_merged2_0_2_51_2_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idread_val;
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size;
 GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeworkgroup_base.xyz = GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size;
 uvec4 GLF_merged2_0_2_53_2_2_51GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 GLF_merged2_0_2_49_2_2_51GLF_merged2_0_1_13_1_1_11subgroup_basevirtual_gidGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.zw = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 GLF_merged2_0_2_51_2_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idread_val.xy = GLF_merged2_0_2_49_2_2_51GLF_merged2_0_1_13_1_1_11subgroup_basevirtual_gidGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.zw;
 GLF_merged2_0_2_53_2_2_51GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.zw = GLF_merged2_0_2_51_2_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idread_val.xy;
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 GLF_merged2_0_2_53_2_2_51GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy = GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_basevirtual_gid;
 GLF_merged2_0_2_49_2_2_51GLF_merged2_0_1_13_1_1_11subgroup_basevirtual_gidGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy = GLF_merged2_0_1_13_1_1_11subgroup_basevirtual_gid;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 uvec3 GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id;
 GLF_merged2_0_3_63_3_1_11GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_idsubgroup_id.xyz = GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_id;
 GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_idnum_workgroup.xyz = GLF_merged2_0_3_63_3_1_11GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_idsubgroup_id.xyz;
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id;
 GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idnum_workgroup.xyz = GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_id;
 GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idsubgroup_base.xyz = GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idnum_workgroup.xyz;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_3_63_3_1_11GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_idsubgroup_id.w = subgroup_id;
 GLF_merged2_0_2_53_2_2_51GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x = GLF_merged2_0_3_63_3_1_11GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_idsubgroup_id.w;
 GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_idnum_workgroup.xyz.z = GLF_merged2_0_2_53_2_2_51GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_3_73_3_1_8GLF_merged3_0_1_17_1_1_13_2_1_11subgroup_local_idsubgroup_sizevirtual_gidread_val.xyz.y = subgroup_size;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = GLF_merged2_0_3_73_3_1_8GLF_merged3_0_1_17_1_1_13_2_1_11subgroup_local_idsubgroup_sizevirtual_gidread_val.xyz.y;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_3_73_3_1_8GLF_merged3_0_1_17_1_1_13_2_1_11subgroup_local_idsubgroup_sizevirtual_gidread_val.xyz.x = subgroup_local_id;
 GLF_merged2_0_2_53_2_2_51GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.y = GLF_merged2_0_3_73_3_1_8GLF_merged3_0_1_17_1_1_13_2_1_11subgroup_local_idsubgroup_sizevirtual_gidread_val.xyz.x;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x = GLF_merged2_0_2_53_2_2_51GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.y;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idnum_workgroup.w = num_workgroup;
 GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_idnum_workgroup.w = GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idnum_workgroup.w;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeworkgroup_base.xyz.z = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_2_53_2_2_51GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.zw.y = workgroup_id;
 GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idsubgroup_base.xyz.z = GLF_merged2_0_2_53_2_2_51GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.zw.y;
 uint workgroup_base = GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeworkgroup_base.xyz.z * GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idsubgroup_base.xyz.z;
 GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeworkgroup_base.w = workgroup_base;
 GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeworkgroup_base.xyz.y = GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeworkgroup_base.w;
 GLF_merged2_0_2_53_2_2_51GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.zw.x = GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeworkgroup_base.xyz.y;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = GLF_merged2_0_2_53_2_2_51GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.zw.x;
 GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idsubgroup_base.xyz.y = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_idnum_workgroup.xyz.z * GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y;
 GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idsubgroup_base.w = subgroup_base;
 GLF_merged2_0_2_49_2_2_51GLF_merged2_0_1_13_1_1_11subgroup_basevirtual_gidGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x = GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idsubgroup_base.w;
 GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_idnum_workgroup.xyz.y = GLF_merged2_0_2_49_2_2_51GLF_merged2_0_1_13_1_1_11subgroup_basevirtual_gidGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x;
 GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idsubgroup_base.xyz.x = GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_idnum_workgroup.xyz.y;
 uint virtual_gid = GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idsubgroup_base.xyz.y + GLF_merged2_0_3_71_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_baseworkgroup_baseworkgroup_idsubgroup_base.xyz.x + GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x;
 GLF_merged2_0_3_73_3_1_8GLF_merged3_0_1_17_1_1_13_2_1_11subgroup_local_idsubgroup_sizevirtual_gidread_val.xyz.z = virtual_gid;
 GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeworkgroup_base.xyz.x = GLF_merged2_0_3_73_3_1_8GLF_merged3_0_1_17_1_1_13_2_1_11subgroup_local_idsubgroup_sizevirtual_gidread_val.xyz.z;
 GLF_merged2_0_2_49_2_2_51GLF_merged2_0_1_13_1_1_11subgroup_basevirtual_gidGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.y = GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeworkgroup_base.xyz.x;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = GLF_merged2_0_2_49_2_2_51GLF_merged2_0_1_13_1_1_11subgroup_basevirtual_gidGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.y;
 atomicStore(write_val, uint(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 GLF_merged2_0_3_73_3_1_8GLF_merged3_0_1_17_1_1_13_2_1_11subgroup_local_idsubgroup_sizevirtual_gidread_val.w = read_val;
 GLF_merged2_0_2_51_2_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idread_val.z = GLF_merged2_0_3_73_3_1_8GLF_merged3_0_1_17_1_1_13_2_1_11subgroup_local_idsubgroup_sizevirtual_gidread_val.w;
 GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_idnum_workgroup.xyz.x = GLF_merged2_0_2_51_2_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idread_val.z;
 buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x] = uint(subgroupAllEqual(GLF_merged2_0_3_63_3_1_13GLF_merged3_0_1_8_1_1_13_2_1_11read_valsubgroup_basesubgroup_idnum_workgroup.xyz.x));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
