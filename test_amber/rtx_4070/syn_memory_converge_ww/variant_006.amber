#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_21 {
 mat3x4 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
 uvec3 _f3;
 mat4x3 _f4;
 float _f5;
} ;

struct _GLF_struct_22 {
 uvec2 _f0;
 int _f1;
 _GLF_struct_21 _f2;
} ;

struct _GLF_struct_23 {
 uint subgroup_base;
 bool _f0;
 _GLF_struct_22 _f1;
} ;

struct _GLF_struct_18 {
 ivec4 _f0;
 mat3x2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_17 {
 mat4x3 _f0;
 mat4 _f1;
 vec2 _f2;
 ivec2 _f3;
 uvec4 _f4;
 bvec2 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_16 {
 bool _f0;
} ;

struct _GLF_struct_19 {
 bvec4 _f0;
 bvec2 _f1;
 uint _f2;
 mat4 _f3;
 _GLF_struct_16 _f4;
 _GLF_struct_17 _f5;
 _GLF_struct_18 _f6;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_11 {
 ivec2 _f0;
 bvec2 _f1;
 float _f2;
 bool _f3;
 uvec4 _f4;
 uvec4 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_10 {
 bool _f0;
 ivec4 _f1;
 float _f2;
 mat2 _f3;
 ivec2 _f4;
 bvec4 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_12 {
 mat3x4 _f0;
 uint _f1;
 _GLF_struct_10 _f2;
 ivec2 _f3;
 int _f4;
 _GLF_struct_11 _f5;
} ;

struct _GLF_struct_20 {
 _GLF_struct_12 _f0;
 uint workgroup_base;
 ivec4 _f1;
 _GLF_struct_15 _f2;
 float _f3;
 _GLF_struct_19 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 mat3x2 _f1;
 uint _f2;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_5 {
 int _f0;
 mat2 _f1;
 bvec2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_3 {
 float _f0;
 uint _f1;
 mat2x3 _f2;
 bvec3 _f3;
 bvec3 _f4;
 mat4x3 _f5;
 uint _f6;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 mat4 _f1;
 mat2x3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 uvec4 _f1;
 vec4 _f2;
 uvec2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 mat4x3 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_9 {
 uint virtual_gid;
 _GLF_struct_4 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_8 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_12(mat3x4(1.0), 1u, _GLF_struct_10(true, ivec4(1), 1.0, mat2(1.0), ivec2(1), bvec4(true), mat3x2(1.0)), ivec2(1), 1, _GLF_struct_11(ivec2(1), bvec2(true), 1.0, true, uvec4(1u), uvec4(1u), bvec3(true))), workgroup_size * workgroup_id, ivec4(1), _GLF_struct_15(_GLF_struct_13(mat3x4(1.0), uvec4(1u)), _GLF_struct_14(mat4x3(1.0)), uvec2(1u)), 1.0, _GLF_struct_19(bvec4(true), bvec2(true), 1u, mat4(1.0), _GLF_struct_16(true), _GLF_struct_17(mat4x3(1.0), mat4(1.0), vec2(1.0), ivec2(1), uvec4(1u), bvec2(true), mat4x2(1.0)), _GLF_struct_18(ivec4(1), mat3x2(1.0), mat3x4(1.0))), bvec4(true));
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(subgroup_id * subgroup_size, true, _GLF_struct_22(uvec2(1u), 1, _GLF_struct_21(mat3x4(1.0), mat3x4(1.0), mat4x2(1.0), uvec3(1u), mat4x3(1.0), 1.0)));
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_replacement_20.workgroup_base + _GLF_struct_replacement_23.subgroup_base + subgroup_local_id, _GLF_struct_4(uvec3(1u), _GLF_struct_0(ivec4(1), uvec4(1u), vec4(1.0), uvec2(1u), bvec4(true)), _GLF_struct_1(mat4(1.0), uvec4(1u)), mat4x3(1.0), _GLF_struct_2(mat2x4(1.0), mat4(1.0), mat2x3(1.0), ivec4(1)), _GLF_struct_3(1.0, 1u, mat2x3(1.0), bvec3(true), bvec3(true), mat4x3(1.0), 1u)), _GLF_struct_6(_GLF_struct_5(1, mat2(1.0), bvec2(true), vec4(1.0)), mat4(1.0)), _GLF_struct_8(mat4x2(1.0), _GLF_struct_7(mat4(1.0), mat3x2(1.0), 1u)));
 atomicStore(write_val, uint(_GLF_struct_replacement_9.virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[_GLF_struct_replacement_9.virtual_gid] = uint(subgroupAllEqual(read_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
