#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_4 {
 ivec3 _f0;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 uvec2 _f3;
 bool _f4;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 mat3x4 _f1;
 ivec4 _f2;
 uint subgroup_size;
 mat2x4 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 mat3x4 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 ivec3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 bvec2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 uvec2 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 uvec2 GLF_merged2_0_1_8_1_1_13read_valsubgroup_base;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x = subgroup_id;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_0(uvec2(1u), ivec3(1), mat4x2(1.0)), bvec2(true), _GLF_struct_3(_GLF_struct_1(mat3x2(1.0), mat3x4(1.0), ivec4(1), gl_SubgroupSize, mat2x4(1.0)), mat3x4(1.0), _GLF_struct_2(mat3x4(1.0), mat2x4(1.0), mat3x2(1.0), uvec2(1u), true)), _GLF_struct_4(ivec3(1)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y = workgroup_id;
 uint workgroup_base = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y * GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y;
 uint subgroup_base = GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x * _GLF_struct_replacement_5._f2._f0.subgroup_size;
 GLF_merged2_0_1_8_1_1_13read_valsubgroup_base.y = subgroup_base;
 uint virtual_gid = workgroup_base + GLF_merged2_0_1_8_1_1_13read_valsubgroup_base.y + GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 GLF_merged2_0_1_8_1_1_13read_valsubgroup_base.x = read_val;
 buf[virtual_gid] = uint(subgroupAllEqual(GLF_merged2_0_1_8_1_1_13read_valsubgroup_base.x));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
