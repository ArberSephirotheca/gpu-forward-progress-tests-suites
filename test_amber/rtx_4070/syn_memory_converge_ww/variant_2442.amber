#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.8)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-42.22))), vec2(_GLF_FUZZED(-8.5), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))), true, true, false))), bool(bvec4(! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))), true, true, false))), false, true, false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, 1.0, cos(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, 1.0, cos(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0)))))))).x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_IDENTITY(true, ! (! (true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), vec2(_GLF_FUZZED(8.5), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2(_GLF_FUZZED(-96.60), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-843.546))), 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, _GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED((mat2x4(-7.8, 4.6, -532.987, 403.303, 4.7, 89.93, -1416.2614, 3.2) , -48.09)) : -9.4)))) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))), vec2(vec2(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0)))))))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, exp(0.0), 0.0)), (mat4(1.0) * (vec4(injectionSwitch, exp(0.0), 0.0))) * vec4(1.0, 1.0, 1.0, 1.0))), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), _GLF_IDENTITY((vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0), ((vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0)) / abs(vec4(1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0)), max(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0)), _GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))))), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))))), 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), exp(0.0), 1.0, 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)))), 1.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), exp(0.0), 1.0, 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)))), 1.0, 1.0))), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), exp(0.0), 1.0, 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)))), 1.0, 1.0)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(9753.0156)))))))))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-843.546))), 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, _GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED((mat2x4(-7.8, 4.6, -532.987, 403.303, 4.7, 89.93, -1416.2614, 3.2) , -48.09)) : -9.4)))) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))), vec2(vec2(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0)))))))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, exp(0.0), 0.0)), (mat4(1.0) * (vec4(injectionSwitch, exp(0.0), 0.0))) * vec4(1.0, 1.0, 1.0, 1.0))), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), _GLF_IDENTITY((vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0), ((vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0)) / abs(vec4(1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0)), max(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0)), _GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))))), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0, 1.0))))))), 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-60.21, -9.4)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), exp(0.0), 1.0, 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)))), 1.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), exp(0.0), 1.0, 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)))), 1.0, 1.0))), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, exp(0.0), 0.0), (vec4(injectionSwitch, exp(0.0), 0.0)) / vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), exp(0.0), 1.0, 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)))), 1.0, 1.0)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(9753.0156))))))))))))[1]), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (true ? (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) : _GLF_FUZZED(vec2(6.1, -930.733)))) / cos(vec2(0.0, 0.0))))[0], _GLF_FUZZED(-1.0)), bvec2(true, false))).y)), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) && true)), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true))))), _GLF_IDENTITY(true && (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)), true, true))), (true && (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true)))), (_GLF_IDENTITY(false, (false) && true)) && true)), true, true)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false)))))))), (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))))))) && true)))), (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))) || (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY(bool(bvec4((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))) || (! (_GLF_IDENTITY(true, (true) || false)))))), true, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))) || (! (_GLF_IDENTITY(true, (true) || false)))))), true, true, true)), false)), ! (! (bool(bvec2(bool(bvec4((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))) || (! (_GLF_IDENTITY(true, (true) || false)))))), true, true, true)), false))))))))), true, true))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitfieldReverse(-24631)) : _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), min(1, 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-85321) : 1)), 1, 1))))))])).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec3(-68.94, -718.988, 74.62), mat3(-550.508, 475.757, 6.5, -4733.0816, 4.2, 5.6, -472.736, -172.506, -6.1)[2])) : 1.0)), 0.0), (false ? _GLF_FUZZED(mat2x4(-23.48, -8.5, 68.85, -8.7, -3676.9611, -430.966, 4108.0759, -1986.4648)) : mat2x4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), (false ? _GLF_FUZZED(mat2x3(59.85, -0.8, -39.01, 98.90, -5895.4857, 3490.3479)) : mat2x3(1.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), float(vec2(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), (false ? _GLF_FUZZED(mat2x3(59.85, -0.8, -39.01, 98.90, -5895.4857, 3490.3479)) : mat2x3(1.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), 1.0)))), (false ? _GLF_FUZZED(280.981) : 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(739.994)), float(1.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bool(true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bool(true))))))))), 0.0)))), vec2(mat2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec3(-68.94, -718.988, 74.62), mat3(-550.508, 475.757, 6.5, -4733.0816, 4.2, 5.6, -472.736, -172.506, -6.1)[2])) : 1.0)), 0.0), (false ? _GLF_FUZZED(mat2x4(-23.48, -8.5, 68.85, -8.7, -3676.9611, -430.966, 4108.0759, -1986.4648)) : mat2x4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), (false ? _GLF_FUZZED(mat2x3(59.85, -0.8, -39.01, 98.90, -5895.4857, 3490.3479)) : mat2x3(1.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), float(vec2(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), (false ? _GLF_FUZZED(mat2x3(59.85, -0.8, -39.01, 98.90, -5895.4857, 3490.3479)) : mat2x3(1.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), 1.0)))), (false ? _GLF_FUZZED(280.981) : 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(739.994)), float(1.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bool(true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bool(true))))))))), 0.0)))), (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec3(-68.94, -718.988, 74.62), mat3(-550.508, 475.757, 6.5, -4733.0816, 4.2, 5.6, -472.736, -172.506, -6.1)[2])) : 1.0)), 0.0), (false ? _GLF_FUZZED(mat2x4(-23.48, -8.5, 68.85, -8.7, -3676.9611, -430.966, 4108.0759, -1986.4648)) : mat2x4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), (false ? _GLF_FUZZED(mat2x3(59.85, -0.8, -39.01, 98.90, -5895.4857, 3490.3479)) : mat2x3(1.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), float(vec2(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), (false ? _GLF_FUZZED(mat2x3(59.85, -0.8, -39.01, 98.90, -5895.4857, 3490.3479)) : mat2x3(1.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), 1.0)))), (false ? _GLF_FUZZED(280.981) : 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(739.994)), float(1.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bool(true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bool(true))))))))), 0.0))))) * mat2(1.0)), 1.0, 1.0))), vec2(vec3(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-23.48, -8.5, _GLF_IDENTITY(68.85, (68.85) / 1.0), -8.7, -3676.9611, _GLF_IDENTITY(_GLF_IDENTITY(-430.966, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(-430.966), mix(float(_GLF_IDENTITY(_GLF_FUZZED((0.5 * 9086.9223)), max(_GLF_FUZZED((0.5 * 9086.9223)), _GLF_FUZZED((0.5 * 9086.9223))))), float(float(-430.966)), bool(true))), float(mat4(float(-430.966), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(411.814)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), (_GLF_IDENTITY(-430.966, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(-430.966), mix(float(_GLF_FUZZED((0.5 * 9086.9223))), float(float(-430.966)), bool(true))), float(mat4(float(_GLF_IDENTITY(-430.966, (_GLF_IDENTITY(-430.966, (-430.966) - 0.0)) - 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0), 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-6343.9017))), 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(411.814)), _GLF_IDENTITY(bool(false), bool(bool(bool(false))))))) + 0.0), 4108.0759, -1986.4648)) : mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), 1.0)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.1) : injectionSwitch.y))) - 0.0), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.1) : injectionSwitch.y))) - 0.0), true, true, true)))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(num_workgroup)))))) ^ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), max(min(gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) - uvec3(0u, 0u, 0u))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(false))), (float(_GLF_FUZZED(float(false)))) / 1.0), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.7) : injectionSwitch.y))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (((injectionSwitch.x > injectionSwitch.y)) && true))) && true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), true, true)), true, true))))) || false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(workgroup_size, workgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(workgroup_size, workgroup_size)), (uint(min(workgroup_size, workgroup_size))) - 0u)), ~ (~ (uint(_GLF_IDENTITY(uint(min(workgroup_size, workgroup_size)), (uint(min(workgroup_size, workgroup_size))) - 0u))))))), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(workgroup_size, workgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(workgroup_size, workgroup_size)), (uint(min(workgroup_size, workgroup_size))) - 0u)), ~ (~ (uint(_GLF_IDENTITY(uint(min(workgroup_size, workgroup_size)), (uint(min(workgroup_size, workgroup_size))) - 0u)))))))) ^ 0u) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) << _GLF_IDENTITY(uint(2u), uint(2u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), max(subgroup_id, subgroup_id)) * subgroup_size;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y)))))), true), true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), max(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))), false))))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)))) || false)))))))), bool(bvec4(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 781.255))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)))) || false, false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))), true, true, false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec2((_GLF_IDENTITY(false, false || (false))), false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec2((_GLF_IDENTITY(false, false || (false))), false))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))), bool(bvec2((_GLF_IDENTITY(false, false || (false))), false))), true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec2((_GLF_IDENTITY(false, false || (false))), false))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec2((_GLF_IDENTITY(false, false || (false))), false))), true))), true, true), false)))))))), (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))), false || (! (false || (_GLF_IDENTITY(false, false || (false))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true, false))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false, false))))))))), (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (false) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_val = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, (write_val) | (write_val)), 4, 64, 0), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), 0u ^ (atomicLoad(write_val, 4, 64, 0))), clamp(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), 0u ^ (atomicLoad(write_val, 4, 64, 0))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), 0u ^ (atomicLoad(write_val, 4, 64, 0))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), 0u ^ (atomicLoad(write_val, 4, 64, 0))), 0u + (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 0), 0u ^ (atomicLoad(write_val, 4, 64, 0)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(92.87, -7.3))))) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_val, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_val, 0u), (uvec2(read_val, 0u)) / uvec2(1u, 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_val, 0u), (uvec2(read_val, 0u)) / uvec2(1u, 1u))), min(uint(_GLF_IDENTITY(uvec2(read_val, 0u), (uvec2(read_val, 0u)) / uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(read_val, 0u), (uvec2(read_val, 0u)) / uvec2(1u, 1u)))))) << 0u)), (read_val) >> 0u), clamp(_GLF_IDENTITY(read_val, min(_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) | (read_val), min((read_val) | (read_val), (read_val) | (read_val)))), _GLF_IDENTITY(read_val, 1u * (_GLF_IDENTITY(read_val, 0u | (read_val)))))), _GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val), (true ? (read_val) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_base)))))) | (read_val)), _GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(read_val)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x))) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, sqrt(1.0), 1.0, 1.0)), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7615.5041))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, sqrt(1.0), 1.0, 1.0))) - vec2(0.0, 0.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.7)), bool(false))), (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, determinant(mat4(abs(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, determinant(mat4(abs(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), cos(abs(vec3(0.0, 0.0, 0.0))) * (vec3(injectionSwitch, determinant(mat4(abs(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(322.184)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || ((injectionSwitch.x > injectionSwitch.y))))), false))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), false, true))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, determinant(mat3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, abs(1.0))))), clamp(vec2(vec4(injectionSwitch, 1.0, determinant(mat3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, abs(1.0))))), vec2(vec4(injectionSwitch, 1.0, determinant(mat3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, abs(1.0))))), vec2(vec4(injectionSwitch, 1.0, determinant(mat3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, abs(1.0)))))))).y))), false)), true)), (bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false)), true))) || false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6727.0435, 775.904)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (injectionSwitch.x > injectionSwitch.y))), false)), false, false, false)))))))), true && (((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-9.6, clamp(_GLF_IDENTITY(-9.6, float(vec4(-9.6, 0.0, 1.0, 0.0))), -9.6, -9.6))), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3((injectionSwitch)[0], sqrt(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))), cos(0.0), exp(0.0), determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 0.0, 1.0, 0.0))), _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true))), 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)))), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-9.6), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), bvec2(false, true))), 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(ceil(915.905)))), 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(mat3x2(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-9.6), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), bvec2(false, true))), 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)))), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true))), 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0)))).x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))).x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))).x, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, abs(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-9.6, clamp(_GLF_IDENTITY(-9.6, float(vec4(-9.6, 0.0, 1.0, 0.0))), -9.6, -9.6))), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(8.1))), (injectionSwitch)[1]))))), bvec2(false, true))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3((injectionSwitch)[0], sqrt(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))), cos(0.0), exp(0.0), determinant(mat4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.9)), float(0.0), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-66.62)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.1) : 1.0))), bool(true))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, cos(0.0)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 0.0, 1.0, 0.0))), _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0))) + 0.0), max(determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)), determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), 1.0, 0.0, 0.0, 0.0, 1.0)))), sqrt(0.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-9.6), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), bvec2(false, true))), 1.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(ceil(915.905)))), 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(mat3x2(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-9.6), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), bvec2(false, true))), 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)))), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)))), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)))), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)))), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)))), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)))), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true))))), 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0)))).x)) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
