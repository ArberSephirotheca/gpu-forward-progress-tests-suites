#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(write_val))), (gl_WorkGroupID.x) * 1u);
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id)))))), (true ? (_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id)))))) : _GLF_FUZZED(workgroup_size))) ^ 0u) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.0) : injectionSwitch.x))), float(_GLF_FUZZED(-7.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true))))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (subgroup_base))), (~ (subgroup_base)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) / 1u), ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u))))) / ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u)), (~ (subgroup_base)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)))))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (subgroup_base))), (~ (subgroup_base)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) / 1u), ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u))))) / ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u)), (~ (subgroup_base)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)))))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (subgroup_base))), (~ (subgroup_base)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) / 1u), ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u))))) / ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u)), (~ (subgroup_base)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)))))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (subgroup_base))), (~ (subgroup_base)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) / 1u), ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u))))) / ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u)), (~ (subgroup_base)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)))))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), 0u + (~ ((subgroup_base)))))), 0u ^ (~ (subgroup_base)))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))), 1u, 1u, 0u)), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))))))), (~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), _GLF_IDENTITY(max(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u))), (max(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))) | (max(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u))))))))))) | (1u ^ 1u)), 0u ^ (~ (subgroup_base)))))), _GLF_IDENTITY((~ (subgroup_base)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((sign(-71.09) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((~ (subgroup_base)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((sign(-71.09) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0))))))), ((~ (subgroup_base)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((sign(-71.09) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0)))))))) | (_GLF_IDENTITY((~ (subgroup_base)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((sign(-71.09) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0))))))), (_GLF_IDENTITY((~ (subgroup_base)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((sign(-71.09) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0))))))), min((~ (subgroup_base)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((sign(-71.09) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0))))))), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((sign(-71.09) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0)))))))))) | 0u))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY((~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), min(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1u * (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), ~ (_GLF_IDENTITY(~ (subgroup_base), (~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u)) << 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), clamp((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : _GLF_FUZZED(packSnorm4x8(vec4(40.16, -3841.1746, 631.197, -83.81))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(76432u) : workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY((~ (subgroup_base)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((~ (subgroup_base)), _GLF_IDENTITY(((~ (subgroup_base))) << 0u, clamp(((~ (subgroup_base))) << 0u, _GLF_IDENTITY(((~ (subgroup_base))) << 0u, (((~ (subgroup_base))) << 0u) + 0u), ((~ (subgroup_base))) << 0u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY((~ (subgroup_base)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.1)), bool(false))))), min((~ (subgroup_base)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.1)), bool(false))))), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.1)), bool(false)))))))))))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), 0u + (~ ((subgroup_base)))))), 0u ^ (~ (subgroup_base))), uint(uint(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), 0u + (~ ((subgroup_base)))))), 0u ^ (~ (subgroup_base))))))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))) | (subgroup_base)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))))))), (~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(subgroup_base), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u, 0u)), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u))))))))) | (1u ^ 1u)), 0u ^ (~ (subgroup_base)))))), _GLF_IDENTITY((~ (subgroup_base)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((sign(-71.09) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0))))))), (false ? _GLF_FUZZED(num_workgroup) : (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(sign(-71.09), clamp(sign(-71.09), _GLF_IDENTITY(sign(-71.09), float(float(sign(-71.09)))), _GLF_IDENTITY(sign(-71.09), mix(float(_GLF_FUZZED(-5669.8037)), float(_GLF_IDENTITY(sign(-71.09), mix(float(sign(-71.09)), float(_GLF_FUZZED(490.037)), bool(false)))), bool(true))))) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0))), mix(float(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(sign(-71.09), clamp(sign(-71.09), _GLF_IDENTITY(sign(-71.09), float(float(sign(-71.09)))), _GLF_IDENTITY(sign(-71.09), mix(float(_GLF_FUZZED(-5669.8037)), float(_GLF_IDENTITY(sign(-71.09), mix(float(sign(-71.09)), float(_GLF_FUZZED(490.037)), bool(false)))), bool(true))))) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0))), clamp(true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(sign(-71.09), clamp(sign(-71.09), _GLF_IDENTITY(sign(-71.09), float(float(sign(-71.09)))), _GLF_IDENTITY(sign(-71.09), mix(float(_GLF_FUZZED(-5669.8037)), float(_GLF_IDENTITY(sign(-71.09), mix(float(sign(-71.09)), float(_GLF_FUZZED(490.037)), bool(false)))), bool(true))))) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0))), true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(sign(-71.09), clamp(sign(-71.09), _GLF_IDENTITY(sign(-71.09), float(float(sign(-71.09)))), _GLF_IDENTITY(sign(-71.09), mix(float(_GLF_FUZZED(-5669.8037)), float(_GLF_IDENTITY(sign(-71.09), mix(float(sign(-71.09)), float(_GLF_FUZZED(490.037)), bool(false)))), bool(true))))) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0))), true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(sign(-71.09), clamp(sign(-71.09), _GLF_IDENTITY(sign(-71.09), float(float(sign(-71.09)))), _GLF_IDENTITY(sign(-71.09), mix(float(_GLF_FUZZED(-5669.8037)), float(_GLF_IDENTITY(sign(-71.09), mix(float(sign(-71.09)), float(_GLF_FUZZED(490.037)), bool(false)))), bool(true))))) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0)))))), float(_GLF_FUZZED((vec2(42.44, -869.470)).t)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 1u * (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), (~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u)) << 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ ((_GLF_IDENTITY(~ (subgroup_base), (~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u)) << 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), clamp((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) - (0u ^ 0u))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY((~ (subgroup_base)), clamp(_GLF_IDENTITY((~ (subgroup_base)), (false ? _GLF_FUZZED(subgroup_id) : (~ (subgroup_base)))), _GLF_IDENTITY((~ (subgroup_base)), ((~ (subgroup_base))) + 0u), (~ (subgroup_base)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | 0u)), _GLF_IDENTITY((~ (subgroup_base)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_base)), ((~ (subgroup_base))) << 0u), (_GLF_IDENTITY((~ (subgroup_base)), ((~ (subgroup_base))) << 0u)) << 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY((~ (subgroup_base)), uint(uvec2((~ (subgroup_base)), 0u))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(8.1)), max(float(_GLF_FUZZED(8.1)), _GLF_IDENTITY(float(_GLF_FUZZED(8.1)), _GLF_IDENTITY(float(mat2(float(_GLF_FUZZED(8.1)), 0.0, sqrt(1.0), 1.0)), 1.0 * (float(mat2(float(_GLF_FUZZED(8.1)), 0.0, sqrt(1.0), 1.0))))))), bool(false)))))))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), 0u + (~ ((subgroup_base)))))), 0u ^ (~ (subgroup_base)))) - 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(subgroup_base), 1u, 1u, 0u), max(uvec4(uint(subgroup_base), 1u, 1u, 0u), uvec4(uint(subgroup_base), 1u, 1u, 0u)))), max(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))))))), (~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(subgroup_base), 1u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))))), uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(subgroup_base), 1u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))))), (uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(subgroup_base), 1u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u))))))) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))) | (_GLF_IDENTITY(1u, (1u) | (1u)) ^ 1u)), 0u ^ (~ (subgroup_base))))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(subgroup_base), 1u, 1u, 0u), max(uvec4(uint(subgroup_base), 1u, 1u, 0u), uvec4(uint(subgroup_base), 1u, 1u, 0u)))), max(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))))))), (~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(subgroup_base), 1u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))))), uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(subgroup_base), 1u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))))), (uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(subgroup_base), 1u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u))))))) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))) | (_GLF_IDENTITY(1u, (1u) | (1u)) ^ 1u)), 0u ^ (~ (subgroup_base))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(subgroup_base), 1u, 1u, 0u), max(uvec4(uint(subgroup_base), 1u, 1u, 0u), uvec4(uint(subgroup_base), 1u, 1u, 0u)))), max(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))))))), (~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(subgroup_base), 1u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))))), uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(subgroup_base), 1u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))))), (uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(subgroup_base), 1u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u))))))) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))) | (_GLF_IDENTITY(1u, (1u) | (1u)) ^ 1u)), 0u ^ (~ (subgroup_base))))), (false ? _GLF_FUZZED(subgroup_base) : (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(subgroup_base), 1u, 1u, 0u), max(uvec4(uint(subgroup_base), 1u, 1u, 0u), uvec4(uint(subgroup_base), 1u, 1u, 0u)))), max(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))))))), (~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(subgroup_base), 1u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))))), uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(subgroup_base), 1u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)))))), (uint(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(uint(uvec4(uint(subgroup_base), 1u, 1u, 0u)), max(uint(uvec4(uint(subgroup_base), 1u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), uint(uvec4(uint(subgroup_base), 1u, 1u, 0u))))))) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))) | (_GLF_IDENTITY(1u, (1u) | (1u)) ^ 1u)), 0u ^ (~ (subgroup_base)))))))))), _GLF_IDENTITY((~ (subgroup_base)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(sign(-71.09), mix(float(_GLF_FUZZED(12.98)), float(sign(-71.09)), bool(true))) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base)))), 0u | ((_GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base)))))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((sign(-71.09) - 5.3), ((sign(-71.09) - 5.3)) + sin(0.0))))))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1u))), 1u * (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) >> 0u, min(_GLF_IDENTITY((subgroup_base) >> 0u, max((subgroup_base) >> 0u, (subgroup_base) >> 0u)), (subgroup_base) >> 0u))), ~ (_GLF_IDENTITY(~ (subgroup_base), (~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u), max(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u), max(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u), uint(uint(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u))))))))) << 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), clamp((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u | 0u))), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u | 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (~ (subgroup_base)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(9.6))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-8271.9860)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)))), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(9.6))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-8271.9860)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(9.6))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-8271.9860)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(9.6))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-8271.9860)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x))))))) + 0u)))))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-97.90))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat2x4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-97.90))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-97.90))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), injectionSwitch.x))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY((~ (subgroup_base)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((~ (subgroup_base)), ((~ (subgroup_base))) << _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u))))) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))))), min(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.1)), bool(false))))), clamp(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.1)), bool(false))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.1)), bool(false))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.1)), bool(false)))))))))))))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))) + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-50294) : 64))) << 0), 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-50294) : 64))) << 0), 64)), (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-50294) : 64))) << 0), 64))) << 0)) | (0 << _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY((0) * 1, clamp((0) * 1, (0) * 1, _GLF_IDENTITY((0) * 1, int(ivec3((0) * 1, 0, 1)))))));
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, (write_val) >> 0u), 4, 64, 0);
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, max(read_val, _GLF_IDENTITY(read_val, (read_val) >> 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(471.563), _GLF_FUZZED(7.1)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), true, false))))))).x)) - 0.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) - 0.0)), (false ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) - 0.0)))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x), (clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7626.7219))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch)).x)) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) - 0.0)))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.7))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 1.0)))))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
