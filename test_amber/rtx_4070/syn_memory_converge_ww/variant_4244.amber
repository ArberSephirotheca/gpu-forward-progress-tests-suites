#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat2x4 _f0;
 mat4 _f1;
 mat4 _f2;
 mat3x4 _f3;
 float _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 uint workgroup_size;
 _GLF_struct_1 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(5.9))))) && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true)))), false || (bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true)))))))))))))))) || false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(float(injectionSwitch.y)))) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)).x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))))), min(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)).x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)).x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)).x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)).x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)).x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))))))))), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))) : _GLF_FUZZED(subgroup_local_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (gl_WorkGroupSize.x)), 0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)) : _GLF_FUZZED(subgroup_local_id)))), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (gl_WorkGroupSize.x)), 0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (gl_WorkGroupSize.x)), 0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) - 0u)) : _GLF_FUZZED(subgroup_local_id))))))), _GLF_struct_1(_GLF_struct_0(mat2x4(1.0), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)), mat4(1.0), mat3x4(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-4.3))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-4.3))), max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y) - 0.0) : _GLF_FUZZED(-4.3))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (0.0) / 1.0)) : _GLF_FUZZED(-4.3))))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-4.3))))))) ? _GLF_FUZZED(9637.9353) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(1.0, 1.0))))), 1.0, mat4x2(1.0))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_size, (_GLF_struct_replacement_2.workgroup_size) << 0u) * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), max(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))))), subgroup_id)))) * 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))), subgroup_id)))) * _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u)), 0u)), (uint(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u)), 0u))) | (uint(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup)))), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u)))))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))), _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id))))), min(max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))), _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id))))), max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), 0u ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))), _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))))))) * 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY((max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), subgroup_id)))) * 1u, (true ? (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * _GLF_IDENTITY(1u, (1u) - 0u) : _GLF_FUZZED(subgroup_size)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (0u | 0u)))))) * 1u)))))))))), _GLF_IDENTITY(0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u), subgroup_id), clamp(_GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u), subgroup_id), uint(uvec2(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u), subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u), subgroup_id), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u), subgroup_id))))), (max(subgroup_id, subgroup_id)) >> (0u | 0u)), (max(subgroup_id, subgroup_id)) / _GLF_IDENTITY(1u, min(1u, 1u)))))), max(0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), ~ (~ (uint(uint(subgroup_id))))))) ^ 0u), subgroup_id))), (max(subgroup_id, subgroup_id)) >> (0u | 0u)), (max(subgroup_id, subgroup_id)) / 1u)))), _GLF_IDENTITY(0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u), subgroup_id))), (max(subgroup_id, subgroup_id)) >> (0u | 0u)), uint(uvec2(_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u), subgroup_id))), (max(subgroup_id, subgroup_id)) >> (0u | 0u)), (1u & 1u)))), _GLF_IDENTITY((max(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), subgroup_id)) / 1u, ~ (~ ((max(subgroup_id, subgroup_id)) / 1u))))))), (true ? _GLF_IDENTITY(0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u), subgroup_id))), ~ (~ (max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u), subgroup_id)))))), (max(subgroup_id, subgroup_id)) >> (0u | 0u)), (max(subgroup_id, subgroup_id)) / 1u)))), min(0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u), subgroup_id))), (_GLF_IDENTITY(max(subgroup_id, subgroup_id), ~ (~ (max(subgroup_id, subgroup_id))))) >> (_GLF_IDENTITY(0u | 0u, (0u | 0u) | (0u | 0u)))), (max(subgroup_id, subgroup_id)) / 1u)))), 0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u)), (uint(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) ^ 0u))) | 0u)))))))), subgroup_id))), (max(subgroup_id, subgroup_id)) >> (0u | 0u)), (max(subgroup_id, subgroup_id)) / 1u)))))) : _GLF_FUZZED(46275u))))))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u)))))), 0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, max((subgroup_id) >> 0u, (subgroup_id) >> 0u))), subgroup_id)))) * 1u)))))), _GLF_IDENTITY(0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u)))), (_GLF_IDENTITY(0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u)))), (_GLF_IDENTITY(0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u)))), ~ (~ (0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u)))))))) / 1u)) | (_GLF_IDENTITY(0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u)))), ~ (~ (0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(write_val))), (subgroup_id) >> 0u), subgroup_id)))) * 1u)))))), 0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY((max(subgroup_id, subgroup_id)) / 1u, ((max(subgroup_id, subgroup_id)) / 1u) | ((max(subgroup_id, subgroup_id)) / _GLF_IDENTITY(1u, (0u | 0u) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)))))), subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) >> 0u))), subgroup_id)))) * 1u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u)))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u))))), max(~ (~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u))))), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, subgroup_id), uint(uvec2(max(subgroup_id, subgroup_id), 1u))), _GLF_IDENTITY((max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))), (true ? _GLF_IDENTITY((max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))), (true ? (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) : _GLF_FUZZED(workgroup_base))) : _GLF_FUZZED(subgroup_size))) * 1u))))))))) : _GLF_FUZZED(num_workgroup))))), 0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, subgroup_id), clamp(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id))), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u)))))), 0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u)))))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u)))))), 0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u), (_GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u)) - 0u))))))), (0u + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY((max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))), (_GLF_IDENTITY((max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))), uint(uint((max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))))))) / 1u) * 1u)))))), 0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / _GLF_IDENTITY(1u, min(1u, 1u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u)))))), 0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u)))))), 0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u)))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY((max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u, (_GLF_IDENTITY((max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u, (_GLF_IDENTITY((max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u, ((max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u) - 0u)) + 0u)) - 0u))))))))), 0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))), _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))), clamp(uvec4(subgroup_id, 0u, 0u, 0u), uvec4(subgroup_id, 0u, 0u, 0u), uvec4(subgroup_id, 0u, 0u, 0u))))))), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u)))))), 0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u)))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u))))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u)))))))), 0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) ^ 0u), (max(subgroup_id, subgroup_id)) / 1u)))))))) >> _GLF_IDENTITY(0u, (0u) << (0u & 174255u)))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u))))))) + 0u), 0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u)))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u | (_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))), (subgroup_id), (subgroup_id))), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(subgroup_id, 1u), min(uvec2(subgroup_id, 1u), uvec2(subgroup_id, 1u)))))))), max((subgroup_id), (subgroup_id))), (subgroup_id), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) << 0u))))), (~ (~ _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))), (subgroup_id), (subgroup_id))))) - 0u))))), 0u ^ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, ~ (~ ((subgroup_id) >> 0u)))), subgroup_id), (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, ~ (~ ((subgroup_id) >> 0u)))), subgroup_id), (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, ~ (~ ((subgroup_id) >> 0u)))), subgroup_id), uint(uvec2(max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, ~ (~ (_GLF_IDENTITY((subgroup_id) >> 0u, ((subgroup_id) >> 0u) | ((subgroup_id) >> 0u)))))), subgroup_id), (1u | 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, ~ (~ ((subgroup_id) >> 0u)))), subgroup_id), (max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, ~ (~ ((subgroup_id) >> 0u)))), subgroup_id)) << 0u), 0u | (max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, ~ (~ ((subgroup_id) >> 0u)))), subgroup_id)))))) | (max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, ~ (_GLF_IDENTITY(~ ((subgroup_id) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ ((subgroup_id) >> 0u) : _GLF_FUZZED(workgroup_id)))))), subgroup_id)))))) * 1u)))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) / 1u)), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY((max(subgroup_id, subgroup_id)) / 1u, max((max(subgroup_id, subgroup_id)) / 1u, (max(subgroup_id, subgroup_id)) / 1u))))) / 1u))))) * subgroup_size)), _GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, subgroup_id), uint(uint(max(subgroup_id, subgroup_id)))), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u)))), 0u ^ (~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))) * 1u)))))))), 0u | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY((max(subgroup_id, subgroup_id)) / 1u, ((max(subgroup_id, subgroup_id)) / 1u) / 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u), subgroup_id), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)))) / 1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) | (uint(subgroup_id)))))), (max(subgroup_id, subgroup_id)) / 1u), 1u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) | (uint(subgroup_id)))))), (max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) / 1u), 1u, 1u, 1u))) / 1u))))))))) * subgroup_size));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u | _GLF_IDENTITY(0u, (0u) | (0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))))) + subgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), workgroup_base)), (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id)))) | _GLF_IDENTITY((workgroup_base), max(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), (workgroup_base))))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), workgroup_base)), (workgroup_base) | _GLF_IDENTITY((workgroup_base), max(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), (workgroup_base)))))))))) + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mix(vec2(_GLF_FUZZED(-2.5), _GLF_FUZZED(-793.028)), vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], mix(float(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (((injectionSwitch) * mat2(1.0))[0]) / 1.0)), float(_GLF_FUZZED(-392.561)), bool(false))), ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))) - vec2(0.0, 0.0)), clamp((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0)))))), (injectionSwitch) * mat2(1.0)).x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[_GLF_IDENTITY(1, (1) / ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(-50315))), int(_GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(1))))])).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y)), (false ? _GLF_FUZZED(-33.39) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y)))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(648.898)))), float(_GLF_FUZZED(54.72)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), (_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), clamp(float(mat3x2(injectionSwitch.x, 0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), float(mat3x2(injectionSwitch.x, 0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), float(mat3x2(injectionSwitch.x, 0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))))) - 0.0)) > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y)), (false ? _GLF_FUZZED(-33.39) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y)))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(648.898)))), float(_GLF_FUZZED(54.72)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))) > injectionSwitch.y)))))), false, true))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))))).x) * 1.0, sin(0.0) + ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))).x) * 1.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.5)), bool(false))))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (((injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * exp(vec2(0.0, 0.0)))) * vec2(1.0, 1.0))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(vec2(_GLF_FUZZED(-2.5), _GLF_FUZZED(-793.028)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (((injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * exp(vec2(0.0, 0.0)))) * vec2(1.0, 1.0))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(vec2(_GLF_FUZZED(-2.5), _GLF_FUZZED(-793.028)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))) * mat2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))))), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0)))))), (injectionSwitch) * mat2(1.0)).x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[_GLF_IDENTITY(0, 1 * (0))]) - 0.0), injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), _GLF_IDENTITY(int(ivec3(1, 1, (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(int(ivec3(1, _GLF_IDENTITY(1, (1) >> 0), (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))), 0 + (int(ivec3(1, 1, (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))))))) - 0))) / ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))])).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y)), (false ? _GLF_FUZZED(-33.39) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, sin(0.0), 0.0, abs(1.0), length(vec2(0.0, 0.0)))), max(float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, sin(0.0), 0.0, abs(1.0), length(vec2(0.0, 0.0)))), float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, sin(0.0), 0.0, abs(1.0), length(vec2(0.0, 0.0))))))), 1.0 * (injectionSwitch.y)))), injectionSwitch.y)))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(648.898)))), float(_GLF_FUZZED(54.72)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))) > injectionSwitch.y)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))).x) * 1.0, sin(0.0) + ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))).x) * 1.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.5)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * mat2(1.0), mix(vec2(_GLF_FUZZED(-2.5), _GLF_IDENTITY(_GLF_FUZZED(-793.028), clamp(_GLF_FUZZED(-793.028), _GLF_FUZZED(-793.028), _GLF_FUZZED(-793.028)))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))) - vec2(0.0, 0.0)), clamp((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.1)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), float(vec4((0.0), determinant(mat2(1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0)), determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0))) * 1.0)), bool(true))), 0.0)), 1.0, 1.0, 0.0)), (vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)))) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), 0.0, 1.0, cos(0.0), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), mat2(mat3x2(mat2(injectionSwitch, 1.0, 1.0)))))), 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0)))))), (injectionSwitch) * mat2(1.0)).x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[_GLF_IDENTITY(1, (1) / ((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.9)), bool(false))))) << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.9)), bool(false))))) << _GLF_IDENTITY(int(1), int(1)), min(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.9)), bool(false))))) << _GLF_IDENTITY(int(1), int(1)), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.9)), bool(false))))) << _GLF_IDENTITY(int(1), int(1))))) * 1)) >> _GLF_IDENTITY(int(1), int(1))))])).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-33.39, clamp(-33.39, -33.39, -33.39))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y))) - 0.0))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(648.898)))), float(_GLF_FUZZED(54.72)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))) > injectionSwitch.y)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0)))).x), 1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0)))).x), mix(float(_GLF_FUZZED((21.55))), float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0)))).x)), bool(true))))) * 1.0, sin(0.0) + ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))).x) * 1.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(5.5)), (float(_GLF_FUZZED(5.5))) / sqrt(1.0)), bool(false))))) < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), mix(vec2(_GLF_FUZZED(6.0), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[0], _GLF_FUZZED(-0.5)), bvec2(true, false))))), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(vec2(0.0, -6.6)))), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), mix(vec2((vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(3807.6053, -8164.4947))))) * mat2(1.0)))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(vec2(0.0, -6.6)))), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0)))[0], (vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) / vec2(1.0, 1.0))))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(vec2(0.0, -6.6)))), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(103.562), _GLF_FUZZED((-3096.1816 - -5.5))), bvec2(false, false)))).y, injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(6.0, 3.5))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))), 0.0, 1.0, 1.0, abs(0.0), length(abs(vec2(0.0, 0.0))), 1.0)), (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(6.0, 3.5))) : injectionSwitch)), 0.0, 1.0, 1.0, abs(0.0), length(abs(vec2(0.0, 0.0))), 1.0))) * vec2(1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) - 0u), max(_GLF_IDENTITY(write_val, (write_val) - 0u), _GLF_IDENTITY(write_val, (write_val) - 0u)))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec2(bool(bool((false))), true)))) && true), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, length(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)), cos(0.0), 1.0, abs(0.0), 0.0, 0.0)))[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)))))[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)))])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, min(1, 1))], 1.0 * (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, min(1, 1))], mix(float(_GLF_FUZZED(372.184)), float(injectionSwitch[_GLF_IDENTITY(1, min(1, 1))]), bool(true)))))))) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))))])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))]))) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y)), false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-113.815)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), clamp((read_val), (read_val), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id)))), ((_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id))))) >> 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id)))), ((_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id))))) + 0u), (_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id)))))))))), max(_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), clamp((read_val), (read_val), (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(true ? read_val : _GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? read_val : _GLF_FUZZED(workgroup_id), uint(uvec3(true ? read_val : _GLF_FUZZED(workgroup_id), 0u, 0u)))) << 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((read_val), clamp((read_val), (read_val), (_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id))))))), min(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((read_val), clamp((read_val), (read_val), (_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id))))))), (~ (~ _GLF_IDENTITY((read_val), clamp((read_val), (read_val), (_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id)))))))) - 0u), ~ (~ _GLF_IDENTITY((read_val), clamp((read_val), (read_val), _GLF_IDENTITY((_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id)))), ((_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id))))) + 0u))))))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), clamp((read_val), (read_val), (_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id))))))))), (0u | (_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), clamp((read_val), (read_val), (_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id)))))))))) | (_GLF_IDENTITY(0u | (_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), clamp((read_val), (read_val), (_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id))))))))), min(0u | (_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), clamp((read_val), (read_val), (_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id))))))))), 0u | (_GLF_IDENTITY(read_val, ~ (~ _GLF_IDENTITY((read_val), clamp((read_val), (read_val), (_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_id))))))))))))))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
