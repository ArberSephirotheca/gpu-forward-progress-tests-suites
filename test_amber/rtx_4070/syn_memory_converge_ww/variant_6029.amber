#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))), (subgroup_id) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) - 0u)), (false ? _GLF_FUZZED(mix(subgroup_id, write_val, true)) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) - 0u)), 0u | (clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) - 0u)))))), uint(_GLF_IDENTITY(uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))), subgroup_id, subgroup_id), (0u ^ 1u)), min(uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id), (0u ^ 1u)), uvec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id), (clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id)) << 0u), clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id), clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id))), (0u ^ 1u)))))))), (true ? (false ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))), subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) - 0u)), uint(_GLF_IDENTITY(uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), (0u ^ 1u)), min(uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, uint(uvec4((subgroup_id) | 0u, (0u ^ 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), subgroup_id), (_GLF_IDENTITY(0u ^ 1u, 0u ^ (0u ^ 1u)))), uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 0u))), subgroup_id), (0u ^ 1u)))))))) : _GLF_FUZZED(atomicExchange(write_val, 76846u))))), (subgroup_id) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))), (false ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (0u & 109198u))) | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))), subgroup_id, subgroup_id)))), _GLF_IDENTITY((subgroup_id), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_id)), _GLF_IDENTITY(0u, (0u) | (0u)) ^ (((subgroup_id)))), clamp(~ ((subgroup_id)), ~ ((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))), ~ ((subgroup_id)))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), bool(bvec2(_GLF_IDENTITY((false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false || (false)))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))))))), (subgroup_id)))), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) + 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), bool(bvec2(_GLF_IDENTITY((false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false || (false)))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))))))), (subgroup_id)))), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) + 0u)))), 0u | ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), bool(bvec2(_GLF_IDENTITY((false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false || (false)))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))))))), (subgroup_id)))), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) + 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), bool(bvec2(_GLF_IDENTITY((false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false || (false)))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))))))), (subgroup_id)))), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) + 0u)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), bool(bvec2(_GLF_IDENTITY((false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false || (false)))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))))))), (subgroup_id)))), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) + 0u))))) >> 0u)))), _GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(+ write_val, ~ (~ (_GLF_IDENTITY(+ write_val, (+ write_val) | (+ write_val))))), clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, (+ write_val) * 1u), + write_val)), + write_val, _GLF_IDENTITY(+ write_val, 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED((_GLF_IDENTITY(+ write_val, clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, _GLF_IDENTITY((+ write_val) * 1u, 0u | ((+ write_val) * 1u))), + write_val)), + write_val, _GLF_IDENTITY(+ write_val, _GLF_IDENTITY(0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u)), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u)), clamp(0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u)), 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u)), 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))) << 0u)))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id)))), ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED((_GLF_IDENTITY(+ write_val, clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, (+ write_val) * _GLF_IDENTITY(1u, max(1u, 1u))), + _GLF_IDENTITY(write_val, (write_val) + 0u))), + write_val, _GLF_IDENTITY(+ write_val, 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id))))))))), (subgroup_id) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED((+ write_val)), min(_GLF_FUZZED((+ write_val)), _GLF_FUZZED((+ write_val)))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(write_val)))), clamp(_GLF_IDENTITY((subgroup_id), max((subgroup_id), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))), (subgroup_id), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id)))) | 0u)))), subgroup_id, subgroup_id)))), (subgroup_id) ^ 0u))), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u) | (subgroup_id)), subgroup_id, subgroup_id)))), (_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED((+ write_val)), (_GLF_FUZZED((+ write_val))) + 0u) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) >> 0u) | (subgroup_id)), subgroup_id, subgroup_id))))) - 0u), (subgroup_id) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) - 0u)), uint(_GLF_IDENTITY(uvec2(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u), subgroup_id, subgroup_id), (0u ^ 1u)), min(uvec2(clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id), (0u ^ 1u)), uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id), (0u ^ 1u)))))))), (true ? (false ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) - 0u)), uint(_GLF_IDENTITY(uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id), (0u ^ 1u)), min(_GLF_IDENTITY(uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id), (0u ^ _GLF_IDENTITY(1u, 0u ^ (1u)))), uvec2(0u, 0u) ^ (uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id), (0u ^ _GLF_IDENTITY(1u, 0u ^ (1u)))))), uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id), (0u ^ 1u)))))))) : _GLF_FUZZED(atomicExchange(write_val, 76846u))))), (subgroup_id) ^ 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))), subgroup_id, subgroup_id)))), _GLF_IDENTITY((subgroup_id), ~ (_GLF_IDENTITY(~ ((subgroup_id)), clamp(~ ((subgroup_id)), ~ ((subgroup_id)), ~ ((subgroup_id)))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id)))))), (subgroup_id)))), subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), _GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_id) : (subgroup_id) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(+ write_val, clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, (+ write_val) * 1u), + write_val)), + write_val, _GLF_IDENTITY(+ write_val, 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(+ write_val, clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, (+ write_val) * 1u), + write_val)), + write_val, _GLF_IDENTITY(+ write_val, 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id)))), ~ (~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(+ write_val, clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, (+ write_val) * _GLF_IDENTITY(1u, max(1u, 1u))), + _GLF_IDENTITY(write_val, (write_val) + 0u))), + write_val, _GLF_IDENTITY(+ write_val, 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id))))))))), (subgroup_id) ^ 0u)), uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))), subgroup_id, subgroup_id)))), _GLF_IDENTITY((subgroup_id), ~ (_GLF_IDENTITY(~ ((subgroup_id)), clamp(~ ((subgroup_id)), ~ ((subgroup_id)), ~ ((subgroup_id)))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id)))))), (subgroup_id)))), subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), _GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_id) : (subgroup_id) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(+ write_val, clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, (+ write_val) * 1u), + write_val)), + write_val, _GLF_IDENTITY(+ write_val, 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(+ write_val, clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, (+ write_val) * 1u), + write_val)), + write_val, _GLF_IDENTITY(+ write_val, 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id)))), ~ (~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(+ write_val, clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, (+ write_val) * _GLF_IDENTITY(1u, max(1u, 1u))), + _GLF_IDENTITY(write_val, (write_val) + 0u))), + write_val, _GLF_IDENTITY(+ write_val, 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id))))))))), (subgroup_id) ^ 0u)), 0u | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))), subgroup_id, subgroup_id)))), _GLF_IDENTITY((subgroup_id), ~ (_GLF_IDENTITY(~ ((subgroup_id)), clamp(~ ((subgroup_id)), ~ ((subgroup_id)), ~ ((subgroup_id)))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id)))))), (subgroup_id)))), subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), _GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_id) : (subgroup_id) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(+ write_val, clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, (+ write_val) * 1u), + write_val)), + write_val, _GLF_IDENTITY(+ write_val, 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(+ write_val, clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, (+ write_val) * 1u), + write_val)), + write_val, _GLF_IDENTITY(+ write_val, 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id)))), ~ (~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(+ write_val, clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, (+ write_val) * _GLF_IDENTITY(1u, max(1u, 1u))), + _GLF_IDENTITY(write_val, (write_val) + 0u))), + write_val, _GLF_IDENTITY(+ write_val, 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id))))))))), (subgroup_id) ^ 0u)))), 0u, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(4u)))))), 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED((+ write_val)), min(_GLF_FUZZED((+ write_val)), _GLF_FUZZED((+ write_val)))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))), (subgroup_id), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id)))) | 0u)))), subgroup_id, subgroup_id)))), (subgroup_id) ^ 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED((+ write_val)), min(_GLF_FUZZED((+ write_val)), _GLF_FUZZED((+ write_val)))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))), (subgroup_id), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id)))) | 0u)))), subgroup_id, subgroup_id)))), (_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED((+ write_val)), min(_GLF_FUZZED((+ write_val)), _GLF_FUZZED((+ write_val)))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))), (subgroup_id), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id)))) | 0u)))), subgroup_id, subgroup_id))))) >> 0u), (subgroup_id) ^ 0u) : _GLF_FUZZED(subgroup_id))))), (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u) | (subgroup_id)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))) * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u) | (subgroup_id)))), subgroup_id, subgroup_id)))), (subgroup_id) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))) ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) - 0u)), uint(_GLF_IDENTITY(uvec2(clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | (subgroup_id)), subgroup_id, subgroup_id), (0u ^ 1u)), min(uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id), (0u ^ 1u)), uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id), (0u ^ 1u)))))))), (true ? (false ? _GLF_IDENTITY(_GLF_FUZZED((+ write_val)), (_GLF_FUZZED((+ write_val))) - 0u) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) - 0u)), uint(_GLF_IDENTITY(uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id), (0u ^ 1u)), min(uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id), (0u ^ 1u)), uvec2(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id), (0u ^ 1u)))))))) : _GLF_FUZZED(atomicExchange(write_val, 76846u))))), (subgroup_id) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY((subgroup_id) | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), ~ (~ ((subgroup_id) | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))))))), _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(write_val))))), subgroup_id)))), _GLF_IDENTITY((subgroup_id), ~ (_GLF_IDENTITY(~ ((subgroup_id)), clamp(~ ((subgroup_id)), ~ ((subgroup_id)), ~ ((subgroup_id)))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED((+ write_val)) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id)))))), (subgroup_id)))), subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))), _GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_id) : (subgroup_id) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(+ write_val, clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, (+ write_val) * 1u), + write_val)), + write_val, _GLF_IDENTITY(+ write_val, 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(+ write_val, clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, (+ write_val) * _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) ^ 0u)))), + write_val)), + write_val, _GLF_IDENTITY(+ _GLF_IDENTITY(write_val, (write_val) >> 0u), 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u), subgroup_id)))), ~ (~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(+ write_val, clamp(_GLF_IDENTITY(+ write_val, max(_GLF_IDENTITY(+ write_val, (+ write_val) * _GLF_IDENTITY(1u, max(1u, 1u))), + _GLF_IDENTITY(write_val, (write_val) + 0u))), + write_val, _GLF_IDENTITY(+ write_val, 0u + (_GLF_IDENTITY(+ write_val, (+ write_val) << 0u))))))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), (_GLF_IDENTITY((subgroup_id) | (subgroup_id), (false ? _GLF_FUZZED(bitfieldReverse(123173u)) : (subgroup_id) | (subgroup_id)))) | (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))))), subgroup_id, subgroup_id))))))))), (subgroup_id) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED((+ write_val)), min(_GLF_FUZZED((+ write_val)), _GLF_FUZZED((+ write_val)))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))), (subgroup_id), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id)))) | 0u)))), subgroup_id, subgroup_id)))), (_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED((+ write_val)), min(_GLF_FUZZED((+ write_val)), _GLF_FUZZED((+ write_val)))) : _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))), (subgroup_id), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id)))) | 0u)))), subgroup_id, subgroup_id))))) * 1u), (subgroup_id) ^ 0u)))) << 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false) && true)))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, abs(1.0), 0.0, tan(0.0), 1.0, 0.0, abs(1.0)))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-709.902) : injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(4843.1373, -3167.7410).y, max(_GLF_IDENTITY(vec2(4843.1373, -3167.7410).y, min(_GLF_IDENTITY(vec2(4843.1373, -3167.7410).y, (vec2(4843.1373, -3167.7410).y) / 1.0), _GLF_IDENTITY(vec2(4843.1373, -3167.7410).y, (false ? _GLF_FUZZED(577.113) : vec2(4843.1373, -3167.7410).y)))), _GLF_IDENTITY(vec2(4843.1373, -3167.7410).y, min(vec2(4843.1373, -3167.7410).y, vec2(4843.1373, -3167.7410).y)))))), float(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), bool(true)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, 1.0 * ((injectionSwitch.x) / 1.0))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(66.89, 4.5, -1130.6543, -4204.4262)[0]) : 0.0)), 1.0)), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(66.89, 4.5, -1130.6543, -4204.4262)[0]) : 0.0)), 1.0)), (vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(66.89, 4.5, -1130.6543, -4204.4262)[0]) : 0.0)), 1.0))) * mat2(1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(66.89, 4.5, -1130.6543, -4204.4262)[0]) : 0.0)), 1.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(66.89, 4.5, -1130.6543, -4204.4262)[0]) : 0.0)), 1.0)))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(66.89, 4.5, -1130.6543, -4204.4262)[0]) : 0.0)), 1.0))))).x > injectionSwitch.y))) || false))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false)) && true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, false))))) || false)) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))) || false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            break;
           if(_GLF_DEAD(false))
            break;
           barrier();
           if(_GLF_DEAD(false))
            break;
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.0)), bool(false))) > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) | (1) : _GLF_FUZZED(14061)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(2), int(2))) ^ 0)); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))), (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))) && true)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(204.723) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (injectionSwitch.x > injectionSwitch.y))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                break;
               return;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                break;
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
              }
            }
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) ^ 0))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
          continue;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(46.92, -543.281)))).y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), clamp(vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), clamp(vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))), vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))))), vec2(0.0, 0.0) + (injectionSwitch)).y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, (0.0) / 1.0)), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)))), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(61.94)), bool(false))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), clamp(vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(29.91), (vec2(0.0, 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED((26.51 + 69.25))), bvec2(true, false))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))), 1.0)), clamp(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), mix(vec2(_GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))[0], clamp(_GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))[0], clamp((vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))[0], (vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))[0], (vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))[0])), _GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))[0], (false ? _GLF_FUZZED(43.86) : (vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))[0])), (vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))[0])), (vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))[1]), vec2(_GLF_FUZZED((- -237.935)), _GLF_FUZZED((5191.6331 - -594.822))), bvec2(false, false))), vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))), vec2(mat3x4(injectionSwitch, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, determinant(mat2(1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0)), mix(float(float(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0))), float(_GLF_FUZZED(-82.37)), bool(false)))), 1.0)), dot(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(23722u))), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 1.0), vec2(0.0, 1.0))))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))))), vec2(0.0, 0.0) + (injectionSwitch)).y)))) && _GLF_IDENTITY(true, (true) && true)))
    {
    }
   else
    {
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5467.5305), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-58.31)), bvec2(true, false))).y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), min(0 << _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), clamp(0 << _GLF_IDENTITY(int(3), int(3)), 0 << _GLF_IDENTITY(int(3), int(3)), 0 << _GLF_IDENTITY(int(3), int(3))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))) != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false))))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)) || (false))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(92.56) : injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), _GLF_IDENTITY(true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))), (_GLF_IDENTITY(true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))), (true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))) || false)) || false))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))))))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))), _GLF_IDENTITY(clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), clamp((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)), (gl_WorkGroupID.x), (gl_WorkGroupID.x))), ((gl_WorkGroupID.x)) * 1u)), uint(uvec2(clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), clamp((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)), (gl_WorkGroupID.x), (gl_WorkGroupID.x))), ((gl_WorkGroupID.x)) * 1u)), 0u)))) | (gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (_GLF_IDENTITY(1, (1) - 0) ^ _GLF_IDENTITY(1, (1) << 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y = workgroup_id, ~ (~ (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y = workgroup_id)));
    }
  }
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id, (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id) | (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id))))), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id, ~ (~ (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id, clamp(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id, GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id, GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id))))) / uvec2(1u, 1u)).y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bvec2((true), false)))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bvec2((true), false)))))) || false))), ! (! ((! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bvec2((true), false)))))) || false))))))))) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_WRAPPED_IF_TRUE(true)))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true)))))))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            break;
           barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-899.955) : injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true, bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true, false, false))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
              return;
             continue;
            }
           continue;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  return;
                 barrier();
                }
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
            }
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
          break;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(false)))) && true)))) || false))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mix(80.54, -7.8, -16.16))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))) + 0.0)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), 0 ^ (~ (_injected_loop_counter ++))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, cos(0.0), 1.0)), 0.0))).y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-3.2, -6792.1864, -3.9, -72.55, -6584.5835, 948.191, 0.9, 9608.2516)) : mat2x4(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(3.4) : float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-3.2, -6792.1864, -3.9, -72.55, -6584.5835, 948.191, 0.9, 9608.2516)) : mat2x4(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)))))))), float(_GLF_FUZZED(-5442.9425)), bool(false)))))))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((8.9 - 12.67))), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7410.4920)), float(0.0), bool(true)))), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((8.9 - 12.67))), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7410.4920)), float(0.0), bool(true)))), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((8.9 - 12.67))), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7410.4920)), float(0.0), bool(true)))), bool(true))))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(84.96)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true, true)), _GLF_IDENTITY((bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) && true, (_GLF_IDENTITY((bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) && true, ((bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) && true) || false)) && true))), true && (false))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true, true)), _GLF_IDENTITY((bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) && true, (_GLF_IDENTITY((bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) && true, ((bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) && true) || false)) && true))), true && (false)))))))), 1.0, 1.0, 0.0))))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-6.2, 1645.2370, 43.70, 8.0, 89.04, -736.996, 5.2, -2.9))))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.7) : 0.0)), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(374.122)))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))) : _GLF_FUZZED(mat2x4(-6.2, 1645.2370, 43.70, 8.0, 89.04, _GLF_IDENTITY(-736.996, mix(float(_GLF_FUZZED(float(false))), float(-736.996), bool(true))), 5.2, -2.9))))), max(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0))), (_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0))), 1.0, 1.0)))) - 0.0)) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4(float(mat4x3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0))), (_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0))), 1.0, 1.0)))) - 0.0)) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), length(vec2(0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, cos(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, tan(0.0)), transpose(transpose(mat4(float(mat4x3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0))), (_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0))), 1.0, 1.0)))) - 0.0)) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), length(vec2(0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, cos(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, tan(0.0))))))))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)))))) : _GLF_FUZZED(mat2x4(-6.2, 1645.2370, 43.70, 8.0, 89.04, -736.996, 5.2, -2.9))))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, exp(0.0) * (_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), min(max(0.0, 0.0), _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(-2398.0470)), float(max(0.0, 0.0)), bool(true)))))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, 1.0, length(0.0), 1.0), (true ? mat3x2(1.0, 0.0, 0.0, 1.0, length(0.0), 1.0) : _GLF_FUZZED(mat3x2(9.8, 2.6, -4807.9341, 308.820, 379.535, 2186.4170)))))), 0.0)))), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.5)), bool(false))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-33.37)), float(1.0), bool(true))), 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-6.2, _GLF_IDENTITY(1645.2370, min(1645.2370, 1645.2370)), 43.70, 8.0, 89.04, -736.996, 5.2, -2.9))))))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.7), (_GLF_FUZZED(-3.7)) - 0.0) : 0.0)), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(7.5, -508.395)))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-6.2, 1645.2370, 43.70, 8.0, 89.04, _GLF_IDENTITY(-736.996, mix(float(_GLF_FUZZED(float(false))), float(-736.996), bool(true))), 5.2, -2.9))))), max(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), float(vec3(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, 0.0)))), float(_GLF_FUZZED(-90.22)), bool(false)))), float(_GLF_FUZZED(vec4(5.2, -102.071, 61.16, 49.04).p)), bool(false))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.0)), bool(false))), 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) : _GLF_FUZZED(mat2x4(-6.2, 1645.2370, 43.70, 8.0, 89.04, -736.996, 5.2, -2.9))))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, exp(0.0) * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (false ? _GLF_FUZZED(-3.9) : 1.0 * (1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, sin(0.0), 0.0, 1.0)), _GLF_IDENTITY(float(mat4(float(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, sin(0.0), 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2(float(mat4(float(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, sin(0.0), 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))))))), 1.0, 0.0)))), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), clamp(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(-7.5)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), float(mat4x2(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), (true ? mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)) : _GLF_FUZZED(-92.58)))) - 0.0))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), (float(vec2(0.0, 0.0))) - 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.2)), float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), bool(true))), 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-6.2, _GLF_IDENTITY(1645.2370, min(1645.2370, 1645.2370)), 43.70, 8.0, 89.04, _GLF_IDENTITY(-736.996, mix(float(-736.996), float(_GLF_FUZZED(33.06)), bool(false))), 5.2, -2.9)))))))), clamp((_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.7), (_GLF_FUZZED(-3.7)) - 0.0) : 0.0)), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(7.5, -508.395)))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-6.2, 1645.2370, 43.70, 8.0, 89.04, _GLF_IDENTITY(-736.996, mix(float(_GLF_FUZZED(float(false))), float(-736.996), bool(true))), 5.2, -2.9))))), max(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), float(vec3(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, 0.0)))), float(_GLF_FUZZED(-90.22)), bool(false)))), float(_GLF_FUZZED(vec4(5.2, -102.071, 61.16, 49.04).p)), bool(false))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.0)), bool(false))), 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) : _GLF_FUZZED(mat2x4(-6.2, 1645.2370, 43.70, 8.0, 89.04, -736.996, 5.2, -2.9))))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, exp(0.0) * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (false ? _GLF_FUZZED(-3.9) : 1.0 * (1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, sin(0.0), 0.0, 1.0)), _GLF_IDENTITY(float(mat4(float(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, sin(0.0), 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2(float(mat4(float(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, sin(0.0), 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))))))), 1.0, 0.0)))), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), clamp(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(-7.5)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), float(mat4x2(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), (true ? mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)) : _GLF_FUZZED(-92.58)))) - 0.0))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), (float(vec2(0.0, 0.0))) - 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.2)), float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), bool(true))), 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-6.2, _GLF_IDENTITY(1645.2370, min(1645.2370, 1645.2370)), 43.70, 8.0, 89.04, _GLF_IDENTITY(-736.996, mix(float(-736.996), float(_GLF_FUZZED(33.06)), bool(false))), 5.2, -2.9)))))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.7), (_GLF_FUZZED(-3.7)) - 0.0) : 0.0)), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(7.5, -508.395)))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-6.2, 1645.2370, 43.70, 8.0, 89.04, _GLF_IDENTITY(-736.996, mix(float(_GLF_FUZZED(float(false))), float(-736.996), bool(true))), 5.2, -2.9))))), max(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), float(vec3(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, 0.0)))), float(_GLF_FUZZED(-90.22)), bool(false)))), float(_GLF_FUZZED(vec4(5.2, -102.071, 61.16, 49.04).p)), bool(false))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.0)), bool(false))), 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) : _GLF_FUZZED(mat2x4(-6.2, 1645.2370, 43.70, 8.0, 89.04, -736.996, 5.2, -2.9))))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, exp(0.0) * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (false ? _GLF_FUZZED(-3.9) : 1.0 * (1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, sin(0.0), 0.0, 1.0)), _GLF_IDENTITY(float(mat4(float(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, sin(0.0), 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2(float(mat4(float(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, sin(0.0), 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))))))), 1.0, 0.0)))), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), clamp(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(-7.5)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), float(mat4x2(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), (true ? mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)) : _GLF_FUZZED(-92.58)))) - 0.0))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), (float(vec2(0.0, 0.0))) - 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.2)), float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), bool(true))), 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-6.2, _GLF_IDENTITY(1645.2370, min(1645.2370, 1645.2370)), 43.70, 8.0, 89.04, _GLF_IDENTITY(-736.996, mix(float(-736.996), float(_GLF_FUZZED(33.06)), bool(false))), 5.2, -2.9)))))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.7), (_GLF_FUZZED(-3.7)) - 0.0) : 0.0)), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(7.5, -508.395)))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-6.2, 1645.2370, 43.70, 8.0, 89.04, _GLF_IDENTITY(-736.996, mix(float(_GLF_FUZZED(float(false))), float(-736.996), bool(true))), 5.2, -2.9))))), max(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), float(vec3(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, 0.0)))), float(_GLF_FUZZED(-90.22)), bool(false)))), float(_GLF_FUZZED(vec4(5.2, -102.071, 61.16, 49.04).p)), bool(false))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.0)), bool(false))), 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) : _GLF_FUZZED(mat2x4(-6.2, 1645.2370, 43.70, 8.0, 89.04, -736.996, 5.2, -2.9))))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, exp(0.0) * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (false ? _GLF_FUZZED(-3.9) : 1.0 * (1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, sin(0.0), 0.0, 1.0)), _GLF_IDENTITY(float(mat4(float(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, sin(0.0), 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2(float(mat4(float(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, sin(0.0), 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(exp(0.0), 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))))))), 1.0, 0.0)))), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), clamp(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(-7.5)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), float(mat4x2(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)), (true ? mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)) : _GLF_FUZZED(-92.58)))) - 0.0))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), (float(vec2(0.0, 0.0))) - 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.2)), float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), bool(true))), 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-6.2, _GLF_IDENTITY(1645.2370, min(1645.2370, 1645.2370)), 43.70, 8.0, 89.04, _GLF_IDENTITY(-736.996, mix(float(-736.996), float(_GLF_FUZZED(33.06)), bool(false))), 5.2, -2.9))))))))))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.7) : 0.0)), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0)), mat2(1.0) * (mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0)))))))))), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), 1.0 * (float(mat4x3(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-6.2, 1645.2370, 43.70, 8.0, 89.04, _GLF_IDENTITY(-736.996, mix(float(_GLF_FUZZED(float(false))), float(-736.996), bool(true))), 5.2, -2.9))))), max(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-630.430)), float(0.0), bool(true)))))), 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-6.2, 1645.2370, 43.70, 8.0, 89.04, -736.996, 5.2, -2.9))))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(exp(0.0) * (_GLF_IDENTITY(0.0, max(0.0, 0.0))), (_GLF_IDENTITY(exp(0.0) * (_GLF_IDENTITY(0.0, max(0.0, 0.0))), (_GLF_IDENTITY(exp(0.0) * (_GLF_IDENTITY(0.0, max(0.0, 0.0))), max(exp(0.0) * (_GLF_IDENTITY(0.0, max(0.0, 0.0))), exp(0.0) * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))))) / 1.0)) - 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0))))), 1.0, 0.0)))), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true)))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(14.64)), bool(false))), 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-6.2, _GLF_IDENTITY(1645.2370, min(_GLF_IDENTITY(1645.2370, float(_GLF_IDENTITY(vec4(1645.2370, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), min(vec4(1645.2370, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec4(1645.2370, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))), 1645.2370)), 43.70, 8.0, 89.04, -736.996, 5.2, -2.9))))))))[1]), vec2(_GLF_FUZZED(-510.024), _GLF_FUZZED(-658.083)), bvec2(false, false))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), max(float(vec2(0.0, 0.0)), _GLF_IDENTITY(float(vec2(0.0, 0.0)), 1.0 * (float(vec2(0.0, 0.0))))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 1.0, 0.0)))), (mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(0.0, 0.0)), (_GLF_IDENTITY(float(vec2(0.0, 0.0)), (false ? _GLF_FUZZED((-1.9 * -4275.0230)) : float(vec2(0.0, 0.0))))) / abs(1.0)), (_GLF_IDENTITY(float(vec2(0.0, 0.0)), (_GLF_IDENTITY(float(vec2(0.0, 0.0)), (false ? _GLF_FUZZED((_GLF_IDENTITY(-1.9, clamp(_GLF_IDENTITY(-1.9, float(mat3x2(-1.9, 1.0, 1.0, 1.0, 0.0, log(1.0)))), -1.9, -1.9)) * -4275.0230)) : float(vec2(0.0, 0.0))))) / abs(1.0))) - sin(0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.1)), float(1.0), bool(true)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.3) : 1.0)), 1.0, 1.0, 1.0, 0.0))))) * mat2(1.0)) : _GLF_FUZZED(mat2x4(-6.2, 1645.2370, 43.70, 8.0, 89.04, -736.996, 5.2, _GLF_IDENTITY(-2.9, min(-2.9, -2.9)))))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((906.762))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((906.762))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((906.762))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((906.762))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((906.762))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), min((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((906.762))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((906.762))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((906.762))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) / 1.0)) + log(1.0))) / 1.0)))) && true)))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     barrier();
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(false)))))))), false, false))), bool(bvec4(! (_GLF_WRAPPED_LOOP(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (int(6)))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))), min(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * vec2(1.0, 1.0)), injectionSwitch)).y))) && true)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 for(int _injected_loop_counter = (_GLF_IDENTITY(0, ~ (~ (0))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) >> 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    continue;
   atomicStore(write_val, uint(virtual_gid), 4, _GLF_IDENTITY(64, int(int(64))), 0);
  }
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, (4) << 0), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.9, -7626.4350)) : injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.9, -7626.4350)) : injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.9, -7626.4350)) : injectionSwitch)).x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.9, -7626.4350)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / cos(0.0)))))).x > injectionSwitch.y)))))) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(737.042), _GLF_IDENTITY(_GLF_FUZZED(-0.7), max(_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), (_GLF_IDENTITY(_GLF_FUZZED(-0.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.7), (true ? _GLF_FUZZED(-0.7) : _GLF_FUZZED(-0.1)))), float(_GLF_FUZZED(76.51)), bool(false)))) + 0.0)), float(_GLF_FUZZED(-3.7)), bool(false))), _GLF_FUZZED(-0.7)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1)))))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1))))), bool(_GLF_IDENTITY(bool((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))))), (bool((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), max(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), 0)), _GLF_IDENTITY(0 + (0), clamp(0 + (0), _GLF_IDENTITY(0 + (0), _GLF_IDENTITY((false ? _GLF_FUZZED((_injected_loop_counter & _injected_loop_counter)) : 0 + (0)), ((0 << _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(8), int(8))) ^ ((false ? _GLF_FUZZED((_injected_loop_counter & _injected_loop_counter)) : 0 + (0))))), 0 + (0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4.8) : injectionSwitch.y))))))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
                  return;
                 barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
              return;
            }
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = (0 | _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-93323))))), ((0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-93323)))))) / (1 & 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((1 & 1) & _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) >> 0)))), true && (_injected_loop_counter < ((1 & 1) & _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) >> 0)))) >> 0))))); _injected_loop_counter ++)
        {
         _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u + (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))), (0u | 0u) + _GLF_IDENTITY((buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (read_val)))), (uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_IDENTITY(read_val, (read_val) | (read_val)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_val, (read_val) | (read_val)), (_GLF_IDENTITY(read_val, (read_val) | _GLF_IDENTITY((read_val), ((read_val)) ^ 0u))) | (_GLF_IDENTITY(read_val, (read_val) | (read_val)))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))), 1u)))))) ^ 0u)), ((buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (read_val)))), (true ? uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (read_val)))) : _GLF_FUZZED(workgroup_base))), (uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (read_val))))) ^ 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              return;
             break;
            }
           if(_GLF_DEAD(false))
            continue;
           continue;
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)))))))))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, int(-422.213), _injected_loop_counter))))), min(_GLF_IDENTITY(int(1), ~ (~ (_GLF_IDENTITY(int(1), int(int(_GLF_IDENTITY(int(1), (int(1)) | (int(1))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_IDENTITY(1, min(1, 1))) : _GLF_FUZZED(-70456))))), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) * int(_GLF_ONE(1.0, injectionSwitch.y))))), (int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(53124)))), 0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(_injected_loop_counter)))))) | (int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0))))))), _GLF_IDENTITY((int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0)), (int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0))) | (int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0)))))))) | (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0)), (int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0))) | (int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0))))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0)), (int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0))) | (int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0)))))))))), ((int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), min(1, 1))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0)), (int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(int(ivec2(int(_GLF_IDENTITY(1, min(1, 1))), (0 ^ 1))), 0 + (int(ivec2(int(_GLF_IDENTITY(1, min(1, 1))), (0 ^ 1)))))), 0, 0))) | (int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0)))))))) | (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0)), (int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0))) | (int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0))))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0)), (int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), 0, 0))) | (int(ivec3(int(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(0, 0 | (0)), 0))))))))))) + 0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, true)))))))))))));
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
